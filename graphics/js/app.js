webpackJsonp([0], [, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        for (var e = t.length / 6 | 0, n = new Array(e), r = 0; r < e; )
            n[r] = "#" + t.slice(6 * r, 6 * ++r);
        return n
    }
}
, , , , , function(t, e, n) {
    "use strict";
    var r = n(75);
    e.a = function(t) {
        return Object(r.d)(t[t.length - 1])
    }
}
, , function(t, e, n) {
    "use strict";
    function r(t, e, n, r, i, o, a, s) {
        t = t || {};
        var c = typeof t.default;
        "object" !== c && "function" !== c || (t = t.default);
        var l = "function" == typeof t ? t.options : t;
        e && (l.render = e,
        l.staticRenderFns = n,
        l._compiled = !0),
        r && (l.functional = !0),
        o && (l._scopeId = o);
        var u;
        if (a ? (u = function(t) {
            t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext,
            t || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__),
            i && i.call(this, t),
            t && t._registeredComponents && t._registeredComponents.add(a)
        }
        ,
        l._ssrRegister = u) : i && (u = s ? function() {
            i.call(this, this.$root.$options.shadowRoot)
        }
        : i),
        u)
            if (l.functional) {
                l._injectStyles = u;
                var h = l.render;
                l.render = function(t, e) {
                    return u.call(e),
                    h(t, e)
                }
            } else {
                var d = l.beforeCreate;
                l.beforeCreate = d ? [].concat(d, u) : [u]
            }
        return {
            exports: t,
            options: l
        }
    }
    e.a = r
}
, , , , , function(t, e) {
    var n = t.exports = {
        version: "2.5.3"
    };
    "number" == typeof __e && (__e = n)
}
, , , function(t, e) {
    var n = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = n)
}
, function(t, e, n) {
    var r = n(130)("wks")
      , i = n(97)
      , o = n(16).Symbol
      , a = "function" == typeof o;
    (t.exports = function(t) {
        return r[t] || (r[t] = a && o[t] || (a ? o : i)("Symbol." + t))
    }
    ).store = r
}
, , , , , function(t, e, n) {
    t.exports = {
        default: n(670),
        __esModule: !0
    }
}
, , , , , function(t, e, n) {
    var r = n(16)
      , i = n(13)
      , o = n(84)
      , a = n(56)
      , s = function(t, e, n) {
        var c, l, u, h = t & s.F, d = t & s.G, p = t & s.S, f = t & s.P, m = t & s.B, v = t & s.W, g = d ? i : i[e] || (i[e] = {}), y = g.prototype, _ = d ? r : p ? r[e] : (r[e] || {}).prototype;
        d && (n = e);
        for (c in n)
            (l = !h && _ && void 0 !== _[c]) && c in g || (u = l ? _[c] : n[c],
            g[c] = d && "function" != typeof _[c] ? n[c] : m && l ? o(u, r) : v && _[c] == u ? function(t) {
                var e = function(e, n, r) {
                    if (this instanceof t) {
                        switch (arguments.length) {
                        case 0:
                            return new t;
                        case 1:
                            return new t(e);
                        case 2:
                            return new t(e,n)
                        }
                        return new t(e,n,r)
                    }
                    return t.apply(this, arguments)
                };
                return e.prototype = t.prototype,
                e
            }(u) : f && "function" == typeof u ? o(Function.call, u) : u,
            f && ((g.virtual || (g.virtual = {}))[c] = u,
            t & s.R && y && !y[c] && a(y, c, u)))
    };
    s.F = 1,
    s.G = 2,
    s.S = 4,
    s.P = 8,
    s.B = 16,
    s.W = 32,
    s.U = 64,
    s.R = 128,
    t.exports = s
}
, , , , , , function(t, e, n) {
    "use strict";
    e.__esModule = !0,
    e.default = function(t, e) {
        if (!(t instanceof e))
            throw new TypeError("Cannot call a class as a function")
    }
}
, , , , , , , function(t, e, n) {
    var r = n(48);
    t.exports = function(t) {
        if (!r(t))
            throw TypeError(t + " is not an object!");
        return t
    }
}
, , function(t, e, n) {
    "use strict";
    e.__esModule = !0;
    var r = n(106)
      , i = function(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }(r);
    e.default = function() {
        function t(t, e) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value"in r && (r.writable = !0),
                (0,
                i.default)(t, r.key, r)
            }
        }
        return function(e, n, r) {
            return n && t(e.prototype, n),
            r && t(e, r),
            e
        }
    }()
}
, function(t, e) {
    function n(t, e) {
        var r;
        if (t || (t = {}),
        e)
            for (r in e)
                if (e.hasOwnProperty(r)) {
                    var i = t.hasOwnProperty(r)
                      , o = typeof e[r]
                      , a = !i || typeof t[r] !== o;
                    a ? t[r] = e[r] : "object" === o && (t[r] = n(t[r], e[r]))
                }
        return t
    }
    t.exports = n
}
, function(t, e) {
    function n(t) {
        var e = "number" == typeof t ? t : +new Date
          , n = function() {
            return e = e + 2127912214 + (e << 12) & 4294967295,
            e = 4294967295 & (3345072700 ^ e ^ e >>> 19),
            e = e + 374761393 + (e << 5) & 4294967295,
            e = 4294967295 & (e + 3550635116 ^ e << 9),
            e = e + 4251993797 + (e << 3) & 4294967295,
            (268435455 & (e = 4294967295 & (3042594569 ^ e ^ e >>> 16))) / 268435456
        };
        return {
            next: function(t) {
                return Math.floor(n() * t)
            },
            nextDouble: function() {
                return n()
            }
        }
    }
    function r(t, e) {
        var r = e || n();
        if ("function" != typeof r.next)
            throw new Error("customRandom does not match expected API: next() function is missing");
        return {
            forEach: function(e) {
                var n, i, o;
                for (n = t.length - 1; n > 0; --n)
                    i = r.next(n + 1),
                    o = t[i],
                    t[i] = t[n],
                    t[n] = o,
                    e(o);
                t.length && e(t[0])
            },
            shuffle: function() {
                var e, n, i;
                for (e = t.length - 1; e > 0; --e)
                    n = r.next(e + 1),
                    i = t[n],
                    t[n] = t[e],
                    t[e] = i;
                return t
            }
        }
    }
    t.exports = {
        random: n,
        randomIterator: r
    }
}
, , , function(t, e, n) {
    var r = n(40)
      , i = n(190)
      , o = n(126)
      , a = Object.defineProperty;
    e.f = n(49) ? Object.defineProperty : function(t, e, n) {
        if (r(t),
        e = o(e, !0),
        r(n),
        i)
            try {
                return a(t, e, n)
            } catch (t) {}
        if ("get"in n || "set"in n)
            throw TypeError("Accessors not supported!");
        return "value"in n && (t[e] = n.value),
        t
    }
}
, function(t, e) {
    t.exports = function(t) {
        return "object" == typeof t ? null !== t : "function" == typeof t
    }
}
, function(t, e, n) {
    t.exports = !n(70)(function() {
        return 7 != Object.defineProperty({}, "a", {
            get: function() {
                return 7
            }
        }).a
    })
}
, , , function(t, e, n) {
    "use strict";
    function r() {}
    function i(t, e) {
        this.x = t || 0,
        this.y = e || 0
    }
    function o() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
    function a(t, e, n, r) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._w = void 0 !== r ? r : 1
    }
    function s(t, e, n) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0
    }
    function c() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    function l(t, e, n, r, o, a, s, u, h, d) {
        Object.defineProperty(this, "id", {
            value: Pc++
        }),
        this.uuid = Cc.generateUUID(),
        this.name = "",
        this.image = void 0 !== t ? t : l.DEFAULT_IMAGE,
        this.mipmaps = [],
        this.mapping = void 0 !== e ? e : l.DEFAULT_MAPPING,
        this.wrapS = void 0 !== n ? n : ls,
        this.wrapT = void 0 !== r ? r : ls,
        this.magFilter = void 0 !== o ? o : fs,
        this.minFilter = void 0 !== a ? a : vs,
        this.anisotropy = void 0 !== h ? h : 1,
        this.format = void 0 !== s ? s : Rs,
        this.type = void 0 !== u ? u : gs,
        this.offset = new i(0,0),
        this.repeat = new i(1,1),
        this.center = new i(0,0),
        this.rotation = 0,
        this.matrixAutoUpdate = !0,
        this.matrix = new c,
        this.generateMipmaps = !0,
        this.premultiplyAlpha = !1,
        this.flipY = !0,
        this.unpackAlignment = 4,
        this.encoding = void 0 !== d ? d : yc,
        this.version = 0,
        this.onUpdate = null
    }
    function u(t, e, n, r) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0,
        this.w = void 0 !== r ? r : 1
    }
    function h(t, e, n) {
        this.width = t,
        this.height = e,
        this.scissor = new u(0,0,t,e),
        this.scissorTest = !1,
        this.viewport = new u(0,0,t,e),
        n = n || {},
        void 0 === n.minFilter && (n.minFilter = fs),
        this.texture = new l(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
        this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
        this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
        this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
    }
    function d(t, e, n) {
        h.call(this, t, e, n),
        this.activeCubeFace = 0,
        this.activeMipMapLevel = 0
    }
    function p(t, e, n, r, i, o, a, s, c, u, h, d) {
        l.call(this, null, o, a, s, c, u, r, i, h, d),
        this.image = {
            data: t,
            width: e,
            height: n
        },
        this.magFilter = void 0 !== c ? c : hs,
        this.minFilter = void 0 !== u ? u : hs,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.unpackAlignment = 1
    }
    function f(t, e) {
        this.min = void 0 !== t ? t : new s(1 / 0,1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new s(-1 / 0,-1 / 0,-1 / 0)
    }
    function m(t, e) {
        this.center = void 0 !== t ? t : new s,
        this.radius = void 0 !== e ? e : 0
    }
    function v(t, e) {
        this.normal = void 0 !== t ? t : new s(1,0,0),
        this.constant = void 0 !== e ? e : 0
    }
    function g(t, e, n, r, i, o) {
        this.planes = [void 0 !== t ? t : new v, void 0 !== e ? e : new v, void 0 !== n ? n : new v, void 0 !== r ? r : new v, void 0 !== i ? i : new v, void 0 !== o ? o : new v]
    }
    function y(t, e, n) {
        return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
    }
    function _(t) {
        function e(e, n) {
            var r = e.array
              , i = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW
              , o = t.createBuffer();
            t.bindBuffer(n, o),
            t.bufferData(n, r, i),
            e.onUploadCallback();
            var a = t.FLOAT;
            return r instanceof Float32Array ? a = t.FLOAT : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? a = t.UNSIGNED_SHORT : r instanceof Int16Array ? a = t.SHORT : r instanceof Uint32Array ? a = t.UNSIGNED_INT : r instanceof Int32Array ? a = t.INT : r instanceof Int8Array ? a = t.BYTE : r instanceof Uint8Array && (a = t.UNSIGNED_BYTE),
            {
                buffer: o,
                type: a,
                bytesPerElement: r.BYTES_PER_ELEMENT,
                version: e.version
            }
        }
        function n(e, n, r) {
            var i = n.array
              , o = n.updateRange;
            t.bindBuffer(r, e),
            !1 === n.dynamic ? t.bufferData(r, i, t.STATIC_DRAW) : -1 === o.count ? t.bufferSubData(r, 0, i) : 0 === o.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(r, o.offset * i.BYTES_PER_ELEMENT, i.subarray(o.offset, o.offset + o.count)),
            o.count = -1)
        }
        function r(t) {
            return t.isInterleavedBufferAttribute && (t = t.data),
            a.get(t)
        }
        function i(e) {
            e.isInterleavedBufferAttribute && (e = e.data);
            var n = a.get(e);
            n && (t.deleteBuffer(n.buffer),
            a.delete(e))
        }
        function o(t, r) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var i = a.get(t);
            void 0 === i ? a.set(t, e(t, r)) : i.version < t.version && (n(i.buffer, t, r),
            i.version = t.version)
        }
        var a = new WeakMap;
        return {
            get: r,
            remove: i,
            update: o
        }
    }
    function x(t, e, n, r) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._order = r || x.DefaultOrder
    }
    function b() {
        this.mask = 1
    }
    function w() {
        function t() {
            i.setFromEuler(r, !1)
        }
        function e() {
            r.setFromQuaternion(i, void 0, !1)
        }
        Object.defineProperty(this, "id", {
            value: Nc++
        }),
        this.uuid = Cc.generateUUID(),
        this.name = "",
        this.type = "Object3D",
        this.parent = null,
        this.children = [],
        this.up = w.DefaultUp.clone();
        var n = new s
          , r = new x
          , i = new a
          , l = new s(1,1,1);
        r.onChange(t),
        i.onChange(e),
        Object.defineProperties(this, {
            position: {
                enumerable: !0,
                value: n
            },
            rotation: {
                enumerable: !0,
                value: r
            },
            quaternion: {
                enumerable: !0,
                value: i
            },
            scale: {
                enumerable: !0,
                value: l
            },
            modelViewMatrix: {
                value: new o
            },
            normalMatrix: {
                value: new c
            }
        }),
        this.matrix = new o,
        this.matrixWorld = new o,
        this.matrixAutoUpdate = w.DefaultMatrixAutoUpdate,
        this.matrixWorldNeedsUpdate = !1,
        this.layers = new b,
        this.visible = !0,
        this.castShadow = !1,
        this.receiveShadow = !1,
        this.frustumCulled = !0,
        this.renderOrder = 0,
        this.userData = {}
    }
    function M() {
        w.call(this),
        this.type = "Camera",
        this.matrixWorldInverse = new o,
        this.projectionMatrix = new o
    }
    function E(t, e, n, r, i, o) {
        M.call(this),
        this.type = "OrthographicCamera",
        this.zoom = 1,
        this.view = null,
        this.left = t,
        this.right = e,
        this.top = n,
        this.bottom = r,
        this.near = void 0 !== i ? i : .1,
        this.far = void 0 !== o ? o : 2e3,
        this.updateProjectionMatrix()
    }
    function T(t, e, n, r, i, o) {
        this.a = t,
        this.b = e,
        this.c = n,
        this.normal = r && r.isVector3 ? r : new s,
        this.vertexNormals = Array.isArray(r) ? r : [],
        this.color = i && i.isColor ? i : new y,
        this.vertexColors = Array.isArray(i) ? i : [],
        this.materialIndex = void 0 !== o ? o : 0
    }
    function S() {
        Object.defineProperty(this, "id", {
            value: kc += 2
        }),
        this.uuid = Cc.generateUUID(),
        this.name = "",
        this.type = "Geometry",
        this.vertices = [],
        this.colors = [],
        this.faces = [],
        this.faceVertexUvs = [[]],
        this.morphTargets = [],
        this.morphNormals = [],
        this.skinWeights = [],
        this.skinIndices = [],
        this.lineDistances = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.elementsNeedUpdate = !1,
        this.verticesNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.lineDistancesNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function A(t, e, n) {
        if (Array.isArray(t))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "",
        this.array = t,
        this.itemSize = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.normalized = !0 === n,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function C(t, e, n) {
        A.call(this, new Int8Array(t), e, n)
    }
    function P(t, e, n) {
        A.call(this, new Uint8Array(t), e, n)
    }
    function L(t, e, n) {
        A.call(this, new Uint8ClampedArray(t), e, n)
    }
    function R(t, e, n) {
        A.call(this, new Int16Array(t), e, n)
    }
    function O(t, e, n) {
        A.call(this, new Uint16Array(t), e, n)
    }
    function I(t, e, n) {
        A.call(this, new Int32Array(t), e, n)
    }
    function D(t, e, n) {
        A.call(this, new Uint32Array(t), e, n)
    }
    function N(t, e, n) {
        A.call(this, new Float32Array(t), e, n)
    }
    function k(t, e, n) {
        A.call(this, new Float64Array(t), e, n)
    }
    function j() {
        this.vertices = [],
        this.normals = [],
        this.colors = [],
        this.uvs = [],
        this.uvs2 = [],
        this.groups = [],
        this.morphTargets = {},
        this.skinWeights = [],
        this.skinIndices = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.verticesNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function z(t) {
        if (0 === t.length)
            return -1 / 0;
        for (var e = t[0], n = 1, r = t.length; n < r; ++n)
            t[n] > e && (e = t[n]);
        return e
    }
    function B() {
        Object.defineProperty(this, "id", {
            value: jc += 2
        }),
        this.uuid = Cc.generateUUID(),
        this.name = "",
        this.type = "BufferGeometry",
        this.index = null,
        this.attributes = {},
        this.morphAttributes = {},
        this.groups = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.drawRange = {
            start: 0,
            count: 1 / 0
        }
    }
    function U(t, e, n, r, i, o) {
        S.call(this),
        this.type = "BoxGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: r,
            heightSegments: i,
            depthSegments: o
        },
        this.fromBufferGeometry(new F(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function F(t, e, n, r, i, o) {
        function a(t, e, n, r, i, o, a, m, v, g, y) {
            var _, x, b = o / v, w = a / g, M = o / 2, E = a / 2, T = m / 2, S = v + 1, A = g + 1, C = 0, P = 0, L = new s;
            for (x = 0; x < A; x++) {
                var R = x * w - E;
                for (_ = 0; _ < S; _++) {
                    var O = _ * b - M;
                    L[t] = O * r,
                    L[e] = R * i,
                    L[n] = T,
                    u.push(L.x, L.y, L.z),
                    L[t] = 0,
                    L[e] = 0,
                    L[n] = m > 0 ? 1 : -1,
                    h.push(L.x, L.y, L.z),
                    d.push(_ / v),
                    d.push(1 - x / g),
                    C += 1
                }
            }
            for (x = 0; x < g; x++)
                for (_ = 0; _ < v; _++) {
                    var I = p + _ + S * x
                      , D = p + _ + S * (x + 1)
                      , N = p + (_ + 1) + S * (x + 1)
                      , k = p + (_ + 1) + S * x;
                    l.push(I, D, k),
                    l.push(D, N, k),
                    P += 6
                }
            c.addGroup(f, P, y),
            f += P,
            p += C
        }
        B.call(this),
        this.type = "BoxBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: r,
            heightSegments: i,
            depthSegments: o
        };
        var c = this;
        t = t || 1,
        e = e || 1,
        n = n || 1,
        r = Math.floor(r) || 1,
        i = Math.floor(i) || 1,
        o = Math.floor(o) || 1;
        var l = []
          , u = []
          , h = []
          , d = []
          , p = 0
          , f = 0;
        a("z", "y", "x", -1, -1, n, e, t, o, i, 0),
        a("z", "y", "x", 1, -1, n, e, -t, o, i, 1),
        a("x", "z", "y", 1, 1, t, n, e, r, o, 2),
        a("x", "z", "y", 1, -1, t, n, -e, r, o, 3),
        a("x", "y", "z", 1, -1, t, e, n, r, i, 4),
        a("x", "y", "z", -1, -1, t, e, -n, r, i, 5),
        this.setIndex(l),
        this.addAttribute("position", new N(u,3)),
        this.addAttribute("normal", new N(h,3)),
        this.addAttribute("uv", new N(d,2))
    }
    function H(t, e, n, r) {
        S.call(this),
        this.type = "PlaneGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: r
        },
        this.fromBufferGeometry(new G(t,e,n,r)),
        this.mergeVertices()
    }
    function G(t, e, n, r) {
        B.call(this),
        this.type = "PlaneBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: r
        },
        t = t || 1,
        e = e || 1;
        var i, o, a = t / 2, s = e / 2, c = Math.floor(n) || 1, l = Math.floor(r) || 1, u = c + 1, h = l + 1, d = t / c, p = e / l, f = [], m = [], v = [], g = [];
        for (o = 0; o < h; o++) {
            var y = o * p - s;
            for (i = 0; i < u; i++) {
                var _ = i * d - a;
                m.push(_, -y, 0),
                v.push(0, 0, 1),
                g.push(i / c),
                g.push(1 - o / l)
            }
        }
        for (o = 0; o < l; o++)
            for (i = 0; i < c; i++) {
                var x = i + u * o
                  , b = i + u * (o + 1)
                  , w = i + 1 + u * (o + 1)
                  , M = i + 1 + u * o;
                f.push(x, b, M),
                f.push(b, w, M)
            }
        this.setIndex(f),
        this.addAttribute("position", new N(m,3)),
        this.addAttribute("normal", new N(v,3)),
        this.addAttribute("uv", new N(g,2))
    }
    function V() {
        Object.defineProperty(this, "id", {
            value: zc++
        }),
        this.uuid = Cc.generateUUID(),
        this.name = "",
        this.type = "Material",
        this.fog = !0,
        this.lights = !0,
        this.blending = ga,
        this.side = ca,
        this.flatShading = !1,
        this.vertexColors = pa,
        this.opacity = 1,
        this.transparent = !1,
        this.blendSrc = Ra,
        this.blendDst = Oa,
        this.blendEquation = wa,
        this.blendSrcAlpha = null,
        this.blendDstAlpha = null,
        this.blendEquationAlpha = null,
        this.depthFunc = Fa,
        this.depthTest = !0,
        this.depthWrite = !0,
        this.clippingPlanes = null,
        this.clipIntersection = !1,
        this.clipShadows = !1,
        this.shadowSide = null,
        this.colorWrite = !0,
        this.precision = null,
        this.polygonOffset = !1,
        this.polygonOffsetFactor = 0,
        this.polygonOffsetUnits = 0,
        this.dithering = !1,
        this.alphaTest = 0,
        this.premultipliedAlpha = !1,
        this.overdraw = 0,
        this.visible = !0,
        this.userData = {},
        this.needsUpdate = !0
    }
    function W(t) {
        V.call(this),
        this.type = "MeshBasicMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = qa,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function q(t) {
        V.call(this),
        this.type = "ShaderMaterial",
        this.defines = {},
        this.uniforms = {},
        this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
        this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
        this.linewidth = 1,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.clipping = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        },
        this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        },
        this.index0AttributeName = void 0,
        this.uniformsNeedUpdate = !1,
        void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
        this.setValues(t))
    }
    function X(t, e) {
        this.origin = void 0 !== t ? t : new s,
        this.direction = void 0 !== e ? e : new s
    }
    function Y(t, e) {
        this.start = void 0 !== t ? t : new s,
        this.end = void 0 !== e ? e : new s
    }
    function $(t, e, n) {
        this.a = void 0 !== t ? t : new s,
        this.b = void 0 !== e ? e : new s,
        this.c = void 0 !== n ? n : new s
    }
    function Z(t, e) {
        w.call(this),
        this.type = "Mesh",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new W({
            color: 16777215 * Math.random()
        }),
        this.drawMode = mc,
        this.updateMorphTargets()
    }
    function J(t, e, n, r) {
        function i(e, r, i, h) {
            var d = r.background;
            null === d ? o(l, u) : d && d.isColor && (o(d, 1),
            h = !0),
            (t.autoClear || h) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
            d && d.isCubeTexture ? (void 0 === c && (c = new Z(new F(1,1,1),new q({
                uniforms: Dc.cube.uniforms,
                vertexShader: Dc.cube.vertexShader,
                fragmentShader: Dc.cube.fragmentShader,
                side: la,
                depthTest: !0,
                depthWrite: !1,
                fog: !1
            })),
            c.geometry.removeAttribute("normal"),
            c.geometry.removeAttribute("uv"),
            c.onBeforeRender = function(t, e, n) {
                this.matrixWorld.copyPosition(n.matrixWorld)
            }
            ,
            n.update(c.geometry)),
            c.material.uniforms.tCube.value = d,
            e.push(c, c.geometry, c.material, 0, null)) : d && d.isTexture && (void 0 === a && (a = new E(-1,1,1,-1,0,1),
            s = new Z(new G(2,2),new W({
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })),
            n.update(s.geometry)),
            s.material.map = d,
            t.renderBufferDirect(a, null, s.geometry, s.material, s, null))
        }
        function o(t, n) {
            e.buffers.color.setClear(t.r, t.g, t.b, n, r)
        }
        var a, s, c, l = new y(0), u = 0;
        return {
            getClearColor: function() {
                return l
            },
            setClearColor: function(t, e) {
                l.set(t),
                u = void 0 !== e ? e : 1,
                o(l, u)
            },
            getClearAlpha: function() {
                return u
            },
            setClearAlpha: function(t) {
                u = t,
                o(l, u)
            },
            render: i
        }
    }
    function Q(t, e, n) {
        function r(t) {
            a = t
        }
        function i(e, r) {
            t.drawArrays(a, e, r),
            n.update(r, a)
        }
        function o(t, r, i) {
            var o = e.get("ANGLE_instanced_arrays");
            if (null === o)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            var s = t.attributes.position;
            s.isInterleavedBufferAttribute ? (i = s.data.count,
            o.drawArraysInstancedANGLE(a, 0, i, t.maxInstancedCount)) : o.drawArraysInstancedANGLE(a, r, i, t.maxInstancedCount),
            n.update(i, a, t.maxInstancedCount)
        }
        var a;
        this.setMode = r,
        this.render = i,
        this.renderInstances = o
    }
    function K(t, e, n) {
        function r() {
            if (void 0 !== o)
                return o;
            var n = e.get("EXT_texture_filter_anisotropic");
            return o = null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
        }
        function i(e) {
            if ("highp" === e) {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                    return "highp";
                e = "mediump"
            }
            return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
        }
        var o, a = void 0 !== n.precision ? n.precision : "highp", s = i(a);
        s !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", s, "instead."),
        a = s);
        var c = !0 === n.logarithmicDepthBuffer
          , l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
          , u = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
          , h = t.getParameter(t.MAX_TEXTURE_SIZE)
          , d = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE)
          , p = t.getParameter(t.MAX_VERTEX_ATTRIBS)
          , f = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS)
          , m = t.getParameter(t.MAX_VARYING_VECTORS)
          , v = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS)
          , g = u > 0
          , y = !!e.get("OES_texture_float");
        return {
            getMaxAnisotropy: r,
            getMaxPrecision: i,
            precision: a,
            logarithmicDepthBuffer: c,
            maxTextures: l,
            maxVertexTextures: u,
            maxTextureSize: h,
            maxCubemapSize: d,
            maxAttributes: p,
            maxVertexUniforms: f,
            maxVaryings: m,
            maxFragmentUniforms: v,
            vertexTextures: g,
            floatFragmentTextures: y,
            floatVertexTextures: g && y
        }
    }
    function tt() {
        function t() {
            u.value !== r && (u.value = r,
            u.needsUpdate = i > 0),
            n.numPlanes = i,
            n.numIntersection = 0
        }
        function e(t, e, r, i) {
            var o = null !== t ? t.length : 0
              , a = null;
            if (0 !== o) {
                if (a = u.value,
                !0 !== i || null === a) {
                    var c = r + 4 * o
                      , h = e.matrixWorldInverse;
                    l.getNormalMatrix(h),
                    (null === a || a.length < c) && (a = new Float32Array(c));
                    for (var d = 0, p = r; d !== o; ++d,
                    p += 4)
                        s.copy(t[d]).applyMatrix4(h, l),
                        s.normal.toArray(a, p),
                        a[p + 3] = s.constant
                }
                u.value = a,
                u.needsUpdate = !0
            }
            return n.numPlanes = o,
            a
        }
        var n = this
          , r = null
          , i = 0
          , o = !1
          , a = !1
          , s = new v
          , l = new c
          , u = {
            value: null,
            needsUpdate: !1
        };
        this.uniform = u,
        this.numPlanes = 0,
        this.numIntersection = 0,
        this.init = function(t, n, a) {
            var s = 0 !== t.length || n || 0 !== i || o;
            return o = n,
            r = e(t, a, 0),
            i = t.length,
            s
        }
        ,
        this.beginShadows = function() {
            a = !0,
            e(null)
        }
        ,
        this.endShadows = function() {
            a = !1,
            t()
        }
        ,
        this.setState = function(n, s, c, l, h, d) {
            if (!o || null === n || 0 === n.length || a && !c)
                a ? e(null) : t();
            else {
                var p = a ? 0 : i
                  , f = 4 * p
                  , m = h.clippingState || null;
                u.value = m,
                m = e(n, l, f, d);
                for (var v = 0; v !== f; ++v)
                    m[v] = r[v];
                h.clippingState = m,
                this.numIntersection = s ? this.numPlanes : 0,
                this.numPlanes += p
            }
        }
    }
    function et(t) {
        var e = {};
        return {
            get: function(n) {
                if (void 0 !== e[n])
                    return e[n];
                var r;
                switch (n) {
                case "WEBGL_depth_texture":
                    r = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                case "WEBGL_compressed_texture_etc1":
                    r = t.getExtension("WEBGL_compressed_texture_etc1");
                    break;
                default:
                    r = t.getExtension(n)
                }
                return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                e[n] = r,
                r
            }
        }
    }
    function nt(t, e, n) {
        function r(t) {
            var i = t.target
              , o = s[i.id];
            null !== o.index && e.remove(o.index);
            for (var a in o.attributes)
                e.remove(o.attributes[a]);
            i.removeEventListener("dispose", r),
            delete s[i.id];
            var l = c[i.id];
            l && (e.remove(l),
            delete c[i.id]),
            l = c[o.id],
            l && (e.remove(l),
            delete c[o.id]),
            n.memory.geometries--
        }
        function i(t, e) {
            var i = s[e.id];
            return i || (e.addEventListener("dispose", r),
            e.isBufferGeometry ? i = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new B).setFromObject(t)),
            i = e._bufferGeometry),
            s[e.id] = i,
            n.memory.geometries++,
            i)
        }
        function o(n) {
            var r = n.index
              , i = n.attributes;
            null !== r && e.update(r, t.ELEMENT_ARRAY_BUFFER);
            for (var o in i)
                e.update(i[o], t.ARRAY_BUFFER);
            var a = n.morphAttributes;
            for (var o in a)
                for (var s = a[o], c = 0, l = s.length; c < l; c++)
                    e.update(s[c], t.ARRAY_BUFFER)
        }
        function a(n) {
            var r = c[n.id];
            if (r)
                return r;
            var i = []
              , o = n.index
              , a = n.attributes;
            if (null !== o)
                for (var s = o.array, l = 0, u = s.length; l < u; l += 3) {
                    var h = s[l + 0]
                      , d = s[l + 1]
                      , p = s[l + 2];
                    i.push(h, d, d, p, p, h)
                }
            else
                for (var s = a.position.array, l = 0, u = s.length / 3 - 1; l < u; l += 3) {
                    var h = l + 0
                      , d = l + 1
                      , p = l + 2;
                    i.push(h, d, d, p, p, h)
                }
            return r = new (z(i) > 65535 ? D : O)(i,1),
            e.update(r, t.ELEMENT_ARRAY_BUFFER),
            c[n.id] = r,
            r
        }
        var s = {}
          , c = {};
        return {
            get: i,
            update: o,
            getWireframeAttribute: a
        }
    }
    function rt(t, e, n) {
        function r(t) {
            s = t
        }
        function i(t) {
            c = t.type,
            l = t.bytesPerElement
        }
        function o(e, r) {
            t.drawElements(s, r, c, e * l),
            n.update(r, s)
        }
        function a(t, r, i) {
            var o = e.get("ANGLE_instanced_arrays");
            if (null === o)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            o.drawElementsInstancedANGLE(s, i, c, r * l, t.maxInstancedCount),
            n.update(i, s, t.maxInstancedCount)
        }
        var s, c, l;
        this.setMode = r,
        this.setIndex = i,
        this.render = o,
        this.renderInstances = a
    }
    function it(t) {
        function e(e, n, r) {
            switch (r = r || 1,
            i.calls++,
            n) {
            case t.TRIANGLES:
                i.triangles += r * (e / 3);
                break;
            case t.TRIANGLE_STRIP:
            case t.TRIANGLE_FAN:
                i.triangles += r * (e - 2);
                break;
            case t.LINES:
                i.lines += r * (e / 2);
                break;
            case t.LINE_STRIP:
                i.lines += r * (e - 1);
                break;
            case t.LINE_LOOP:
                i.lines += r * e;
                break;
            case t.POINTS:
                i.points += r * e;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", n)
            }
        }
        function n() {
            i.frame++,
            i.calls = 0,
            i.triangles = 0,
            i.points = 0,
            i.lines = 0
        }
        var r = {
            geometries: 0,
            textures: 0
        }
          , i = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: r,
            render: i,
            programs: null,
            autoReset: !0,
            reset: n,
            update: e
        }
    }
    function ot(t, e) {
        return Math.abs(e[1]) - Math.abs(t[1])
    }
    function at(t) {
        function e(e, i, o, a) {
            var s = e.morphTargetInfluences
              , c = s.length
              , l = n[i.id];
            if (void 0 === l) {
                l = [];
                for (var u = 0; u < c; u++)
                    l[u] = [u, 0];
                n[i.id] = l
            }
            for (var h = o.morphTargets && i.morphAttributes.position, d = o.morphNormals && i.morphAttributes.normal, u = 0; u < c; u++) {
                var p = l[u];
                0 !== p[1] && (h && i.removeAttribute("morphTarget" + u),
                d && i.removeAttribute("morphNormal" + u))
            }
            for (var u = 0; u < c; u++) {
                var p = l[u];
                p[0] = u,
                p[1] = s[u]
            }
            l.sort(ot);
            for (var u = 0; u < 8; u++) {
                var p = l[u];
                if (p) {
                    var f = p[0]
                      , m = p[1];
                    if (m) {
                        h && i.addAttribute("morphTarget" + u, h[f]),
                        d && i.addAttribute("morphNormal" + u, d[f]),
                        r[u] = m;
                        continue
                    }
                }
                r[u] = 0
            }
            a.getUniforms().setValue(t, "morphTargetInfluences", r)
        }
        var n = {}
          , r = new Float32Array(8);
        return {
            update: e
        }
    }
    function st(t, e) {
        function n(n) {
            var r = e.render.frame
              , o = n.geometry
              , a = t.get(n, o);
            return i[a.id] !== r && (o.isGeometry && a.updateFromObject(n),
            t.update(a),
            i[a.id] = r),
            a
        }
        function r() {
            i = {}
        }
        var i = {};
        return {
            update: n,
            dispose: r
        }
    }
    function ct(t, e, n, r, i, o, a, s, c, u) {
        t = void 0 !== t ? t : [],
        e = void 0 !== e ? e : es,
        l.call(this, t, e, n, r, i, o, a, s, c, u),
        this.flipY = !1
    }
    function lt() {
        this.seq = [],
        this.map = {}
    }
    function ut(t, e, n) {
        var r = t[0];
        if (r <= 0 || r > 0)
            return t;
        var i = e * n
          , o = Fc[i];
        if (void 0 === o && (o = new Float32Array(i),
        Fc[i] = o),
        0 !== e) {
            r.toArray(o, 0);
            for (var a = 1, s = 0; a !== e; ++a)
                s += n,
                t[a].toArray(o, s)
        }
        return o
    }
    function ht(t, e) {
        var n = Hc[e];
        void 0 === n && (n = new Int32Array(e),
        Hc[e] = n);
        for (var r = 0; r !== e; ++r)
            n[r] = t.allocTextureUnit();
        return n
    }
    function dt(t, e) {
        t.uniform1f(this.addr, e)
    }
    function pt(t, e) {
        t.uniform1i(this.addr, e)
    }
    function ft(t, e) {
        void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
    }
    function mt(t, e) {
        void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
    }
    function vt(t, e) {
        void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
    }
    function gt(t, e) {
        t.uniformMatrix2fv(this.addr, !1, e.elements || e)
    }
    function yt(t, e) {
        void 0 === e.elements ? t.uniformMatrix3fv(this.addr, !1, e) : (Vc.set(e.elements),
        t.uniformMatrix3fv(this.addr, !1, Vc))
    }
    function _t(t, e) {
        void 0 === e.elements ? t.uniformMatrix4fv(this.addr, !1, e) : (Gc.set(e.elements),
        t.uniformMatrix4fv(this.addr, !1, Gc))
    }
    function xt(t, e, n) {
        var r = n.allocTextureUnit();
        t.uniform1i(this.addr, r),
        n.setTexture2D(e || Bc, r)
    }
    function bt(t, e, n) {
        var r = n.allocTextureUnit();
        t.uniform1i(this.addr, r),
        n.setTextureCube(e || Uc, r)
    }
    function wt(t, e) {
        t.uniform2iv(this.addr, e)
    }
    function Mt(t, e) {
        t.uniform3iv(this.addr, e)
    }
    function Et(t, e) {
        t.uniform4iv(this.addr, e)
    }
    function Tt(t) {
        switch (t) {
        case 5126:
            return dt;
        case 35664:
            return ft;
        case 35665:
            return mt;
        case 35666:
            return vt;
        case 35674:
            return gt;
        case 35675:
            return yt;
        case 35676:
            return _t;
        case 35678:
        case 36198:
            return xt;
        case 35680:
            return bt;
        case 5124:
        case 35670:
            return pt;
        case 35667:
        case 35671:
            return wt;
        case 35668:
        case 35672:
            return Mt;
        case 35669:
        case 35673:
            return Et
        }
    }
    function St(t, e) {
        t.uniform1fv(this.addr, e)
    }
    function At(t, e) {
        t.uniform1iv(this.addr, e)
    }
    function Ct(t, e) {
        t.uniform2fv(this.addr, ut(e, this.size, 2))
    }
    function Pt(t, e) {
        t.uniform3fv(this.addr, ut(e, this.size, 3))
    }
    function Lt(t, e) {
        t.uniform4fv(this.addr, ut(e, this.size, 4))
    }
    function Rt(t, e) {
        t.uniformMatrix2fv(this.addr, !1, ut(e, this.size, 4))
    }
    function Ot(t, e) {
        t.uniformMatrix3fv(this.addr, !1, ut(e, this.size, 9))
    }
    function It(t, e) {
        t.uniformMatrix4fv(this.addr, !1, ut(e, this.size, 16))
    }
    function Dt(t, e, n) {
        var r = e.length
          , i = ht(n, r);
        t.uniform1iv(this.addr, i);
        for (var o = 0; o !== r; ++o)
            n.setTexture2D(e[o] || Bc, i[o])
    }
    function Nt(t, e, n) {
        var r = e.length
          , i = ht(n, r);
        t.uniform1iv(this.addr, i);
        for (var o = 0; o !== r; ++o)
            n.setTextureCube(e[o] || Uc, i[o])
    }
    function kt(t) {
        switch (t) {
        case 5126:
            return St;
        case 35664:
            return Ct;
        case 35665:
            return Pt;
        case 35666:
            return Lt;
        case 35674:
            return Rt;
        case 35675:
            return Ot;
        case 35676:
            return It;
        case 35678:
            return Dt;
        case 35680:
            return Nt;
        case 5124:
        case 35670:
            return At;
        case 35667:
        case 35671:
            return wt;
        case 35668:
        case 35672:
            return Mt;
        case 35669:
        case 35673:
            return Et
        }
    }
    function jt(t, e, n) {
        this.id = t,
        this.addr = n,
        this.setValue = Tt(e.type)
    }
    function zt(t, e, n) {
        this.id = t,
        this.addr = n,
        this.size = e.size,
        this.setValue = kt(e.type)
    }
    function Bt(t) {
        this.id = t,
        lt.call(this)
    }
    function Ut(t, e) {
        t.seq.push(e),
        t.map[e.id] = e
    }
    function Ft(t, e, n) {
        var r = t.name
          , i = r.length;
        for (Wc.lastIndex = 0; ; ) {
            var o = Wc.exec(r)
              , a = Wc.lastIndex
              , s = o[1]
              , c = "]" === o[2]
              , l = o[3];
            if (c && (s |= 0),
            void 0 === l || "[" === l && a + 2 === i) {
                Ut(n, void 0 === l ? new jt(s,t,e) : new zt(s,t,e));
                break
            }
            var u = n.map
              , h = u[s];
            void 0 === h && (h = new Bt(s),
            Ut(n, h)),
            n = h
        }
    }
    function Ht(t, e, n) {
        lt.call(this),
        this.renderer = n;
        for (var r = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), i = 0; i < r; ++i) {
            var o = t.getActiveUniform(e, i)
              , a = o.name;
            Ft(o, t.getUniformLocation(e, a), this)
        }
    }
    function Gt(t) {
        for (var e = t.split("\n"), n = 0; n < e.length; n++)
            e[n] = n + 1 + ": " + e[n];
        return e.join("\n")
    }
    function Vt(t, e, n) {
        var r = t.createShader(e);
        return t.shaderSource(r, n),
        t.compileShader(r),
        !1 === t.getShaderParameter(r, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== t.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(r), Gt(n)),
        r
    }
    function Wt(t) {
        switch (t) {
        case yc:
            return ["Linear", "( value )"];
        case _c:
            return ["sRGB", "( value )"];
        case bc:
            return ["RGBE", "( value )"];
        case Mc:
            return ["RGBM", "( value, 7.0 )"];
        case Ec:
            return ["RGBM", "( value, 16.0 )"];
        case Tc:
            return ["RGBD", "( value, 256.0 )"];
        case xc:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        default:
            throw new Error("unsupported encoding: " + t)
        }
    }
    function qt(t, e) {
        var n = Wt(e);
        return "vec4 " + t + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }
    function Xt(t, e) {
        var n = Wt(e);
        return "vec4 " + t + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
    }
    function Yt(t, e) {
        var n;
        switch (e) {
        case Za:
            n = "Linear";
            break;
        case Ja:
            n = "Reinhard";
            break;
        case Qa:
            n = "Uncharted2";
            break;
        case Ka:
            n = "OptimizedCineon";
            break;
        default:
            throw new Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function $t(t, e, n) {
        return t = t || {},
        [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Qt).join("\n")
    }
    function Zt(t) {
        var e = [];
        for (var n in t) {
            var r = t[n];
            !1 !== r && e.push("#define " + n + " " + r)
        }
        return e.join("\n")
    }
    function Jt(t, e) {
        for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
            var o = t.getActiveAttrib(e, i)
              , a = o.name;
            n[a] = t.getAttribLocation(e, a)
        }
        return n
    }
    function Qt(t) {
        return "" !== t
    }
    function Kt(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }
    function te(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection)
    }
    function ee(t) {
        function e(t, e) {
            var n = Lc[e];
            if (void 0 === n)
                throw new Error("Can not resolve #include <" + e + ">");
            return ee(n)
        }
        var n = /^[ \t]*#include +<([\w\d.]+)>/gm;
        return t.replace(n, e)
    }
    function ne(t) {
        function e(t, e, n, r) {
            for (var i = "", o = parseInt(e); o < parseInt(n); o++)
                i += r.replace(/\[ i \]/g, "[ " + o + " ]");
            return i
        }
        var n = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
        return t.replace(n, e)
    }
    function re(t, e, n, r, i, o) {
        var a = t.context
          , s = r.defines
          , c = i.vertexShader
          , l = i.fragmentShader
          , u = "SHADOWMAP_TYPE_BASIC";
        o.shadowMapType === aa ? u = "SHADOWMAP_TYPE_PCF" : o.shadowMapType === sa && (u = "SHADOWMAP_TYPE_PCF_SOFT");
        var h = "ENVMAP_TYPE_CUBE"
          , d = "ENVMAP_MODE_REFLECTION"
          , p = "ENVMAP_BLENDING_MULTIPLY";
        if (o.envMap) {
            switch (r.envMap.mapping) {
            case es:
            case ns:
                h = "ENVMAP_TYPE_CUBE";
                break;
            case as:
            case ss:
                h = "ENVMAP_TYPE_CUBE_UV";
                break;
            case rs:
            case is:
                h = "ENVMAP_TYPE_EQUIREC";
                break;
            case os:
                h = "ENVMAP_TYPE_SPHERE"
            }
            switch (r.envMap.mapping) {
            case ns:
            case is:
                d = "ENVMAP_MODE_REFRACTION"
            }
            switch (r.combine) {
            case qa:
                p = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case Xa:
                p = "ENVMAP_BLENDING_MIX";
                break;
            case Ya:
                p = "ENVMAP_BLENDING_ADD"
            }
        }
        var f, m, v = t.gammaFactor > 0 ? t.gammaFactor : 1, g = $t(r.extensions, o, e), y = Zt(s), _ = a.createProgram();
        r.isRawShaderMaterial ? (f = [y].filter(Qt).join("\n"),
        f.length > 0 && (f += "\n"),
        m = [g, y].filter(Qt).join("\n"),
        m.length > 0 && (m += "\n")) : (f = ["precision " + o.precision + " float;", "precision " + o.precision + " int;", "#define SHADER_NAME " + i.name, y, o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + v, "#define MAX_BONES " + o.maxBones, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + d : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.displacementMap && o.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexColors ? "#define USE_COLOR" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.skinning ? "#define USE_SKINNING" : "", o.useVertexTexture ? "#define BONE_TEXTURE" : "", o.morphTargets ? "#define USE_MORPHTARGETS" : "", o.morphNormals && !1 === o.flatShading ? "#define USE_MORPHNORMALS" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Qt).join("\n"),
        m = [g, "precision " + o.precision + " float;", "precision " + o.precision + " int;", "#define SHADER_NAME " + i.name, y, o.alphaTest ? "#define ALPHATEST " + o.alphaTest : "", "#define GAMMA_FACTOR " + v, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + h : "", o.envMap ? "#define " + d : "", o.envMap ? "#define " + p : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexColors ? "#define USE_COLOR" : "", o.gradientMap ? "#define USE_GRADIENTMAP" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", o.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", o.envMap && e.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", o.toneMapping !== $a ? "#define TONE_MAPPING" : "", o.toneMapping !== $a ? Lc.tonemapping_pars_fragment : "", o.toneMapping !== $a ? Yt("toneMapping", o.toneMapping) : "", o.dithering ? "#define DITHERING" : "", o.outputEncoding || o.mapEncoding || o.envMapEncoding || o.emissiveMapEncoding ? Lc.encodings_pars_fragment : "", o.mapEncoding ? qt("mapTexelToLinear", o.mapEncoding) : "", o.envMapEncoding ? qt("envMapTexelToLinear", o.envMapEncoding) : "", o.emissiveMapEncoding ? qt("emissiveMapTexelToLinear", o.emissiveMapEncoding) : "", o.outputEncoding ? Xt("linearToOutputTexel", o.outputEncoding) : "", o.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "", "\n"].filter(Qt).join("\n")),
        c = ee(c),
        c = Kt(c, o),
        c = te(c, o),
        l = ee(l),
        l = Kt(l, o),
        l = te(l, o),
        c = ne(c),
        l = ne(l);
        var x = f + c
          , b = m + l
          , w = Vt(a, a.VERTEX_SHADER, x)
          , M = Vt(a, a.FRAGMENT_SHADER, b);
        a.attachShader(_, w),
        a.attachShader(_, M),
        void 0 !== r.index0AttributeName ? a.bindAttribLocation(_, 0, r.index0AttributeName) : !0 === o.morphTargets && a.bindAttribLocation(_, 0, "position"),
        a.linkProgram(_);
        var E = a.getProgramInfoLog(_).trim()
          , T = a.getShaderInfoLog(w).trim()
          , S = a.getShaderInfoLog(M).trim()
          , A = !0
          , C = !0;
        !1 === a.getProgramParameter(_, a.LINK_STATUS) ? (A = !1,
        console.error("THREE.WebGLProgram: shader error: ", a.getError(), "gl.VALIDATE_STATUS", a.getProgramParameter(_, a.VALIDATE_STATUS), "gl.getProgramInfoLog", E, T, S)) : "" !== E ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", E) : "" !== T && "" !== S || (C = !1),
        C && (this.diagnostics = {
            runnable: A,
            material: r,
            programLog: E,
            vertexShader: {
                log: T,
                prefix: f
            },
            fragmentShader: {
                log: S,
                prefix: m
            }
        }),
        a.deleteShader(w),
        a.deleteShader(M);
        var P;
        this.getUniforms = function() {
            return void 0 === P && (P = new Ht(a,_,t)),
            P
        }
        ;
        var L;
        return this.getAttributes = function() {
            return void 0 === L && (L = Jt(a, _)),
            L
        }
        ,
        this.destroy = function() {
            a.deleteProgram(_),
            this.program = void 0
        }
        ,
        Object.defineProperties(this, {
            uniforms: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                    this.getUniforms()
                }
            },
            attributes: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                    this.getAttributes()
                }
            }
        }),
        this.id = qc++,
        this.code = n,
        this.usedTimes = 1,
        this.program = _,
        this.vertexShader = w,
        this.fragmentShader = M,
        this
    }
    function ie(t, e, n) {
        function r(t) {
            var e = t.skeleton
              , r = e.bones;
            if (n.floatVertexTextures)
                return 1024;
            var i = n.maxVertexUniforms
              , o = Math.floor((i - 20) / 4)
              , a = Math.min(o, r.length);
            return a < r.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + r.length + " bones. This GPU supports " + a + "."),
            0) : a
        }
        function i(t, e) {
            var n;
            return t ? t.isTexture ? n = t.encoding : t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
            n = t.texture.encoding) : n = yc,
            n === yc && e && (n = xc),
            n
        }
        var o = []
          , a = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow"
        }
          , s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        this.getParameters = function(e, o, s, c, l, u, h) {
            var d = a[e.type]
              , p = h.isSkinnedMesh ? r(h) : 0
              , f = n.precision;
            null !== e.precision && (f = n.getMaxPrecision(e.precision)) !== e.precision && console.warn("THREE.WebGLProgram.getParameters:", e.precision, "not supported, using", f, "instead.");
            var m = t.getRenderTarget();
            return {
                shaderID: d,
                precision: f,
                supportsVertexTextures: n.vertexTextures,
                outputEncoding: i(m ? m.texture : null, t.gammaOutput),
                map: !!e.map,
                mapEncoding: i(e.map, t.gammaInput),
                envMap: !!e.envMap,
                envMapMode: e.envMap && e.envMap.mapping,
                envMapEncoding: i(e.envMap, t.gammaInput),
                envMapCubeUV: !!e.envMap && (e.envMap.mapping === as || e.envMap.mapping === ss),
                lightMap: !!e.lightMap,
                aoMap: !!e.aoMap,
                emissiveMap: !!e.emissiveMap,
                emissiveMapEncoding: i(e.emissiveMap, t.gammaInput),
                bumpMap: !!e.bumpMap,
                normalMap: !!e.normalMap,
                displacementMap: !!e.displacementMap,
                roughnessMap: !!e.roughnessMap,
                metalnessMap: !!e.metalnessMap,
                specularMap: !!e.specularMap,
                alphaMap: !!e.alphaMap,
                gradientMap: !!e.gradientMap,
                combine: e.combine,
                vertexColors: e.vertexColors,
                fog: !!c,
                useFog: e.fog,
                fogExp: c && c.isFogExp2,
                flatShading: e.flatShading,
                sizeAttenuation: e.sizeAttenuation,
                logarithmicDepthBuffer: n.logarithmicDepthBuffer,
                skinning: e.skinning && p > 0,
                maxBones: p,
                useVertexTexture: n.floatVertexTextures,
                morphTargets: e.morphTargets,
                morphNormals: e.morphNormals,
                maxMorphTargets: t.maxMorphTargets,
                maxMorphNormals: t.maxMorphNormals,
                numDirLights: o.directional.length,
                numPointLights: o.point.length,
                numSpotLights: o.spot.length,
                numRectAreaLights: o.rectArea.length,
                numHemiLights: o.hemi.length,
                numClippingPlanes: l,
                numClipIntersection: u,
                dithering: e.dithering,
                shadowMapEnabled: t.shadowMap.enabled && h.receiveShadow && s.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: t.toneMapping,
                physicallyCorrectLights: t.physicallyCorrectLights,
                premultipliedAlpha: e.premultipliedAlpha,
                alphaTest: e.alphaTest,
                doubleSided: e.side === ua,
                flipSided: e.side === la,
                depthPacking: void 0 !== e.depthPacking && e.depthPacking
            }
        }
        ,
        this.getProgramCode = function(e, n) {
            var r = [];
            if (n.shaderID ? r.push(n.shaderID) : (r.push(e.fragmentShader),
            r.push(e.vertexShader)),
            void 0 !== e.defines)
                for (var i in e.defines)
                    r.push(i),
                    r.push(e.defines[i]);
            for (var o = 0; o < s.length; o++)
                r.push(n[s[o]]);
            return r.push(e.onBeforeCompile.toString()),
            r.push(t.gammaOutput),
            r.join()
        }
        ,
        this.acquireProgram = function(n, r, i, a) {
            for (var s, c = 0, l = o.length; c < l; c++) {
                var u = o[c];
                if (u.code === a) {
                    s = u,
                    ++s.usedTimes;
                    break
                }
            }
            return void 0 === s && (s = new re(t,e,a,n,r,i),
            o.push(s)),
            s
        }
        ,
        this.releaseProgram = function(t) {
            if (0 == --t.usedTimes) {
                var e = o.indexOf(t);
                o[e] = o[o.length - 1],
                o.pop(),
                t.destroy()
            }
        }
        ,
        this.programs = o
    }
    function oe() {
        function t(t) {
            var e = i.get(t);
            return void 0 === e && (e = {},
            i.set(t, e)),
            e
        }
        function e(t) {
            i.delete(t)
        }
        function n(t, e, n) {
            i.get(t)[e] = n
        }
        function r() {
            i = new WeakMap
        }
        var i = new WeakMap;
        return {
            get: t,
            remove: e,
            update: n,
            dispose: r
        }
    }
    function ae(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program && e.program && t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }
    function se(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }
    function ce() {
        function t() {
            i = 0,
            o.length = 0,
            a.length = 0
        }
        function e(t, e, n, s, c) {
            var l = r[i];
            void 0 === l ? (l = {
                id: t.id,
                object: t,
                geometry: e,
                material: n,
                program: n.program,
                renderOrder: t.renderOrder,
                z: s,
                group: c
            },
            r[i] = l) : (l.id = t.id,
            l.object = t,
            l.geometry = e,
            l.material = n,
            l.program = n.program,
            l.renderOrder = t.renderOrder,
            l.z = s,
            l.group = c),
            (!0 === n.transparent ? a : o).push(l),
            i++
        }
        function n() {
            o.length > 1 && o.sort(ae),
            a.length > 1 && a.sort(se)
        }
        var r = []
          , i = 0
          , o = []
          , a = [];
        return {
            opaque: o,
            transparent: a,
            init: t,
            push: e,
            sort: n
        }
    }
    function le() {
        function t(t, e) {
            var r = t.id + "," + e.id
              , i = n[r];
            return void 0 === i && (i = new ce,
            n[r] = i),
            i
        }
        function e() {
            n = {}
        }
        var n = {};
        return {
            get: t,
            dispose: e
        }
    }
    function ue() {
        var t = {};
        return {
            get: function(e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var n;
                switch (e.type) {
                case "DirectionalLight":
                    n = {
                        direction: new s,
                        color: new y,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new s,
                        direction: new s,
                        color: new y,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new s,
                        color: new y,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new s,
                        skyColor: new y,
                        groundColor: new y
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new y,
                        position: new s,
                        halfWidth: new s,
                        halfHeight: new s
                    }
                }
                return t[e.id] = n,
                n
            }
        }
    }
    function he() {
        function t(t, o, s) {
            for (var c = 0, l = 0, u = 0, h = 0, d = 0, p = 0, f = 0, m = 0, v = s.matrixWorldInverse, g = 0, y = t.length; g < y; g++) {
                var _ = t[g]
                  , x = _.color
                  , b = _.intensity
                  , w = _.distance
                  , M = _.shadow && _.shadow.map ? _.shadow.map.texture : null;
                if (_.isAmbientLight)
                    c += x.r * b,
                    l += x.g * b,
                    u += x.b * b;
                else if (_.isDirectionalLight) {
                    var E = e.get(_);
                    if (E.color.copy(_.color).multiplyScalar(_.intensity),
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    r.setFromMatrixPosition(_.target.matrixWorld),
                    E.direction.sub(r),
                    E.direction.transformDirection(v),
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize
                    }
                    n.directionalShadowMap[h] = M,
                    n.directionalShadowMatrix[h] = _.shadow.matrix,
                    n.directional[h] = E,
                    h++
                } else if (_.isSpotLight) {
                    var E = e.get(_);
                    if (E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    E.color.copy(x).multiplyScalar(b),
                    E.distance = w,
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    r.setFromMatrixPosition(_.target.matrixWorld),
                    E.direction.sub(r),
                    E.direction.transformDirection(v),
                    E.coneCos = Math.cos(_.angle),
                    E.penumbraCos = Math.cos(_.angle * (1 - _.penumbra)),
                    E.decay = 0 === _.distance ? 0 : _.decay,
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize
                    }
                    n.spotShadowMap[p] = M,
                    n.spotShadowMatrix[p] = _.shadow.matrix,
                    n.spot[p] = E,
                    p++
                } else if (_.isRectAreaLight) {
                    var E = e.get(_);
                    E.color.copy(x).multiplyScalar(b),
                    E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    a.identity(),
                    i.copy(_.matrixWorld),
                    i.premultiply(v),
                    a.extractRotation(i),
                    E.halfWidth.set(.5 * _.width, 0, 0),
                    E.halfHeight.set(0, .5 * _.height, 0),
                    E.halfWidth.applyMatrix4(a),
                    E.halfHeight.applyMatrix4(a),
                    n.rectArea[f] = E,
                    f++
                } else if (_.isPointLight) {
                    var E = e.get(_);
                    if (E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    E.color.copy(_.color).multiplyScalar(_.intensity),
                    E.distance = _.distance,
                    E.decay = 0 === _.distance ? 0 : _.decay,
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize,
                        E.shadowCameraNear = T.camera.near,
                        E.shadowCameraFar = T.camera.far
                    }
                    n.pointShadowMap[d] = M,
                    n.pointShadowMatrix[d] = _.shadow.matrix,
                    n.point[d] = E,
                    d++
                } else if (_.isHemisphereLight) {
                    var E = e.get(_);
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    E.direction.transformDirection(v),
                    E.direction.normalize(),
                    E.skyColor.copy(_.color).multiplyScalar(b),
                    E.groundColor.copy(_.groundColor).multiplyScalar(b),
                    n.hemi[m] = E,
                    m++
                }
            }
            n.ambient[0] = c,
            n.ambient[1] = l,
            n.ambient[2] = u,
            n.directional.length = h,
            n.spot.length = p,
            n.rectArea.length = f,
            n.point.length = d,
            n.hemi.length = m,
            n.hash = n.id + "," + h + "," + d + "," + p + "," + f + "," + m + "," + o.length
        }
        var e = new ue
          , n = {
            id: Xc++,
            hash: "",
            ambient: [0, 0, 0],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
        }
          , r = new s
          , i = new o
          , a = new o;
        return {
            setup: t,
            state: n
        }
    }
    function de() {
        function t() {
            a.length = 0,
            s.length = 0,
            c.length = 0
        }
        function e(t) {
            a.push(t)
        }
        function n(t) {
            s.push(t)
        }
        function r(t) {
            c.push(t)
        }
        function i(t) {
            o.setup(a, s, t)
        }
        var o = new he
          , a = []
          , s = []
          , c = [];
        return {
            init: t,
            state: {
                lightsArray: a,
                shadowsArray: s,
                spritesArray: c,
                lights: o
            },
            setupLights: i,
            pushLight: e,
            pushShadow: n,
            pushSprite: r
        }
    }
    function pe() {
        function t(t, e) {
            var r = t.id + "," + e.id
              , i = n[r];
            return void 0 === i && (i = new de,
            n[r] = i),
            i
        }
        function e() {
            n = {}
        }
        var n = {};
        return {
            get: t,
            dispose: e
        }
    }
    function fe(t) {
        V.call(this),
        this.type = "MeshDepthMaterial",
        this.depthPacking = Sc,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function me(t) {
        V.call(this),
        this.type = "MeshDistanceMaterial",
        this.referencePosition = new s,
        this.nearDistance = 1,
        this.farDistance = 1e3,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function ve(t, e, n) {
        function r(e, n, r, i, o, a) {
            var s = e.geometry
              , c = null
              , l = x
              , u = e.customDepthMaterial;
            if (r && (l = b,
            u = e.customDistanceMaterial),
            u)
                c = u;
            else {
                var h = !1;
                n.morphTargets && (s && s.isBufferGeometry ? h = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : s && s.isGeometry && (h = s.morphTargets && s.morphTargets.length > 0)),
                e.isSkinnedMesh && !1 === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e);
                var d = e.isSkinnedMesh && n.skinning
                  , p = 0;
                h && (p |= v),
                d && (p |= y),
                c = l[p]
            }
            if (t.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length) {
                var f = c.uuid
                  , m = n.uuid
                  , g = w[f];
                void 0 === g && (g = {},
                w[f] = g);
                var _ = g[m];
                void 0 === _ && (_ = c.clone(),
                g[m] = _),
                c = _
            }
            return c.visible = n.visible,
            c.wireframe = n.wireframe,
            c.side = null != n.shadowSide ? n.shadowSide : M[n.side],
            c.clipShadows = n.clipShadows,
            c.clippingPlanes = n.clippingPlanes,
            c.clipIntersection = n.clipIntersection,
            c.wireframeLinewidth = n.wireframeLinewidth,
            c.linewidth = n.linewidth,
            r && c.isMeshDistanceMaterial && (c.referencePosition.copy(i),
            c.nearDistance = o,
            c.farDistance = a),
            c
        }
        function a(n, i, o, s) {
            if (!1 !== n.visible) {
                if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && n.castShadow && (!n.frustumCulled || c.intersectsObject(n))) {
                    n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
                    var l = e.update(n)
                      , u = n.material;
                    if (Array.isArray(u))
                        for (var h = l.groups, d = 0, p = h.length; d < p; d++) {
                            var f = h[d]
                              , v = u[f.materialIndex];
                            if (v && v.visible) {
                                var g = r(n, v, s, m, o.near, o.far);
                                t.renderBufferDirect(o, null, l, g, n, f)
                            }
                        }
                    else if (u.visible) {
                        var g = r(n, u, s, m, o.near, o.far);
                        t.renderBufferDirect(o, null, l, g, n, null)
                    }
                }
                for (var y = n.children, _ = 0, x = y.length; _ < x; _++)
                    a(y[_], i, o, s)
            }
        }
        for (var c = new g, l = new o, d = new i, p = new i(n,n), f = new s, m = new s, v = 1, y = 2, _ = 1 + (v | y), x = new Array(_), b = new Array(_), w = {}, M = {
            0: la,
            1: ca,
            2: ua
        }, E = [new s(1,0,0), new s(-1,0,0), new s(0,0,1), new s(0,0,-1), new s(0,1,0), new s(0,-1,0)], T = [new s(0,1,0), new s(0,1,0), new s(0,1,0), new s(0,1,0), new s(0,0,1), new s(0,0,-1)], S = [new u, new u, new u, new u, new u, new u], A = 0; A !== _; ++A) {
            var C = 0 != (A & v)
              , P = 0 != (A & y)
              , L = new fe({
                depthPacking: Ac,
                morphTargets: C,
                skinning: P
            });
            x[A] = L;
            var R = new me({
                morphTargets: C,
                skinning: P
            });
            b[A] = R
        }
        var O = this;
        this.enabled = !1,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this.type = aa,
        this.render = function(e, n, r) {
            if (!1 !== O.enabled && (!1 !== O.autoUpdate || !1 !== O.needsUpdate) && 0 !== e.length) {
                var i = t.context
                  , o = t.state;
                o.disable(i.BLEND),
                o.buffers.color.setClear(1, 1, 1, 1),
                o.buffers.depth.setTest(!0),
                o.setScissorTest(!1);
                for (var s, u = 0, v = e.length; u < v; u++) {
                    var g = e[u]
                      , y = g.shadow
                      , _ = g && g.isPointLight;
                    if (void 0 !== y) {
                        var x = y.camera;
                        if (d.copy(y.mapSize),
                        d.min(p),
                        _) {
                            var b = d.x
                              , w = d.y;
                            S[0].set(2 * b, w, b, w),
                            S[1].set(0, w, b, w),
                            S[2].set(3 * b, w, b, w),
                            S[3].set(b, w, b, w),
                            S[4].set(3 * b, 0, b, w),
                            S[5].set(b, 0, b, w),
                            d.x *= 4,
                            d.y *= 2
                        }
                        if (null === y.map) {
                            var M = {
                                minFilter: hs,
                                magFilter: hs,
                                format: Rs
                            };
                            y.map = new h(d.x,d.y,M),
                            y.map.texture.name = g.name + ".shadowMap",
                            x.updateProjectionMatrix()
                        }
                        y.isSpotLightShadow && y.update(g);
                        var A = y.map
                          , C = y.matrix;
                        m.setFromMatrixPosition(g.matrixWorld),
                        x.position.copy(m),
                        _ ? (s = 6,
                        C.makeTranslation(-m.x, -m.y, -m.z)) : (s = 1,
                        f.setFromMatrixPosition(g.target.matrixWorld),
                        x.lookAt(f),
                        x.updateMatrixWorld(),
                        C.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                        C.multiply(x.projectionMatrix),
                        C.multiply(x.matrixWorldInverse)),
                        t.setRenderTarget(A),
                        t.clear();
                        for (var P = 0; P < s; P++) {
                            if (_) {
                                f.copy(x.position),
                                f.add(E[P]),
                                x.up.copy(T[P]),
                                x.lookAt(f),
                                x.updateMatrixWorld();
                                var L = S[P];
                                o.viewport(L)
                            }
                            l.multiplyMatrices(x.projectionMatrix, x.matrixWorldInverse),
                            c.setFromMatrix(l),
                            a(n, r, x, _)
                        }
                    } else
                        console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                }
                O.needsUpdate = !1
            }
        }
    }
    function ge(t, e, n, r, i, o, a, s, c) {
        l.call(this, t, e, n, r, i, o, a, s, c),
        this.needsUpdate = !0
    }
    function ye(t, e, n, r, i) {
        function o() {
            var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
              , n = new Uint16Array([0, 1, 2, 0, 2, 3]);
            u = e.createBuffer(),
            h = e.createBuffer(),
            e.bindBuffer(e.ARRAY_BUFFER, u),
            e.bufferData(e.ARRAY_BUFFER, t, e.STATIC_DRAW),
            e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
            e.bufferData(e.ELEMENT_ARRAY_BUFFER, n, e.STATIC_DRAW),
            d = c(),
            p = {
                position: e.getAttribLocation(d, "position"),
                uv: e.getAttribLocation(d, "uv")
            },
            f = {
                uvOffset: e.getUniformLocation(d, "uvOffset"),
                uvScale: e.getUniformLocation(d, "uvScale"),
                rotation: e.getUniformLocation(d, "rotation"),
                center: e.getUniformLocation(d, "center"),
                scale: e.getUniformLocation(d, "scale"),
                color: e.getUniformLocation(d, "color"),
                map: e.getUniformLocation(d, "map"),
                opacity: e.getUniformLocation(d, "opacity"),
                modelViewMatrix: e.getUniformLocation(d, "modelViewMatrix"),
                projectionMatrix: e.getUniformLocation(d, "projectionMatrix"),
                fogType: e.getUniformLocation(d, "fogType"),
                fogDensity: e.getUniformLocation(d, "fogDensity"),
                fogNear: e.getUniformLocation(d, "fogNear"),
                fogFar: e.getUniformLocation(d, "fogFar"),
                fogColor: e.getUniformLocation(d, "fogColor"),
                fogDepth: e.getUniformLocation(d, "fogDepth"),
                alphaTest: e.getUniformLocation(d, "alphaTest")
            };
            var r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            r.width = 8,
            r.height = 8;
            var i = r.getContext("2d");
            i.fillStyle = "white",
            i.fillRect(0, 0, 8, 8),
            m = new ge(r)
        }
        function c() {
            var t = e.createProgram()
              , n = e.createShader(e.VERTEX_SHADER)
              , r = e.createShader(e.FRAGMENT_SHADER);
            return e.shaderSource(n, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 center;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "\tvUV = uvOffset + uv * uvScale;", "\tvec2 alignedPosition = ( position - center ) * scale;", "\tvec2 rotatedPosition;", "\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "\tvec4 mvPosition;", "\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "\tmvPosition.xy += rotatedPosition;", "\tgl_Position = projectionMatrix * mvPosition;", "\tfogDepth = - mvPosition.z;", "}"].join("\n")),
            e.shaderSource(r, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "\tvec4 texture = texture2D( map, vUV );", "\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "\tif ( gl_FragColor.a < alphaTest ) discard;", "\tif ( fogType > 0 ) {", "\t\tfloat fogFactor = 0.0;", "\t\tif ( fogType == 1 ) {", "\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );", "\t\t} else {", "\t\t\tconst float LOG2 = 1.442695;", "\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );", "\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "\t\t}", "\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "\t}", "}"].join("\n")),
            e.compileShader(n),
            e.compileShader(r),
            e.attachShader(t, n),
            e.attachShader(t, r),
            e.linkProgram(t),
            t
        }
        function l(t, e) {
            return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
        }
        var u, h, d, p, f, m, v = new s, g = new a, y = new s;
        this.render = function(i, a, s) {
            if (0 !== i.length) {
                void 0 === d && o(),
                n.useProgram(d),
                n.initAttributes(),
                n.enableAttribute(p.position),
                n.enableAttribute(p.uv),
                n.disableUnusedAttributes(),
                n.disable(e.CULL_FACE),
                n.enable(e.BLEND),
                e.bindBuffer(e.ARRAY_BUFFER, u),
                e.vertexAttribPointer(p.position, 2, e.FLOAT, !1, 16, 0),
                e.vertexAttribPointer(p.uv, 2, e.FLOAT, !1, 16, 8),
                e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
                e.uniformMatrix4fv(f.projectionMatrix, !1, s.projectionMatrix.elements),
                n.activeTexture(e.TEXTURE0),
                e.uniform1i(f.map, 0);
                var c = 0
                  , _ = 0
                  , x = a.fog;
                x ? (e.uniform3f(f.fogColor, x.color.r, x.color.g, x.color.b),
                x.isFog ? (e.uniform1f(f.fogNear, x.near),
                e.uniform1f(f.fogFar, x.far),
                e.uniform1i(f.fogType, 1),
                c = 1,
                _ = 1) : x.isFogExp2 && (e.uniform1f(f.fogDensity, x.density),
                e.uniform1i(f.fogType, 2),
                c = 2,
                _ = 2)) : (e.uniform1i(f.fogType, 0),
                c = 0,
                _ = 0);
                for (var b = 0, w = i.length; b < w; b++) {
                    var M = i[b];
                    M.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, M.matrixWorld),
                    M.z = -M.modelViewMatrix.elements[14]
                }
                i.sort(l);
                for (var E = [], T = [], b = 0, w = i.length; b < w; b++) {
                    var M = i[b]
                      , S = M.material;
                    if (!1 !== S.visible) {
                        M.onBeforeRender(t, a, s, void 0, S, void 0),
                        e.uniform1f(f.alphaTest, S.alphaTest),
                        e.uniformMatrix4fv(f.modelViewMatrix, !1, M.modelViewMatrix.elements),
                        M.matrixWorld.decompose(v, g, y),
                        E[0] = y.x,
                        E[1] = y.y,
                        T[0] = M.center.x - .5,
                        T[1] = M.center.y - .5;
                        var A = 0;
                        a.fog && S.fog && (A = _),
                        c !== A && (e.uniform1i(f.fogType, A),
                        c = A),
                        null !== S.map ? (e.uniform2f(f.uvOffset, S.map.offset.x, S.map.offset.y),
                        e.uniform2f(f.uvScale, S.map.repeat.x, S.map.repeat.y)) : (e.uniform2f(f.uvOffset, 0, 0),
                        e.uniform2f(f.uvScale, 1, 1)),
                        e.uniform1f(f.opacity, S.opacity),
                        e.uniform3f(f.color, S.color.r, S.color.g, S.color.b),
                        e.uniform1f(f.rotation, S.rotation),
                        e.uniform2fv(f.center, T),
                        e.uniform2fv(f.scale, E),
                        n.setBlending(S.blending, S.blendEquation, S.blendSrc, S.blendDst, S.blendEquationAlpha, S.blendSrcAlpha, S.blendDstAlpha, S.premultipliedAlpha),
                        n.buffers.depth.setTest(S.depthTest),
                        n.buffers.depth.setMask(S.depthWrite),
                        n.buffers.color.setMask(S.colorWrite),
                        r.setTexture2D(S.map || m, 0),
                        e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                        M.onAfterRender(t, a, s, void 0, S, void 0)
                    }
                }
                n.enable(e.CULL_FACE),
                n.reset()
            }
        }
    }
    function _e(t, e, n) {
        function r() {
            var e = !1
              , n = new u
              , r = null
              , i = new u(0,0,0,0);
            return {
                setMask: function(n) {
                    r === n || e || (t.colorMask(n, n, n, n),
                    r = n)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e, r, o, a, s) {
                    !0 === s && (e *= a,
                    r *= a,
                    o *= a),
                    n.set(e, r, o, a),
                    !1 === i.equals(n) && (t.clearColor(e, r, o, a),
                    i.copy(n))
                },
                reset: function() {
                    e = !1,
                    r = null,
                    i.set(-1, 0, 0, 0)
                }
            }
        }
        function i() {
            var e = !1
              , n = null
              , r = null
              , i = null;
            return {
                setTest: function(e) {
                    e ? d(t.DEPTH_TEST) : p(t.DEPTH_TEST)
                },
                setMask: function(r) {
                    n === r || e || (t.depthMask(r),
                    n = r)
                },
                setFunc: function(e) {
                    if (r !== e) {
                        if (e)
                            switch (e) {
                            case za:
                                t.depthFunc(t.NEVER);
                                break;
                            case Ba:
                                t.depthFunc(t.ALWAYS);
                                break;
                            case Ua:
                                t.depthFunc(t.LESS);
                                break;
                            case Fa:
                                t.depthFunc(t.LEQUAL);
                                break;
                            case Ha:
                                t.depthFunc(t.EQUAL);
                                break;
                            case Ga:
                                t.depthFunc(t.GEQUAL);
                                break;
                            case Va:
                                t.depthFunc(t.GREATER);
                                break;
                            case Wa:
                                t.depthFunc(t.NOTEQUAL);
                                break;
                            default:
                                t.depthFunc(t.LEQUAL)
                            }
                        else
                            t.depthFunc(t.LEQUAL);
                        r = e
                    }
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    i !== e && (t.clearDepth(e),
                    i = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    r = null,
                    i = null
                }
            }
        }
        function o() {
            var e = !1
              , n = null
              , r = null
              , i = null
              , o = null
              , a = null
              , s = null
              , c = null
              , l = null;
            return {
                setTest: function(e) {
                    e ? d(t.STENCIL_TEST) : p(t.STENCIL_TEST)
                },
                setMask: function(r) {
                    n === r || e || (t.stencilMask(r),
                    n = r)
                },
                setFunc: function(e, n, a) {
                    r === e && i === n && o === a || (t.stencilFunc(e, n, a),
                    r = e,
                    i = n,
                    o = a)
                },
                setOp: function(e, n, r) {
                    a === e && s === n && c === r || (t.stencilOp(e, n, r),
                    a = e,
                    s = n,
                    c = r)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    l !== e && (t.clearStencil(e),
                    l = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    r = null,
                    i = null,
                    o = null,
                    a = null,
                    s = null,
                    c = null,
                    l = null
                }
            }
        }
        function a(e, n, r) {
            var i = new Uint8Array(4)
              , o = t.createTexture();
            t.bindTexture(e, o),
            t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
            t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for (var a = 0; a < r; a++)
                t.texImage2D(n + a, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, i);
            return o
        }
        function s() {
            for (var t = 0, e = D.length; t < e; t++)
                D[t] = 0
        }
        function c(n) {
            if (D[n] = 1,
            0 === N[n] && (t.enableVertexAttribArray(n),
            N[n] = 1),
            0 !== k[n]) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, 0),
                k[n] = 0
            }
        }
        function l(n, r) {
            if (D[n] = 1,
            0 === N[n] && (t.enableVertexAttribArray(n),
            N[n] = 1),
            k[n] !== r) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, r),
                k[n] = r
            }
        }
        function h() {
            for (var e = 0, n = N.length; e !== n; ++e)
                N[e] !== D[e] && (t.disableVertexAttribArray(e),
                N[e] = 0)
        }
        function d(e) {
            !0 !== j[e] && (t.enable(e),
            j[e] = !0)
        }
        function p(e) {
            !1 !== j[e] && (t.disable(e),
            j[e] = !1)
        }
        function f() {
            if (null === z && (z = [],
            e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1") || e.get("WEBGL_compressed_texture_astc")))
                for (var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), r = 0; r < n.length; r++)
                    z.push(n[r]);
            return z
        }
        function m(e) {
            return B !== e && (t.useProgram(e),
            B = e,
            !0)
        }
        function v(e, r, i, o, a, s, c, l) {
            if (e !== va ? d(t.BLEND) : p(t.BLEND),
            e !== ba) {
                if (e !== U || l !== X)
                    switch (e) {
                    case ya:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.SRC_ALPHA, t.ONE));
                        break;
                    case _a:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR));
                        break;
                    case xa:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.ZERO, t.SRC_COLOR));
                        break;
                    default:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA))
                    }
                F = null,
                H = null,
                G = null,
                V = null,
                W = null,
                q = null
            } else
                a = a || r,
                s = s || i,
                c = c || o,
                r === F && a === V || (t.blendEquationSeparate(n.convert(r), n.convert(a)),
                F = r,
                V = a),
                i === H && o === G && s === W && c === q || (t.blendFuncSeparate(n.convert(i), n.convert(o), n.convert(s), n.convert(c)),
                H = i,
                G = o,
                W = s,
                q = c);
            U = e,
            X = l
        }
        function g(e, n) {
            e.side === ua ? p(t.CULL_FACE) : d(t.CULL_FACE);
            var r = e.side === la;
            n && (r = !r),
            y(r),
            !0 === e.transparent ? v(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha) : v(va),
            R.setFunc(e.depthFunc),
            R.setTest(e.depthTest),
            R.setMask(e.depthWrite),
            L.setMask(e.colorWrite),
            b(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
        }
        function y(e) {
            Y !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
            Y = e)
        }
        function _(e) {
            e !== Ko ? (d(t.CULL_FACE),
            e !== $ && (e === ta ? t.cullFace(t.BACK) : e === ea ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : p(t.CULL_FACE),
            $ = e
        }
        function x(e) {
            e !== Z && (tt && t.lineWidth(e),
            Z = e)
        }
        function b(e, n, r) {
            e ? (d(t.POLYGON_OFFSET_FILL),
            J === n && Q === r || (t.polygonOffset(n, r),
            J = n,
            Q = r)) : p(t.POLYGON_OFFSET_FILL)
        }
        function w(e) {
            e ? d(t.SCISSOR_TEST) : p(t.SCISSOR_TEST)
        }
        function M(e) {
            void 0 === e && (e = t.TEXTURE0 + K - 1),
            rt !== e && (t.activeTexture(e),
            rt = e)
        }
        function E(e, n) {
            null === rt && M();
            var r = it[rt];
            void 0 === r && (r = {
                type: void 0,
                texture: void 0
            },
            it[rt] = r),
            r.type === e && r.texture === n || (t.bindTexture(e, n || st[e]),
            r.type = e,
            r.texture = n)
        }
        function T() {
            try {
                t.compressedTexImage2D.apply(t, arguments)
            } catch (t) {
                console.error("THREE.WebGLState:", t)
            }
        }
        function S() {
            try {
                t.texImage2D.apply(t, arguments)
            } catch (t) {
                console.error("THREE.WebGLState:", t)
            }
        }
        function A(e) {
            !1 === ot.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
            ot.copy(e))
        }
        function C(e) {
            !1 === at.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
            at.copy(e))
        }
        function P() {
            for (var e = 0; e < N.length; e++)
                1 === N[e] && (t.disableVertexAttribArray(e),
                N[e] = 0);
            j = {},
            z = null,
            rt = null,
            it = {},
            B = null,
            U = null,
            Y = null,
            $ = null,
            L.reset(),
            R.reset(),
            O.reset()
        }
        var L = new r
          , R = new i
          , O = new o
          , I = t.getParameter(t.MAX_VERTEX_ATTRIBS)
          , D = new Uint8Array(I)
          , N = new Uint8Array(I)
          , k = new Uint8Array(I)
          , j = {}
          , z = null
          , B = null
          , U = null
          , F = null
          , H = null
          , G = null
          , V = null
          , W = null
          , q = null
          , X = !1
          , Y = null
          , $ = null
          , Z = null
          , J = null
          , Q = null
          , K = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
          , tt = !1
          , et = 0
          , nt = t.getParameter(t.VERSION);
        -1 !== nt.indexOf("WebGL") ? (et = parseFloat(/^WebGL\ ([0-9])/.exec(nt)[1]),
        tt = et >= 1) : -1 !== nt.indexOf("OpenGL ES") && (et = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(nt)[1]),
        tt = et >= 2);
        var rt = null
          , it = {}
          , ot = new u
          , at = new u
          , st = {};
        return st[t.TEXTURE_2D] = a(t.TEXTURE_2D, t.TEXTURE_2D, 1),
        st[t.TEXTURE_CUBE_MAP] = a(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
        L.setClear(0, 0, 0, 1),
        R.setClear(1),
        O.setClear(0),
        d(t.DEPTH_TEST),
        R.setFunc(Fa),
        y(!1),
        _(ta),
        d(t.CULL_FACE),
        d(t.BLEND),
        v(ga),
        {
            buffers: {
                color: L,
                depth: R,
                stencil: O
            },
            initAttributes: s,
            enableAttribute: c,
            enableAttributeAndDivisor: l,
            disableUnusedAttributes: h,
            enable: d,
            disable: p,
            getCompressedTextureFormats: f,
            useProgram: m,
            setBlending: v,
            setMaterial: g,
            setFlipSided: y,
            setCullFace: _,
            setLineWidth: x,
            setPolygonOffset: b,
            setScissorTest: w,
            activeTexture: M,
            bindTexture: E,
            compressedTexImage2D: T,
            texImage2D: S,
            scissor: A,
            viewport: C,
            reset: P
        }
    }
    function xe(t, e, n, r, i, o, a) {
        function s(t, e) {
            if (t.width > e || t.height > e) {
                if ("data"in t)
                    return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + t.width + "x" + t.height + ").");
                var n = e / Math.max(t.width, t.height)
                  , r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                r.width = Math.floor(t.width * n),
                r.height = Math.floor(t.height * n);
                return r.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, r.width, r.height),
                console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + r.width + "x" + r.height, t),
                r
            }
            return t
        }
        function c(t) {
            return Cc.isPowerOfTwo(t.width) && Cc.isPowerOfTwo(t.height)
        }
        function l(t) {
            if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement || t instanceof ImageBitmap) {
                void 0 === L && (L = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                L.width = Cc.floorPowerOfTwo(t.width),
                L.height = Cc.floorPowerOfTwo(t.height);
                return L.getContext("2d").drawImage(t, 0, 0, L.width, L.height),
                console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + L.width + "x" + L.height, t),
                L
            }
            return t
        }
        function u(t) {
            return t.wrapS !== ls || t.wrapT !== ls || t.minFilter !== hs && t.minFilter !== fs
        }
        function h(t, e) {
            return t.generateMipmaps && e && t.minFilter !== hs && t.minFilter !== fs
        }
        function d(e, n, i, o) {
            t.generateMipmap(e),
            r.get(n).__maxMipLevel = Math.log2(Math.max(i, o))
        }
        function p(e) {
            return e === hs || e === ds || e === ps ? t.NEAREST : t.LINEAR
        }
        function f(t) {
            var e = t.target;
            e.removeEventListener("dispose", f),
            v(e),
            e.isVideoTexture && delete O[e.id],
            a.memory.textures--
        }
        function m(t) {
            var e = t.target;
            e.removeEventListener("dispose", m),
            g(e),
            a.memory.textures--
        }
        function v(e) {
            var n = r.get(e);
            if (e.image && n.__image__webglTextureCube)
                t.deleteTexture(n.__image__webglTextureCube);
            else {
                if (void 0 === n.__webglInit)
                    return;
                t.deleteTexture(n.__webglTexture)
            }
            r.remove(e)
        }
        function g(e) {
            var n = r.get(e)
              , i = r.get(e.texture);
            if (e) {
                if (void 0 !== i.__webglTexture && t.deleteTexture(i.__webglTexture),
                e.depthTexture && e.depthTexture.dispose(),
                e.isWebGLRenderTargetCube)
                    for (var o = 0; o < 6; o++)
                        t.deleteFramebuffer(n.__webglFramebuffer[o]),
                        n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer[o]);
                else
                    t.deleteFramebuffer(n.__webglFramebuffer),
                    n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer);
                r.remove(e.texture),
                r.remove(e)
            }
        }
        function y(e, i) {
            var o = r.get(e);
            if (e.isVideoTexture && P(e),
            e.version > 0 && o.__version !== e.version) {
                var a = e.image;
                if (void 0 === a)
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e);
                else {
                    if (!1 !== a.complete)
                        return void w(o, e, i);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e)
                }
            }
            n.activeTexture(t.TEXTURE0 + i),
            n.bindTexture(t.TEXTURE_2D, o.__webglTexture)
        }
        function _(e, l) {
            var u = r.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && u.__version !== e.version) {
                    u.__image__webglTextureCube || (e.addEventListener("dispose", f),
                    u.__image__webglTextureCube = t.createTexture(),
                    a.memory.textures++),
                    n.activeTexture(t.TEXTURE0 + l),
                    n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube),
                    t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var p = e && e.isCompressedTexture, m = e.image[0] && e.image[0].isDataTexture, v = [], g = 0; g < 6; g++)
                        v[g] = p || m ? m ? e.image[g].image : e.image[g] : s(e.image[g], i.maxCubemapSize);
                    var y = v[0]
                      , _ = c(y)
                      , x = o.convert(e.format)
                      , w = o.convert(e.type);
                    b(t.TEXTURE_CUBE_MAP, e, _);
                    for (var g = 0; g < 6; g++)
                        if (p)
                            for (var M, E = v[g].mipmaps, T = 0, S = E.length; T < S; T++)
                                M = E[T],
                                e.format !== Rs && e.format !== Ls ? n.getCompressedTextureFormats().indexOf(x) > -1 ? n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, T, x, M.width, M.height, 0, M.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, T, x, M.width, M.height, 0, x, w, M.data);
                        else
                            m ? n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, x, v[g].width, v[g].height, 0, x, w, v[g].data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, x, x, w, v[g]);
                    u.__maxMipLevel = p ? E.length - 1 : 0,
                    h(e, _) && d(t.TEXTURE_CUBE_MAP, e, y.width, y.height),
                    u.__version = e.version,
                    e.onUpdate && e.onUpdate(e)
                } else
                    n.activeTexture(t.TEXTURE0 + l),
                    n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube)
        }
        function x(e, i) {
            n.activeTexture(t.TEXTURE0 + i),
            n.bindTexture(t.TEXTURE_CUBE_MAP, r.get(e).__webglTexture)
        }
        function b(n, a, s) {
            var c;
            if (s ? (t.texParameteri(n, t.TEXTURE_WRAP_S, o.convert(a.wrapS)),
            t.texParameteri(n, t.TEXTURE_WRAP_T, o.convert(a.wrapT)),
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, o.convert(a.magFilter)),
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, o.convert(a.minFilter))) : (t.texParameteri(n, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
            t.texParameteri(n, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
            a.wrapS === ls && a.wrapT === ls || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", a),
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, p(a.magFilter)),
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, p(a.minFilter)),
            a.minFilter !== hs && a.minFilter !== fs && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", a)),
            c = e.get("EXT_texture_filter_anisotropic")) {
                if (a.type === Ms && null === e.get("OES_texture_float_linear"))
                    return;
                if (a.type === Es && null === e.get("OES_texture_half_float_linear"))
                    return;
                (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (t.texParameterf(n, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())),
                r.get(a).__currentAnisotropy = a.anisotropy)
            }
        }
        function w(e, r, p) {
            void 0 === e.__webglInit && (e.__webglInit = !0,
            r.addEventListener("dispose", f),
            e.__webglTexture = t.createTexture(),
            a.memory.textures++),
            n.activeTexture(t.TEXTURE0 + p),
            n.bindTexture(t.TEXTURE_2D, e.__webglTexture),
            t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, r.flipY),
            t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha),
            t.pixelStorei(t.UNPACK_ALIGNMENT, r.unpackAlignment);
            var m = s(r.image, i.maxTextureSize);
            u(r) && !1 === c(m) && (m = l(m));
            var v = c(m)
              , g = o.convert(r.format)
              , y = o.convert(r.type);
            b(t.TEXTURE_2D, r, v);
            var _, x = r.mipmaps;
            if (r.isDepthTexture) {
                var w = t.DEPTH_COMPONENT;
                if (r.type === Ms) {
                    if (!R)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                    w = t.DEPTH_COMPONENT32F
                } else
                    R && (w = t.DEPTH_COMPONENT16);
                r.format === Ns && w === t.DEPTH_COMPONENT && r.type !== xs && r.type !== ws && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                r.type = xs,
                y = o.convert(r.type)),
                r.format === ks && (w = t.DEPTH_STENCIL,
                r.type !== Cs && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                r.type = Cs,
                y = o.convert(r.type))),
                n.texImage2D(t.TEXTURE_2D, 0, w, m.width, m.height, 0, g, y, null)
            } else if (r.isDataTexture)
                if (x.length > 0 && v) {
                    for (var M = 0, E = x.length; M < E; M++)
                        _ = x[M],
                        n.texImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, g, y, _.data);
                    r.generateMipmaps = !1,
                    e.__maxMipLevel = x.length - 1
                } else
                    n.texImage2D(t.TEXTURE_2D, 0, g, m.width, m.height, 0, g, y, m.data),
                    e.__maxMipLevel = 0;
            else if (r.isCompressedTexture) {
                for (var M = 0, E = x.length; M < E; M++)
                    _ = x[M],
                    r.format !== Rs && r.format !== Ls ? n.getCompressedTextureFormats().indexOf(g) > -1 ? n.compressedTexImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, _.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, g, y, _.data);
                e.__maxMipLevel = x.length - 1
            } else if (x.length > 0 && v) {
                for (var M = 0, E = x.length; M < E; M++)
                    _ = x[M],
                    n.texImage2D(t.TEXTURE_2D, M, g, g, y, _);
                r.generateMipmaps = !1,
                e.__maxMipLevel = x.length - 1
            } else
                n.texImage2D(t.TEXTURE_2D, 0, g, g, y, m),
                e.__maxMipLevel = 0;
            h(r, v) && d(t.TEXTURE_2D, r, m.width, m.height),
            e.__version = r.version,
            r.onUpdate && r.onUpdate(r)
        }
        function M(e, i, a, s) {
            var c = o.convert(i.texture.format)
              , l = o.convert(i.texture.type);
            n.texImage2D(s, 0, c, i.width, i.height, 0, c, l, null),
            t.bindFramebuffer(t.FRAMEBUFFER, e),
            t.framebufferTexture2D(t.FRAMEBUFFER, a, s, r.get(i.texture).__webglTexture, 0),
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function E(e, n) {
            t.bindRenderbuffer(t.RENDERBUFFER, e),
            n.depthBuffer && !n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, n.width, n.height),
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : n.depthBuffer && n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, n.width, n.height),
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, n.width, n.height),
            t.bindRenderbuffer(t.RENDERBUFFER, null)
        }
        function T(e, n) {
            if (n && n.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
            if (t.bindFramebuffer(t.FRAMEBUFFER, e),
            !n.depthTexture || !n.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
            r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
            n.depthTexture.image.height = n.height,
            n.depthTexture.needsUpdate = !0),
            y(n.depthTexture, 0);
            var i = r.get(n.depthTexture).__webglTexture;
            if (n.depthTexture.format === Ns)
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, i, 0);
            else {
                if (n.depthTexture.format !== ks)
                    throw new Error("Unknown depthTexture format");
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, i, 0)
            }
        }
        function S(e) {
            var n = r.get(e)
              , i = !0 === e.isWebGLRenderTargetCube;
            if (e.depthTexture) {
                if (i)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                T(n.__webglFramebuffer, e)
            } else if (i) {
                n.__webglDepthbuffer = [];
                for (var o = 0; o < 6; o++)
                    t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer[o]),
                    n.__webglDepthbuffer[o] = t.createRenderbuffer(),
                    E(n.__webglDepthbuffer[o], e)
            } else
                t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer),
                n.__webglDepthbuffer = t.createRenderbuffer(),
                E(n.__webglDepthbuffer, e);
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function A(e) {
            var i = r.get(e)
              , o = r.get(e.texture);
            e.addEventListener("dispose", m),
            o.__webglTexture = t.createTexture(),
            a.memory.textures++;
            var s = !0 === e.isWebGLRenderTargetCube
              , l = c(e);
            if (s) {
                i.__webglFramebuffer = [];
                for (var u = 0; u < 6; u++)
                    i.__webglFramebuffer[u] = t.createFramebuffer()
            } else
                i.__webglFramebuffer = t.createFramebuffer();
            if (s) {
                n.bindTexture(t.TEXTURE_CUBE_MAP, o.__webglTexture),
                b(t.TEXTURE_CUBE_MAP, e.texture, l);
                for (var u = 0; u < 6; u++)
                    M(i.__webglFramebuffer[u], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + u);
                h(e.texture, l) && d(t.TEXTURE_CUBE_MAP, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_CUBE_MAP, null)
            } else
                n.bindTexture(t.TEXTURE_2D, o.__webglTexture),
                b(t.TEXTURE_2D, e.texture, l),
                M(i.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                h(e.texture, l) && d(t.TEXTURE_2D, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_2D, null);
            e.depthBuffer && S(e)
        }
        function C(e) {
            var i = e.texture;
            if (h(i, c(e))) {
                var o = e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D
                  , a = r.get(i).__webglTexture;
                n.bindTexture(o, a),
                d(o, i, e.width, e.height),
                n.bindTexture(o, null)
            }
        }
        function P(t) {
            var e = t.id
              , n = a.render.frame;
            O[e] !== n && (O[e] = n,
            t.update())
        }
        var L, R = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext, O = {};
        this.setTexture2D = y,
        this.setTextureCube = _,
        this.setTextureCubeDynamic = x,
        this.setupRenderTarget = A,
        this.updateRenderTargetMipmap = C
    }
    function be(t, e) {
        function n(n) {
            var r;
            if (n === cs)
                return t.REPEAT;
            if (n === ls)
                return t.CLAMP_TO_EDGE;
            if (n === us)
                return t.MIRRORED_REPEAT;
            if (n === hs)
                return t.NEAREST;
            if (n === ds)
                return t.NEAREST_MIPMAP_NEAREST;
            if (n === ps)
                return t.NEAREST_MIPMAP_LINEAR;
            if (n === fs)
                return t.LINEAR;
            if (n === ms)
                return t.LINEAR_MIPMAP_NEAREST;
            if (n === vs)
                return t.LINEAR_MIPMAP_LINEAR;
            if (n === gs)
                return t.UNSIGNED_BYTE;
            if (n === Ts)
                return t.UNSIGNED_SHORT_4_4_4_4;
            if (n === Ss)
                return t.UNSIGNED_SHORT_5_5_5_1;
            if (n === As)
                return t.UNSIGNED_SHORT_5_6_5;
            if (n === ys)
                return t.BYTE;
            if (n === _s)
                return t.SHORT;
            if (n === xs)
                return t.UNSIGNED_SHORT;
            if (n === bs)
                return t.INT;
            if (n === ws)
                return t.UNSIGNED_INT;
            if (n === Ms)
                return t.FLOAT;
            if (n === Es && null !== (r = e.get("OES_texture_half_float")))
                return r.HALF_FLOAT_OES;
            if (n === Ps)
                return t.ALPHA;
            if (n === Ls)
                return t.RGB;
            if (n === Rs)
                return t.RGBA;
            if (n === Os)
                return t.LUMINANCE;
            if (n === Is)
                return t.LUMINANCE_ALPHA;
            if (n === Ns)
                return t.DEPTH_COMPONENT;
            if (n === ks)
                return t.DEPTH_STENCIL;
            if (n === wa)
                return t.FUNC_ADD;
            if (n === Ma)
                return t.FUNC_SUBTRACT;
            if (n === Ea)
                return t.FUNC_REVERSE_SUBTRACT;
            if (n === Aa)
                return t.ZERO;
            if (n === Ca)
                return t.ONE;
            if (n === Pa)
                return t.SRC_COLOR;
            if (n === La)
                return t.ONE_MINUS_SRC_COLOR;
            if (n === Ra)
                return t.SRC_ALPHA;
            if (n === Oa)
                return t.ONE_MINUS_SRC_ALPHA;
            if (n === Ia)
                return t.DST_ALPHA;
            if (n === Da)
                return t.ONE_MINUS_DST_ALPHA;
            if (n === Na)
                return t.DST_COLOR;
            if (n === ka)
                return t.ONE_MINUS_DST_COLOR;
            if (n === ja)
                return t.SRC_ALPHA_SATURATE;
            if ((n === js || n === zs || n === Bs || n === Us) && null !== (r = e.get("WEBGL_compressed_texture_s3tc"))) {
                if (n === js)
                    return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === zs)
                    return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === Bs)
                    return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === Us)
                    return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            if ((n === Fs || n === Hs || n === Gs || n === Vs) && null !== (r = e.get("WEBGL_compressed_texture_pvrtc"))) {
                if (n === Fs)
                    return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (n === Hs)
                    return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (n === Gs)
                    return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (n === Vs)
                    return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
            if (n === Ws && null !== (r = e.get("WEBGL_compressed_texture_etc1")))
                return r.COMPRESSED_RGB_ETC1_WEBGL;
            if ((n === qs || n === Xs || n === Ys || n === $s || n === Zs || n === Js || n === Qs || n === Ks || n === tc || n === ec || n === nc || n === rc || n === ic || n === oc) && null !== (r = e.get("WEBGL_compressed_texture_astc")))
                return n;
            if ((n === Ta || n === Sa) && null !== (r = e.get("EXT_blend_minmax"))) {
                if (n === Ta)
                    return r.MIN_EXT;
                if (n === Sa)
                    return r.MAX_EXT
            }
            return n === Cs && null !== (r = e.get("WEBGL_depth_texture")) ? r.UNSIGNED_INT_24_8_WEBGL : 0
        }
        return {
            convert: n
        }
    }
    function we(t, e, n, r) {
        M.call(this),
        this.type = "PerspectiveCamera",
        this.fov = void 0 !== t ? t : 50,
        this.zoom = 1,
        this.near = void 0 !== n ? n : .1,
        this.far = void 0 !== r ? r : 2e3,
        this.focus = 10,
        this.aspect = void 0 !== e ? e : 1,
        this.view = null,
        this.filmGauge = 35,
        this.filmOffset = 0,
        this.updateProjectionMatrix()
    }
    function Me(t) {
        we.call(this),
        this.cameras = t || []
    }
    function Ee(t) {
        function e() {
            if (null !== r && r.isPresenting) {
                var e = r.getEyeParameters("left")
                  , i = e.renderWidth
                  , o = e.renderHeight;
                _ = t.getPixelRatio(),
                y = t.getSize(),
                t.setDrawingBufferSize(2 * i, o, 1)
            } else
                n.enabled && t.setDrawingBufferSize(y.width, y.height, _)
        }
        var n = this
          , r = null
          , i = null
          , c = null
          , l = new o
          , h = new o;
        "undefined" != typeof window && "VRFrameData"in window && (i = new window.VRFrameData);
        var d = new o
          , p = new a
          , f = new s
          , m = new we;
        m.bounds = new u(0,0,.5,1),
        m.layers.enable(1);
        var v = new we;
        v.bounds = new u(.5,0,.5,1),
        v.layers.enable(2);
        var g = new Me([m, v]);
        g.layers.enable(1),
        g.layers.enable(2);
        var y, _;
        "undefined" != typeof window && window.addEventListener("vrdisplaypresentchange", e, !1),
        this.enabled = !1,
        this.userHeight = 1.6,
        this.getDevice = function() {
            return r
        }
        ,
        this.setDevice = function(t) {
            void 0 !== t && (r = t)
        }
        ,
        this.setPoseTarget = function(t) {
            void 0 !== t && (c = t)
        }
        ,
        this.getCamera = function(t) {
            if (null === r)
                return t;
            r.depthNear = t.near,
            r.depthFar = t.far,
            r.getFrameData(i);
            var e = r.stageParameters;
            e ? l.fromArray(e.sittingToStandingTransform) : l.makeTranslation(0, n.userHeight, 0);
            var o = i.pose
              , a = null !== c ? c : t;
            if (a.matrix.copy(l),
            a.matrix.decompose(a.position, a.quaternion, a.scale),
            null !== o.orientation && (p.fromArray(o.orientation),
            a.quaternion.multiply(p)),
            null !== o.position && (p.setFromRotationMatrix(l),
            f.fromArray(o.position),
            f.applyQuaternion(p),
            a.position.add(f)),
            a.updateMatrixWorld(),
            !1 === r.isPresenting)
                return t;
            m.near = t.near,
            v.near = t.near,
            m.far = t.far,
            v.far = t.far,
            g.matrixWorld.copy(t.matrixWorld),
            g.matrixWorldInverse.copy(t.matrixWorldInverse),
            m.matrixWorldInverse.fromArray(i.leftViewMatrix),
            v.matrixWorldInverse.fromArray(i.rightViewMatrix),
            h.getInverse(l),
            m.matrixWorldInverse.multiply(h),
            v.matrixWorldInverse.multiply(h);
            var s = a.parent;
            null !== s && (d.getInverse(s.matrixWorld),
            m.matrixWorldInverse.multiply(d),
            v.matrixWorldInverse.multiply(d)),
            m.matrixWorld.getInverse(m.matrixWorldInverse),
            v.matrixWorld.getInverse(v.matrixWorldInverse),
            m.projectionMatrix.fromArray(i.leftProjectionMatrix),
            v.projectionMatrix.fromArray(i.rightProjectionMatrix),
            g.projectionMatrix.copy(m.projectionMatrix);
            var u = r.getLayers();
            if (u.length) {
                var y = u[0];
                null !== y.leftBounds && 4 === y.leftBounds.length && m.bounds.fromArray(y.leftBounds),
                null !== y.rightBounds && 4 === y.rightBounds.length && v.bounds.fromArray(y.rightBounds)
            }
            return g
        }
        ,
        this.getStandingMatrix = function() {
            return l
        }
        ,
        this.submitFrame = function() {
            r && r.isPresenting && r.submitFrame()
        }
        ,
        this.dispose = function() {
            "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", e)
        }
    }
    function Te(t) {
        function e() {
            return null === ut ? wt : 1
        }
        function n() {
            It = new et(ot),
            It.get("WEBGL_depth_texture"),
            It.get("OES_texture_float"),
            It.get("OES_texture_float_linear"),
            It.get("OES_texture_half_float"),
            It.get("OES_texture_half_float_linear"),
            It.get("OES_standard_derivatives"),
            It.get("OES_element_index_uint"),
            It.get("ANGLE_instanced_arrays"),
            Jt = new be(ot,It),
            Dt = new K(ot,It,t),
            Nt = new _e(ot,It,Jt),
            Nt.scissor(gt.copy(Et).multiplyScalar(wt)),
            Nt.viewport(vt.copy(Mt).multiplyScalar(wt)),
            kt = new it(ot),
            jt = new oe,
            zt = new xe(ot,It,Nt,jt,Dt,Jt,kt),
            Bt = new _(ot),
            Ut = new nt(ot,Bt,kt),
            Ft = new st(Ut,kt),
            Xt = new at(ot),
            Gt = new ie(ct,It,Dt),
            Vt = new le,
            Wt = new pe,
            qt = new J(ct,Nt,Ut,q),
            Yt = new Q(ot,It,kt),
            $t = new rt(ot,It,kt),
            Zt = new ye(ct,ot,Nt,zt,Dt),
            kt.programs = Gt.programs,
            ct.context = ot,
            ct.capabilities = Dt,
            ct.extensions = It,
            ct.properties = jt,
            ct.renderLists = Vt,
            ct.state = Nt,
            ct.info = kt
        }
        function r(t) {
            t.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            lt = !0
        }
        function i() {
            console.log("THREE.WebGLRenderer: Context Restored."),
            lt = !1,
            n()
        }
        function a(t) {
            var e = t.target;
            e.removeEventListener("dispose", a),
            c(e)
        }
        function c(t) {
            l(t),
            jt.remove(t)
        }
        function l(t) {
            var e = jt.get(t).program;
            t.program = void 0,
            void 0 !== e && Gt.releaseProgram(e)
        }
        function h(t, e, n) {
            t.render(function(t) {
                ct.renderBufferImmediate(t, e, n)
            })
        }
        function d(t, e, n, r) {
            if (n && n.isInstancedBufferGeometry && null === It.get("ANGLE_instanced_arrays"))
                return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            void 0 === r && (r = 0),
            Nt.initAttributes();
            var i = n.attributes
              , o = e.getAttributes()
              , a = t.defaultAttributeValues;
            for (var s in o) {
                var c = o[s];
                if (c >= 0) {
                    var l = i[s];
                    if (void 0 !== l) {
                        var u = l.normalized
                          , h = l.itemSize
                          , d = Bt.get(l);
                        if (void 0 === d)
                            continue;
                        var p = d.buffer
                          , f = d.type
                          , m = d.bytesPerElement;
                        if (l.isInterleavedBufferAttribute) {
                            var v = l.data
                              , g = v.stride
                              , y = l.offset;
                            v && v.isInstancedInterleavedBuffer ? (Nt.enableAttributeAndDivisor(c, v.meshPerAttribute),
                            void 0 === n.maxInstancedCount && (n.maxInstancedCount = v.meshPerAttribute * v.count)) : Nt.enableAttribute(c),
                            ot.bindBuffer(ot.ARRAY_BUFFER, p),
                            ot.vertexAttribPointer(c, h, f, u, g * m, (r * g + y) * m)
                        } else
                            l.isInstancedBufferAttribute ? (Nt.enableAttributeAndDivisor(c, l.meshPerAttribute),
                            void 0 === n.maxInstancedCount && (n.maxInstancedCount = l.meshPerAttribute * l.count)) : Nt.enableAttribute(c),
                            ot.bindBuffer(ot.ARRAY_BUFFER, p),
                            ot.vertexAttribPointer(c, h, f, u, 0, r * h * m)
                    } else if (void 0 !== a) {
                        var _ = a[s];
                        if (void 0 !== _)
                            switch (_.length) {
                            case 2:
                                ot.vertexAttrib2fv(c, _);
                                break;
                            case 3:
                                ot.vertexAttrib3fv(c, _);
                                break;
                            case 4:
                                ot.vertexAttrib4fv(c, _);
                                break;
                            default:
                                ot.vertexAttrib1fv(c, _)
                            }
                    }
                }
            }
            Nt.disableUnusedAttributes()
        }
        function f() {
            te || (v(),
            te = !0)
        }
        function m() {
            te = !1
        }
        function v() {
            var t = Qt.getDevice();
            t && t.isPresenting ? t.requestAnimationFrame(y) : window.requestAnimationFrame(y)
        }
        function y(t) {
            !1 !== te && (ee(t),
            v())
        }
        function x(t, e, n) {
            if (!1 !== t.visible) {
                if (t.layers.test(e.layers))
                    if (t.isLight)
                        Z.pushLight(t),
                        t.castShadow && Z.pushShadow(t);
                    else if (t.isSprite)
                        t.frustumCulled && !St.intersectsSprite(t) || Z.pushSprite(t);
                    else if (t.isImmediateRenderObject)
                        n && Rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Lt),
                        $.push(t, null, t.material, Rt.z, null);
                    else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.update(),
                    !t.frustumCulled || St.intersectsObject(t))) {
                        n && Rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Lt);
                        var r = Ft.update(t)
                          , i = t.material;
                        if (Array.isArray(i))
                            for (var o = r.groups, a = 0, s = o.length; a < s; a++) {
                                var c = o[a]
                                  , l = i[c.materialIndex];
                                l && l.visible && $.push(t, r, l, Rt.z, c)
                            }
                        else
                            i.visible && $.push(t, r, i, Rt.z, null)
                    }
                for (var u = t.children, a = 0, s = u.length; a < s; a++)
                    x(u[a], e, n)
            }
        }
        function b(t, e, n, r) {
            for (var i = 0, o = t.length; i < o; i++) {
                var a = t[i]
                  , s = a.object
                  , c = a.geometry
                  , l = void 0 === r ? a.material : r
                  , u = a.group;
                if (n.isArrayCamera) {
                    mt = n;
                    for (var h = n.cameras, d = 0, p = h.length; d < p; d++) {
                        var f = h[d];
                        if (s.layers.test(f.layers)) {
                            var m = f.bounds
                              , v = m.x * xt
                              , g = m.y * bt
                              , y = m.z * xt
                              , _ = m.w * bt;
                            Nt.viewport(vt.set(v, g, y, _).multiplyScalar(wt)),
                            w(s, e, f, c, l, u)
                        }
                    }
                } else
                    mt = null,
                    w(s, e, n, c, l, u)
            }
        }
        function w(t, e, n, r, i, o) {
            if (t.onBeforeRender(ct, e, n, r, i, o),
            Z = Wt.get(e, mt || n),
            t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
            t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
            t.isImmediateRenderObject) {
                var a = t.isMesh && t.matrixWorld.determinant() < 0;
                Nt.setMaterial(i, a);
                var s = E(n, e.fog, i, t);
                pt = "",
                h(t, s, i)
            } else
                ct.renderBufferDirect(n, e.fog, r, i, t, o);
            t.onAfterRender(ct, e, n, r, i, o),
            Z = Wt.get(e, mt || n)
        }
        function M(t, e, n) {
            var r = jt.get(t)
              , i = Z.state.lights
              , o = Z.state.shadowsArray
              , s = Gt.getParameters(t, i.state, o, e, At.numPlanes, At.numIntersection, n)
              , c = Gt.getProgramCode(t, s)
              , u = r.program
              , h = !0;
            if (void 0 === u)
                t.addEventListener("dispose", a);
            else if (u.code !== c)
                l(t);
            else if (r.lightsHash !== i.state.hash)
                jt.update(t, "lightsHash", i.state.hash),
                h = !1;
            else {
                if (void 0 !== s.shaderID)
                    return;
                h = !1
            }
            if (h) {
                if (s.shaderID) {
                    var d = Dc[s.shaderID];
                    r.shader = {
                        name: t.type,
                        uniforms: Rc.clone(d.uniforms),
                        vertexShader: d.vertexShader,
                        fragmentShader: d.fragmentShader
                    }
                } else
                    r.shader = {
                        name: t.type,
                        uniforms: t.uniforms,
                        vertexShader: t.vertexShader,
                        fragmentShader: t.fragmentShader
                    };
                t.onBeforeCompile(r.shader, ct),
                u = Gt.acquireProgram(t, r.shader, s, c),
                r.program = u,
                t.program = u
            }
            var p = u.getAttributes();
            if (t.morphTargets) {
                t.numSupportedMorphTargets = 0;
                for (var f = 0; f < ct.maxMorphTargets; f++)
                    p["morphTarget" + f] >= 0 && t.numSupportedMorphTargets++
            }
            if (t.morphNormals) {
                t.numSupportedMorphNormals = 0;
                for (var f = 0; f < ct.maxMorphNormals; f++)
                    p["morphNormal" + f] >= 0 && t.numSupportedMorphNormals++
            }
            var m = r.shader.uniforms;
            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (r.numClippingPlanes = At.numPlanes,
            r.numIntersection = At.numIntersection,
            m.clippingPlanes = At.uniform),
            r.fog = e,
            r.lightsHash = i.state.hash,
            t.lights && (m.ambientLightColor.value = i.state.ambient,
            m.directionalLights.value = i.state.directional,
            m.spotLights.value = i.state.spot,
            m.rectAreaLights.value = i.state.rectArea,
            m.pointLights.value = i.state.point,
            m.hemisphereLights.value = i.state.hemi,
            m.directionalShadowMap.value = i.state.directionalShadowMap,
            m.directionalShadowMatrix.value = i.state.directionalShadowMatrix,
            m.spotShadowMap.value = i.state.spotShadowMap,
            m.spotShadowMatrix.value = i.state.spotShadowMatrix,
            m.pointShadowMap.value = i.state.pointShadowMap,
            m.pointShadowMatrix.value = i.state.pointShadowMatrix);
            var v = r.program.getUniforms()
              , g = Ht.seqWithValue(v.seq, m);
            r.uniformsList = g
        }
        function E(t, e, n, r) {
            _t = 0;
            var i = jt.get(n)
              , o = Z.state.lights;
            if (Ct && (Pt || t !== ft)) {
                var a = t === ft && n.id === dt;
                At.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, t, i, a)
            }
            !1 === n.needsUpdate && (void 0 === i.program ? n.needsUpdate = !0 : n.fog && i.fog !== e ? n.needsUpdate = !0 : n.lights && i.lightsHash !== o.state.hash ? n.needsUpdate = !0 : void 0 === i.numClippingPlanes || i.numClippingPlanes === At.numPlanes && i.numIntersection === At.numIntersection || (n.needsUpdate = !0)),
            n.needsUpdate && (M(n, e, r),
            n.needsUpdate = !1);
            var s = !1
              , c = !1
              , l = !1
              , u = i.program
              , h = u.getUniforms()
              , d = i.shader.uniforms;
            if (Nt.useProgram(u.program) && (s = !0,
            c = !0,
            l = !0),
            n.id !== dt && (dt = n.id,
            c = !0),
            s || t !== ft) {
                if (h.setValue(ot, "projectionMatrix", t.projectionMatrix),
                Dt.logarithmicDepthBuffer && h.setValue(ot, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                ft !== (mt || t) && (ft = mt || t,
                c = !0,
                l = !0),
                n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
                    var f = h.map.cameraPosition;
                    void 0 !== f && f.setValue(ot, Rt.setFromMatrixPosition(t.matrixWorld))
                }
                (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && h.setValue(ot, "viewMatrix", t.matrixWorldInverse)
            }
            if (n.skinning) {
                h.setOptional(ot, r, "bindMatrix"),
                h.setOptional(ot, r, "bindMatrixInverse");
                var m = r.skeleton;
                if (m) {
                    var v = m.bones;
                    if (Dt.floatVertexTextures) {
                        if (void 0 === m.boneTexture) {
                            var g = Math.sqrt(4 * v.length);
                            g = Cc.ceilPowerOfTwo(g),
                            g = Math.max(g, 4);
                            var y = new Float32Array(g * g * 4);
                            y.set(m.boneMatrices);
                            var _ = new p(y,g,g,Rs,Ms);
                            _.needsUpdate = !0,
                            m.boneMatrices = y,
                            m.boneTexture = _,
                            m.boneTextureSize = g
                        }
                        h.setValue(ot, "boneTexture", m.boneTexture),
                        h.setValue(ot, "boneTextureSize", m.boneTextureSize)
                    } else
                        h.setOptional(ot, m, "boneMatrices")
                }
            }
            return c && (h.setValue(ot, "toneMappingExposure", ct.toneMappingExposure),
            h.setValue(ot, "toneMappingWhitePoint", ct.toneMappingWhitePoint),
            n.lights && z(d, l),
            e && n.fog && P(d, e),
            n.isMeshBasicMaterial ? T(d, n) : n.isMeshLambertMaterial ? (T(d, n),
            L(d, n)) : n.isMeshPhongMaterial ? (T(d, n),
            n.isMeshToonMaterial ? O(d, n) : R(d, n)) : n.isMeshStandardMaterial ? (T(d, n),
            n.isMeshPhysicalMaterial ? D(d, n) : I(d, n)) : n.isMeshDepthMaterial ? (T(d, n),
            N(d, n)) : n.isMeshDistanceMaterial ? (T(d, n),
            k(d, n)) : n.isMeshNormalMaterial ? (T(d, n),
            j(d, n)) : n.isLineBasicMaterial ? (S(d, n),
            n.isLineDashedMaterial && A(d, n)) : n.isPointsMaterial ? C(d, n) : n.isShadowMaterial && (d.color.value = n.color,
            d.opacity.value = n.opacity),
            void 0 !== d.ltc_1 && (d.ltc_1.value = Ic.LTC_1),
            void 0 !== d.ltc_2 && (d.ltc_2.value = Ic.LTC_2),
            Ht.upload(ot, i.uniformsList, d, ct)),
            n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (Ht.upload(ot, i.uniformsList, d, ct),
            n.uniformsNeedUpdate = !1),
            h.setValue(ot, "modelViewMatrix", r.modelViewMatrix),
            h.setValue(ot, "normalMatrix", r.normalMatrix),
            h.setValue(ot, "modelMatrix", r.matrixWorld),
            u
        }
        function T(t, e) {
            t.opacity.value = e.opacity,
            e.color && (t.diffuse.value = e.color),
            e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
            e.map && (t.map.value = e.map),
            e.alphaMap && (t.alphaMap.value = e.alphaMap),
            e.specularMap && (t.specularMap.value = e.specularMap),
            e.envMap && (t.envMap.value = e.envMap,
            t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1,
            t.reflectivity.value = e.reflectivity,
            t.refractionRatio.value = e.refractionRatio,
            t.maxMipLevel.value = jt.get(e.envMap).__maxMipLevel),
            e.lightMap && (t.lightMap.value = e.lightMap,
            t.lightMapIntensity.value = e.lightMapIntensity),
            e.aoMap && (t.aoMap.value = e.aoMap,
            t.aoMapIntensity.value = e.aoMapIntensity);
            var n;
            if (e.map ? n = e.map : e.specularMap ? n = e.specularMap : e.displacementMap ? n = e.displacementMap : e.normalMap ? n = e.normalMap : e.bumpMap ? n = e.bumpMap : e.roughnessMap ? n = e.roughnessMap : e.metalnessMap ? n = e.metalnessMap : e.alphaMap ? n = e.alphaMap : e.emissiveMap && (n = e.emissiveMap),
            void 0 !== n) {
                if (n.isWebGLRenderTarget && (n = n.texture),
                !0 === n.matrixAutoUpdate) {
                    var r = n.offset
                      , i = n.repeat
                      , o = n.rotation
                      , a = n.center;
                    n.matrix.setUvTransform(r.x, r.y, i.x, i.y, o, a.x, a.y)
                }
                t.uvTransform.value.copy(n.matrix)
            }
        }
        function S(t, e) {
            t.diffuse.value = e.color,
            t.opacity.value = e.opacity
        }
        function A(t, e) {
            t.dashSize.value = e.dashSize,
            t.totalSize.value = e.dashSize + e.gapSize,
            t.scale.value = e.scale
        }
        function C(t, e) {
            if (t.diffuse.value = e.color,
            t.opacity.value = e.opacity,
            t.size.value = e.size * wt,
            t.scale.value = .5 * bt,
            t.map.value = e.map,
            null !== e.map) {
                if (!0 === e.map.matrixAutoUpdate) {
                    var n = e.map.offset
                      , r = e.map.repeat
                      , i = e.map.rotation
                      , o = e.map.center;
                    e.map.matrix.setUvTransform(n.x, n.y, r.x, r.y, i, o.x, o.y)
                }
                t.uvTransform.value.copy(e.map.matrix)
            }
        }
        function P(t, e) {
            t.fogColor.value = e.color,
            e.isFog ? (t.fogNear.value = e.near,
            t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
        }
        function L(t, e) {
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
        }
        function R(t, e) {
            t.specular.value = e.specular,
            t.shininess.value = Math.max(e.shininess, 1e-4),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function O(t, e) {
            R(t, e),
            e.gradientMap && (t.gradientMap.value = e.gradientMap)
        }
        function I(t, e) {
            t.roughness.value = e.roughness,
            t.metalness.value = e.metalness,
            e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
            e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias),
            e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
        }
        function D(t, e) {
            t.clearCoat.value = e.clearCoat,
            t.clearCoatRoughness.value = e.clearCoatRoughness,
            I(t, e)
        }
        function N(t, e) {
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function k(t, e) {
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias),
            t.referencePosition.value.copy(e.referencePosition),
            t.nearDistance.value = e.nearDistance,
            t.farDistance.value = e.farDistance
        }
        function j(t, e) {
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function z(t, e) {
            t.ambientLightColor.needsUpdate = e,
            t.directionalLights.needsUpdate = e,
            t.pointLights.needsUpdate = e,
            t.spotLights.needsUpdate = e,
            t.rectAreaLights.needsUpdate = e,
            t.hemisphereLights.needsUpdate = e
        }
        function B() {
            var t = _t;
            return t >= Dt.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + t + " texture units while this GPU supports only " + Dt.maxTextures),
            _t += 1,
            t
        }
        console.log("THREE.WebGLRenderer", Jo),
        t = t || {};
        var U = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
          , F = void 0 !== t.context ? t.context : null
          , H = void 0 !== t.alpha && t.alpha
          , G = void 0 === t.depth || t.depth
          , V = void 0 === t.stencil || t.stencil
          , W = void 0 !== t.antialias && t.antialias
          , q = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
          , X = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
          , Y = void 0 !== t.powerPreference ? t.powerPreference : "default"
          , $ = null
          , Z = null;
        this.domElement = U,
        this.context = null,
        this.autoClear = !0,
        this.autoClearColor = !0,
        this.autoClearDepth = !0,
        this.autoClearStencil = !0,
        this.sortObjects = !0,
        this.clippingPlanes = [],
        this.localClippingEnabled = !1,
        this.gammaFactor = 2,
        this.gammaInput = !1,
        this.gammaOutput = !1,
        this.physicallyCorrectLights = !1,
        this.toneMapping = Za,
        this.toneMappingExposure = 1,
        this.toneMappingWhitePoint = 1,
        this.maxMorphTargets = 8,
        this.maxMorphNormals = 4;
        var ot, ct = this, lt = !1, ut = null, ht = null, dt = -1, pt = "", ft = null, mt = null, vt = new u, gt = new u, yt = null, _t = 0, xt = U.width, bt = U.height, wt = 1, Mt = new u(0,0,xt,bt), Et = new u(0,0,xt,bt), Tt = !1, St = new g, At = new tt, Ct = !1, Pt = !1, Lt = new o, Rt = new s;
        try {
            var Ot = {
                alpha: H,
                depth: G,
                stencil: V,
                antialias: W,
                premultipliedAlpha: q,
                preserveDrawingBuffer: X,
                powerPreference: Y
            };
            if (U.addEventListener("webglcontextlost", r, !1),
            U.addEventListener("webglcontextrestored", i, !1),
            null === (ot = F || U.getContext("webgl", Ot) || U.getContext("experimental-webgl", Ot)))
                throw null !== U.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            void 0 === ot.getShaderPrecisionFormat && (ot.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            )
        } catch (t) {
            console.error("THREE.WebGLRenderer: " + t.message)
        }
        var It, Dt, Nt, kt, jt, zt, Bt, Ut, Ft, Gt, Vt, Wt, qt, Xt, Yt, $t, Zt, Jt;
        n();
        var Qt = new Ee(ct);
        this.vr = Qt;
        var Kt = new ve(ct,Ft,Dt.maxTextureSize);
        this.shadowMap = Kt,
        this.getContext = function() {
            return ot
        }
        ,
        this.getContextAttributes = function() {
            return ot.getContextAttributes()
        }
        ,
        this.forceContextLoss = function() {
            var t = It.get("WEBGL_lose_context");
            t && t.loseContext()
        }
        ,
        this.forceContextRestore = function() {
            var t = It.get("WEBGL_lose_context");
            t && t.restoreContext()
        }
        ,
        this.getPixelRatio = function() {
            return wt
        }
        ,
        this.setPixelRatio = function(t) {
            void 0 !== t && (wt = t,
            this.setSize(xt, bt, !1))
        }
        ,
        this.getSize = function() {
            return {
                width: xt,
                height: bt
            }
        }
        ,
        this.setSize = function(t, e, n) {
            var r = Qt.getDevice();
            if (r && r.isPresenting)
                return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            xt = t,
            bt = e,
            U.width = t * wt,
            U.height = e * wt,
            !1 !== n && (U.style.width = t + "px",
            U.style.height = e + "px"),
            this.setViewport(0, 0, t, e)
        }
        ,
        this.getDrawingBufferSize = function() {
            return {
                width: xt * wt,
                height: bt * wt
            }
        }
        ,
        this.setDrawingBufferSize = function(t, e, n) {
            xt = t,
            bt = e,
            wt = n,
            U.width = t * n,
            U.height = e * n,
            this.setViewport(0, 0, t, e)
        }
        ,
        this.getCurrentViewport = function() {
            return vt
        }
        ,
        this.setViewport = function(t, e, n, r) {
            Mt.set(t, bt - e - r, n, r),
            Nt.viewport(vt.copy(Mt).multiplyScalar(wt))
        }
        ,
        this.setScissor = function(t, e, n, r) {
            Et.set(t, bt - e - r, n, r),
            Nt.scissor(gt.copy(Et).multiplyScalar(wt))
        }
        ,
        this.setScissorTest = function(t) {
            Nt.setScissorTest(Tt = t)
        }
        ,
        this.getClearColor = function() {
            return qt.getClearColor()
        }
        ,
        this.setClearColor = function() {
            qt.setClearColor.apply(qt, arguments)
        }
        ,
        this.getClearAlpha = function() {
            return qt.getClearAlpha()
        }
        ,
        this.setClearAlpha = function() {
            qt.setClearAlpha.apply(qt, arguments)
        }
        ,
        this.clear = function(t, e, n) {
            var r = 0;
            (void 0 === t || t) && (r |= ot.COLOR_BUFFER_BIT),
            (void 0 === e || e) && (r |= ot.DEPTH_BUFFER_BIT),
            (void 0 === n || n) && (r |= ot.STENCIL_BUFFER_BIT),
            ot.clear(r)
        }
        ,
        this.clearColor = function() {
            this.clear(!0, !1, !1)
        }
        ,
        this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }
        ,
        this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }
        ,
        this.clearTarget = function(t, e, n, r) {
            this.setRenderTarget(t),
            this.clear(e, n, r)
        }
        ,
        this.dispose = function() {
            U.removeEventListener("webglcontextlost", r, !1),
            U.removeEventListener("webglcontextrestored", i, !1),
            Vt.dispose(),
            Wt.dispose(),
            jt.dispose(),
            Ft.dispose(),
            Qt.dispose(),
            m()
        }
        ,
        this.renderBufferImmediate = function(t, e, n) {
            Nt.initAttributes();
            var r = jt.get(t);
            t.hasPositions && !r.position && (r.position = ot.createBuffer()),
            t.hasNormals && !r.normal && (r.normal = ot.createBuffer()),
            t.hasUvs && !r.uv && (r.uv = ot.createBuffer()),
            t.hasColors && !r.color && (r.color = ot.createBuffer());
            var i = e.getAttributes();
            if (t.hasPositions && (ot.bindBuffer(ot.ARRAY_BUFFER, r.position),
            ot.bufferData(ot.ARRAY_BUFFER, t.positionArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.position),
            ot.vertexAttribPointer(i.position, 3, ot.FLOAT, !1, 0, 0)),
            t.hasNormals) {
                if (ot.bindBuffer(ot.ARRAY_BUFFER, r.normal),
                !n.isMeshPhongMaterial && !n.isMeshStandardMaterial && !n.isMeshNormalMaterial && !0 === n.flatShading)
                    for (var o = 0, a = 3 * t.count; o < a; o += 9) {
                        var s = t.normalArray
                          , c = (s[o + 0] + s[o + 3] + s[o + 6]) / 3
                          , l = (s[o + 1] + s[o + 4] + s[o + 7]) / 3
                          , u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                        s[o + 0] = c,
                        s[o + 1] = l,
                        s[o + 2] = u,
                        s[o + 3] = c,
                        s[o + 4] = l,
                        s[o + 5] = u,
                        s[o + 6] = c,
                        s[o + 7] = l,
                        s[o + 8] = u
                    }
                ot.bufferData(ot.ARRAY_BUFFER, t.normalArray, ot.DYNAMIC_DRAW),
                Nt.enableAttribute(i.normal),
                ot.vertexAttribPointer(i.normal, 3, ot.FLOAT, !1, 0, 0)
            }
            t.hasUvs && n.map && (ot.bindBuffer(ot.ARRAY_BUFFER, r.uv),
            ot.bufferData(ot.ARRAY_BUFFER, t.uvArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.uv),
            ot.vertexAttribPointer(i.uv, 2, ot.FLOAT, !1, 0, 0)),
            t.hasColors && n.vertexColors !== pa && (ot.bindBuffer(ot.ARRAY_BUFFER, r.color),
            ot.bufferData(ot.ARRAY_BUFFER, t.colorArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.color),
            ot.vertexAttribPointer(i.color, 3, ot.FLOAT, !1, 0, 0)),
            Nt.disableUnusedAttributes(),
            ot.drawArrays(ot.TRIANGLES, 0, t.count),
            t.count = 0
        }
        ,
        this.renderBufferDirect = function(t, n, r, i, o, a) {
            var s = o.isMesh && o.matrixWorld.determinant() < 0;
            Nt.setMaterial(i, s);
            var c = E(t, n, i, o)
              , l = r.id + "_" + c.id + "_" + (!0 === i.wireframe)
              , u = !1;
            l !== pt && (pt = l,
            u = !0),
            o.morphTargetInfluences && (Xt.update(o, r, i, c),
            u = !0);
            var h = r.index
              , p = r.attributes.position
              , f = 1;
            !0 === i.wireframe && (h = Ut.getWireframeAttribute(r),
            f = 2);
            var m, v = Yt;
            null !== h && (m = Bt.get(h),
            v = $t,
            v.setIndex(m)),
            u && (d(i, c, r),
            null !== h && ot.bindBuffer(ot.ELEMENT_ARRAY_BUFFER, m.buffer));
            var g = 1 / 0;
            null !== h ? g = h.count : void 0 !== p && (g = p.count);
            var y = r.drawRange.start * f
              , _ = r.drawRange.count * f
              , x = null !== a ? a.start * f : 0
              , b = null !== a ? a.count * f : 1 / 0
              , w = Math.max(y, x)
              , M = Math.min(g, y + _, x + b) - 1
              , T = Math.max(0, M - w + 1);
            if (0 !== T) {
                if (o.isMesh)
                    if (!0 === i.wireframe)
                        Nt.setLineWidth(i.wireframeLinewidth * e()),
                        v.setMode(ot.LINES);
                    else
                        switch (o.drawMode) {
                        case mc:
                            v.setMode(ot.TRIANGLES);
                            break;
                        case vc:
                            v.setMode(ot.TRIANGLE_STRIP);
                            break;
                        case gc:
                            v.setMode(ot.TRIANGLE_FAN)
                        }
                else if (o.isLine) {
                    var S = i.linewidth;
                    void 0 === S && (S = 1),
                    Nt.setLineWidth(S * e()),
                    o.isLineSegments ? v.setMode(ot.LINES) : o.isLineLoop ? v.setMode(ot.LINE_LOOP) : v.setMode(ot.LINE_STRIP)
                } else
                    o.isPoints && v.setMode(ot.POINTS);
                r && r.isInstancedBufferGeometry ? r.maxInstancedCount > 0 && v.renderInstances(r, w, T) : v.render(w, T)
            }
        }
        ,
        this.compile = function(t, e) {
            Z = Wt.get(t, e),
            Z.init(),
            t.traverse(function(t) {
                t.isLight && (Z.pushLight(t),
                t.castShadow && Z.pushShadow(t))
            }),
            Z.setupLights(e),
            t.traverse(function(e) {
                if (e.material)
                    if (Array.isArray(e.material))
                        for (var n = 0; n < e.material.length; n++)
                            M(e.material[n], t.fog, e);
                    else
                        M(e.material, t.fog, e)
            })
        }
        ;
        var te = !1
          , ee = null;
        this.animate = function(t) {
            ee = t,
            null !== ee ? f() : m()
        }
        ,
        this.render = function(t, e, n, r) {
            if (!e || !e.isCamera)
                return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            if (!lt) {
                pt = "",
                dt = -1,
                ft = null,
                !0 === t.autoUpdate && t.updateMatrixWorld(),
                null === e.parent && e.updateMatrixWorld(),
                Qt.enabled && (e = Qt.getCamera(e)),
                Z = Wt.get(t, e),
                Z.init(),
                t.onBeforeRender(ct, t, e, n),
                Lt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                St.setFromMatrix(Lt),
                Pt = this.localClippingEnabled,
                Ct = At.init(this.clippingPlanes, Pt, e),
                $ = Vt.get(t, e),
                $.init(),
                x(t, e, ct.sortObjects),
                !0 === ct.sortObjects && $.sort(),
                Ct && At.beginShadows();
                var i = Z.state.shadowsArray;
                Kt.render(i, t, e),
                Z.setupLights(e),
                Ct && At.endShadows(),
                this.info.autoReset && this.info.reset(),
                void 0 === n && (n = null),
                this.setRenderTarget(n),
                qt.render($, t, e, r);
                var o = $.opaque
                  , a = $.transparent;
                if (t.overrideMaterial) {
                    var s = t.overrideMaterial;
                    o.length && b(o, t, e, s),
                    a.length && b(a, t, e, s)
                } else
                    o.length && b(o, t, e),
                    a.length && b(a, t, e);
                var c = Z.state.spritesArray;
                Zt.render(c, t, e),
                n && zt.updateRenderTargetMipmap(n),
                Nt.buffers.depth.setTest(!0),
                Nt.buffers.depth.setMask(!0),
                Nt.buffers.color.setMask(!0),
                Nt.setPolygonOffset(!1),
                t.onAfterRender(ct, t, e),
                Qt.enabled && Qt.submitFrame(),
                $ = null,
                Z = null
            }
        }
        ,
        this.allocTextureUnit = B,
        this.setTexture2D = function() {
            var t = !1;
            return function(e, n) {
                e && e.isWebGLRenderTarget && (t || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
                t = !0),
                e = e.texture),
                zt.setTexture2D(e, n)
            }
        }(),
        this.setTexture = function() {
            var t = !1;
            return function(e, n) {
                t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),
                t = !0),
                zt.setTexture2D(e, n)
            }
        }(),
        this.setTextureCube = function() {
            var t = !1;
            return function(e, n) {
                e && e.isWebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
                t = !0),
                e = e.texture),
                e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? zt.setTextureCube(e, n) : zt.setTextureCubeDynamic(e, n)
            }
        }(),
        this.getRenderTarget = function() {
            return ut
        }
        ,
        this.setRenderTarget = function(t) {
            ut = t,
            t && void 0 === jt.get(t).__webglFramebuffer && zt.setupRenderTarget(t);
            var e = null
              , n = !1;
            if (t) {
                var r = jt.get(t).__webglFramebuffer;
                t.isWebGLRenderTargetCube ? (e = r[t.activeCubeFace],
                n = !0) : e = r,
                vt.copy(t.viewport),
                gt.copy(t.scissor),
                yt = t.scissorTest
            } else
                vt.copy(Mt).multiplyScalar(wt),
                gt.copy(Et).multiplyScalar(wt),
                yt = Tt;
            if (ht !== e && (ot.bindFramebuffer(ot.FRAMEBUFFER, e),
            ht = e),
            Nt.viewport(vt),
            Nt.scissor(gt),
            Nt.setScissorTest(yt),
            n) {
                var i = jt.get(t.texture);
                ot.framebufferTexture2D(ot.FRAMEBUFFER, ot.COLOR_ATTACHMENT0, ot.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, i.__webglTexture, t.activeMipMapLevel)
            }
        }
        ,
        this.readRenderTargetPixels = function(t, e, n, r, i, o) {
            if (!t || !t.isWebGLRenderTarget)
                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            var a = jt.get(t).__webglFramebuffer;
            if (a) {
                var s = !1;
                a !== ht && (ot.bindFramebuffer(ot.FRAMEBUFFER, a),
                s = !0);
                try {
                    var c = t.texture
                      , l = c.format
                      , u = c.type;
                    if (l !== Rs && Jt.convert(l) !== ot.getParameter(ot.IMPLEMENTATION_COLOR_READ_FORMAT))
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    if (!(u === gs || Jt.convert(u) === ot.getParameter(ot.IMPLEMENTATION_COLOR_READ_TYPE) || u === Ms && (It.get("OES_texture_float") || It.get("WEBGL_color_buffer_float")) || u === Es && It.get("EXT_color_buffer_half_float")))
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    ot.checkFramebufferStatus(ot.FRAMEBUFFER) === ot.FRAMEBUFFER_COMPLETE ? e >= 0 && e <= t.width - r && n >= 0 && n <= t.height - i && ot.readPixels(e, n, r, i, Jt.convert(l), Jt.convert(u), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                } finally {
                    s && ot.bindFramebuffer(ot.FRAMEBUFFER, ht)
                }
            }
        }
        ,
        this.copyFramebufferToTexture = function(t, e, n) {
            var r = e.image.width
              , i = e.image.height
              , o = Jt.convert(e.format);
            this.setTexture2D(e, 0),
            ot.copyTexImage2D(ot.TEXTURE_2D, n || 0, o, t.x, t.y, r, i, 0)
        }
        ,
        this.copyTextureToTexture = function(t, e, n, r) {
            var i = e.image.width
              , o = e.image.height
              , a = Jt.convert(n.format)
              , s = Jt.convert(n.type)
              , c = e.isDataTexture ? e.image.data : e.image;
            this.setTexture2D(n, 0),
            ot.texSubImage2D(ot.TEXTURE_2D, r || 0, t.x, t.y, i, o, a, s, c)
        }
    }
    function Se(t, e) {
        this.name = "",
        this.color = new y(t),
        this.density = void 0 !== e ? e : 25e-5
    }
    function Ae(t, e, n) {
        this.name = "",
        this.color = new y(t),
        this.near = void 0 !== e ? e : 1,
        this.far = void 0 !== n ? n : 1e3
    }
    function Ce() {
        w.call(this),
        this.type = "Scene",
        this.background = null,
        this.fog = null,
        this.overrideMaterial = null,
        this.autoUpdate = !0
    }
    function Pe(t) {
        V.call(this),
        this.type = "SpriteMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.rotation = 0,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function Le(t) {
        w.call(this),
        this.type = "Sprite",
        this.material = void 0 !== t ? t : new Pe,
        this.center = new i(.5,.5)
    }
    function Re() {
        w.call(this),
        this.type = "LOD",
        Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        })
    }
    function Oe(t, e) {
        if (t = t || [],
        this.bones = t.slice(0),
        this.boneMatrices = new Float32Array(16 * this.bones.length),
        void 0 === e)
            this.calculateInverses();
        else if (this.bones.length === e.length)
            this.boneInverses = e.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."),
            this.boneInverses = [];
            for (var n = 0, r = this.bones.length; n < r; n++)
                this.boneInverses.push(new o)
        }
    }
    function Ie() {
        w.call(this),
        this.type = "Bone"
    }
    function De(t, e) {
        Z.call(this, t, e),
        this.type = "SkinnedMesh",
        this.bindMode = "attached",
        this.bindMatrix = new o,
        this.bindMatrixInverse = new o;
        var n = this.initBones()
          , r = new Oe(n);
        this.bind(r, this.matrixWorld),
        this.normalizeSkinWeights()
    }
    function Ne(t) {
        V.call(this),
        this.type = "LineBasicMaterial",
        this.color = new y(16777215),
        this.linewidth = 1,
        this.linecap = "round",
        this.linejoin = "round",
        this.lights = !1,
        this.setValues(t)
    }
    function ke(t, e, n) {
        if (1 === n)
            return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
            new je(t,e);
        w.call(this),
        this.type = "Line",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new Ne({
            color: 16777215 * Math.random()
        })
    }
    function je(t, e) {
        ke.call(this, t, e),
        this.type = "LineSegments"
    }
    function ze(t, e) {
        ke.call(this, t, e),
        this.type = "LineLoop"
    }
    function Be(t) {
        V.call(this),
        this.type = "PointsMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.size = 1,
        this.sizeAttenuation = !0,
        this.lights = !1,
        this.setValues(t)
    }
    function Ue(t, e) {
        w.call(this),
        this.type = "Points",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new Be({
            color: 16777215 * Math.random()
        })
    }
    function Fe() {
        w.call(this),
        this.type = "Group"
    }
    function He(t, e, n, r, i, o, a, s, c) {
        l.call(this, t, e, n, r, i, o, a, s, c),
        this.generateMipmaps = !1
    }
    function Ge(t, e, n, r, i, o, a, s, c, u, h, d) {
        l.call(this, null, o, a, s, c, u, r, i, h, d),
        this.image = {
            width: e,
            height: n
        },
        this.mipmaps = t,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Ve(t, e, n, r, i, o, a, s, c, u) {
        if ((u = void 0 !== u ? u : Ns) !== Ns && u !== ks)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n && u === Ns && (n = xs),
        void 0 === n && u === ks && (n = Cs),
        l.call(this, null, r, i, o, a, s, u, n, c),
        this.image = {
            width: t,
            height: e
        },
        this.magFilter = void 0 !== a ? a : hs,
        this.minFilter = void 0 !== s ? s : hs,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function We(t) {
        B.call(this),
        this.type = "WireframeGeometry";
        var e, n, r, i, o, a, c, l, u, h, d = [], p = [0, 0], f = {}, m = ["a", "b", "c"];
        if (t && t.isGeometry) {
            var v = t.faces;
            for (e = 0,
            r = v.length; e < r; e++) {
                var g = v[e];
                for (n = 0; n < 3; n++)
                    c = g[m[n]],
                    l = g[m[(n + 1) % 3]],
                    p[0] = Math.min(c, l),
                    p[1] = Math.max(c, l),
                    u = p[0] + "," + p[1],
                    void 0 === f[u] && (f[u] = {
                        index1: p[0],
                        index2: p[1]
                    })
            }
            for (u in f)
                a = f[u],
                h = t.vertices[a.index1],
                d.push(h.x, h.y, h.z),
                h = t.vertices[a.index2],
                d.push(h.x, h.y, h.z)
        } else if (t && t.isBufferGeometry) {
            var y, _, x, b, w, M, E, T;
            if (h = new s,
            null !== t.index) {
                for (y = t.attributes.position,
                _ = t.index,
                x = t.groups,
                0 === x.length && (x = [{
                    start: 0,
                    count: _.count,
                    materialIndex: 0
                }]),
                i = 0,
                o = x.length; i < o; ++i)
                    for (b = x[i],
                    w = b.start,
                    M = b.count,
                    e = w,
                    r = w + M; e < r; e += 3)
                        for (n = 0; n < 3; n++)
                            c = _.getX(e + n),
                            l = _.getX(e + (n + 1) % 3),
                            p[0] = Math.min(c, l),
                            p[1] = Math.max(c, l),
                            u = p[0] + "," + p[1],
                            void 0 === f[u] && (f[u] = {
                                index1: p[0],
                                index2: p[1]
                            });
                for (u in f)
                    a = f[u],
                    h.fromBufferAttribute(y, a.index1),
                    d.push(h.x, h.y, h.z),
                    h.fromBufferAttribute(y, a.index2),
                    d.push(h.x, h.y, h.z)
            } else
                for (y = t.attributes.position,
                e = 0,
                r = y.count / 3; e < r; e++)
                    for (n = 0; n < 3; n++)
                        E = 3 * e + n,
                        h.fromBufferAttribute(y, E),
                        d.push(h.x, h.y, h.z),
                        T = 3 * e + (n + 1) % 3,
                        h.fromBufferAttribute(y, T),
                        d.push(h.x, h.y, h.z)
        }
        this.addAttribute("position", new N(d,3))
    }
    function qe(t, e, n) {
        S.call(this),
        this.type = "ParametricGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        },
        this.fromBufferGeometry(new Xe(t,e,n)),
        this.mergeVertices()
    }
    function Xe(t, e, n) {
        B.call(this),
        this.type = "ParametricBufferGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        };
        var r, i, o = [], a = [], c = [], l = [], u = new s, h = new s, d = new s, p = new s, f = new s, m = e + 1;
        for (r = 0; r <= n; r++) {
            var v = r / n;
            for (i = 0; i <= e; i++) {
                var g = i / e;
                t(g, v, h),
                a.push(h.x, h.y, h.z),
                g - 1e-5 >= 0 ? (t(g - 1e-5, v, d),
                p.subVectors(h, d)) : (t(g + 1e-5, v, d),
                p.subVectors(d, h)),
                v - 1e-5 >= 0 ? (t(g, v - 1e-5, d),
                f.subVectors(h, d)) : (t(g, v + 1e-5, d),
                f.subVectors(d, h)),
                u.crossVectors(p, f).normalize(),
                c.push(u.x, u.y, u.z),
                l.push(g, v)
            }
        }
        for (r = 0; r < n; r++)
            for (i = 0; i < e; i++) {
                var y = r * m + i
                  , _ = r * m + i + 1
                  , x = (r + 1) * m + i + 1
                  , b = (r + 1) * m + i;
                o.push(y, _, b),
                o.push(_, x, b)
            }
        this.setIndex(o),
        this.addAttribute("position", new N(a,3)),
        this.addAttribute("normal", new N(c,3)),
        this.addAttribute("uv", new N(l,2))
    }
    function Ye(t, e, n, r) {
        S.call(this),
        this.type = "PolyhedronGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: r
        },
        this.fromBufferGeometry(new $e(t,e,n,r)),
        this.mergeVertices()
    }
    function $e(t, e, n, r) {
        function o(t, e, n, r) {
            var i, o, a = Math.pow(2, r), s = [];
            for (i = 0; i <= a; i++) {
                s[i] = [];
                var l = t.clone().lerp(n, i / a)
                  , u = e.clone().lerp(n, i / a)
                  , h = a - i;
                for (o = 0; o <= h; o++)
                    s[i][o] = 0 === o && i === a ? l : l.clone().lerp(u, o / h)
            }
            for (i = 0; i < a; i++)
                for (o = 0; o < 2 * (a - i) - 1; o++) {
                    var d = Math.floor(o / 2);
                    o % 2 == 0 ? (c(s[i][d + 1]),
                    c(s[i + 1][d]),
                    c(s[i][d])) : (c(s[i][d + 1]),
                    c(s[i + 1][d + 1]),
                    c(s[i + 1][d]))
                }
        }
        function a() {
            for (var t = 0; t < m.length; t += 6) {
                var e = m[t + 0]
                  , n = m[t + 2]
                  , r = m[t + 4]
                  , i = Math.max(e, n, r)
                  , o = Math.min(e, n, r);
                i > .9 && o < .1 && (e < .2 && (m[t + 0] += 1),
                n < .2 && (m[t + 2] += 1),
                r < .2 && (m[t + 4] += 1))
            }
        }
        function c(t) {
            f.push(t.x, t.y, t.z)
        }
        function l(e, n) {
            var r = 3 * e;
            n.x = t[r + 0],
            n.y = t[r + 1],
            n.z = t[r + 2]
        }
        function u() {
            for (var t = new s, e = new s, n = new s, r = new s, o = new i, a = new i, c = new i, l = 0, u = 0; l < f.length; l += 9,
            u += 6) {
                t.set(f[l + 0], f[l + 1], f[l + 2]),
                e.set(f[l + 3], f[l + 4], f[l + 5]),
                n.set(f[l + 6], f[l + 7], f[l + 8]),
                o.set(m[u + 0], m[u + 1]),
                a.set(m[u + 2], m[u + 3]),
                c.set(m[u + 4], m[u + 5]),
                r.copy(t).add(e).add(n).divideScalar(3);
                var p = d(r);
                h(o, u + 0, t, p),
                h(a, u + 2, e, p),
                h(c, u + 4, n, p)
            }
        }
        function h(t, e, n, r) {
            r < 0 && 1 === t.x && (m[e] = t.x - 1),
            0 === n.x && 0 === n.z && (m[e] = r / 2 / Math.PI + .5)
        }
        function d(t) {
            return Math.atan2(t.z, -t.x)
        }
        function p(t) {
            return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
        }
        B.call(this),
        this.type = "PolyhedronBufferGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: r
        },
        n = n || 1,
        r = r || 0;
        var f = []
          , m = [];
        !function(t) {
            for (var n = new s, r = new s, i = new s, a = 0; a < e.length; a += 3)
                l(e[a + 0], n),
                l(e[a + 1], r),
                l(e[a + 2], i),
                o(n, r, i, t)
        }(r),
        function(t) {
            for (var e = new s, n = 0; n < f.length; n += 3)
                e.x = f[n + 0],
                e.y = f[n + 1],
                e.z = f[n + 2],
                e.normalize().multiplyScalar(t),
                f[n + 0] = e.x,
                f[n + 1] = e.y,
                f[n + 2] = e.z
        }(n),
        function() {
            for (var t = new s, e = 0; e < f.length; e += 3) {
                t.x = f[e + 0],
                t.y = f[e + 1],
                t.z = f[e + 2];
                var n = d(t) / 2 / Math.PI + .5
                  , r = p(t) / Math.PI + .5;
                m.push(n, 1 - r)
            }
            u(),
            a()
        }(),
        this.addAttribute("position", new N(f,3)),
        this.addAttribute("normal", new N(f.slice(),3)),
        this.addAttribute("uv", new N(m,2)),
        0 === r ? this.computeVertexNormals() : this.normalizeNormals()
    }
    function Ze(t, e) {
        S.call(this),
        this.type = "TetrahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new Je(t,e)),
        this.mergeVertices()
    }
    function Je(t, e) {
        var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
          , r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
        $e.call(this, n, r, t, e),
        this.type = "TetrahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function Qe(t, e) {
        S.call(this),
        this.type = "OctahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new Ke(t,e)),
        this.mergeVertices()
    }
    function Ke(t, e) {
        var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
          , r = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
        $e.call(this, n, r, t, e),
        this.type = "OctahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function tn(t, e) {
        S.call(this),
        this.type = "IcosahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new en(t,e)),
        this.mergeVertices()
    }
    function en(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1]
          , i = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
        $e.call(this, r, i, t, e),
        this.type = "IcosahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function nn(t, e) {
        S.call(this),
        this.type = "DodecahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new rn(t,e)),
        this.mergeVertices()
    }
    function rn(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = 1 / n
          , i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r]
          , o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
        $e.call(this, i, o, t, e),
        this.type = "DodecahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function on(t, e, n, r, i, o) {
        S.call(this),
        this.type = "TubeGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: r,
            closed: i
        },
        void 0 !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
        var a = new an(t,e,n,r,i);
        this.tangents = a.tangents,
        this.normals = a.normals,
        this.binormals = a.binormals,
        this.fromBufferGeometry(a),
        this.mergeVertices()
    }
    function an(t, e, n, r, o) {
        function a(i) {
            v = t.getPointAt(i / e, v);
            var o = u.normals[i]
              , a = u.binormals[i];
            for (d = 0; d <= r; d++) {
                var s = d / r * Math.PI * 2
                  , c = Math.sin(s)
                  , l = -Math.cos(s);
                f.x = l * o.x + c * a.x,
                f.y = l * o.y + c * a.y,
                f.z = l * o.z + c * a.z,
                f.normalize(),
                y.push(f.x, f.y, f.z),
                p.x = v.x + n * f.x,
                p.y = v.y + n * f.y,
                p.z = v.z + n * f.z,
                g.push(p.x, p.y, p.z)
            }
        }
        function c() {
            for (d = 1; d <= e; d++)
                for (h = 1; h <= r; h++) {
                    var t = (r + 1) * (d - 1) + (h - 1)
                      , n = (r + 1) * d + (h - 1)
                      , i = (r + 1) * d + h
                      , o = (r + 1) * (d - 1) + h;
                    x.push(t, n, o),
                    x.push(n, i, o)
                }
        }
        function l() {
            for (h = 0; h <= e; h++)
                for (d = 0; d <= r; d++)
                    m.x = h / e,
                    m.y = d / r,
                    _.push(m.x, m.y)
        }
        B.call(this),
        this.type = "TubeBufferGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: r,
            closed: o
        },
        e = e || 64,
        n = n || 1,
        r = r || 8,
        o = o || !1;
        var u = t.computeFrenetFrames(e, o);
        this.tangents = u.tangents,
        this.normals = u.normals,
        this.binormals = u.binormals;
        var h, d, p = new s, f = new s, m = new i, v = new s, g = [], y = [], _ = [], x = [];
        !function() {
            for (h = 0; h < e; h++)
                a(h);
            a(!1 === o ? e : 0),
            l(),
            c()
        }(),
        this.setIndex(x),
        this.addAttribute("position", new N(g,3)),
        this.addAttribute("normal", new N(y,3)),
        this.addAttribute("uv", new N(_,2))
    }
    function sn(t, e, n, r, i, o, a) {
        S.call(this),
        this.type = "TorusKnotGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: o
        },
        void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
        this.fromBufferGeometry(new cn(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function cn(t, e, n, r, i, o) {
        function a(t, e, n, r, i) {
            var o = Math.cos(t)
              , a = Math.sin(t)
              , s = n / e * t
              , c = Math.cos(s);
            i.x = r * (2 + c) * .5 * o,
            i.y = r * (2 + c) * a * .5,
            i.z = r * Math.sin(s) * .5
        }
        B.call(this),
        this.type = "TorusKnotBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: o
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 64,
        r = Math.floor(r) || 8,
        i = i || 2,
        o = o || 3;
        var c, l, u = [], h = [], d = [], p = [], f = new s, m = new s, v = new s, g = new s, y = new s, _ = new s, x = new s;
        for (c = 0; c <= n; ++c) {
            var b = c / n * i * Math.PI * 2;
            for (a(b, i, o, t, v),
            a(b + .01, i, o, t, g),
            _.subVectors(g, v),
            x.addVectors(g, v),
            y.crossVectors(_, x),
            x.crossVectors(y, _),
            y.normalize(),
            x.normalize(),
            l = 0; l <= r; ++l) {
                var w = l / r * Math.PI * 2
                  , M = -e * Math.cos(w)
                  , E = e * Math.sin(w);
                f.x = v.x + (M * x.x + E * y.x),
                f.y = v.y + (M * x.y + E * y.y),
                f.z = v.z + (M * x.z + E * y.z),
                h.push(f.x, f.y, f.z),
                m.subVectors(f, v).normalize(),
                d.push(m.x, m.y, m.z),
                p.push(c / n),
                p.push(l / r)
            }
        }
        for (l = 1; l <= n; l++)
            for (c = 1; c <= r; c++) {
                var T = (r + 1) * (l - 1) + (c - 1)
                  , S = (r + 1) * l + (c - 1)
                  , A = (r + 1) * l + c
                  , C = (r + 1) * (l - 1) + c;
                u.push(T, S, C),
                u.push(S, A, C)
            }
        this.setIndex(u),
        this.addAttribute("position", new N(h,3)),
        this.addAttribute("normal", new N(d,3)),
        this.addAttribute("uv", new N(p,2))
    }
    function ln(t, e, n, r, i) {
        S.call(this),
        this.type = "TorusGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        this.fromBufferGeometry(new un(t,e,n,r,i)),
        this.mergeVertices()
    }
    function un(t, e, n, r, i) {
        B.call(this),
        this.type = "TorusBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 8,
        r = Math.floor(r) || 6,
        i = i || 2 * Math.PI;
        var o, a, c = [], l = [], u = [], h = [], d = new s, p = new s, f = new s;
        for (o = 0; o <= n; o++)
            for (a = 0; a <= r; a++) {
                var m = a / r * i
                  , v = o / n * Math.PI * 2;
                p.x = (t + e * Math.cos(v)) * Math.cos(m),
                p.y = (t + e * Math.cos(v)) * Math.sin(m),
                p.z = e * Math.sin(v),
                l.push(p.x, p.y, p.z),
                d.x = t * Math.cos(m),
                d.y = t * Math.sin(m),
                f.subVectors(p, d).normalize(),
                u.push(f.x, f.y, f.z),
                h.push(a / r),
                h.push(o / n)
            }
        for (o = 1; o <= n; o++)
            for (a = 1; a <= r; a++) {
                var g = (r + 1) * o + a - 1
                  , y = (r + 1) * (o - 1) + a - 1
                  , _ = (r + 1) * (o - 1) + a
                  , x = (r + 1) * o + a;
                c.push(g, y, x),
                c.push(y, _, x)
            }
        this.setIndex(c),
        this.addAttribute("position", new N(l,3)),
        this.addAttribute("normal", new N(u,3)),
        this.addAttribute("uv", new N(h,2))
    }
    function hn(t, e, n, r, i) {
        var o, a;
        if (i === zn(t, e, n, r) > 0)
            for (o = e; o < n; o += r)
                a = Nn(o, t[o], t[o + 1], a);
        else
            for (o = n - r; o >= e; o -= r)
                a = Nn(o, t[o], t[o + 1], a);
        return a && Pn(a, a.next) && (kn(a),
        a = a.next),
        a
    }
    function dn(t, e) {
        if (!t)
            return t;
        e || (e = t);
        var n, r = t;
        do {
            if (n = !1,
            r.steiner || !Pn(r, r.next) && 0 !== Cn(r.prev, r, r.next))
                r = r.next;
            else {
                if (kn(r),
                (r = e = r.prev) === r.next)
                    break;
                n = !0
            }
        } while (n || r !== e);return e
    }
    function pn(t, e, n, r, i, o, a) {
        if (t) {
            !a && o && wn(t, r, i, o);
            for (var s, c, l = t; t.prev !== t.next; )
                if (s = t.prev,
                c = t.next,
                o ? mn(t, r, i, o) : fn(t))
                    e.push(s.i / n),
                    e.push(t.i / n),
                    e.push(c.i / n),
                    kn(t),
                    t = c.next,
                    l = c.next;
                else if ((t = c) === l) {
                    a ? 1 === a ? (t = vn(t, e, n),
                    pn(t, e, n, r, i, o, 2)) : 2 === a && gn(t, e, n, r, i, o) : pn(dn(t), e, n, r, i, o, 1);
                    break
                }
        }
    }
    function fn(t) {
        var e = t.prev
          , n = t
          , r = t.next;
        if (Cn(e, n, r) >= 0)
            return !1;
        for (var i = t.next.next; i !== t.prev; ) {
            if (Sn(e.x, e.y, n.x, n.y, r.x, r.y, i.x, i.y) && Cn(i.prev, i, i.next) >= 0)
                return !1;
            i = i.next
        }
        return !0
    }
    function mn(t, e, n, r) {
        var i = t.prev
          , o = t
          , a = t.next;
        if (Cn(i, o, a) >= 0)
            return !1;
        for (var s = i.x < o.x ? i.x < a.x ? i.x : a.x : o.x < a.x ? o.x : a.x, c = i.y < o.y ? i.y < a.y ? i.y : a.y : o.y < a.y ? o.y : a.y, l = i.x > o.x ? i.x > a.x ? i.x : a.x : o.x > a.x ? o.x : a.x, u = i.y > o.y ? i.y > a.y ? i.y : a.y : o.y > a.y ? o.y : a.y, h = En(s, c, e, n, r), d = En(l, u, e, n, r), p = t.nextZ; p && p.z <= d; ) {
            if (p !== t.prev && p !== t.next && Sn(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Cn(p.prev, p, p.next) >= 0)
                return !1;
            p = p.nextZ
        }
        for (p = t.prevZ; p && p.z >= h; ) {
            if (p !== t.prev && p !== t.next && Sn(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Cn(p.prev, p, p.next) >= 0)
                return !1;
            p = p.prevZ
        }
        return !0
    }
    function vn(t, e, n) {
        var r = t;
        do {
            var i = r.prev
              , o = r.next.next;
            !Pn(i, o) && Ln(i, r, r.next, o) && On(i, o) && On(o, i) && (e.push(i.i / n),
            e.push(r.i / n),
            e.push(o.i / n),
            kn(r),
            kn(r.next),
            r = t = o),
            r = r.next
        } while (r !== t);return r
    }
    function gn(t, e, n, r, i, o) {
        var a = t;
        do {
            for (var s = a.next.next; s !== a.prev; ) {
                if (a.i !== s.i && An(a, s)) {
                    var c = Dn(a, s);
                    return a = dn(a, a.next),
                    c = dn(c, c.next),
                    pn(a, e, n, r, i, o),
                    void pn(c, e, n, r, i, o)
                }
                s = s.next
            }
            a = a.next
        } while (a !== t)
    }
    function yn(t, e, n, r) {
        var i, o, a, s, c, l = [];
        for (i = 0,
        o = e.length; i < o; i++)
            a = e[i] * r,
            s = i < o - 1 ? e[i + 1] * r : t.length,
            c = hn(t, a, s, r, !1),
            c === c.next && (c.steiner = !0),
            l.push(Tn(c));
        for (l.sort(_n),
        i = 0; i < l.length; i++)
            xn(l[i], n),
            n = dn(n, n.next);
        return n
    }
    function _n(t, e) {
        return t.x - e.x
    }
    function xn(t, e) {
        if (e = bn(t, e)) {
            var n = Dn(e, t);
            dn(n, n.next)
        }
    }
    function bn(t, e) {
        var n, r = e, i = t.x, o = t.y, a = -1 / 0;
        do {
            if (o <= r.y && o >= r.next.y && r.next.y !== r.y) {
                var s = r.x + (o - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                if (s <= i && s > a) {
                    if (a = s,
                    s === i) {
                        if (o === r.y)
                            return r;
                        if (o === r.next.y)
                            return r.next
                    }
                    n = r.x < r.next.x ? r : r.next
                }
            }
            r = r.next
        } while (r !== e);if (!n)
            return null;
        if (i === a)
            return n.prev;
        var c, l = n, u = n.x, h = n.y, d = 1 / 0;
        for (r = n.next; r !== l; )
            i >= r.x && r.x >= u && i !== r.x && Sn(o < h ? i : a, o, u, h, o < h ? a : i, o, r.x, r.y) && ((c = Math.abs(o - r.y) / (i - r.x)) < d || c === d && r.x > n.x) && On(r, t) && (n = r,
            d = c),
            r = r.next;
        return n
    }
    function wn(t, e, n, r) {
        var i = t;
        do {
            null === i.z && (i.z = En(i.x, i.y, e, n, r)),
            i.prevZ = i.prev,
            i.nextZ = i.next,
            i = i.next
        } while (i !== t);i.prevZ.nextZ = null,
        i.prevZ = null,
        Mn(i)
    }
    function Mn(t) {
        var e, n, r, i, o, a, s, c, l = 1;
        do {
            for (n = t,
            t = null,
            o = null,
            a = 0; n; ) {
                for (a++,
                r = n,
                s = 0,
                e = 0; e < l && (s++,
                r = r.nextZ); e++)
                    ;
                for (c = l; s > 0 || c > 0 && r; )
                    0 !== s && (0 === c || !r || n.z <= r.z) ? (i = n,
                    n = n.nextZ,
                    s--) : (i = r,
                    r = r.nextZ,
                    c--),
                    o ? o.nextZ = i : t = i,
                    i.prevZ = o,
                    o = i;
                n = r
            }
            o.nextZ = null,
            l *= 2
        } while (a > 1);return t
    }
    function En(t, e, n, r, i) {
        return t = 32767 * (t - n) * i,
        e = 32767 * (e - r) * i,
        t = 16711935 & (t | t << 8),
        t = 252645135 & (t | t << 4),
        t = 858993459 & (t | t << 2),
        t = 1431655765 & (t | t << 1),
        e = 16711935 & (e | e << 8),
        e = 252645135 & (e | e << 4),
        e = 858993459 & (e | e << 2),
        e = 1431655765 & (e | e << 1),
        t | e << 1
    }
    function Tn(t) {
        var e = t
          , n = t;
        do {
            e.x < n.x && (n = e),
            e = e.next
        } while (e !== t);return n
    }
    function Sn(t, e, n, r, i, o, a, s) {
        return (i - a) * (e - s) - (t - a) * (o - s) >= 0 && (t - a) * (r - s) - (n - a) * (e - s) >= 0 && (n - a) * (o - s) - (i - a) * (r - s) >= 0
    }
    function An(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !Rn(t, e) && On(t, e) && On(e, t) && In(t, e)
    }
    function Cn(t, e, n) {
        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)
    }
    function Pn(t, e) {
        return t.x === e.x && t.y === e.y
    }
    function Ln(t, e, n, r) {
        return !!(Pn(t, e) && Pn(n, r) || Pn(t, r) && Pn(n, e)) || Cn(t, e, n) > 0 != Cn(t, e, r) > 0 && Cn(n, r, t) > 0 != Cn(n, r, e) > 0
    }
    function Rn(t, e) {
        var n = t;
        do {
            if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Ln(n, n.next, t, e))
                return !0;
            n = n.next
        } while (n !== t);return !1
    }
    function On(t, e) {
        return Cn(t.prev, t, t.next) < 0 ? Cn(t, e, t.next) >= 0 && Cn(t, t.prev, e) >= 0 : Cn(t, e, t.prev) < 0 || Cn(t, t.next, e) < 0
    }
    function In(t, e) {
        var n = t
          , r = !1
          , i = (t.x + e.x) / 2
          , o = (t.y + e.y) / 2;
        do {
            n.y > o != n.next.y > o && n.next.y !== n.y && i < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (r = !r),
            n = n.next
        } while (n !== t);return r
    }
    function Dn(t, e) {
        var n = new jn(t.i,t.x,t.y)
          , r = new jn(e.i,e.x,e.y)
          , i = t.next
          , o = e.prev;
        return t.next = e,
        e.prev = t,
        n.next = i,
        i.prev = n,
        r.next = n,
        n.prev = r,
        o.next = r,
        r.prev = o,
        r
    }
    function Nn(t, e, n, r) {
        var i = new jn(t,e,n);
        return r ? (i.next = r.next,
        i.prev = r,
        r.next.prev = i,
        r.next = i) : (i.prev = i,
        i.next = i),
        i
    }
    function kn(t) {
        t.next.prev = t.prev,
        t.prev.next = t.next,
        t.prevZ && (t.prevZ.nextZ = t.nextZ),
        t.nextZ && (t.nextZ.prevZ = t.prevZ)
    }
    function jn(t, e, n) {
        this.i = t,
        this.x = e,
        this.y = n,
        this.prev = null,
        this.next = null,
        this.z = null,
        this.prevZ = null,
        this.nextZ = null,
        this.steiner = !1
    }
    function zn(t, e, n, r) {
        for (var i = 0, o = e, a = n - r; o < n; o += r)
            i += (t[a] - t[o]) * (t[o + 1] + t[a + 1]),
            a = o;
        return i
    }
    function Bn(t) {
        var e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop()
    }
    function Un(t, e) {
        for (var n = 0; n < e.length; n++)
            t.push(e[n].x),
            t.push(e[n].y)
    }
    function Fn(t, e) {
        S.call(this),
        this.type = "ExtrudeGeometry",
        this.parameters = {
            shapes: t,
            options: e
        },
        this.fromBufferGeometry(new Hn(t,e)),
        this.mergeVertices()
    }
    function Hn(t, e) {
        void 0 !== t && (B.call(this),
        this.type = "ExtrudeBufferGeometry",
        t = Array.isArray(t) ? t : [t],
        this.addShapeList(t, e),
        this.computeVertexNormals())
    }
    function Gn(t, e) {
        S.call(this),
        this.type = "TextGeometry",
        this.parameters = {
            text: t,
            parameters: e
        },
        this.fromBufferGeometry(new Vn(t,e)),
        this.mergeVertices()
    }
    function Vn(t, e) {
        e = e || {};
        var n = e.font;
        if (!n || !n.isFont)
            return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
            new S;
        var r = n.generateShapes(t, e.size, e.curveSegments);
        e.amount = void 0 !== e.height ? e.height : 50,
        void 0 === e.bevelThickness && (e.bevelThickness = 10),
        void 0 === e.bevelSize && (e.bevelSize = 8),
        void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
        Hn.call(this, r, e),
        this.type = "TextBufferGeometry"
    }
    function Wn(t, e, n, r, i, o, a) {
        S.call(this),
        this.type = "SphereGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: o,
            thetaLength: a
        },
        this.fromBufferGeometry(new qn(t,e,n,r,i,o,a)),
        this.mergeVertices()
    }
    function qn(t, e, n, r, i, o, a) {
        B.call(this),
        this.type = "SphereBufferGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: o,
            thetaLength: a
        },
        t = t || 1,
        e = Math.max(3, Math.floor(e) || 8),
        n = Math.max(2, Math.floor(n) || 6),
        r = void 0 !== r ? r : 0,
        i = void 0 !== i ? i : 2 * Math.PI,
        o = void 0 !== o ? o : 0,
        a = void 0 !== a ? a : Math.PI;
        var c, l, u = o + a, h = 0, d = [], p = new s, f = new s, m = [], v = [], g = [], y = [];
        for (l = 0; l <= n; l++) {
            var _ = []
              , x = l / n;
            for (c = 0; c <= e; c++) {
                var b = c / e;
                p.x = -t * Math.cos(r + b * i) * Math.sin(o + x * a),
                p.y = t * Math.cos(o + x * a),
                p.z = t * Math.sin(r + b * i) * Math.sin(o + x * a),
                v.push(p.x, p.y, p.z),
                f.set(p.x, p.y, p.z).normalize(),
                g.push(f.x, f.y, f.z),
                y.push(b, 1 - x),
                _.push(h++)
            }
            d.push(_)
        }
        for (l = 0; l < n; l++)
            for (c = 0; c < e; c++) {
                var w = d[l][c + 1]
                  , M = d[l][c]
                  , E = d[l + 1][c]
                  , T = d[l + 1][c + 1];
                (0 !== l || o > 0) && m.push(w, M, T),
                (l !== n - 1 || u < Math.PI) && m.push(M, E, T)
            }
        this.setIndex(m),
        this.addAttribute("position", new N(v,3)),
        this.addAttribute("normal", new N(g,3)),
        this.addAttribute("uv", new N(y,2))
    }
    function Xn(t, e, n, r, i, o) {
        S.call(this),
        this.type = "RingGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: o
        },
        this.fromBufferGeometry(new Yn(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function Yn(t, e, n, r, o, a) {
        B.call(this),
        this.type = "RingBufferGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: o,
            thetaLength: a
        },
        t = t || .5,
        e = e || 1,
        o = void 0 !== o ? o : 0,
        a = void 0 !== a ? a : 2 * Math.PI,
        n = void 0 !== n ? Math.max(3, n) : 8,
        r = void 0 !== r ? Math.max(1, r) : 1;
        var c, l, u, h = [], d = [], p = [], f = [], m = t, v = (e - t) / r, g = new s, y = new i;
        for (l = 0; l <= r; l++) {
            for (u = 0; u <= n; u++)
                c = o + u / n * a,
                g.x = m * Math.cos(c),
                g.y = m * Math.sin(c),
                d.push(g.x, g.y, g.z),
                p.push(0, 0, 1),
                y.x = (g.x / e + 1) / 2,
                y.y = (g.y / e + 1) / 2,
                f.push(y.x, y.y);
            m += v
        }
        for (l = 0; l < r; l++) {
            var _ = l * (n + 1);
            for (u = 0; u < n; u++) {
                c = u + _;
                var x = c
                  , b = c + n + 1
                  , w = c + n + 2
                  , M = c + 1;
                h.push(x, b, M),
                h.push(b, w, M)
            }
        }
        this.setIndex(h),
        this.addAttribute("position", new N(d,3)),
        this.addAttribute("normal", new N(p,3)),
        this.addAttribute("uv", new N(f,2))
    }
    function $n(t, e, n, r) {
        S.call(this),
        this.type = "LatheGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: r
        },
        this.fromBufferGeometry(new Zn(t,e,n,r)),
        this.mergeVertices()
    }
    function Zn(t, e, n, r) {
        B.call(this),
        this.type = "LatheBufferGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: r
        },
        e = Math.floor(e) || 12,
        n = n || 0,
        r = r || 2 * Math.PI,
        r = Cc.clamp(r, 0, 2 * Math.PI);
        var o, a, c, l = [], u = [], h = [], d = 1 / e, p = new s, f = new i;
        for (a = 0; a <= e; a++) {
            var m = n + a * d * r
              , v = Math.sin(m)
              , g = Math.cos(m);
            for (c = 0; c <= t.length - 1; c++)
                p.x = t[c].x * v,
                p.y = t[c].y,
                p.z = t[c].x * g,
                u.push(p.x, p.y, p.z),
                f.x = a / e,
                f.y = c / (t.length - 1),
                h.push(f.x, f.y)
        }
        for (a = 0; a < e; a++)
            for (c = 0; c < t.length - 1; c++) {
                o = c + a * t.length;
                var y = o
                  , _ = o + t.length
                  , x = o + t.length + 1
                  , b = o + 1;
                l.push(y, _, b),
                l.push(_, x, b)
            }
        if (this.setIndex(l),
        this.addAttribute("position", new N(u,3)),
        this.addAttribute("uv", new N(h,2)),
        this.computeVertexNormals(),
        r === 2 * Math.PI) {
            var w = this.attributes.normal.array
              , M = new s
              , E = new s
              , T = new s;
            for (o = e * t.length * 3,
            a = 0,
            c = 0; a < t.length; a++,
            c += 3)
                M.x = w[c + 0],
                M.y = w[c + 1],
                M.z = w[c + 2],
                E.x = w[o + c + 0],
                E.y = w[o + c + 1],
                E.z = w[o + c + 2],
                T.addVectors(M, E).normalize(),
                w[c + 0] = w[o + c + 0] = T.x,
                w[c + 1] = w[o + c + 1] = T.y,
                w[c + 2] = w[o + c + 2] = T.z
        }
    }
    function Jn(t, e) {
        S.call(this),
        this.type = "ShapeGeometry",
        "object" == typeof e && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
        e = e.curveSegments),
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        this.fromBufferGeometry(new Qn(t,e)),
        this.mergeVertices()
    }
    function Qn(t, e) {
        function n(t) {
            var n, s, l, u = i.length / 3, h = t.extractPoints(e), d = h.shape, p = h.holes;
            if (!1 === $c.isClockWise(d))
                for (d = d.reverse(),
                n = 0,
                s = p.length; n < s; n++)
                    l = p[n],
                    !0 === $c.isClockWise(l) && (p[n] = l.reverse());
            var f = $c.triangulateShape(d, p);
            for (n = 0,
            s = p.length; n < s; n++)
                l = p[n],
                d = d.concat(l);
            for (n = 0,
            s = d.length; n < s; n++) {
                var m = d[n];
                i.push(m.x, m.y, 0),
                o.push(0, 0, 1),
                a.push(m.x, m.y)
            }
            for (n = 0,
            s = f.length; n < s; n++) {
                var v = f[n]
                  , g = v[0] + u
                  , y = v[1] + u
                  , _ = v[2] + u;
                r.push(g, y, _),
                c += 3
            }
        }
        B.call(this),
        this.type = "ShapeBufferGeometry",
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        e = e || 12;
        var r = []
          , i = []
          , o = []
          , a = []
          , s = 0
          , c = 0;
        if (!1 === Array.isArray(t))
            n(t);
        else
            for (var l = 0; l < t.length; l++)
                n(t[l]),
                this.addGroup(s, c, l),
                s += c,
                c = 0;
        this.setIndex(r),
        this.addAttribute("position", new N(i,3)),
        this.addAttribute("normal", new N(o,3)),
        this.addAttribute("uv", new N(a,2))
    }
    function Kn(t, e) {
        if (e.shapes = [],
        Array.isArray(t))
            for (var n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.shapes.push(i.uuid)
            }
        else
            e.shapes.push(t.uuid);
        return e
    }
    function tr(t, e) {
        B.call(this),
        this.type = "EdgesGeometry",
        this.parameters = {
            thresholdAngle: e
        },
        e = void 0 !== e ? e : 1;
        var n, r, i, o, a = [], s = Math.cos(Cc.DEG2RAD * e), c = [0, 0], l = {}, u = ["a", "b", "c"];
        t.isBufferGeometry ? (o = new S,
        o.fromBufferGeometry(t)) : o = t.clone(),
        o.mergeVertices(),
        o.computeFaceNormals();
        for (var h = o.vertices, d = o.faces, p = 0, f = d.length; p < f; p++)
            for (var m = d[p], v = 0; v < 3; v++)
                n = m[u[v]],
                r = m[u[(v + 1) % 3]],
                c[0] = Math.min(n, r),
                c[1] = Math.max(n, r),
                i = c[0] + "," + c[1],
                void 0 === l[i] ? l[i] = {
                    index1: c[0],
                    index2: c[1],
                    face1: p,
                    face2: void 0
                } : l[i].face2 = p;
        for (i in l) {
            var g = l[i];
            if (void 0 === g.face2 || d[g.face1].normal.dot(d[g.face2].normal) <= s) {
                var y = h[g.index1];
                a.push(y.x, y.y, y.z),
                y = h[g.index2],
                a.push(y.x, y.y, y.z)
            }
        }
        this.addAttribute("position", new N(a,3))
    }
    function er(t, e, n, r, i, o, a, s) {
        S.call(this),
        this.type = "CylinderGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: o,
            thetaStart: a,
            thetaLength: s
        },
        this.fromBufferGeometry(new nr(t,e,n,r,i,o,a,s)),
        this.mergeVertices()
    }
    function nr(t, e, n, r, o, a, c, l) {
        function u(n) {
            var o, a, u, g = new i, x = new s, b = 0, w = !0 === n ? t : e, M = !0 === n ? 1 : -1;
            for (a = v,
            o = 1; o <= r; o++)
                p.push(0, y * M, 0),
                f.push(0, M, 0),
                m.push(.5, .5),
                v++;
            for (u = v,
            o = 0; o <= r; o++) {
                var E = o / r
                  , T = E * l + c
                  , S = Math.cos(T)
                  , A = Math.sin(T);
                x.x = w * A,
                x.y = y * M,
                x.z = w * S,
                p.push(x.x, x.y, x.z),
                f.push(0, M, 0),
                g.x = .5 * S + .5,
                g.y = .5 * A * M + .5,
                m.push(g.x, g.y),
                v++
            }
            for (o = 0; o < r; o++) {
                var C = a + o
                  , P = u + o;
                !0 === n ? d.push(P, P + 1, C) : d.push(P + 1, P, C),
                b += 3
            }
            h.addGroup(_, b, !0 === n ? 1 : 2),
            _ += b
        }
        B.call(this),
        this.type = "CylinderBufferGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: r,
            heightSegments: o,
            openEnded: a,
            thetaStart: c,
            thetaLength: l
        };
        var h = this;
        t = void 0 !== t ? t : 1,
        e = void 0 !== e ? e : 1,
        n = n || 1,
        r = Math.floor(r) || 8,
        o = Math.floor(o) || 1,
        a = void 0 !== a && a,
        c = void 0 !== c ? c : 0,
        l = void 0 !== l ? l : 2 * Math.PI;
        var d = []
          , p = []
          , f = []
          , m = []
          , v = 0
          , g = []
          , y = n / 2
          , _ = 0;
        !function() {
            var i, a, u = new s, x = new s, b = 0, w = (e - t) / n;
            for (a = 0; a <= o; a++) {
                var M = []
                  , E = a / o
                  , T = E * (e - t) + t;
                for (i = 0; i <= r; i++) {
                    var S = i / r
                      , A = S * l + c
                      , C = Math.sin(A)
                      , P = Math.cos(A);
                    x.x = T * C,
                    x.y = -E * n + y,
                    x.z = T * P,
                    p.push(x.x, x.y, x.z),
                    u.set(C, w, P).normalize(),
                    f.push(u.x, u.y, u.z),
                    m.push(S, 1 - E),
                    M.push(v++)
                }
                g.push(M)
            }
            for (i = 0; i < r; i++)
                for (a = 0; a < o; a++) {
                    var L = g[a][i]
                      , R = g[a + 1][i]
                      , O = g[a + 1][i + 1]
                      , I = g[a][i + 1];
                    d.push(L, R, I),
                    d.push(R, O, I),
                    b += 6
                }
            h.addGroup(_, b, 0),
            _ += b
        }(),
        !1 === a && (t > 0 && u(!0),
        e > 0 && u(!1)),
        this.setIndex(d),
        this.addAttribute("position", new N(p,3)),
        this.addAttribute("normal", new N(f,3)),
        this.addAttribute("uv", new N(m,2))
    }
    function rr(t, e, n, r, i, o, a) {
        er.call(this, 0, t, e, n, r, i, o, a),
        this.type = "ConeGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: o,
            thetaLength: a
        }
    }
    function ir(t, e, n, r, i, o, a) {
        nr.call(this, 0, t, e, n, r, i, o, a),
        this.type = "ConeBufferGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: o,
            thetaLength: a
        }
    }
    function or(t, e, n, r) {
        S.call(this),
        this.type = "CircleGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: r
        },
        this.fromBufferGeometry(new ar(t,e,n,r)),
        this.mergeVertices()
    }
    function ar(t, e, n, r) {
        B.call(this),
        this.type = "CircleBufferGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: r
        },
        t = t || 1,
        e = void 0 !== e ? Math.max(3, e) : 8,
        n = void 0 !== n ? n : 0,
        r = void 0 !== r ? r : 2 * Math.PI;
        var o, a, c = [], l = [], u = [], h = [], d = new s, p = new i;
        for (l.push(0, 0, 0),
        u.push(0, 0, 1),
        h.push(.5, .5),
        a = 0,
        o = 3; a <= e; a++,
        o += 3) {
            var f = n + a / e * r;
            d.x = t * Math.cos(f),
            d.y = t * Math.sin(f),
            l.push(d.x, d.y, d.z),
            u.push(0, 0, 1),
            p.x = (l[o] / t + 1) / 2,
            p.y = (l[o + 1] / t + 1) / 2,
            h.push(p.x, p.y)
        }
        for (o = 1; o <= e; o++)
            c.push(o, o + 1, 0);
        this.setIndex(c),
        this.addAttribute("position", new N(l,3)),
        this.addAttribute("normal", new N(u,3)),
        this.addAttribute("uv", new N(h,2))
    }
    function sr(t) {
        V.call(this),
        this.type = "ShadowMaterial",
        this.color = new y(0),
        this.transparent = !0,
        this.setValues(t)
    }
    function cr(t) {
        q.call(this, t),
        this.type = "RawShaderMaterial"
    }
    function lr(t) {
        V.call(this),
        this.defines = {
            STANDARD: ""
        },
        this.type = "MeshStandardMaterial",
        this.color = new y(16777215),
        this.roughness = .5,
        this.metalness = .5,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.roughnessMap = null,
        this.metalnessMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.envMapIntensity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function ur(t) {
        lr.call(this),
        this.defines = {
            PHYSICAL: ""
        },
        this.type = "MeshPhysicalMaterial",
        this.reflectivity = .5,
        this.clearCoat = 0,
        this.clearCoatRoughness = 0,
        this.setValues(t)
    }
    function hr(t) {
        V.call(this),
        this.type = "MeshPhongMaterial",
        this.color = new y(16777215),
        this.specular = new y(1118481),
        this.shininess = 30,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = qa,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function dr(t) {
        hr.call(this),
        this.defines = {
            TOON: ""
        },
        this.type = "MeshToonMaterial",
        this.gradientMap = null,
        this.setValues(t)
    }
    function pr(t) {
        V.call(this),
        this.type = "MeshNormalMaterial",
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function fr(t) {
        V.call(this),
        this.type = "MeshLambertMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = qa,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function mr(t) {
        Ne.call(this),
        this.type = "LineDashedMaterial",
        this.scale = 1,
        this.dashSize = 3,
        this.gapSize = 1,
        this.setValues(t)
    }
    function vr(t, e, n) {
        var r = this
          , i = !1
          , o = 0
          , a = 0
          , s = void 0;
        this.onStart = void 0,
        this.onLoad = t,
        this.onProgress = e,
        this.onError = n,
        this.itemStart = function(t) {
            a++,
            !1 === i && void 0 !== r.onStart && r.onStart(t, o, a),
            i = !0
        }
        ,
        this.itemEnd = function(t) {
            o++,
            void 0 !== r.onProgress && r.onProgress(t, o, a),
            o === a && (i = !1,
            void 0 !== r.onLoad && r.onLoad())
        }
        ,
        this.itemError = function(t) {
            void 0 !== r.onError && r.onError(t)
        }
        ,
        this.resolveURL = function(t) {
            return s ? s(t) : t
        }
        ,
        this.setURLModifier = function(t) {
            return s = t,
            this
        }
    }
    function gr(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function yr(t) {
        this.manager = void 0 !== t ? t : Kc,
        this._parser = null
    }
    function _r(t) {
        this.manager = void 0 !== t ? t : Kc,
        this._parser = null
    }
    function xr(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function br(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function wr(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function Mr() {
        this.type = "Curve",
        this.arcLengthDivisions = 200
    }
    function Er(t, e, n, r, i, o, a, s) {
        Mr.call(this),
        this.type = "EllipseCurve",
        this.aX = t || 0,
        this.aY = e || 0,
        this.xRadius = n || 1,
        this.yRadius = r || 1,
        this.aStartAngle = i || 0,
        this.aEndAngle = o || 2 * Math.PI,
        this.aClockwise = a || !1,
        this.aRotation = s || 0
    }
    function Tr(t, e, n, r, i, o) {
        Er.call(this, t, e, n, n, r, i, o),
        this.type = "ArcCurve"
    }
    function Sr() {
        function t(t, o, a, s) {
            e = t,
            n = a,
            r = -3 * t + 3 * o - 2 * a - s,
            i = 2 * t - 2 * o + a + s
        }
        var e = 0
          , n = 0
          , r = 0
          , i = 0;
        return {
            initCatmullRom: function(e, n, r, i, o) {
                t(n, r, o * (r - e), o * (i - n))
            },
            initNonuniformCatmullRom: function(e, n, r, i, o, a, s) {
                var c = (n - e) / o - (r - e) / (o + a) + (r - n) / a
                  , l = (r - n) / a - (i - n) / (a + s) + (i - r) / s;
                c *= a,
                l *= a,
                t(n, r, c, l)
            },
            calc: function(t) {
                var o = t * t;
                return e + n * t + r * o + i * (o * t)
            }
        }
    }
    function Ar(t, e, n, r) {
        Mr.call(this),
        this.type = "CatmullRomCurve3",
        this.points = t || [],
        this.closed = e || !1,
        this.curveType = n || "centripetal",
        this.tension = r || .5
    }
    function Cr(t, e, n, r, i) {
        var o = .5 * (r - e)
          , a = .5 * (i - n)
          , s = t * t;
        return (2 * n - 2 * r + o + a) * (t * s) + (-3 * n + 3 * r - 2 * o - a) * s + o * t + n
    }
    function Pr(t, e) {
        var n = 1 - t;
        return n * n * e
    }
    function Lr(t, e) {
        return 2 * (1 - t) * t * e
    }
    function Rr(t, e) {
        return t * t * e
    }
    function Or(t, e, n, r) {
        return Pr(t, e) + Lr(t, n) + Rr(t, r)
    }
    function Ir(t, e) {
        var n = 1 - t;
        return n * n * n * e
    }
    function Dr(t, e) {
        var n = 1 - t;
        return 3 * n * n * t * e
    }
    function Nr(t, e) {
        return 3 * (1 - t) * t * t * e
    }
    function kr(t, e) {
        return t * t * t * e
    }
    function jr(t, e, n, r, i) {
        return Ir(t, e) + Dr(t, n) + Nr(t, r) + kr(t, i)
    }
    function zr(t, e, n, r) {
        Mr.call(this),
        this.type = "CubicBezierCurve",
        this.v0 = t || new i,
        this.v1 = e || new i,
        this.v2 = n || new i,
        this.v3 = r || new i
    }
    function Br(t, e, n, r) {
        Mr.call(this),
        this.type = "CubicBezierCurve3",
        this.v0 = t || new s,
        this.v1 = e || new s,
        this.v2 = n || new s,
        this.v3 = r || new s
    }
    function Ur(t, e) {
        Mr.call(this),
        this.type = "LineCurve",
        this.v1 = t || new i,
        this.v2 = e || new i
    }
    function Fr(t, e) {
        Mr.call(this),
        this.type = "LineCurve3",
        this.v1 = t || new s,
        this.v2 = e || new s
    }
    function Hr(t, e, n) {
        Mr.call(this),
        this.type = "QuadraticBezierCurve",
        this.v0 = t || new i,
        this.v1 = e || new i,
        this.v2 = n || new i
    }
    function Gr(t, e, n) {
        Mr.call(this),
        this.type = "QuadraticBezierCurve3",
        this.v0 = t || new s,
        this.v1 = e || new s,
        this.v2 = n || new s
    }
    function Vr(t) {
        Mr.call(this),
        this.type = "SplineCurve",
        this.points = t || []
    }
    function Wr() {
        Mr.call(this),
        this.type = "CurvePath",
        this.curves = [],
        this.autoClose = !1
    }
    function qr(t) {
        Wr.call(this),
        this.type = "Path",
        this.currentPoint = new i,
        t && this.setFromPoints(t)
    }
    function Xr(t) {
        qr.call(this, t),
        this.uuid = Cc.generateUUID(),
        this.type = "Shape",
        this.holes = []
    }
    function Yr(t, e) {
        w.call(this),
        this.type = "Light",
        this.color = new y(t),
        this.intensity = void 0 !== e ? e : 1,
        this.receiveShadow = void 0
    }
    function $r(t, e, n) {
        Yr.call(this, t, n),
        this.type = "HemisphereLight",
        this.castShadow = void 0,
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.groundColor = new y(e)
    }
    function Zr(t) {
        this.camera = t,
        this.bias = 0,
        this.radius = 1,
        this.mapSize = new i(512,512),
        this.map = null,
        this.matrix = new o
    }
    function Jr() {
        Zr.call(this, new we(50,1,.5,500))
    }
    function Qr(t, e, n, r, i, o) {
        Yr.call(this, t, e),
        this.type = "SpotLight",
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.target = new w,
        Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / Math.PI
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.angle = void 0 !== r ? r : Math.PI / 3,
        this.penumbra = void 0 !== i ? i : 0,
        this.decay = void 0 !== o ? o : 1,
        this.shadow = new Jr
    }
    function Kr(t, e, n, r) {
        Yr.call(this, t, e),
        this.type = "PointLight",
        Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / (4 * Math.PI)
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.decay = void 0 !== r ? r : 1,
        this.shadow = new Zr(new we(90,1,.5,500))
    }
    function ti() {
        Zr.call(this, new E(-5,5,5,-5,.5,500))
    }
    function ei(t, e) {
        Yr.call(this, t, e),
        this.type = "DirectionalLight",
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.target = new w,
        this.shadow = new ti
    }
    function ni(t, e) {
        Yr.call(this, t, e),
        this.type = "AmbientLight",
        this.castShadow = void 0
    }
    function ri(t, e, n, r) {
        Yr.call(this, t, e),
        this.type = "RectAreaLight",
        this.width = void 0 !== n ? n : 10,
        this.height = void 0 !== r ? r : 10
    }
    function ii(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function oi(t, e, n) {
        fi.call(this, t, e, n)
    }
    function ai(t, e, n, r) {
        this.parameterPositions = t,
        this._cachedIndex = 0,
        this.resultBuffer = void 0 !== r ? r : new e.constructor(n),
        this.sampleValues = e,
        this.valueSize = n
    }
    function si(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function ci(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function li(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function ui(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function hi(t, e, n, r) {
        ai.call(this, t, e, n, r),
        this._weightPrev = -0,
        this._offsetPrev = -0,
        this._weightNext = -0,
        this._offsetNext = -0
    }
    function di(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function pi(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function fi(t, e, n, r) {
        if (void 0 === t)
            throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === e || 0 === e.length)
            throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
        this.name = t,
        this.times = al.convertArray(e, this.TimeBufferType),
        this.values = al.convertArray(n, this.ValueBufferType),
        this.setInterpolation(r || this.DefaultInterpolation),
        this.validate(),
        this.optimize()
    }
    function mi(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function vi(t, e, n) {
        this.name = t,
        this.tracks = n,
        this.duration = void 0 !== e ? e : -1,
        this.uuid = Cc.generateUUID(),
        this.duration < 0 && this.resetDuration(),
        this.optimize()
    }
    function gi(t) {
        this.manager = void 0 !== t ? t : Kc,
        this.textures = {}
    }
    function yi(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function _i() {}
    function xi(t) {
        "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
        t = void 0),
        this.manager = void 0 !== t ? t : Kc,
        this.withCredentials = !1
    }
    function bi(t) {
        this.manager = void 0 !== t ? t : Kc,
        this.texturePath = ""
    }
    function wi(t) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
        "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
        this.manager = void 0 !== t ? t : Kc,
        this.options = void 0
    }
    function Mi() {
        this.type = "ShapePath",
        this.subPaths = [],
        this.currentPath = null
    }
    function Ei(t) {
        this.type = "Font",
        this.data = t
    }
    function Ti(t, e, n, r) {
        for (var i = String(t).split(""), o = e / r.resolution, a = (r.boundingBox.yMax - r.boundingBox.yMin + r.underlineThickness) * o, s = [], c = 0, l = 0, u = 0; u < i.length; u++) {
            var h = i[u];
            if ("\n" === h)
                c = 0,
                l -= a;
            else {
                var d = Si(h, n, o, c, l, r);
                c += d.offsetX,
                s.push(d.path)
            }
        }
        return s
    }
    function Si(t, e, n, r, i, o) {
        var a = o.glyphs[t] || o.glyphs["?"];
        if (a) {
            var s, c, l, u, h, d, p, f, m = new Mi;
            if (a.o)
                for (var v = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), g = 0, y = v.length; g < y; ) {
                    var _ = v[g++];
                    switch (_) {
                    case "m":
                        s = v[g++] * n + r,
                        c = v[g++] * n + i,
                        m.moveTo(s, c);
                        break;
                    case "l":
                        s = v[g++] * n + r,
                        c = v[g++] * n + i,
                        m.lineTo(s, c);
                        break;
                    case "q":
                        l = v[g++] * n + r,
                        u = v[g++] * n + i,
                        h = v[g++] * n + r,
                        d = v[g++] * n + i,
                        m.quadraticCurveTo(h, d, l, u);
                        break;
                    case "b":
                        l = v[g++] * n + r,
                        u = v[g++] * n + i,
                        h = v[g++] * n + r,
                        d = v[g++] * n + i,
                        p = v[g++] * n + r,
                        f = v[g++] * n + i,
                        m.bezierCurveTo(h, d, p, f, l, u)
                    }
                }
            return {
                offsetX: a.ha * n,
                path: m
            }
        }
    }
    function Ai(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function Ci(t) {
        this.manager = void 0 !== t ? t : Kc
    }
    function Pi() {
        this.type = "StereoCamera",
        this.aspect = 1,
        this.eyeSep = .064,
        this.cameraL = new we,
        this.cameraL.layers.enable(1),
        this.cameraL.matrixAutoUpdate = !1,
        this.cameraR = new we,
        this.cameraR.layers.enable(2),
        this.cameraR.matrixAutoUpdate = !1
    }
    function Li(t, e, n) {
        w.call(this),
        this.type = "CubeCamera";
        var r = new we(90,1,t,e);
        r.up.set(0, -1, 0),
        r.lookAt(new s(1,0,0)),
        this.add(r);
        var i = new we(90,1,t,e);
        i.up.set(0, -1, 0),
        i.lookAt(new s(-1,0,0)),
        this.add(i);
        var o = new we(90,1,t,e);
        o.up.set(0, 0, 1),
        o.lookAt(new s(0,1,0)),
        this.add(o);
        var a = new we(90,1,t,e);
        a.up.set(0, 0, -1),
        a.lookAt(new s(0,-1,0)),
        this.add(a);
        var c = new we(90,1,t,e);
        c.up.set(0, -1, 0),
        c.lookAt(new s(0,0,1)),
        this.add(c);
        var l = new we(90,1,t,e);
        l.up.set(0, -1, 0),
        l.lookAt(new s(0,0,-1)),
        this.add(l);
        var u = {
            format: Ls,
            magFilter: fs,
            minFilter: fs
        };
        this.renderTarget = new d(n,n,u),
        this.renderTarget.texture.name = "CubeCamera",
        this.update = function(t, e) {
            null === this.parent && this.updateMatrixWorld();
            var n = this.renderTarget
              , s = n.texture.generateMipmaps;
            n.texture.generateMipmaps = !1,
            n.activeCubeFace = 0,
            t.render(e, r, n),
            n.activeCubeFace = 1,
            t.render(e, i, n),
            n.activeCubeFace = 2,
            t.render(e, o, n),
            n.activeCubeFace = 3,
            t.render(e, a, n),
            n.activeCubeFace = 4,
            t.render(e, c, n),
            n.texture.generateMipmaps = s,
            n.activeCubeFace = 5,
            t.render(e, l, n),
            t.setRenderTarget(null)
        }
        ,
        this.clear = function(t, e, n, r) {
            for (var i = this.renderTarget, o = 0; o < 6; o++)
                i.activeCubeFace = o,
                t.setRenderTarget(i),
                t.clear(e, n, r);
            t.setRenderTarget(null)
        }
    }
    function Ri() {
        w.call(this),
        this.type = "AudioListener",
        this.context = pl.getContext(),
        this.gain = this.context.createGain(),
        this.gain.connect(this.context.destination),
        this.filter = null
    }
    function Oi(t) {
        w.call(this),
        this.type = "Audio",
        this.context = t.context,
        this.gain = this.context.createGain(),
        this.gain.connect(t.getInput()),
        this.autoplay = !1,
        this.buffer = null,
        this.loop = !1,
        this.startTime = 0,
        this.offset = 0,
        this.playbackRate = 1,
        this.isPlaying = !1,
        this.hasPlaybackControl = !0,
        this.sourceType = "empty",
        this.filters = []
    }
    function Ii(t) {
        Oi.call(this, t),
        this.panner = this.context.createPanner(),
        this.panner.connect(this.gain)
    }
    function Di(t, e) {
        this.analyser = t.context.createAnalyser(),
        this.analyser.fftSize = void 0 !== e ? e : 2048,
        this.data = new Uint8Array(this.analyser.frequencyBinCount),
        t.getOutput().connect(this.analyser)
    }
    function Ni(t, e, n) {
        this.binding = t,
        this.valueSize = n;
        var r, i = Float64Array;
        switch (e) {
        case "quaternion":
            r = this._slerp;
            break;
        case "string":
        case "bool":
            i = Array,
            r = this._select;
            break;
        default:
            r = this._lerp
        }
        this.buffer = new i(4 * n),
        this._mixBufferRegion = r,
        this.cumulativeWeight = 0,
        this.useCount = 0,
        this.referenceCount = 0
    }
    function ki(t, e, n) {
        var r = n || ji.parseTrackName(e);
        this._targetGroup = t,
        this._bindings = t.subscribe_(e, r)
    }
    function ji(t, e, n) {
        this.path = e,
        this.parsedPath = n || ji.parseTrackName(e),
        this.node = ji.findNode(t, this.parsedPath.nodeName) || t,
        this.rootNode = t
    }
    function zi() {
        this.uuid = Cc.generateUUID(),
        this._objects = Array.prototype.slice.call(arguments),
        this.nCachedObjects_ = 0;
        var t = {};
        this._indicesByUUID = t;
        for (var e = 0, n = arguments.length; e !== n; ++e)
            t[arguments[e].uuid] = e;
        this._paths = [],
        this._parsedPaths = [],
        this._bindings = [],
        this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects: {
                get total() {
                    return r._objects.length
                },
                get inUse() {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return r._bindings.length
            }
        }
    }
    function Bi(t, e, n) {
        this._mixer = t,
        this._clip = e,
        this._localRoot = n || null;
        for (var r = e.tracks, i = r.length, o = new Array(i), a = {
            endingStart: dc,
            endingEnd: dc
        }, s = 0; s !== i; ++s) {
            var c = r[s].createInterpolant(null);
            o[s] = c,
            c.settings = a
        }
        this._interpolantSettings = a,
        this._interpolants = o,
        this._propertyBindings = new Array(i),
        this._cacheIndex = null,
        this._byClipCacheIndex = null,
        this._timeScaleInterpolant = null,
        this._weightInterpolant = null,
        this.loop = sc,
        this._loopCount = -1,
        this._startTime = null,
        this.time = 0,
        this.timeScale = 1,
        this._effectiveTimeScale = 1,
        this.weight = 1,
        this._effectiveWeight = 1,
        this.repetitions = 1 / 0,
        this.paused = !1,
        this.enabled = !0,
        this.clampWhenFinished = !1,
        this.zeroSlopeAtStart = !0,
        this.zeroSlopeAtEnd = !0
    }
    function Ui(t) {
        this._root = t,
        this._initMemoryManager(),
        this._accuIndex = 0,
        this.time = 0,
        this.timeScale = 1
    }
    function Fi(t) {
        "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        t = arguments[1]),
        this.value = t
    }
    function Hi() {
        B.call(this),
        this.type = "InstancedBufferGeometry",
        this.maxInstancedCount = void 0
    }
    function Gi(t, e, n, r) {
        this.data = t,
        this.itemSize = e,
        this.offset = n,
        this.normalized = !0 === r
    }
    function Vi(t, e) {
        this.array = t,
        this.stride = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function Wi(t, e, n) {
        Vi.call(this, t, e),
        this.meshPerAttribute = n || 1
    }
    function qi(t, e, n) {
        A.call(this, t, e),
        this.meshPerAttribute = n || 1
    }
    function Xi(t, e, n, r) {
        this.ray = new X(t,e),
        this.near = n || 0,
        this.far = r || 1 / 0,
        this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    function Yi(t, e) {
        return t.distance - e.distance
    }
    function $i(t, e, n, r) {
        if (!1 !== t.visible && (t.raycast(e, n),
        !0 === r))
            for (var i = t.children, o = 0, a = i.length; o < a; o++)
                $i(i[o], e, n, !0)
    }
    function Zi(t) {
        this.autoStart = void 0 === t || t,
        this.startTime = 0,
        this.oldTime = 0,
        this.elapsedTime = 0,
        this.running = !1
    }
    function Ji(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.phi = void 0 !== e ? e : 0,
        this.theta = void 0 !== n ? n : 0,
        this
    }
    function Qi(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.theta = void 0 !== e ? e : 0,
        this.y = void 0 !== n ? n : 0,
        this
    }
    function Ki(t, e) {
        this.min = void 0 !== t ? t : new i(1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new i(-1 / 0,-1 / 0)
    }
    function to(t) {
        w.call(this),
        this.material = t,
        this.render = function() {}
    }
    function eo(t, e, n, r) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var i = void 0 !== n ? n : 16711680
          , o = void 0 !== r ? r : 1
          , a = 0
          , s = this.object.geometry;
        s && s.isGeometry ? a = 3 * s.faces.length : s && s.isBufferGeometry && (a = s.attributes.normal.count);
        var c = new B
          , l = new N(2 * a * 3,3);
        c.addAttribute("position", l),
        je.call(this, c, new Ne({
            color: i,
            linewidth: o
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function no(t, e) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = e;
        for (var n = new B, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, o = 1; i < 32; i++,
        o++) {
            var a = i / 32 * Math.PI * 2
              , s = o / 32 * Math.PI * 2;
            r.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1)
        }
        n.addAttribute("position", new N(r,3));
        var c = new Ne({
            fog: !1
        });
        this.cone = new je(n,c),
        this.add(this.cone),
        this.update()
    }
    function ro(t) {
        var e = [];
        t && t.isBone && e.push(t);
        for (var n = 0; n < t.children.length; n++)
            e.push.apply(e, ro(t.children[n]));
        return e
    }
    function io(t) {
        for (var e = ro(t), n = new B, r = [], i = [], o = new y(0,0,1), a = new y(0,1,0), s = 0; s < e.length; s++) {
            var c = e[s];
            c.parent && c.parent.isBone && (r.push(0, 0, 0),
            r.push(0, 0, 0),
            i.push(o.r, o.g, o.b),
            i.push(a.r, a.g, a.b))
        }
        n.addAttribute("position", new N(r,3)),
        n.addAttribute("color", new N(i,3));
        var l = new Ne({
            vertexColors: ma,
            depthTest: !1,
            depthWrite: !1,
            transparent: !0
        });
        je.call(this, n, l),
        this.root = t,
        this.bones = e,
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1
    }
    function oo(t, e, n) {
        this.light = t,
        this.light.updateMatrixWorld(),
        this.color = n;
        var r = new qn(e,4,2)
          , i = new W({
            wireframe: !0,
            fog: !1
        });
        Z.call(this, r, i),
        this.matrix = this.light.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ao(t, e) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = e;
        var n = new Ne({
            fog: !1
        })
          , r = new B;
        r.addAttribute("position", new A(new Float32Array(15),3)),
        this.line = new ke(r,n),
        this.add(this.line),
        this.update()
    }
    function so(t, e, n) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n;
        var r = new Ke(e);
        r.rotateY(.5 * Math.PI),
        this.material = new W({
            wireframe: !0,
            fog: !1
        }),
        void 0 === this.color && (this.material.vertexColors = ma);
        var i = r.getAttribute("position")
          , o = new Float32Array(3 * i.count);
        r.addAttribute("color", new A(o,3)),
        this.add(new Z(r,this.material)),
        this.update()
    }
    function co(t, e, n, r) {
        t = t || 10,
        e = e || 10,
        n = new y(void 0 !== n ? n : 4473924),
        r = new y(void 0 !== r ? r : 8947848);
        for (var i = e / 2, o = t / e, a = t / 2, s = [], c = [], l = 0, u = 0, h = -a; l <= e; l++,
        h += o) {
            s.push(-a, 0, h, a, 0, h),
            s.push(h, 0, -a, h, 0, a);
            var d = l === i ? n : r;
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3
        }
        var p = new B;
        p.addAttribute("position", new N(s,3)),
        p.addAttribute("color", new N(c,3));
        var f = new Ne({
            vertexColors: ma
        });
        je.call(this, p, f)
    }
    function lo(t, e, n, r, i, o) {
        t = t || 10,
        e = e || 16,
        n = n || 8,
        r = r || 64,
        i = new y(void 0 !== i ? i : 4473924),
        o = new y(void 0 !== o ? o : 8947848);
        var a, s, c, l, u, h, d, p = [], f = [];
        for (l = 0; l <= e; l++)
            c = l / e * (2 * Math.PI),
            a = Math.sin(c) * t,
            s = Math.cos(c) * t,
            p.push(0, 0, 0),
            p.push(a, 0, s),
            d = 1 & l ? i : o,
            f.push(d.r, d.g, d.b),
            f.push(d.r, d.g, d.b);
        for (l = 0; l <= n; l++)
            for (d = 1 & l ? i : o,
            h = t - t / n * l,
            u = 0; u < r; u++)
                c = u / r * (2 * Math.PI),
                a = Math.sin(c) * h,
                s = Math.cos(c) * h,
                p.push(a, 0, s),
                f.push(d.r, d.g, d.b),
                c = (u + 1) / r * (2 * Math.PI),
                a = Math.sin(c) * h,
                s = Math.cos(c) * h,
                p.push(a, 0, s),
                f.push(d.r, d.g, d.b);
        var m = new B;
        m.addAttribute("position", new N(p,3)),
        m.addAttribute("color", new N(f,3));
        var v = new Ne({
            vertexColors: ma
        });
        je.call(this, m, v)
    }
    function uo(t, e, n, r) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var i = void 0 !== n ? n : 16776960
          , o = void 0 !== r ? r : 1
          , a = 0
          , s = this.object.geometry;
        s && s.isGeometry ? a = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var c = new B
          , l = new N(2 * a * 3,3);
        c.addAttribute("position", l),
        je.call(this, c, new Ne({
            color: i,
            linewidth: o
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ho(t, e, n) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n,
        void 0 === e && (e = 1);
        var r = new B;
        r.addAttribute("position", new N([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3));
        var i = new Ne({
            fog: !1
        });
        this.lightPlane = new ke(r,i),
        this.add(this.lightPlane),
        r = new B,
        r.addAttribute("position", new N([0, 0, 0, 0, 0, 1],3)),
        this.targetLine = new ke(r,i),
        this.add(this.targetLine),
        this.update()
    }
    function po(t) {
        function e(t, e, r) {
            n(t, r),
            n(e, r)
        }
        function n(t, e) {
            o.push(0, 0, 0),
            a.push(e.r, e.g, e.b),
            void 0 === s[t] && (s[t] = []),
            s[t].push(o.length / 3 - 1)
        }
        var r = new B
          , i = new Ne({
            color: 16777215,
            vertexColors: fa
        })
          , o = []
          , a = []
          , s = {}
          , c = new y(16755200)
          , l = new y(16711680)
          , u = new y(43775)
          , h = new y(16777215)
          , d = new y(3355443);
        e("n1", "n2", c),
        e("n2", "n4", c),
        e("n4", "n3", c),
        e("n3", "n1", c),
        e("f1", "f2", c),
        e("f2", "f4", c),
        e("f4", "f3", c),
        e("f3", "f1", c),
        e("n1", "f1", c),
        e("n2", "f2", c),
        e("n3", "f3", c),
        e("n4", "f4", c),
        e("p", "n1", l),
        e("p", "n2", l),
        e("p", "n3", l),
        e("p", "n4", l),
        e("u1", "u2", u),
        e("u2", "u3", u),
        e("u3", "u1", u),
        e("c", "t", h),
        e("p", "c", d),
        e("cn1", "cn2", d),
        e("cn3", "cn4", d),
        e("cf1", "cf2", d),
        e("cf3", "cf4", d),
        r.addAttribute("position", new N(o,3)),
        r.addAttribute("color", new N(a,3)),
        je.call(this, r, i),
        this.camera = t,
        this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.pointMap = s,
        this.update()
    }
    function fo(t, e) {
        this.object = t,
        void 0 === e && (e = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new Float32Array(24)
          , i = new B;
        i.setIndex(new A(n,1)),
        i.addAttribute("position", new A(r,3)),
        je.call(this, i, new Ne({
            color: e
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function mo(t, e) {
        this.type = "Box3Helper",
        this.box = t;
        var n = void 0 !== e ? e : 16776960
          , r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , i = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1]
          , o = new B;
        o.setIndex(new A(r,1)),
        o.addAttribute("position", new N(i,3)),
        je.call(this, o, new Ne({
            color: n
        })),
        this.geometry.computeBoundingSphere()
    }
    function vo(t, e, n) {
        this.type = "PlaneHelper",
        this.plane = t,
        this.size = void 0 === e ? 1 : e;
        var r = void 0 !== n ? n : 16776960
          , i = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
          , o = new B;
        o.addAttribute("position", new N(i,3)),
        o.computeBoundingSphere(),
        ke.call(this, o, new Ne({
            color: r
        }));
        var a = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1]
          , s = new B;
        s.addAttribute("position", new N(a,3)),
        s.computeBoundingSphere(),
        this.add(new Z(s,new W({
            color: r,
            opacity: .2,
            transparent: !0,
            depthWrite: !1
        })))
    }
    function go(t, e, n, r, i, o) {
        w.call(this),
        void 0 === r && (r = 16776960),
        void 0 === n && (n = 1),
        void 0 === i && (i = .2 * n),
        void 0 === o && (o = .2 * i),
        void 0 === ml && (ml = new B,
        ml.addAttribute("position", new N([0, 0, 0, 0, 1, 0],3)),
        vl = new nr(0,.5,1,5,1),
        vl.translate(0, -.5, 0)),
        this.position.copy(e),
        this.line = new ke(ml,new Ne({
            color: r
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new Z(vl,new W({
            color: r
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(t),
        this.setLength(n, i, o)
    }
    function yo(t) {
        t = t || 1;
        var e = [0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]
          , n = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
          , r = new B;
        r.addAttribute("position", new N(e,3)),
        r.addAttribute("color", new N(n,3));
        var i = new Ne({
            vertexColors: ma
        });
        je.call(this, r, i)
    }
    function _o(t, e, n, r, i, o, a) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
        new T(t,e,n,i,o,a)
    }
    function xo(t) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
        t
    }
    function bo(t) {
        return void 0 === t && (t = []),
        console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
        t.isMultiMaterial = !0,
        t.materials = t,
        t.clone = function() {
            return t.slice()
        }
        ,
        t
    }
    function wo(t, e) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
        new Ue(t,e)
    }
    function Mo(t) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
        new Le(t)
    }
    function Eo(t, e) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
        new Ue(t,e)
    }
    function To(t) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
        new Be(t)
    }
    function So(t) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
        new Be(t)
    }
    function Ao(t) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
        new Be(t)
    }
    function Co(t, e, n) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
        new s(t,e,n)
    }
    function Po(t, e) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
        new A(t,e).setDynamic(!0)
    }
    function Lo(t, e) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
        new C(t,e)
    }
    function Ro(t, e) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
        new P(t,e)
    }
    function Oo(t, e) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
        new L(t,e)
    }
    function Io(t, e) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
        new R(t,e)
    }
    function Do(t, e) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
        new O(t,e)
    }
    function No(t, e) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
        new I(t,e)
    }
    function ko(t, e) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
        new D(t,e)
    }
    function jo(t, e) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
        new N(t,e)
    }
    function zo(t, e) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
        new k(t,e)
    }
    function Bo(t) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom",
        this.closed = !0
    }
    function Uo(t) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom"
    }
    function Fo(t) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom"
    }
    function Ho(t) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),
        new yo(t)
    }
    function Go(t, e) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
        new fo(t,e)
    }
    function Vo(t, e) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
        new je(new tr(t.geometry),new Ne({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function Wo(t, e) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
        new je(new We(t.geometry),new Ne({
            color: void 0 !== e ? e : 16777215
        }))
    }
    function qo(t) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
        new gr(t)
    }
    function Xo(t) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
        new _r(t)
    }
    function Yo() {
        console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
        this.projectVector = function(t, e) {
            console.warn("THREE.Projector: .projectVector() is now vector.project()."),
            t.project(e)
        }
        ,
        this.unprojectVector = function(t, e) {
            console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
            t.unproject(e)
        }
        ,
        this.pickingRay = function() {
            console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
        }
    }
    function $o() {
        console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
        this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
        this.clear = function() {}
        ,
        this.render = function() {}
        ,
        this.setClearColor = function() {}
        ,
        this.setSize = function() {}
    }
    function Zo() {
        console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    n.d(e, "WebGLRenderTargetCube", function() {
        return d
    }),
    n.d(e, "WebGLRenderTarget", function() {
        return h
    }),
    n.d(e, "WebGLRenderer", function() {
        return Te
    }),
    n.d(e, "ShaderLib", function() {
        return Dc
    }),
    n.d(e, "UniformsLib", function() {
        return Ic
    }),
    n.d(e, "UniformsUtils", function() {
        return Rc
    }),
    n.d(e, "ShaderChunk", function() {
        return Lc
    }),
    n.d(e, "FogExp2", function() {
        return Se
    }),
    n.d(e, "Fog", function() {
        return Ae
    }),
    n.d(e, "Scene", function() {
        return Ce
    }),
    n.d(e, "Sprite", function() {
        return Le
    }),
    n.d(e, "LOD", function() {
        return Re
    }),
    n.d(e, "SkinnedMesh", function() {
        return De
    }),
    n.d(e, "Skeleton", function() {
        return Oe
    }),
    n.d(e, "Bone", function() {
        return Ie
    }),
    n.d(e, "Mesh", function() {
        return Z
    }),
    n.d(e, "LineSegments", function() {
        return je
    }),
    n.d(e, "LineLoop", function() {
        return ze
    }),
    n.d(e, "Line", function() {
        return ke
    }),
    n.d(e, "Points", function() {
        return Ue
    }),
    n.d(e, "Group", function() {
        return Fe
    }),
    n.d(e, "VideoTexture", function() {
        return He
    }),
    n.d(e, "DataTexture", function() {
        return p
    }),
    n.d(e, "CompressedTexture", function() {
        return Ge
    }),
    n.d(e, "CubeTexture", function() {
        return ct
    }),
    n.d(e, "CanvasTexture", function() {
        return ge
    }),
    n.d(e, "DepthTexture", function() {
        return Ve
    }),
    n.d(e, "Texture", function() {
        return l
    }),
    n.d(e, "CompressedTextureLoader", function() {
        return yr
    }),
    n.d(e, "DataTextureLoader", function() {
        return _r
    }),
    n.d(e, "CubeTextureLoader", function() {
        return br
    }),
    n.d(e, "TextureLoader", function() {
        return wr
    }),
    n.d(e, "ObjectLoader", function() {
        return bi
    }),
    n.d(e, "MaterialLoader", function() {
        return gi
    }),
    n.d(e, "BufferGeometryLoader", function() {
        return yi
    }),
    n.d(e, "DefaultLoadingManager", function() {
        return Kc
    }),
    n.d(e, "LoadingManager", function() {
        return vr
    }),
    n.d(e, "JSONLoader", function() {
        return xi
    }),
    n.d(e, "ImageLoader", function() {
        return xr
    }),
    n.d(e, "ImageBitmapLoader", function() {
        return wi
    }),
    n.d(e, "FontLoader", function() {
        return Ai
    }),
    n.d(e, "FileLoader", function() {
        return gr
    }),
    n.d(e, "Loader", function() {
        return _i
    }),
    n.d(e, "LoaderUtils", function() {
        return cl
    }),
    n.d(e, "Cache", function() {
        return Qc
    }),
    n.d(e, "AudioLoader", function() {
        return Ci
    }),
    n.d(e, "SpotLightShadow", function() {
        return Jr
    }),
    n.d(e, "SpotLight", function() {
        return Qr
    }),
    n.d(e, "PointLight", function() {
        return Kr
    }),
    n.d(e, "RectAreaLight", function() {
        return ri
    }),
    n.d(e, "HemisphereLight", function() {
        return $r
    }),
    n.d(e, "DirectionalLightShadow", function() {
        return ti
    }),
    n.d(e, "DirectionalLight", function() {
        return ei
    }),
    n.d(e, "AmbientLight", function() {
        return ni
    }),
    n.d(e, "LightShadow", function() {
        return Zr
    }),
    n.d(e, "Light", function() {
        return Yr
    }),
    n.d(e, "StereoCamera", function() {
        return Pi
    }),
    n.d(e, "PerspectiveCamera", function() {
        return we
    }),
    n.d(e, "OrthographicCamera", function() {
        return E
    }),
    n.d(e, "CubeCamera", function() {
        return Li
    }),
    n.d(e, "ArrayCamera", function() {
        return Me
    }),
    n.d(e, "Camera", function() {
        return M
    }),
    n.d(e, "AudioListener", function() {
        return Ri
    }),
    n.d(e, "PositionalAudio", function() {
        return Ii
    }),
    n.d(e, "AudioContext", function() {
        return pl
    }),
    n.d(e, "AudioAnalyser", function() {
        return Di
    }),
    n.d(e, "Audio", function() {
        return Oi
    }),
    n.d(e, "VectorKeyframeTrack", function() {
        return mi
    }),
    n.d(e, "StringKeyframeTrack", function() {
        return ii
    }),
    n.d(e, "QuaternionKeyframeTrack", function() {
        return ci
    }),
    n.d(e, "NumberKeyframeTrack", function() {
        return ui
    }),
    n.d(e, "ColorKeyframeTrack", function() {
        return li
    }),
    n.d(e, "BooleanKeyframeTrack", function() {
        return oi
    }),
    n.d(e, "PropertyMixer", function() {
        return Ni
    }),
    n.d(e, "PropertyBinding", function() {
        return ji
    }),
    n.d(e, "KeyframeTrack", function() {
        return fi
    }),
    n.d(e, "AnimationUtils", function() {
        return al
    }),
    n.d(e, "AnimationObjectGroup", function() {
        return zi
    }),
    n.d(e, "AnimationMixer", function() {
        return Ui
    }),
    n.d(e, "AnimationClip", function() {
        return vi
    }),
    n.d(e, "Uniform", function() {
        return Fi
    }),
    n.d(e, "InstancedBufferGeometry", function() {
        return Hi
    }),
    n.d(e, "BufferGeometry", function() {
        return B
    }),
    n.d(e, "Geometry", function() {
        return S
    }),
    n.d(e, "InterleavedBufferAttribute", function() {
        return Gi
    }),
    n.d(e, "InstancedInterleavedBuffer", function() {
        return Wi
    }),
    n.d(e, "InterleavedBuffer", function() {
        return Vi
    }),
    n.d(e, "InstancedBufferAttribute", function() {
        return qi
    }),
    n.d(e, "Face3", function() {
        return T
    }),
    n.d(e, "Object3D", function() {
        return w
    }),
    n.d(e, "Raycaster", function() {
        return Xi
    }),
    n.d(e, "Layers", function() {
        return b
    }),
    n.d(e, "EventDispatcher", function() {
        return r
    }),
    n.d(e, "Clock", function() {
        return Zi
    }),
    n.d(e, "QuaternionLinearInterpolant", function() {
        return si
    }),
    n.d(e, "LinearInterpolant", function() {
        return di
    }),
    n.d(e, "DiscreteInterpolant", function() {
        return pi
    }),
    n.d(e, "CubicInterpolant", function() {
        return hi
    }),
    n.d(e, "Interpolant", function() {
        return ai
    }),
    n.d(e, "Triangle", function() {
        return $
    }),
    n.d(e, "Math", function() {
        return Cc
    }),
    n.d(e, "Spherical", function() {
        return Ji
    }),
    n.d(e, "Cylindrical", function() {
        return Qi
    }),
    n.d(e, "Plane", function() {
        return v
    }),
    n.d(e, "Frustum", function() {
        return g
    }),
    n.d(e, "Sphere", function() {
        return m
    }),
    n.d(e, "Ray", function() {
        return X
    }),
    n.d(e, "Matrix4", function() {
        return o
    }),
    n.d(e, "Matrix3", function() {
        return c
    }),
    n.d(e, "Box3", function() {
        return f
    }),
    n.d(e, "Box2", function() {
        return Ki
    }),
    n.d(e, "Line3", function() {
        return Y
    }),
    n.d(e, "Euler", function() {
        return x
    }),
    n.d(e, "Vector4", function() {
        return u
    }),
    n.d(e, "Vector3", function() {
        return s
    }),
    n.d(e, "Vector2", function() {
        return i
    }),
    n.d(e, "Quaternion", function() {
        return a
    }),
    n.d(e, "Color", function() {
        return y
    }),
    n.d(e, "ImmediateRenderObject", function() {
        return to
    }),
    n.d(e, "VertexNormalsHelper", function() {
        return eo
    }),
    n.d(e, "SpotLightHelper", function() {
        return no
    }),
    n.d(e, "SkeletonHelper", function() {
        return io
    }),
    n.d(e, "PointLightHelper", function() {
        return oo
    }),
    n.d(e, "RectAreaLightHelper", function() {
        return ao
    }),
    n.d(e, "HemisphereLightHelper", function() {
        return so
    }),
    n.d(e, "GridHelper", function() {
        return co
    }),
    n.d(e, "PolarGridHelper", function() {
        return lo
    }),
    n.d(e, "FaceNormalsHelper", function() {
        return uo
    }),
    n.d(e, "DirectionalLightHelper", function() {
        return ho
    }),
    n.d(e, "CameraHelper", function() {
        return po
    }),
    n.d(e, "BoxHelper", function() {
        return fo
    }),
    n.d(e, "Box3Helper", function() {
        return mo
    }),
    n.d(e, "PlaneHelper", function() {
        return vo
    }),
    n.d(e, "ArrowHelper", function() {
        return go
    }),
    n.d(e, "AxesHelper", function() {
        return yo
    }),
    n.d(e, "Shape", function() {
        return Xr
    }),
    n.d(e, "Path", function() {
        return qr
    }),
    n.d(e, "ShapePath", function() {
        return Mi
    }),
    n.d(e, "Font", function() {
        return Ei
    }),
    n.d(e, "CurvePath", function() {
        return Wr
    }),
    n.d(e, "Curve", function() {
        return Mr
    }),
    n.d(e, "ShapeUtils", function() {
        return $c
    }),
    n.d(e, "WebGLUtils", function() {
        return be
    }),
    n.d(e, "WireframeGeometry", function() {
        return We
    }),
    n.d(e, "ParametricGeometry", function() {
        return qe
    }),
    n.d(e, "ParametricBufferGeometry", function() {
        return Xe
    }),
    n.d(e, "TetrahedronGeometry", function() {
        return Ze
    }),
    n.d(e, "TetrahedronBufferGeometry", function() {
        return Je
    }),
    n.d(e, "OctahedronGeometry", function() {
        return Qe
    }),
    n.d(e, "OctahedronBufferGeometry", function() {
        return Ke
    }),
    n.d(e, "IcosahedronGeometry", function() {
        return tn
    }),
    n.d(e, "IcosahedronBufferGeometry", function() {
        return en
    }),
    n.d(e, "DodecahedronGeometry", function() {
        return nn
    }),
    n.d(e, "DodecahedronBufferGeometry", function() {
        return rn
    }),
    n.d(e, "PolyhedronGeometry", function() {
        return Ye
    }),
    n.d(e, "PolyhedronBufferGeometry", function() {
        return $e
    }),
    n.d(e, "TubeGeometry", function() {
        return on
    }),
    n.d(e, "TubeBufferGeometry", function() {
        return an
    }),
    n.d(e, "TorusKnotGeometry", function() {
        return sn
    }),
    n.d(e, "TorusKnotBufferGeometry", function() {
        return cn
    }),
    n.d(e, "TorusGeometry", function() {
        return ln
    }),
    n.d(e, "TorusBufferGeometry", function() {
        return un
    }),
    n.d(e, "TextGeometry", function() {
        return Gn
    }),
    n.d(e, "TextBufferGeometry", function() {
        return Vn
    }),
    n.d(e, "SphereGeometry", function() {
        return Wn
    }),
    n.d(e, "SphereBufferGeometry", function() {
        return qn
    }),
    n.d(e, "RingGeometry", function() {
        return Xn
    }),
    n.d(e, "RingBufferGeometry", function() {
        return Yn
    }),
    n.d(e, "PlaneGeometry", function() {
        return H
    }),
    n.d(e, "PlaneBufferGeometry", function() {
        return G
    }),
    n.d(e, "LatheGeometry", function() {
        return $n
    }),
    n.d(e, "LatheBufferGeometry", function() {
        return Zn
    }),
    n.d(e, "ShapeGeometry", function() {
        return Jn
    }),
    n.d(e, "ShapeBufferGeometry", function() {
        return Qn
    }),
    n.d(e, "ExtrudeGeometry", function() {
        return Fn
    }),
    n.d(e, "ExtrudeBufferGeometry", function() {
        return Hn
    }),
    n.d(e, "EdgesGeometry", function() {
        return tr
    }),
    n.d(e, "ConeGeometry", function() {
        return rr
    }),
    n.d(e, "ConeBufferGeometry", function() {
        return ir
    }),
    n.d(e, "CylinderGeometry", function() {
        return er
    }),
    n.d(e, "CylinderBufferGeometry", function() {
        return nr
    }),
    n.d(e, "CircleGeometry", function() {
        return or
    }),
    n.d(e, "CircleBufferGeometry", function() {
        return ar
    }),
    n.d(e, "BoxGeometry", function() {
        return U
    }),
    n.d(e, "BoxBufferGeometry", function() {
        return F
    }),
    n.d(e, "ShadowMaterial", function() {
        return sr
    }),
    n.d(e, "SpriteMaterial", function() {
        return Pe
    }),
    n.d(e, "RawShaderMaterial", function() {
        return cr
    }),
    n.d(e, "ShaderMaterial", function() {
        return q
    }),
    n.d(e, "PointsMaterial", function() {
        return Be
    }),
    n.d(e, "MeshPhysicalMaterial", function() {
        return ur
    }),
    n.d(e, "MeshStandardMaterial", function() {
        return lr
    }),
    n.d(e, "MeshPhongMaterial", function() {
        return hr
    }),
    n.d(e, "MeshToonMaterial", function() {
        return dr
    }),
    n.d(e, "MeshNormalMaterial", function() {
        return pr
    }),
    n.d(e, "MeshLambertMaterial", function() {
        return fr
    }),
    n.d(e, "MeshDepthMaterial", function() {
        return fe
    }),
    n.d(e, "MeshDistanceMaterial", function() {
        return me
    }),
    n.d(e, "MeshBasicMaterial", function() {
        return W
    });
    n.d(e, "LineDashedMaterial", function() {
        return mr
    }),
    n.d(e, "LineBasicMaterial", function() {
        return Ne
    }),
    n.d(e, "Material", function() {
        return V
    }),
    n.d(e, "Float64BufferAttribute", function() {
        return k
    }),
    n.d(e, "Float32BufferAttribute", function() {
        return N
    }),
    n.d(e, "Uint32BufferAttribute", function() {
        return D
    }),
    n.d(e, "Int32BufferAttribute", function() {
        return I
    }),
    n.d(e, "Uint16BufferAttribute", function() {
        return O
    }),
    n.d(e, "Int16BufferAttribute", function() {
        return R
    }),
    n.d(e, "Uint8ClampedBufferAttribute", function() {
        return L
    }),
    n.d(e, "Uint8BufferAttribute", function() {
        return P
    }),
    n.d(e, "Int8BufferAttribute", function() {
        return C
    }),
    n.d(e, "BufferAttribute", function() {
        return A
    }),
    n.d(e, "ArcCurve", function() {
        return Tr
    }),
    n.d(e, "CatmullRomCurve3", function() {
        return Ar
    }),
    n.d(e, "CubicBezierCurve", function() {
        return zr
    }),
    n.d(e, "CubicBezierCurve3", function() {
        return Br
    }),
    n.d(e, "EllipseCurve", function() {
        return Er
    }),
    n.d(e, "LineCurve", function() {
        return Ur
    }),
    n.d(e, "LineCurve3", function() {
        return Fr
    }),
    n.d(e, "QuadraticBezierCurve", function() {
        return Hr
    }),
    n.d(e, "QuadraticBezierCurve3", function() {
        return Gr
    }),
    n.d(e, "SplineCurve", function() {
        return Vr
    }),
    n.d(e, "REVISION", function() {
        return Jo
    }),
    n.d(e, "MOUSE", function() {
        return Qo
    }),
    n.d(e, "CullFaceNone", function() {
        return Ko
    }),
    n.d(e, "CullFaceBack", function() {
        return ta
    }),
    n.d(e, "CullFaceFront", function() {
        return ea
    }),
    n.d(e, "CullFaceFrontBack", function() {
        return na
    }),
    n.d(e, "FrontFaceDirectionCW", function() {
        return ra
    }),
    n.d(e, "FrontFaceDirectionCCW", function() {
        return ia
    }),
    n.d(e, "BasicShadowMap", function() {
        return oa
    }),
    n.d(e, "PCFShadowMap", function() {
        return aa
    }),
    n.d(e, "PCFSoftShadowMap", function() {
        return sa
    }),
    n.d(e, "FrontSide", function() {
        return ca
    }),
    n.d(e, "BackSide", function() {
        return la
    }),
    n.d(e, "DoubleSide", function() {
        return ua
    }),
    n.d(e, "FlatShading", function() {
        return ha
    }),
    n.d(e, "SmoothShading", function() {
        return da
    }),
    n.d(e, "NoColors", function() {
        return pa
    }),
    n.d(e, "FaceColors", function() {
        return fa
    }),
    n.d(e, "VertexColors", function() {
        return ma
    }),
    n.d(e, "NoBlending", function() {
        return va
    }),
    n.d(e, "NormalBlending", function() {
        return ga
    }),
    n.d(e, "AdditiveBlending", function() {
        return ya
    }),
    n.d(e, "SubtractiveBlending", function() {
        return _a
    }),
    n.d(e, "MultiplyBlending", function() {
        return xa
    }),
    n.d(e, "CustomBlending", function() {
        return ba
    }),
    n.d(e, "AddEquation", function() {
        return wa
    }),
    n.d(e, "SubtractEquation", function() {
        return Ma
    }),
    n.d(e, "ReverseSubtractEquation", function() {
        return Ea
    }),
    n.d(e, "MinEquation", function() {
        return Ta
    }),
    n.d(e, "MaxEquation", function() {
        return Sa
    }),
    n.d(e, "ZeroFactor", function() {
        return Aa
    }),
    n.d(e, "OneFactor", function() {
        return Ca
    }),
    n.d(e, "SrcColorFactor", function() {
        return Pa
    }),
    n.d(e, "OneMinusSrcColorFactor", function() {
        return La
    }),
    n.d(e, "SrcAlphaFactor", function() {
        return Ra
    }),
    n.d(e, "OneMinusSrcAlphaFactor", function() {
        return Oa
    }),
    n.d(e, "DstAlphaFactor", function() {
        return Ia
    }),
    n.d(e, "OneMinusDstAlphaFactor", function() {
        return Da
    }),
    n.d(e, "DstColorFactor", function() {
        return Na
    }),
    n.d(e, "OneMinusDstColorFactor", function() {
        return ka
    }),
    n.d(e, "SrcAlphaSaturateFactor", function() {
        return ja
    }),
    n.d(e, "NeverDepth", function() {
        return za
    }),
    n.d(e, "AlwaysDepth", function() {
        return Ba
    }),
    n.d(e, "LessDepth", function() {
        return Ua
    }),
    n.d(e, "LessEqualDepth", function() {
        return Fa
    }),
    n.d(e, "EqualDepth", function() {
        return Ha
    }),
    n.d(e, "GreaterEqualDepth", function() {
        return Ga
    }),
    n.d(e, "GreaterDepth", function() {
        return Va
    }),
    n.d(e, "NotEqualDepth", function() {
        return Wa
    }),
    n.d(e, "MultiplyOperation", function() {
        return qa
    }),
    n.d(e, "MixOperation", function() {
        return Xa
    }),
    n.d(e, "AddOperation", function() {
        return Ya
    }),
    n.d(e, "NoToneMapping", function() {
        return $a
    }),
    n.d(e, "LinearToneMapping", function() {
        return Za
    }),
    n.d(e, "ReinhardToneMapping", function() {
        return Ja
    }),
    n.d(e, "Uncharted2ToneMapping", function() {
        return Qa
    }),
    n.d(e, "CineonToneMapping", function() {
        return Ka
    }),
    n.d(e, "UVMapping", function() {
        return ts
    }),
    n.d(e, "CubeReflectionMapping", function() {
        return es
    }),
    n.d(e, "CubeRefractionMapping", function() {
        return ns
    }),
    n.d(e, "EquirectangularReflectionMapping", function() {
        return rs
    }),
    n.d(e, "EquirectangularRefractionMapping", function() {
        return is
    }),
    n.d(e, "SphericalReflectionMapping", function() {
        return os
    }),
    n.d(e, "CubeUVReflectionMapping", function() {
        return as
    }),
    n.d(e, "CubeUVRefractionMapping", function() {
        return ss
    }),
    n.d(e, "RepeatWrapping", function() {
        return cs
    }),
    n.d(e, "ClampToEdgeWrapping", function() {
        return ls
    }),
    n.d(e, "MirroredRepeatWrapping", function() {
        return us
    }),
    n.d(e, "NearestFilter", function() {
        return hs
    }),
    n.d(e, "NearestMipMapNearestFilter", function() {
        return ds
    }),
    n.d(e, "NearestMipMapLinearFilter", function() {
        return ps
    }),
    n.d(e, "LinearFilter", function() {
        return fs
    }),
    n.d(e, "LinearMipMapNearestFilter", function() {
        return ms
    }),
    n.d(e, "LinearMipMapLinearFilter", function() {
        return vs
    }),
    n.d(e, "UnsignedByteType", function() {
        return gs
    }),
    n.d(e, "ByteType", function() {
        return ys
    }),
    n.d(e, "ShortType", function() {
        return _s
    }),
    n.d(e, "UnsignedShortType", function() {
        return xs
    }),
    n.d(e, "IntType", function() {
        return bs
    }),
    n.d(e, "UnsignedIntType", function() {
        return ws
    }),
    n.d(e, "FloatType", function() {
        return Ms
    }),
    n.d(e, "HalfFloatType", function() {
        return Es
    }),
    n.d(e, "UnsignedShort4444Type", function() {
        return Ts
    }),
    n.d(e, "UnsignedShort5551Type", function() {
        return Ss
    }),
    n.d(e, "UnsignedShort565Type", function() {
        return As
    }),
    n.d(e, "UnsignedInt248Type", function() {
        return Cs
    }),
    n.d(e, "AlphaFormat", function() {
        return Ps
    }),
    n.d(e, "RGBFormat", function() {
        return Ls
    }),
    n.d(e, "RGBAFormat", function() {
        return Rs
    }),
    n.d(e, "LuminanceFormat", function() {
        return Os
    }),
    n.d(e, "LuminanceAlphaFormat", function() {
        return Is
    }),
    n.d(e, "RGBEFormat", function() {
        return Ds
    }),
    n.d(e, "DepthFormat", function() {
        return Ns
    }),
    n.d(e, "DepthStencilFormat", function() {
        return ks
    }),
    n.d(e, "RGB_S3TC_DXT1_Format", function() {
        return js
    }),
    n.d(e, "RGBA_S3TC_DXT1_Format", function() {
        return zs
    }),
    n.d(e, "RGBA_S3TC_DXT3_Format", function() {
        return Bs
    }),
    n.d(e, "RGBA_S3TC_DXT5_Format", function() {
        return Us
    }),
    n.d(e, "RGB_PVRTC_4BPPV1_Format", function() {
        return Fs
    }),
    n.d(e, "RGB_PVRTC_2BPPV1_Format", function() {
        return Hs
    }),
    n.d(e, "RGBA_PVRTC_4BPPV1_Format", function() {
        return Gs
    }),
    n.d(e, "RGBA_PVRTC_2BPPV1_Format", function() {
        return Vs
    }),
    n.d(e, "RGB_ETC1_Format", function() {
        return Ws
    }),
    n.d(e, "RGBA_ASTC_4x4_Format", function() {
        return qs
    }),
    n.d(e, "RGBA_ASTC_5x4_Format", function() {
        return Xs
    }),
    n.d(e, "RGBA_ASTC_5x5_Format", function() {
        return Ys
    }),
    n.d(e, "RGBA_ASTC_6x5_Format", function() {
        return $s
    }),
    n.d(e, "RGBA_ASTC_6x6_Format", function() {
        return Zs
    }),
    n.d(e, "RGBA_ASTC_8x5_Format", function() {
        return Js
    }),
    n.d(e, "RGBA_ASTC_8x6_Format", function() {
        return Qs
    }),
    n.d(e, "RGBA_ASTC_8x8_Format", function() {
        return Ks
    }),
    n.d(e, "RGBA_ASTC_10x5_Format", function() {
        return tc
    }),
    n.d(e, "RGBA_ASTC_10x6_Format", function() {
        return ec
    }),
    n.d(e, "RGBA_ASTC_10x8_Format", function() {
        return nc
    }),
    n.d(e, "RGBA_ASTC_10x10_Format", function() {
        return rc
    }),
    n.d(e, "RGBA_ASTC_12x10_Format", function() {
        return ic
    }),
    n.d(e, "RGBA_ASTC_12x12_Format", function() {
        return oc
    }),
    n.d(e, "LoopOnce", function() {
        return ac
    }),
    n.d(e, "LoopRepeat", function() {
        return sc
    }),
    n.d(e, "LoopPingPong", function() {
        return cc
    }),
    n.d(e, "InterpolateDiscrete", function() {
        return lc
    }),
    n.d(e, "InterpolateLinear", function() {
        return uc
    }),
    n.d(e, "InterpolateSmooth", function() {
        return hc
    }),
    n.d(e, "ZeroCurvatureEnding", function() {
        return dc
    }),
    n.d(e, "ZeroSlopeEnding", function() {
        return pc
    }),
    n.d(e, "WrapAroundEnding", function() {
        return fc
    }),
    n.d(e, "TrianglesDrawMode", function() {
        return mc
    }),
    n.d(e, "TriangleStripDrawMode", function() {
        return vc
    }),
    n.d(e, "TriangleFanDrawMode", function() {
        return gc
    }),
    n.d(e, "LinearEncoding", function() {
        return yc
    }),
    n.d(e, "sRGBEncoding", function() {
        return _c
    }),
    n.d(e, "GammaEncoding", function() {
        return xc
    }),
    n.d(e, "RGBEEncoding", function() {
        return bc
    }),
    n.d(e, "LogLuvEncoding", function() {
        return wc
    }),
    n.d(e, "RGBM7Encoding", function() {
        return Mc
    }),
    n.d(e, "RGBM16Encoding", function() {
        return Ec
    }),
    n.d(e, "RGBDEncoding", function() {
        return Tc
    }),
    n.d(e, "BasicDepthPacking", function() {
        return Sc
    }),
    n.d(e, "RGBADepthPacking", function() {
        return Ac
    }),
    n.d(e, "CubeGeometry", function() {
        return U
    }),
    n.d(e, "Face4", function() {
        return _o
    }),
    n.d(e, "LineStrip", function() {
        return gl
    }),
    n.d(e, "LinePieces", function() {
        return yl
    }),
    n.d(e, "MeshFaceMaterial", function() {
        return xo
    }),
    n.d(e, "MultiMaterial", function() {
        return bo
    }),
    n.d(e, "PointCloud", function() {
        return wo
    }),
    n.d(e, "Particle", function() {
        return Mo
    }),
    n.d(e, "ParticleSystem", function() {
        return Eo
    }),
    n.d(e, "PointCloudMaterial", function() {
        return To
    }),
    n.d(e, "ParticleBasicMaterial", function() {
        return So
    }),
    n.d(e, "ParticleSystemMaterial", function() {
        return Ao
    }),
    n.d(e, "Vertex", function() {
        return Co
    }),
    n.d(e, "DynamicBufferAttribute", function() {
        return Po
    }),
    n.d(e, "Int8Attribute", function() {
        return Lo
    }),
    n.d(e, "Uint8Attribute", function() {
        return Ro
    }),
    n.d(e, "Uint8ClampedAttribute", function() {
        return Oo
    }),
    n.d(e, "Int16Attribute", function() {
        return Io
    }),
    n.d(e, "Uint16Attribute", function() {
        return Do
    }),
    n.d(e, "Int32Attribute", function() {
        return No
    }),
    n.d(e, "Uint32Attribute", function() {
        return ko
    }),
    n.d(e, "Float32Attribute", function() {
        return jo
    }),
    n.d(e, "Float64Attribute", function() {
        return zo
    }),
    n.d(e, "ClosedSplineCurve3", function() {
        return Bo
    }),
    n.d(e, "SplineCurve3", function() {
        return Uo
    }),
    n.d(e, "Spline", function() {
        return Fo
    }),
    n.d(e, "AxisHelper", function() {
        return Ho
    }),
    n.d(e, "BoundingBoxHelper", function() {
        return Go
    }),
    n.d(e, "EdgesHelper", function() {
        return Vo
    }),
    n.d(e, "WireframeHelper", function() {
        return Wo
    }),
    n.d(e, "XHRLoader", function() {
        return qo
    }),
    n.d(e, "BinaryTextureLoader", function() {
        return Xo
    }),
    n.d(e, "GeometryUtils", function() {
        return _l
    }),
    n.d(e, "ImageUtils", function() {
        return xl
    }),
    n.d(e, "Projector", function() {
        return Yo
    }),
    n.d(e, "CanvasRenderer", function() {
        return $o
    }),
    n.d(e, "SceneUtils", function() {
        return bl
    }),
    n.d(e, "LensFlare", function() {
        return Zo
    });
    void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
    void 0 === Number.isInteger && (Number.isInteger = function(t) {
        return "number" == typeof t && isFinite(t) && Math.floor(t) === t
    }
    ),
    void 0 === Math.sign && (Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t
    }
    ),
    "name"in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }),
    void 0 === Object.assign && function() {
        Object.assign = function(t) {
            if (void 0 === t || null === t)
                throw new TypeError("Cannot convert undefined or null to object");
            for (var e = Object(t), n = 1; n < arguments.length; n++) {
                var r = arguments[n];
                if (void 0 !== r && null !== r)
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
            }
            return e
        }
    }(),
    Object.assign(r.prototype, {
        addEventListener: function(t, e) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[t] && (n[t] = []),
            -1 === n[t].indexOf(e) && n[t].push(e)
        },
        hasEventListener: function(t, e) {
            if (void 0 === this._listeners)
                return !1;
            var n = this._listeners;
            return void 0 !== n[t] && -1 !== n[t].indexOf(e)
        },
        removeEventListener: function(t, e) {
            if (void 0 !== this._listeners) {
                var n = this._listeners
                  , r = n[t];
                if (void 0 !== r) {
                    var i = r.indexOf(e);
                    -1 !== i && r.splice(i, 1)
                }
            }
        },
        dispatchEvent: function(t) {
            if (void 0 !== this._listeners) {
                var e = this._listeners
                  , n = e[t.type];
                if (void 0 !== n) {
                    t.target = this;
                    for (var r = n.slice(0), i = 0, o = r.length; i < o; i++)
                        r[i].call(this, t)
                }
            }
        }
    });
    var Jo = "91"
      , Qo = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2
    }
      , Ko = 0
      , ta = 1
      , ea = 2
      , na = 3
      , ra = 0
      , ia = 1
      , oa = 0
      , aa = 1
      , sa = 2
      , ca = 0
      , la = 1
      , ua = 2
      , ha = 1
      , da = 2
      , pa = 0
      , fa = 1
      , ma = 2
      , va = 0
      , ga = 1
      , ya = 2
      , _a = 3
      , xa = 4
      , ba = 5
      , wa = 100
      , Ma = 101
      , Ea = 102
      , Ta = 103
      , Sa = 104
      , Aa = 200
      , Ca = 201
      , Pa = 202
      , La = 203
      , Ra = 204
      , Oa = 205
      , Ia = 206
      , Da = 207
      , Na = 208
      , ka = 209
      , ja = 210
      , za = 0
      , Ba = 1
      , Ua = 2
      , Fa = 3
      , Ha = 4
      , Ga = 5
      , Va = 6
      , Wa = 7
      , qa = 0
      , Xa = 1
      , Ya = 2
      , $a = 0
      , Za = 1
      , Ja = 2
      , Qa = 3
      , Ka = 4
      , ts = 300
      , es = 301
      , ns = 302
      , rs = 303
      , is = 304
      , os = 305
      , as = 306
      , ss = 307
      , cs = 1e3
      , ls = 1001
      , us = 1002
      , hs = 1003
      , ds = 1004
      , ps = 1005
      , fs = 1006
      , ms = 1007
      , vs = 1008
      , gs = 1009
      , ys = 1010
      , _s = 1011
      , xs = 1012
      , bs = 1013
      , ws = 1014
      , Ms = 1015
      , Es = 1016
      , Ts = 1017
      , Ss = 1018
      , As = 1019
      , Cs = 1020
      , Ps = 1021
      , Ls = 1022
      , Rs = 1023
      , Os = 1024
      , Is = 1025
      , Ds = Rs
      , Ns = 1026
      , ks = 1027
      , js = 33776
      , zs = 33777
      , Bs = 33778
      , Us = 33779
      , Fs = 35840
      , Hs = 35841
      , Gs = 35842
      , Vs = 35843
      , Ws = 36196
      , qs = 37808
      , Xs = 37809
      , Ys = 37810
      , $s = 37811
      , Zs = 37812
      , Js = 37813
      , Qs = 37814
      , Ks = 37815
      , tc = 37816
      , ec = 37817
      , nc = 37818
      , rc = 37819
      , ic = 37820
      , oc = 37821
      , ac = 2200
      , sc = 2201
      , cc = 2202
      , lc = 2300
      , uc = 2301
      , hc = 2302
      , dc = 2400
      , pc = 2401
      , fc = 2402
      , mc = 0
      , vc = 1
      , gc = 2
      , yc = 3e3
      , _c = 3001
      , xc = 3007
      , bc = 3002
      , wc = 3003
      , Mc = 3004
      , Ec = 3005
      , Tc = 3006
      , Sc = 3200
      , Ac = 3201
      , Cc = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            for (var t = [], e = 0; e < 256; e++)
                t[e] = (e < 16 ? "0" : "") + e.toString(16).toUpperCase();
            return function() {
                var e = 4294967295 * Math.random() | 0
                  , n = 4294967295 * Math.random() | 0
                  , r = 4294967295 * Math.random() | 0
                  , i = 4294967295 * Math.random() | 0;
                return t[255 & e] + t[e >> 8 & 255] + t[e >> 16 & 255] + t[e >> 24 & 255] + "-" + t[255 & n] + t[n >> 8 & 255] + "-" + t[n >> 16 & 15 | 64] + t[n >> 24 & 255] + "-" + t[63 & r | 128] + t[r >> 8 & 255] + "-" + t[r >> 16 & 255] + t[r >> 24 & 255] + t[255 & i] + t[i >> 8 & 255] + t[i >> 16 & 255] + t[i >> 24 & 255]
            }
        }(),
        clamp: function(t, e, n) {
            return Math.max(e, Math.min(n, t))
        },
        euclideanModulo: function(t, e) {
            return (t % e + e) % e
        },
        mapLinear: function(t, e, n, r, i) {
            return r + (t - e) * (i - r) / (n - e)
        },
        lerp: function(t, e, n) {
            return (1 - n) * t + n * e
        },
        smoothstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t)
        },
        smootherstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10)
        },
        randInt: function(t, e) {
            return t + Math.floor(Math.random() * (e - t + 1))
        },
        randFloat: function(t, e) {
            return t + Math.random() * (e - t)
        },
        randFloatSpread: function(t) {
            return t * (.5 - Math.random())
        },
        degToRad: function(t) {
            return t * Cc.DEG2RAD
        },
        radToDeg: function(t) {
            return t * Cc.RAD2DEG
        },
        isPowerOfTwo: function(t) {
            return 0 == (t & t - 1) && 0 !== t
        },
        ceilPowerOfTwo: function(t) {
            return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2))
        },
        floorPowerOfTwo: function(t) {
            return Math.pow(2, Math.floor(Math.log(t) / Math.LN2))
        }
    };
    Object.defineProperties(i.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(t) {
                this.x = t
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(t) {
                this.y = t
            }
        }
    }),
    Object.assign(i.prototype, {
        isVector2: !0,
        set: function(t, e) {
            return this.x = t,
            this.y = e,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this
        },
        multiply: function(t) {
            return this.x *= t.x,
            this.y *= t.y,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , r = t.elements;
            return this.x = r[0] * e + r[3] * n + r[6],
            this.y = r[1] * e + r[4] * n + r[7],
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this
        },
        clampScalar: function() {
            var t = new i
              , e = new i;
            return function(n, r) {
                return t.set(n, n),
                e.set(r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            var t = Math.atan2(this.y, this.x);
            return t < 0 && (t += 2 * Math.PI),
            t
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y;
            return e * e + n * n
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this
        },
        rotateAround: function(t, e) {
            var n = Math.cos(e)
              , r = Math.sin(e)
              , i = this.x - t.x
              , o = this.y - t.y;
            return this.x = i * n - o * r + t.x,
            this.y = i * r + o * n + t.y,
            this
        }
    }),
    Object.assign(o.prototype, {
        isMatrix4: !0,
        set: function(t, e, n, r, i, o, a, s, c, l, u, h, d, p, f, m) {
            var v = this.elements;
            return v[0] = t,
            v[4] = e,
            v[8] = n,
            v[12] = r,
            v[1] = i,
            v[5] = o,
            v[9] = a,
            v[13] = s,
            v[2] = c,
            v[6] = l,
            v[10] = u,
            v[14] = h,
            v[3] = d,
            v[7] = p,
            v[11] = f,
            v[15] = m,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new o).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            e[9] = n[9],
            e[10] = n[10],
            e[11] = n[11],
            e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            e[15] = n[15],
            this
        },
        copyPosition: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            this
        },
        extractBasis: function(t, e, n) {
            return t.setFromMatrixColumn(this, 0),
            e.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        },
        makeBasis: function(t, e, n) {
            return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
            this
        },
        extractRotation: function() {
            var t = new s;
            return function(e) {
                var n = this.elements
                  , r = e.elements
                  , i = 1 / t.setFromMatrixColumn(e, 0).length()
                  , o = 1 / t.setFromMatrixColumn(e, 1).length()
                  , a = 1 / t.setFromMatrixColumn(e, 2).length();
                return n[0] = r[0] * i,
                n[1] = r[1] * i,
                n[2] = r[2] * i,
                n[4] = r[4] * o,
                n[5] = r[5] * o,
                n[6] = r[6] * o,
                n[8] = r[8] * a,
                n[9] = r[9] * a,
                n[10] = r[10] * a,
                this
            }
        }(),
        makeRotationFromEuler: function(t) {
            t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var e = this.elements
              , n = t.x
              , r = t.y
              , i = t.z
              , o = Math.cos(n)
              , a = Math.sin(n)
              , s = Math.cos(r)
              , c = Math.sin(r)
              , l = Math.cos(i)
              , u = Math.sin(i);
            if ("XYZ" === t.order) {
                var h = o * l
                  , d = o * u
                  , p = a * l
                  , f = a * u;
                e[0] = s * l,
                e[4] = -s * u,
                e[8] = c,
                e[1] = d + p * c,
                e[5] = h - f * c,
                e[9] = -a * s,
                e[2] = f - h * c,
                e[6] = p + d * c,
                e[10] = o * s
            } else if ("YXZ" === t.order) {
                var m = s * l
                  , v = s * u
                  , g = c * l
                  , y = c * u;
                e[0] = m + y * a,
                e[4] = g * a - v,
                e[8] = o * c,
                e[1] = o * u,
                e[5] = o * l,
                e[9] = -a,
                e[2] = v * a - g,
                e[6] = y + m * a,
                e[10] = o * s
            } else if ("ZXY" === t.order) {
                var m = s * l
                  , v = s * u
                  , g = c * l
                  , y = c * u;
                e[0] = m - y * a,
                e[4] = -o * u,
                e[8] = g + v * a,
                e[1] = v + g * a,
                e[5] = o * l,
                e[9] = y - m * a,
                e[2] = -o * c,
                e[6] = a,
                e[10] = o * s
            } else if ("ZYX" === t.order) {
                var h = o * l
                  , d = o * u
                  , p = a * l
                  , f = a * u;
                e[0] = s * l,
                e[4] = p * c - d,
                e[8] = h * c + f,
                e[1] = s * u,
                e[5] = f * c + h,
                e[9] = d * c - p,
                e[2] = -c,
                e[6] = a * s,
                e[10] = o * s
            } else if ("YZX" === t.order) {
                var _ = o * s
                  , x = o * c
                  , b = a * s
                  , w = a * c;
                e[0] = s * l,
                e[4] = w - _ * u,
                e[8] = b * u + x,
                e[1] = u,
                e[5] = o * l,
                e[9] = -a * l,
                e[2] = -c * l,
                e[6] = x * u + b,
                e[10] = _ - w * u
            } else if ("XZY" === t.order) {
                var _ = o * s
                  , x = o * c
                  , b = a * s
                  , w = a * c;
                e[0] = s * l,
                e[4] = -u,
                e[8] = c * l,
                e[1] = _ * u + w,
                e[5] = o * l,
                e[9] = x * u - b,
                e[2] = b * u - x,
                e[6] = a * l,
                e[10] = w * u + _
            }
            return e[3] = 0,
            e[7] = 0,
            e[11] = 0,
            e[12] = 0,
            e[13] = 0,
            e[14] = 0,
            e[15] = 1,
            this
        },
        makeRotationFromQuaternion: function(t) {
            var e = this.elements
              , n = t._x
              , r = t._y
              , i = t._z
              , o = t._w
              , a = n + n
              , s = r + r
              , c = i + i
              , l = n * a
              , u = n * s
              , h = n * c
              , d = r * s
              , p = r * c
              , f = i * c
              , m = o * a
              , v = o * s
              , g = o * c;
            return e[0] = 1 - (d + f),
            e[4] = u - g,
            e[8] = h + v,
            e[1] = u + g,
            e[5] = 1 - (l + f),
            e[9] = p - m,
            e[2] = h - v,
            e[6] = p + m,
            e[10] = 1 - (l + d),
            e[3] = 0,
            e[7] = 0,
            e[11] = 0,
            e[12] = 0,
            e[13] = 0,
            e[14] = 0,
            e[15] = 1,
            this
        },
        lookAt: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o) {
                var a = this.elements;
                return n.subVectors(r, i),
                0 === n.lengthSq() && (n.z = 1),
                n.normalize(),
                t.crossVectors(o, n),
                0 === t.lengthSq() && (1 === Math.abs(o.z) ? n.x += 1e-4 : n.z += 1e-4,
                n.normalize(),
                t.crossVectors(o, n)),
                t.normalize(),
                e.crossVectors(n, t),
                a[0] = t.x,
                a[4] = e.x,
                a[8] = n.x,
                a[1] = t.y,
                a[5] = e.y,
                a[9] = n.y,
                a[2] = t.z,
                a[6] = e.z,
                a[10] = n.z,
                this
            }
        }(),
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
            this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , r = e.elements
              , i = this.elements
              , o = n[0]
              , a = n[4]
              , s = n[8]
              , c = n[12]
              , l = n[1]
              , u = n[5]
              , h = n[9]
              , d = n[13]
              , p = n[2]
              , f = n[6]
              , m = n[10]
              , v = n[14]
              , g = n[3]
              , y = n[7]
              , _ = n[11]
              , x = n[15]
              , b = r[0]
              , w = r[4]
              , M = r[8]
              , E = r[12]
              , T = r[1]
              , S = r[5]
              , A = r[9]
              , C = r[13]
              , P = r[2]
              , L = r[6]
              , R = r[10]
              , O = r[14]
              , I = r[3]
              , D = r[7]
              , N = r[11]
              , k = r[15];
            return i[0] = o * b + a * T + s * P + c * I,
            i[4] = o * w + a * S + s * L + c * D,
            i[8] = o * M + a * A + s * R + c * N,
            i[12] = o * E + a * C + s * O + c * k,
            i[1] = l * b + u * T + h * P + d * I,
            i[5] = l * w + u * S + h * L + d * D,
            i[9] = l * M + u * A + h * R + d * N,
            i[13] = l * E + u * C + h * O + d * k,
            i[2] = p * b + f * T + m * P + v * I,
            i[6] = p * w + f * S + m * L + v * D,
            i[10] = p * M + f * A + m * R + v * N,
            i[14] = p * E + f * C + m * O + v * k,
            i[3] = g * b + y * T + _ * P + x * I,
            i[7] = g * w + y * S + _ * L + x * D,
            i[11] = g * M + y * A + _ * R + x * N,
            i[15] = g * E + y * C + _ * O + x * k,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[4] *= t,
            e[8] *= t,
            e[12] *= t,
            e[1] *= t,
            e[5] *= t,
            e[9] *= t,
            e[13] *= t,
            e[2] *= t,
            e[6] *= t,
            e[10] *= t,
            e[14] *= t,
            e[3] *= t,
            e[7] *= t,
            e[11] *= t,
            e[15] *= t,
            this
        },
        applyToBufferAttribute: function() {
            var t = new s;
            return function(e) {
                for (var n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix4(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[4]
              , r = t[8]
              , i = t[12]
              , o = t[1]
              , a = t[5]
              , s = t[9]
              , c = t[13]
              , l = t[2]
              , u = t[6]
              , h = t[10]
              , d = t[14];
            return t[3] * (+i * s * u - r * c * u - i * a * h + n * c * h + r * a * d - n * s * d) + t[7] * (+e * s * d - e * c * h + i * o * h - r * o * d + r * c * l - i * s * l) + t[11] * (+e * c * u - e * a * d - i * o * u + n * o * d + i * a * l - n * c * l) + t[15] * (-r * a * l - e * s * u + e * a * h + r * o * u - n * o * h + n * s * l)
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[4],
            e[4] = t,
            t = e[2],
            e[2] = e[8],
            e[8] = t,
            t = e[6],
            e[6] = e[9],
            e[9] = t,
            t = e[3],
            e[3] = e[12],
            e[12] = t,
            t = e[7],
            e[7] = e[13],
            e[13] = t,
            t = e[11],
            e[11] = e[14],
            e[14] = t,
            this
        },
        setPosition: function(t) {
            var e = this.elements;
            return e[12] = t.x,
            e[13] = t.y,
            e[14] = t.z,
            this
        },
        getInverse: function(t, e) {
            var n = this.elements
              , r = t.elements
              , i = r[0]
              , o = r[1]
              , a = r[2]
              , s = r[3]
              , c = r[4]
              , l = r[5]
              , u = r[6]
              , h = r[7]
              , d = r[8]
              , p = r[9]
              , f = r[10]
              , m = r[11]
              , v = r[12]
              , g = r[13]
              , y = r[14]
              , _ = r[15]
              , x = p * y * h - g * f * h + g * u * m - l * y * m - p * u * _ + l * f * _
              , b = v * f * h - d * y * h - v * u * m + c * y * m + d * u * _ - c * f * _
              , w = d * g * h - v * p * h + v * l * m - c * g * m - d * l * _ + c * p * _
              , M = v * p * u - d * g * u - v * l * f + c * g * f + d * l * y - c * p * y
              , E = i * x + o * b + a * w + s * M;
            if (0 === E) {
                var T = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(T);
                return console.warn(T),
                this.identity()
            }
            var S = 1 / E;
            return n[0] = x * S,
            n[1] = (g * f * s - p * y * s - g * a * m + o * y * m + p * a * _ - o * f * _) * S,
            n[2] = (l * y * s - g * u * s + g * a * h - o * y * h - l * a * _ + o * u * _) * S,
            n[3] = (p * u * s - l * f * s - p * a * h + o * f * h + l * a * m - o * u * m) * S,
            n[4] = b * S,
            n[5] = (d * y * s - v * f * s + v * a * m - i * y * m - d * a * _ + i * f * _) * S,
            n[6] = (v * u * s - c * y * s - v * a * h + i * y * h + c * a * _ - i * u * _) * S,
            n[7] = (c * f * s - d * u * s + d * a * h - i * f * h - c * a * m + i * u * m) * S,
            n[8] = w * S,
            n[9] = (v * p * s - d * g * s - v * o * m + i * g * m + d * o * _ - i * p * _) * S,
            n[10] = (c * g * s - v * l * s + v * o * h - i * g * h - c * o * _ + i * l * _) * S,
            n[11] = (d * l * s - c * p * s - d * o * h + i * p * h + c * o * m - i * l * m) * S,
            n[12] = M * S,
            n[13] = (d * g * a - v * p * a + v * o * f - i * g * f - d * o * y + i * p * y) * S,
            n[14] = (v * l * a - c * g * a - v * o * u + i * g * u + c * o * y - i * l * y) * S,
            n[15] = (c * p * a - d * l * a + d * o * u - i * p * u - c * o * f + i * l * f) * S,
            this
        },
        scale: function(t) {
            var e = this.elements
              , n = t.x
              , r = t.y
              , i = t.z;
            return e[0] *= n,
            e[4] *= r,
            e[8] *= i,
            e[1] *= n,
            e[5] *= r,
            e[9] *= i,
            e[2] *= n,
            e[6] *= r,
            e[10] *= i,
            e[3] *= n,
            e[7] *= r,
            e[11] *= i,
            this
        },
        getMaxScaleOnAxis: function() {
            var t = this.elements
              , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
              , n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
              , r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
            return Math.sqrt(Math.max(e, n, r))
        },
        makeTranslation: function(t, e, n) {
            return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
            this
        },
        makeRotationX: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationY: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationZ: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        makeRotationAxis: function(t, e) {
            var n = Math.cos(e)
              , r = Math.sin(e)
              , i = 1 - n
              , o = t.x
              , a = t.y
              , s = t.z
              , c = i * o
              , l = i * a;
            return this.set(c * o + n, c * a - r * s, c * s + r * a, 0, c * a + r * s, l * a + n, l * s - r * o, 0, c * s - r * a, l * s + r * o, i * s * s + n, 0, 0, 0, 0, 1),
            this
        },
        makeScale: function(t, e, n) {
            return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
            this
        },
        makeShear: function(t, e, n) {
            return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1),
            this
        },
        compose: function(t, e, n) {
            return this.makeRotationFromQuaternion(e),
            this.scale(n),
            this.setPosition(t),
            this
        },
        decompose: function() {
            var t = new s
              , e = new o;
            return function(n, r, i) {
                var o = this.elements
                  , a = t.set(o[0], o[1], o[2]).length()
                  , s = t.set(o[4], o[5], o[6]).length()
                  , c = t.set(o[8], o[9], o[10]).length();
                this.determinant() < 0 && (a = -a),
                n.x = o[12],
                n.y = o[13],
                n.z = o[14],
                e.copy(this);
                var l = 1 / a
                  , u = 1 / s
                  , h = 1 / c;
                return e.elements[0] *= l,
                e.elements[1] *= l,
                e.elements[2] *= l,
                e.elements[4] *= u,
                e.elements[5] *= u,
                e.elements[6] *= u,
                e.elements[8] *= h,
                e.elements[9] *= h,
                e.elements[10] *= h,
                r.setFromRotationMatrix(e),
                i.x = a,
                i.y = s,
                i.z = c,
                this
            }
        }(),
        makePerspective: function(t, e, n, r, i, o) {
            void 0 === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var a = this.elements
              , s = 2 * i / (e - t)
              , c = 2 * i / (n - r)
              , l = (e + t) / (e - t)
              , u = (n + r) / (n - r)
              , h = -(o + i) / (o - i)
              , d = -2 * o * i / (o - i);
            return a[0] = s,
            a[4] = 0,
            a[8] = l,
            a[12] = 0,
            a[1] = 0,
            a[5] = c,
            a[9] = u,
            a[13] = 0,
            a[2] = 0,
            a[6] = 0,
            a[10] = h,
            a[14] = d,
            a[3] = 0,
            a[7] = 0,
            a[11] = -1,
            a[15] = 0,
            this
        },
        makeOrthographic: function(t, e, n, r, i, o) {
            var a = this.elements
              , s = 1 / (e - t)
              , c = 1 / (n - r)
              , l = 1 / (o - i)
              , u = (e + t) * s
              , h = (n + r) * c
              , d = (o + i) * l;
            return a[0] = 2 * s,
            a[4] = 0,
            a[8] = 0,
            a[12] = -u,
            a[1] = 0,
            a[5] = 2 * c,
            a[9] = 0,
            a[13] = -h,
            a[2] = 0,
            a[6] = 0,
            a[10] = -2 * l,
            a[14] = -d,
            a[3] = 0,
            a[7] = 0,
            a[11] = 0,
            a[15] = 1,
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, r = 0; r < 16; r++)
                if (e[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 16; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t[e + 9] = n[9],
            t[e + 10] = n[10],
            t[e + 11] = n[11],
            t[e + 12] = n[12],
            t[e + 13] = n[13],
            t[e + 14] = n[14],
            t[e + 15] = n[15],
            t
        }
    }),
    Object.assign(a, {
        slerp: function(t, e, n, r) {
            return n.copy(t).slerp(e, r)
        },
        slerpFlat: function(t, e, n, r, i, o, a) {
            var s = n[r + 0]
              , c = n[r + 1]
              , l = n[r + 2]
              , u = n[r + 3]
              , h = i[o + 0]
              , d = i[o + 1]
              , p = i[o + 2]
              , f = i[o + 3];
            if (u !== f || s !== h || c !== d || l !== p) {
                var m = 1 - a
                  , v = s * h + c * d + l * p + u * f
                  , g = v >= 0 ? 1 : -1
                  , y = 1 - v * v;
                if (y > Number.EPSILON) {
                    var _ = Math.sqrt(y)
                      , x = Math.atan2(_, v * g);
                    m = Math.sin(m * x) / _,
                    a = Math.sin(a * x) / _
                }
                var b = a * g;
                if (s = s * m + h * b,
                c = c * m + d * b,
                l = l * m + p * b,
                u = u * m + f * b,
                m === 1 - a) {
                    var w = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
                    s *= w,
                    c *= w,
                    l *= w,
                    u *= w
                }
            }
            t[e] = s,
            t[e + 1] = c,
            t[e + 2] = l,
            t[e + 3] = u
        }
    }),
    Object.defineProperties(a.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(t) {
                this._w = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(a.prototype, {
        set: function(t, e, n, r) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._w = r,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._w)
        },
        copy: function(t) {
            return this._x = t.x,
            this._y = t.y,
            this._z = t.z,
            this._w = t.w,
            this.onChangeCallback(),
            this
        },
        setFromEuler: function(t, e) {
            if (!t || !t.isEuler)
                throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var n = t._x
              , r = t._y
              , i = t._z
              , o = t.order
              , a = Math.cos
              , s = Math.sin
              , c = a(n / 2)
              , l = a(r / 2)
              , u = a(i / 2)
              , h = s(n / 2)
              , d = s(r / 2)
              , p = s(i / 2);
            return "XYZ" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u - h * d * p) : "YXZ" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u + h * d * p) : "ZXY" === o ? (this._x = h * l * u - c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u - h * d * p) : "ZYX" === o ? (this._x = h * l * u - c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u + h * d * p) : "YZX" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u - h * d * p) : "XZY" === o && (this._x = h * l * u - c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u + h * d * p),
            !1 !== e && this.onChangeCallback(),
            this
        },
        setFromAxisAngle: function(t, e) {
            var n = e / 2
              , r = Math.sin(n);
            return this._x = t.x * r,
            this._y = t.y * r,
            this._z = t.z * r,
            this._w = Math.cos(n),
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t) {
            var e, n = t.elements, r = n[0], i = n[4], o = n[8], a = n[1], s = n[5], c = n[9], l = n[2], u = n[6], h = n[10], d = r + s + h;
            return d > 0 ? (e = .5 / Math.sqrt(d + 1),
            this._w = .25 / e,
            this._x = (u - c) * e,
            this._y = (o - l) * e,
            this._z = (a - i) * e) : r > s && r > h ? (e = 2 * Math.sqrt(1 + r - s - h),
            this._w = (u - c) / e,
            this._x = .25 * e,
            this._y = (i + a) / e,
            this._z = (o + l) / e) : s > h ? (e = 2 * Math.sqrt(1 + s - r - h),
            this._w = (o - l) / e,
            this._x = (i + a) / e,
            this._y = .25 * e,
            this._z = (c + u) / e) : (e = 2 * Math.sqrt(1 + h - r - s),
            this._w = (a - i) / e,
            this._x = (o + l) / e,
            this._y = (c + u) / e,
            this._z = .25 * e),
            this.onChangeCallback(),
            this
        },
        setFromUnitVectors: function() {
            var t, e = new s;
            return function(n, r) {
                return void 0 === e && (e = new s),
                t = n.dot(r) + 1,
                t < 1e-6 ? (t = 0,
                Math.abs(n.x) > Math.abs(n.z) ? e.set(-n.y, n.x, 0) : e.set(0, -n.z, n.y)) : e.crossVectors(n, r),
                this._x = e.x,
                this._y = e.y,
                this._z = e.z,
                this._w = t,
                this.normalize()
            }
        }(),
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1,
            this._y *= -1,
            this._z *= -1,
            this.onChangeCallback(),
            this
        },
        dot: function(t) {
            return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var t = this.length();
            return 0 === t ? (this._x = 0,
            this._y = 0,
            this._z = 0,
            this._w = 1) : (t = 1 / t,
            this._x = this._x * t,
            this._y = this._y * t,
            this._z = this._z * t,
            this._w = this._w * t),
            this.onChangeCallback(),
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
            this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
        },
        premultiply: function(t) {
            return this.multiplyQuaternions(t, this)
        },
        multiplyQuaternions: function(t, e) {
            var n = t._x
              , r = t._y
              , i = t._z
              , o = t._w
              , a = e._x
              , s = e._y
              , c = e._z
              , l = e._w;
            return this._x = n * l + o * a + r * c - i * s,
            this._y = r * l + o * s + i * a - n * c,
            this._z = i * l + o * c + n * s - r * a,
            this._w = o * l - n * a - r * s - i * c,
            this.onChangeCallback(),
            this
        },
        slerp: function(t, e) {
            if (0 === e)
                return this;
            if (1 === e)
                return this.copy(t);
            var n = this._x
              , r = this._y
              , i = this._z
              , o = this._w
              , a = o * t._w + n * t._x + r * t._y + i * t._z;
            if (a < 0 ? (this._w = -t._w,
            this._x = -t._x,
            this._y = -t._y,
            this._z = -t._z,
            a = -a) : this.copy(t),
            a >= 1)
                return this._w = o,
                this._x = n,
                this._y = r,
                this._z = i,
                this;
            var s = Math.sqrt(1 - a * a);
            if (Math.abs(s) < .001)
                return this._w = .5 * (o + this._w),
                this._x = .5 * (n + this._x),
                this._y = .5 * (r + this._y),
                this._z = .5 * (i + this._z),
                this;
            var c = Math.atan2(s, a)
              , l = Math.sin((1 - e) * c) / s
              , u = Math.sin(e * c) / s;
            return this._w = o * l + this._w * u,
            this._x = n * l + this._x * u,
            this._y = r * l + this._y * u,
            this._z = i * l + this._z * u,
            this.onChangeCallback(),
            this
        },
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this._x = t[e],
            this._y = t[e + 1],
            this._z = t[e + 2],
            this._w = t[e + 3],
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._w,
            t
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(s.prototype, {
        isVector3: !0,
        set: function(t, e, n) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
            this.multiplyVectors(t, e)) : (this.x *= t.x,
            this.y *= t.y,
            this.z *= t.z,
            this)
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this
        },
        multiplyVectors: function(t, e) {
            return this.x = t.x * e.x,
            this.y = t.y * e.y,
            this.z = t.z * e.z,
            this
        },
        applyEuler: function() {
            var t = new a;
            return function(e) {
                return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                this.applyQuaternion(t.setFromEuler(e))
            }
        }(),
        applyAxisAngle: function() {
            var t = new a;
            return function(e, n) {
                return this.applyQuaternion(t.setFromAxisAngle(e, n))
            }
        }(),
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements;
            return this.x = i[0] * e + i[3] * n + i[6] * r,
            this.y = i[1] * e + i[4] * n + i[7] * r,
            this.z = i[2] * e + i[5] * n + i[8] * r,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements
              , o = 1 / (i[3] * e + i[7] * n + i[11] * r + i[15]);
            return this.x = (i[0] * e + i[4] * n + i[8] * r + i[12]) * o,
            this.y = (i[1] * e + i[5] * n + i[9] * r + i[13]) * o,
            this.z = (i[2] * e + i[6] * n + i[10] * r + i[14]) * o,
            this
        },
        applyQuaternion: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.x
              , o = t.y
              , a = t.z
              , s = t.w
              , c = s * e + o * r - a * n
              , l = s * n + a * e - i * r
              , u = s * r + i * n - o * e
              , h = -i * e - o * n - a * r;
            return this.x = c * s + h * -i + l * -a - u * -o,
            this.y = l * s + h * -o + u * -i - c * -a,
            this.z = u * s + h * -a + c * -o - l * -i,
            this
        },
        project: function() {
            var t = new o;
            return function(e) {
                return t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                this.applyMatrix4(t)
            }
        }(),
        unproject: function() {
            var t = new o;
            return function(e) {
                return t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                this.applyMatrix4(t)
            }
        }(),
        transformDirection: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements;
            return this.x = i[0] * e + i[4] * n + i[8] * r,
            this.y = i[1] * e + i[5] * n + i[9] * r,
            this.z = i[2] * e + i[6] * n + i[10] * r,
            this.normalize()
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this.z /= t.z,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this
        },
        clampScalar: function() {
            var t = new s
              , e = new s;
            return function(n, r) {
                return t.set(n, n, n),
                e.set(r, r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        cross: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(t, e)) : this.crossVectors(this, t)
        },
        crossVectors: function(t, e) {
            var n = t.x
              , r = t.y
              , i = t.z
              , o = e.x
              , a = e.y
              , s = e.z;
            return this.x = r * s - i * a,
            this.y = i * o - n * s,
            this.z = n * a - r * o,
            this
        },
        projectOnVector: function(t) {
            var e = t.dot(this) / t.lengthSq();
            return this.copy(t).multiplyScalar(e)
        },
        projectOnPlane: function() {
            var t = new s;
            return function(e) {
                return t.copy(this).projectOnVector(e),
                this.sub(t)
            }
        }(),
        reflect: function() {
            var t = new s;
            return function(e) {
                return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
            }
        }(),
        angleTo: function(t) {
            var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
            return Math.acos(Cc.clamp(e, -1, 1))
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y
              , r = this.z - t.z;
            return e * e + n * n + r * r
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
        },
        setFromSpherical: function(t) {
            var e = Math.sin(t.phi) * t.radius;
            return this.x = e * Math.sin(t.theta),
            this.y = Math.cos(t.phi) * t.radius,
            this.z = e * Math.cos(t.theta),
            this
        },
        setFromCylindrical: function(t) {
            return this.x = t.radius * Math.sin(t.theta),
            this.y = t.y,
            this.z = t.radius * Math.cos(t.theta),
            this
        },
        setFromMatrixPosition: function(t) {
            var e = t.elements;
            return this.x = e[12],
            this.y = e[13],
            this.z = e[14],
            this
        },
        setFromMatrixScale: function(t) {
            var e = this.setFromMatrixColumn(t, 0).length()
              , n = this.setFromMatrixColumn(t, 1).length()
              , r = this.setFromMatrixColumn(t, 2).length();
            return this.x = e,
            this.y = n,
            this.z = r,
            this
        },
        setFromMatrixColumn: function(t, e) {
            return this.fromArray(t.elements, 4 * e)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this
        }
    }),
    Object.assign(c.prototype, {
        isMatrix3: !0,
        set: function(t, e, n, r, i, o, a, s, c) {
            var l = this.elements;
            return l[0] = t,
            l[1] = r,
            l[2] = a,
            l[3] = e,
            l[4] = i,
            l[5] = s,
            l[6] = n,
            l[7] = o,
            l[8] = c,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            this
        },
        setFromMatrix4: function(t) {
            var e = t.elements;
            return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
            this
        },
        applyToBufferAttribute: function() {
            var t = new s;
            return function(e) {
                for (var n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix3(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        multiply: function(t) {
            return this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , r = e.elements
              , i = this.elements
              , o = n[0]
              , a = n[3]
              , s = n[6]
              , c = n[1]
              , l = n[4]
              , u = n[7]
              , h = n[2]
              , d = n[5]
              , p = n[8]
              , f = r[0]
              , m = r[3]
              , v = r[6]
              , g = r[1]
              , y = r[4]
              , _ = r[7]
              , x = r[2]
              , b = r[5]
              , w = r[8];
            return i[0] = o * f + a * g + s * x,
            i[3] = o * m + a * y + s * b,
            i[6] = o * v + a * _ + s * w,
            i[1] = c * f + l * g + u * x,
            i[4] = c * m + l * y + u * b,
            i[7] = c * v + l * _ + u * w,
            i[2] = h * f + d * g + p * x,
            i[5] = h * m + d * y + p * b,
            i[8] = h * v + d * _ + p * w,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[3] *= t,
            e[6] *= t,
            e[1] *= t,
            e[4] *= t,
            e[7] *= t,
            e[2] *= t,
            e[5] *= t,
            e[8] *= t,
            this
        },
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[1]
              , r = t[2]
              , i = t[3]
              , o = t[4]
              , a = t[5]
              , s = t[6]
              , c = t[7]
              , l = t[8];
            return e * o * l - e * a * c - n * i * l + n * a * s + r * i * c - r * o * s
        },
        getInverse: function(t, e) {
            t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
            var n = t.elements
              , r = this.elements
              , i = n[0]
              , o = n[1]
              , a = n[2]
              , s = n[3]
              , c = n[4]
              , l = n[5]
              , u = n[6]
              , h = n[7]
              , d = n[8]
              , p = d * c - l * h
              , f = l * u - d * s
              , m = h * s - c * u
              , v = i * p + o * f + a * m;
            if (0 === v) {
                var g = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(g);
                return console.warn(g),
                this.identity()
            }
            var y = 1 / v;
            return r[0] = p * y,
            r[1] = (a * h - d * o) * y,
            r[2] = (l * o - a * c) * y,
            r[3] = f * y,
            r[4] = (d * i - a * u) * y,
            r[5] = (a * s - l * i) * y,
            r[6] = m * y,
            r[7] = (o * u - h * i) * y,
            r[8] = (c * i - o * s) * y,
            this
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[3],
            e[3] = t,
            t = e[2],
            e[2] = e[6],
            e[6] = t,
            t = e[5],
            e[5] = e[7],
            e[7] = t,
            this
        },
        getNormalMatrix: function(t) {
            return this.setFromMatrix4(t).getInverse(this).transpose()
        },
        transposeIntoArray: function(t) {
            var e = this.elements;
            return t[0] = e[0],
            t[1] = e[3],
            t[2] = e[6],
            t[3] = e[1],
            t[4] = e[4],
            t[5] = e[7],
            t[6] = e[2],
            t[7] = e[5],
            t[8] = e[8],
            this
        },
        setUvTransform: function(t, e, n, r, i, o, a) {
            var s = Math.cos(i)
              , c = Math.sin(i);
            this.set(n * s, n * c, -n * (s * o + c * a) + o + t, -r * c, r * s, -r * (-c * o + s * a) + a + e, 0, 0, 1)
        },
        scale: function(t, e) {
            var n = this.elements;
            return n[0] *= t,
            n[3] *= t,
            n[6] *= t,
            n[1] *= e,
            n[4] *= e,
            n[7] *= e,
            this
        },
        rotate: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t)
              , r = this.elements
              , i = r[0]
              , o = r[3]
              , a = r[6]
              , s = r[1]
              , c = r[4]
              , l = r[7];
            return r[0] = e * i + n * s,
            r[3] = e * o + n * c,
            r[6] = e * a + n * l,
            r[1] = -n * i + e * s,
            r[4] = -n * o + e * c,
            r[7] = -n * a + e * l,
            this
        },
        translate: function(t, e) {
            var n = this.elements;
            return n[0] += t * n[2],
            n[3] += t * n[5],
            n[6] += t * n[8],
            n[1] += e * n[2],
            n[4] += e * n[5],
            n[7] += e * n[8],
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, r = 0; r < 9; r++)
                if (e[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 9; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t
        }
    });
    var Pc = 0;
    l.DEFAULT_IMAGE = void 0,
    l.DEFAULT_MAPPING = ts,
    l.prototype = Object.assign(Object.create(r.prototype), {
        constructor: l,
        isTexture: !0,
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.name = t.name,
            this.image = t.image,
            this.mipmaps = t.mipmaps.slice(0),
            this.mapping = t.mapping,
            this.wrapS = t.wrapS,
            this.wrapT = t.wrapT,
            this.magFilter = t.magFilter,
            this.minFilter = t.minFilter,
            this.anisotropy = t.anisotropy,
            this.format = t.format,
            this.type = t.type,
            this.offset.copy(t.offset),
            this.repeat.copy(t.repeat),
            this.center.copy(t.center),
            this.rotation = t.rotation,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrix.copy(t.matrix),
            this.generateMipmaps = t.generateMipmaps,
            this.premultiplyAlpha = t.premultiplyAlpha,
            this.flipY = t.flipY,
            this.unpackAlignment = t.unpackAlignment,
            this.encoding = t.encoding,
            this
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            if (!e && void 0 !== t.textures[this.uuid])
                return t.textures[this.uuid];
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY
            };
            if (void 0 !== this.image) {
                var r = this.image;
                void 0 === r.uuid && (r.uuid = Cc.generateUUID()),
                e || void 0 !== t.images[r.uuid] || (t.images[r.uuid] = {
                    uuid: r.uuid,
                    url: function(t) {
                        var e;
                        if (t instanceof HTMLCanvasElement)
                            e = t;
                        else {
                            e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                            e.width = t.width,
                            e.height = t.height;
                            var n = e.getContext("2d");
                            t instanceof ImageData ? n.putImageData(t, 0, 0) : n.drawImage(t, 0, 0, t.width, t.height)
                        }
                        return e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                    }(r)
                }),
                n.image = r.uuid
            }
            return e || (t.textures[this.uuid] = n),
            n
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(t) {
            if (this.mapping === ts) {
                if (t.applyMatrix3(this.matrix),
                t.x < 0 || t.x > 1)
                    switch (this.wrapS) {
                    case cs:
                        t.x = t.x - Math.floor(t.x);
                        break;
                    case ls:
                        t.x = t.x < 0 ? 0 : 1;
                        break;
                    case us:
                        1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                    }
                if (t.y < 0 || t.y > 1)
                    switch (this.wrapT) {
                    case cs:
                        t.y = t.y - Math.floor(t.y);
                        break;
                    case ls:
                        t.y = t.y < 0 ? 0 : 1;
                        break;
                    case us:
                        1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                    }
                this.flipY && (t.y = 1 - t.y)
            }
        }
    }),
    Object.defineProperty(l.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(u.prototype, {
        isVector4: !0,
        set: function(t, e, n, r) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this.w = r,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this.w = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setW: function(t) {
            return this.w = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            case 3:
                this.w = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z,this.w)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this.w = void 0 !== t.w ? t.w : 1,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this.w += t.w,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this.w += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this.w = t.w + e.w,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this.w += t.w * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this.w -= t.w,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this.w -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this.w = t.w - e.w,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this.w *= t,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = this.w
              , o = t.elements;
            return this.x = o[0] * e + o[4] * n + o[8] * r + o[12] * i,
            this.y = o[1] * e + o[5] * n + o[9] * r + o[13] * i,
            this.z = o[2] * e + o[6] * n + o[10] * r + o[14] * i,
            this.w = o[3] * e + o[7] * n + o[11] * r + o[15] * i,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        setAxisAngleFromQuaternion: function(t) {
            this.w = 2 * Math.acos(t.w);
            var e = Math.sqrt(1 - t.w * t.w);
            return e < 1e-4 ? (this.x = 1,
            this.y = 0,
            this.z = 0) : (this.x = t.x / e,
            this.y = t.y / e,
            this.z = t.z / e),
            this
        },
        setAxisAngleFromRotationMatrix: function(t) {
            var e, n, r, i, o = t.elements, a = o[0], s = o[4], c = o[8], l = o[1], u = o[5], h = o[9], d = o[2], p = o[6], f = o[10];
            if (Math.abs(s - l) < .01 && Math.abs(c - d) < .01 && Math.abs(h - p) < .01) {
                if (Math.abs(s + l) < .1 && Math.abs(c + d) < .1 && Math.abs(h + p) < .1 && Math.abs(a + u + f - 3) < .1)
                    return this.set(1, 0, 0, 0),
                    this;
                e = Math.PI;
                var m = (a + 1) / 2
                  , v = (u + 1) / 2
                  , g = (f + 1) / 2
                  , y = (s + l) / 4
                  , _ = (c + d) / 4
                  , x = (h + p) / 4;
                return m > v && m > g ? m < .01 ? (n = 0,
                r = .707106781,
                i = .707106781) : (n = Math.sqrt(m),
                r = y / n,
                i = _ / n) : v > g ? v < .01 ? (n = .707106781,
                r = 0,
                i = .707106781) : (r = Math.sqrt(v),
                n = y / r,
                i = x / r) : g < .01 ? (n = .707106781,
                r = .707106781,
                i = 0) : (i = Math.sqrt(g),
                n = _ / i,
                r = x / i),
                this.set(n, r, i, e),
                this
            }
            var b = Math.sqrt((p - h) * (p - h) + (c - d) * (c - d) + (l - s) * (l - s));
            return Math.abs(b) < .001 && (b = 1),
            this.x = (p - h) / b,
            this.y = (c - d) / b,
            this.z = (l - s) / b,
            this.w = Math.acos((a + u + f - 1) / 2),
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this.w = Math.min(this.w, t.w),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this.w = Math.max(this.w, t.w),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this.w = Math.max(t.w, Math.min(e.w, this.w)),
            this
        },
        clampScalar: function() {
            var t, e;
            return function(n, r) {
                return void 0 === t && (t = new u,
                e = new u),
                t.set(n, n, n, n),
                e.set(r, r, r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this.w = Math.floor(this.w),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this.w = Math.ceil(this.w),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this.w = Math.round(this.w),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this.w = -this.w,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this.w += (t.w - this.w) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this.w = t[e + 3],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t[e + 3] = this.w,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this.w = t.getW(e),
            this
        }
    }),
    h.prototype = Object.assign(Object.create(r.prototype), {
        constructor: h,
        isWebGLRenderTarget: !0,
        setSize: function(t, e) {
            this.width === t && this.height === e || (this.width = t,
            this.height = e,
            this.dispose()),
            this.viewport.set(0, 0, t, e),
            this.scissor.set(0, 0, t, e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.width = t.width,
            this.height = t.height,
            this.viewport.copy(t.viewport),
            this.texture = t.texture.clone(),
            this.depthBuffer = t.depthBuffer,
            this.stencilBuffer = t.stencilBuffer,
            this.depthTexture = t.depthTexture,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    d.prototype = Object.create(h.prototype),
    d.prototype.constructor = d,
    d.prototype.isWebGLRenderTargetCube = !0,
    p.prototype = Object.create(l.prototype),
    p.prototype.constructor = p,
    p.prototype.isDataTexture = !0,
    Object.assign(f.prototype, {
        isBox3: !0,
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromArray: function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = t.length; s < c; s += 3) {
                var l = t[s]
                  , u = t[s + 1]
                  , h = t[s + 2];
                l < e && (e = l),
                u < n && (n = u),
                h < r && (r = h),
                l > i && (i = l),
                u > o && (o = u),
                h > a && (a = h)
            }
            return this.min.set(e, n, r),
            this.max.set(i, o, a),
            this
        },
        setFromBufferAttribute: function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = t.count; s < c; s++) {
                var l = t.getX(s)
                  , u = t.getY(s)
                  , h = t.getZ(s);
                l < e && (e = l),
                u < n && (n = u),
                h < r && (r = h),
                l > i && (i = l),
                u > o && (o = u),
                h > a && (a = h)
            }
            return this.min.set(e, n, r),
            this.max.set(i, o, a),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new s;
            return function(e, n) {
                var r = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(r),
                this.max.copy(e).add(r),
                this
            }
        }(),
        setFromObject: function(t) {
            return this.makeEmpty(),
            this.expandByObject(t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0,
            this.max.x = this.max.y = this.max.z = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getCenter() target is now required"),
            t = new s),
            this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getSize() target is now required"),
            t = new s),
            this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        expandByObject: function() {
            function t(t) {
                var o = t.geometry;
                if (void 0 !== o)
                    if (o.isGeometry) {
                        var a = o.vertices;
                        for (n = 0,
                        r = a.length; n < r; n++)
                            i.copy(a[n]),
                            i.applyMatrix4(t.matrixWorld),
                            e.expandByPoint(i)
                    } else if (o.isBufferGeometry) {
                        var s = o.attributes.position;
                        if (void 0 !== s)
                            for (n = 0,
                            r = s.count; n < r; n++)
                                i.fromBufferAttribute(s, n).applyMatrix4(t.matrixWorld),
                                e.expandByPoint(i)
                    }
            }
            var e, n, r, i = new s;
            return function(n) {
                return e = this,
                n.updateMatrixWorld(!0),
                n.traverse(t),
                this
            }
        }(),
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .getParameter() target is now required"),
            e = new s),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
        },
        intersectsSphere: function() {
            var t = new s;
            return function(e) {
                return this.clampPoint(e.center, t),
                t.distanceToSquared(e.center) <= e.radius * e.radius
            }
        }(),
        intersectsPlane: function(t) {
            var e, n;
            return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
            n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
            n = t.normal.x * this.min.x),
            t.normal.y > 0 ? (e += t.normal.y * this.min.y,
            n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
            n += t.normal.y * this.min.y),
            t.normal.z > 0 ? (e += t.normal.z * this.min.z,
            n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
            n += t.normal.z * this.min.z),
            e <= t.constant && n >= t.constant
        },
        intersectsTriangle: function() {
            function t(t) {
                var i, o;
                for (i = 0,
                o = t.length - 3; i <= o; i += 3) {
                    c.fromArray(t, i);
                    var a = u.x * Math.abs(c.x) + u.y * Math.abs(c.y) + u.z * Math.abs(c.z)
                      , s = e.dot(c)
                      , l = n.dot(c)
                      , h = r.dot(c);
                    if (Math.max(-Math.max(s, l, h), Math.min(s, l, h)) > a)
                        return !1
                }
                return !0
            }
            var e = new s
              , n = new s
              , r = new s
              , i = new s
              , o = new s
              , a = new s
              , c = new s
              , l = new s
              , u = new s
              , h = new s;
            return function(s) {
                if (this.isEmpty())
                    return !1;
                this.getCenter(l),
                u.subVectors(this.max, l),
                e.subVectors(s.a, l),
                n.subVectors(s.b, l),
                r.subVectors(s.c, l),
                i.subVectors(n, e),
                o.subVectors(r, n),
                a.subVectors(e, r);
                var c = [0, -i.z, i.y, 0, -o.z, o.y, 0, -a.z, a.y, i.z, 0, -i.x, o.z, 0, -o.x, a.z, 0, -a.x, -i.y, i.x, 0, -o.y, o.x, 0, -a.y, a.x, 0];
                return !!t(c) && (c = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                !!t(c) && (h.crossVectors(i, o),
                c = [h.x, h.y, h.z],
                t(c)))
            }
        }(),
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .clampPoint() target is now required"),
            e = new s),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new s;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        getBoundingSphere: function() {
            var t = new s;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"),
                e = new m),
                this.getCenter(e.center),
                e.radius = .5 * this.getSize(t).length(),
                e
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this.isEmpty() && this.makeEmpty(),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        applyMatrix4: function() {
            var t = [new s, new s, new s, new s, new s, new s, new s, new s];
            return function(e) {
                return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                this.setFromPoints(t),
                this)
            }
        }(),
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    Object.assign(m.prototype, {
        set: function(t, e) {
            return this.center.copy(t),
            this.radius = e,
            this
        },
        setFromPoints: function() {
            var t = new f;
            return function(e, n) {
                var r = this.center;
                void 0 !== n ? r.copy(n) : t.setFromPoints(e).getCenter(r);
                for (var i = 0, o = 0, a = e.length; o < a; o++)
                    i = Math.max(i, r.distanceToSquared(e[o]));
                return this.radius = Math.sqrt(i),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.center.copy(t.center),
            this.radius = t.radius,
            this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(t) {
            return t.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(t) {
            return t.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(t) {
            var e = this.radius + t.radius;
            return t.center.distanceToSquared(this.center) <= e * e
        },
        intersectsBox: function(t) {
            return t.intersectsSphere(this)
        },
        intersectsPlane: function(t) {
            return Math.abs(t.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(t, e) {
            var n = this.center.distanceToSquared(t);
            return void 0 === e && (console.warn("THREE.Sphere: .clampPoint() target is now required"),
            e = new s),
            e.copy(t),
            n > this.radius * this.radius && (e.sub(this.center).normalize(),
            e.multiplyScalar(this.radius).add(this.center)),
            e
        },
        getBoundingBox: function(t) {
            return void 0 === t && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"),
            t = new f),
            t.set(this.center, this.center),
            t.expandByScalar(this.radius),
            t
        },
        applyMatrix4: function(t) {
            return this.center.applyMatrix4(t),
            this.radius = this.radius * t.getMaxScaleOnAxis(),
            this
        },
        translate: function(t) {
            return this.center.add(t),
            this
        },
        equals: function(t) {
            return t.center.equals(this.center) && t.radius === this.radius
        }
    }),
    Object.assign(v.prototype, {
        set: function(t, e) {
            return this.normal.copy(t),
            this.constant = e,
            this
        },
        setComponents: function(t, e, n, r) {
            return this.normal.set(t, e, n),
            this.constant = r,
            this
        },
        setFromNormalAndCoplanarPoint: function(t, e) {
            return this.normal.copy(t),
            this.constant = -e.dot(this.normal),
            this
        },
        setFromCoplanarPoints: function() {
            var t = new s
              , e = new s;
            return function(n, r, i) {
                var o = t.subVectors(i, r).cross(e.subVectors(n, r)).normalize();
                return this.setFromNormalAndCoplanarPoint(o, n),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.normal.copy(t.normal),
            this.constant = t.constant,
            this
        },
        normalize: function() {
            var t = 1 / this.normal.length();
            return this.normal.multiplyScalar(t),
            this.constant *= t,
            this
        },
        negate: function() {
            return this.constant *= -1,
            this.normal.negate(),
            this
        },
        distanceToPoint: function(t) {
            return this.normal.dot(t) + this.constant
        },
        distanceToSphere: function(t) {
            return this.distanceToPoint(t.center) - t.radius
        },
        projectPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Plane: .projectPoint() target is now required"),
            e = new s),
            e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
        },
        intersectLine: function() {
            var t = new s;
            return function(e, n) {
                void 0 === n && (console.warn("THREE.Plane: .intersectLine() target is now required"),
                n = new s);
                var r = e.delta(t)
                  , i = this.normal.dot(r);
                if (0 !== i) {
                    var o = -(e.start.dot(this.normal) + this.constant) / i;
                    if (!(o < 0 || o > 1))
                        return n.copy(r).multiplyScalar(o).add(e.start)
                } else if (0 === this.distanceToPoint(e.start))
                    return n.copy(e.start)
            }
        }(),
        intersectsLine: function(t) {
            var e = this.distanceToPoint(t.start)
              , n = this.distanceToPoint(t.end);
            return e < 0 && n > 0 || n < 0 && e > 0
        },
        intersectsBox: function(t) {
            return t.intersectsPlane(this)
        },
        intersectsSphere: function(t) {
            return t.intersectsPlane(this)
        },
        coplanarPoint: function(t) {
            return void 0 === t && (console.warn("THREE.Plane: .coplanarPoint() target is now required"),
            t = new s),
            t.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var t = new s
              , e = new c;
            return function(n, r) {
                var i = r || e.getNormalMatrix(n)
                  , o = this.coplanarPoint(t).applyMatrix4(n)
                  , a = this.normal.applyMatrix3(i).normalize();
                return this.constant = -o.dot(a),
                this
            }
        }(),
        translate: function(t) {
            return this.constant -= t.dot(this.normal),
            this
        },
        equals: function(t) {
            return t.normal.equals(this.normal) && t.constant === this.constant
        }
    }),
    Object.assign(g.prototype, {
        set: function(t, e, n, r, i, o) {
            var a = this.planes;
            return a[0].copy(t),
            a[1].copy(e),
            a[2].copy(n),
            a[3].copy(r),
            a[4].copy(i),
            a[5].copy(o),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                e[n].copy(t.planes[n]);
            return this
        },
        setFromMatrix: function(t) {
            var e = this.planes
              , n = t.elements
              , r = n[0]
              , i = n[1]
              , o = n[2]
              , a = n[3]
              , s = n[4]
              , c = n[5]
              , l = n[6]
              , u = n[7]
              , h = n[8]
              , d = n[9]
              , p = n[10]
              , f = n[11]
              , m = n[12]
              , v = n[13]
              , g = n[14]
              , y = n[15];
            return e[0].setComponents(a - r, u - s, f - h, y - m).normalize(),
            e[1].setComponents(a + r, u + s, f + h, y + m).normalize(),
            e[2].setComponents(a + i, u + c, f + d, y + v).normalize(),
            e[3].setComponents(a - i, u - c, f - d, y - v).normalize(),
            e[4].setComponents(a - o, u - l, f - p, y - g).normalize(),
            e[5].setComponents(a + o, u + l, f + p, y + g).normalize(),
            this
        },
        intersectsObject: function() {
            var t = new m;
            return function(e) {
                var n = e.geometry;
                return null === n.boundingSphere && n.computeBoundingSphere(),
                t.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
            }
        }(),
        intersectsSprite: function() {
            var t = new m;
            return function(e) {
                return t.center.set(0, 0, 0),
                t.radius = .7071067811865476,
                t.applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
            }
        }(),
        intersectsSphere: function(t) {
            for (var e = this.planes, n = t.center, r = -t.radius, i = 0; i < 6; i++) {
                if (e[i].distanceToPoint(n) < r)
                    return !1
            }
            return !0
        },
        intersectsBox: function() {
            var t = new s
              , e = new s;
            return function(n) {
                for (var r = this.planes, i = 0; i < 6; i++) {
                    var o = r[i];
                    t.x = o.normal.x > 0 ? n.min.x : n.max.x,
                    e.x = o.normal.x > 0 ? n.max.x : n.min.x,
                    t.y = o.normal.y > 0 ? n.min.y : n.max.y,
                    e.y = o.normal.y > 0 ? n.max.y : n.min.y,
                    t.z = o.normal.z > 0 ? n.min.z : n.max.z,
                    e.z = o.normal.z > 0 ? n.max.z : n.min.z;
                    var a = o.distanceToPoint(t)
                      , s = o.distanceToPoint(e);
                    if (a < 0 && s < 0)
                        return !1
                }
                return !0
            }
        }(),
        containsPoint: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                if (e[n].distanceToPoint(t) < 0)
                    return !1;
            return !0
        }
    });
    var Lc = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "\nvec3 transformed = vec3( position );\n",
        beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
        bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif\n",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
        defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
        encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
        envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
        fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
        gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
        lights_pars_begin: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n",
        lights_pars_maps: "#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif\n",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif\n",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
        map_particle_fragment: "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
        map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n",
        normal_fragment_maps: "#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
        project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
        dithering_fragment: "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
        dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
        tonemapping_pars_fragment: "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
        uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",
        uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
        cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
        cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
        equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",
        shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"
    }
      , Rc = {
        merge: function(t) {
            for (var e = {}, n = 0; n < t.length; n++) {
                var r = this.clone(t[n]);
                for (var i in r)
                    e[i] = r[i]
            }
            return e
        },
        clone: function(t) {
            var e = {};
            for (var n in t) {
                e[n] = {};
                for (var r in t[n]) {
                    var i = t[n][r];
                    i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? e[n][r] = i.clone() : Array.isArray(i) ? e[n][r] = i.slice() : e[n][r] = i
                }
            }
            return e
        }
    }
      , Oc = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    Object.assign(y.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(t) {
            return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
            this
        },
        setScalar: function(t) {
            return this.r = t,
            this.g = t,
            this.b = t,
            this
        },
        setHex: function(t) {
            return t = Math.floor(t),
            this.r = (t >> 16 & 255) / 255,
            this.g = (t >> 8 & 255) / 255,
            this.b = (255 & t) / 255,
            this
        },
        setRGB: function(t, e, n) {
            return this.r = t,
            this.g = e,
            this.b = n,
            this
        },
        setHSL: function() {
            function t(t, e, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
            }
            return function(e, n, r) {
                if (e = Cc.euclideanModulo(e, 1),
                n = Cc.clamp(n, 0, 1),
                r = Cc.clamp(r, 0, 1),
                0 === n)
                    this.r = this.g = this.b = r;
                else {
                    var i = r <= .5 ? r * (1 + n) : r + n - r * n
                      , o = 2 * r - i;
                    this.r = t(o, i, e + 1 / 3),
                    this.g = t(o, i, e),
                    this.b = t(o, i, e - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function(t) {
            function e(e) {
                void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                var r, i = n[1], o = n[2];
                switch (i) {
                case "rgb":
                case "rgba":
                    if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                        return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                        this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                        this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                        e(r[5]),
                        this;
                    if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                        return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                        this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                        this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                        e(r[5]),
                        this;
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                        var a = parseFloat(r[1]) / 360
                          , s = parseInt(r[2], 10) / 100
                          , c = parseInt(r[3], 10) / 100;
                        return e(r[5]),
                        this.setHSL(a, s, c)
                    }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                var l = n[1]
                  , u = l.length;
                if (3 === u)
                    return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                    this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                    this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                    this;
                if (6 === u)
                    return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                    this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                    this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                    this
            }
            if (t && t.length > 0) {
                var l = Oc[t];
                void 0 !== l ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + t)
            }
            return this
        },
        clone: function() {
            return new this.constructor(this.r,this.g,this.b)
        },
        copy: function(t) {
            return this.r = t.r,
            this.g = t.g,
            this.b = t.b,
            this
        },
        copyGammaToLinear: function(t, e) {
            return void 0 === e && (e = 2),
            this.r = Math.pow(t.r, e),
            this.g = Math.pow(t.g, e),
            this.b = Math.pow(t.b, e),
            this
        },
        copyLinearToGamma: function(t, e) {
            void 0 === e && (e = 2);
            var n = e > 0 ? 1 / e : 1;
            return this.r = Math.pow(t.r, n),
            this.g = Math.pow(t.g, n),
            this.b = Math.pow(t.b, n),
            this
        },
        convertGammaToLinear: function() {
            var t = this.r
              , e = this.g
              , n = this.b;
            return this.r = t * t,
            this.g = e * e,
            this.b = n * n,
            this
        },
        convertLinearToGamma: function() {
            return this.r = Math.sqrt(this.r),
            this.g = Math.sqrt(this.g),
            this.b = Math.sqrt(this.b),
            this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(t) {
            void 0 === t && (console.warn("THREE.Color: .getHSL() target is now required"),
            t = {
                h: 0,
                s: 0,
                l: 0
            });
            var e, n, r = this.r, i = this.g, o = this.b, a = Math.max(r, i, o), s = Math.min(r, i, o), c = (s + a) / 2;
            if (s === a)
                e = 0,
                n = 0;
            else {
                var l = a - s;
                switch (n = c <= .5 ? l / (a + s) : l / (2 - a - s),
                a) {
                case r:
                    e = (i - o) / l + (i < o ? 6 : 0);
                    break;
                case i:
                    e = (o - r) / l + 2;
                    break;
                case o:
                    e = (r - i) / l + 4
                }
                e /= 6
            }
            return t.h = e,
            t.s = n,
            t.l = c,
            t
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function() {
            var t = {};
            return function(e, n, r) {
                return this.getHSL(t),
                t.h += e,
                t.s += n,
                t.l += r,
                this.setHSL(t.h, t.s, t.l),
                this
            }
        }(),
        add: function(t) {
            return this.r += t.r,
            this.g += t.g,
            this.b += t.b,
            this
        },
        addColors: function(t, e) {
            return this.r = t.r + e.r,
            this.g = t.g + e.g,
            this.b = t.b + e.b,
            this
        },
        addScalar: function(t) {
            return this.r += t,
            this.g += t,
            this.b += t,
            this
        },
        sub: function(t) {
            return this.r = Math.max(0, this.r - t.r),
            this.g = Math.max(0, this.g - t.g),
            this.b = Math.max(0, this.b - t.b),
            this
        },
        multiply: function(t) {
            return this.r *= t.r,
            this.g *= t.g,
            this.b *= t.b,
            this
        },
        multiplyScalar: function(t) {
            return this.r *= t,
            this.g *= t,
            this.b *= t,
            this
        },
        lerp: function(t, e) {
            return this.r += (t.r - this.r) * e,
            this.g += (t.g - this.g) * e,
            this.b += (t.b - this.b) * e,
            this
        },
        equals: function(t) {
            return t.r === this.r && t.g === this.g && t.b === this.b
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.r = t[e],
            this.g = t[e + 1],
            this.b = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.r,
            t[e + 1] = this.g,
            t[e + 2] = this.b,
            t
        },
        toJSON: function() {
            return this.getHex()
        }
    });
    var Ic = {
        common: {
            diffuse: {
                value: new y(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new c
            },
            alphaMap: {
                value: null
            }
        },
        specularmap: {
            specularMap: {
                value: null
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            },
            maxMipLevel: {
                value: 0
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new i(1,1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new y(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new y(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new c
            }
        }
    }
      , Dc = {
        basic: {
            uniforms: Rc.merge([Ic.common, Ic.specularmap, Ic.envmap, Ic.aomap, Ic.lightmap, Ic.fog]),
            vertexShader: Lc.meshbasic_vert,
            fragmentShader: Lc.meshbasic_frag
        },
        lambert: {
            uniforms: Rc.merge([Ic.common, Ic.specularmap, Ic.envmap, Ic.aomap, Ic.lightmap, Ic.emissivemap, Ic.fog, Ic.lights, {
                emissive: {
                    value: new y(0)
                }
            }]),
            vertexShader: Lc.meshlambert_vert,
            fragmentShader: Lc.meshlambert_frag
        },
        phong: {
            uniforms: Rc.merge([Ic.common, Ic.specularmap, Ic.envmap, Ic.aomap, Ic.lightmap, Ic.emissivemap, Ic.bumpmap, Ic.normalmap, Ic.displacementmap, Ic.gradientmap, Ic.fog, Ic.lights, {
                emissive: {
                    value: new y(0)
                },
                specular: {
                    value: new y(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: Lc.meshphong_vert,
            fragmentShader: Lc.meshphong_frag
        },
        standard: {
            uniforms: Rc.merge([Ic.common, Ic.envmap, Ic.aomap, Ic.lightmap, Ic.emissivemap, Ic.bumpmap, Ic.normalmap, Ic.displacementmap, Ic.roughnessmap, Ic.metalnessmap, Ic.fog, Ic.lights, {
                emissive: {
                    value: new y(0)
                },
                roughness: {
                    value: .5
                },
                metalness: {
                    value: .5
                },
                envMapIntensity: {
                    value: 1
                }
            }]),
            vertexShader: Lc.meshphysical_vert,
            fragmentShader: Lc.meshphysical_frag
        },
        points: {
            uniforms: Rc.merge([Ic.points, Ic.fog]),
            vertexShader: Lc.points_vert,
            fragmentShader: Lc.points_frag
        },
        dashed: {
            uniforms: Rc.merge([Ic.common, Ic.fog, {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }]),
            vertexShader: Lc.linedashed_vert,
            fragmentShader: Lc.linedashed_frag
        },
        depth: {
            uniforms: Rc.merge([Ic.common, Ic.displacementmap]),
            vertexShader: Lc.depth_vert,
            fragmentShader: Lc.depth_frag
        },
        normal: {
            uniforms: Rc.merge([Ic.common, Ic.bumpmap, Ic.normalmap, Ic.displacementmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: Lc.normal_vert,
            fragmentShader: Lc.normal_frag
        },
        cube: {
            uniforms: {
                tCube: {
                    value: null
                },
                tFlip: {
                    value: -1
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: Lc.cube_vert,
            fragmentShader: Lc.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: Lc.equirect_vert,
            fragmentShader: Lc.equirect_frag
        },
        distanceRGBA: {
            uniforms: Rc.merge([Ic.common, Ic.displacementmap, {
                referencePosition: {
                    value: new s
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }]),
            vertexShader: Lc.distanceRGBA_vert,
            fragmentShader: Lc.distanceRGBA_frag
        },
        shadow: {
            uniforms: Rc.merge([Ic.lights, Ic.fog, {
                color: {
                    value: new y(0)
                },
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: Lc.shadow_vert,
            fragmentShader: Lc.shadow_frag
        }
    };
    Dc.physical = {
        uniforms: Rc.merge([Dc.standard.uniforms, {
            clearCoat: {
                value: 0
            },
            clearCoatRoughness: {
                value: 0
            }
        }]),
        vertexShader: Lc.meshphysical_vert,
        fragmentShader: Lc.meshphysical_frag
    },
    x.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
    x.DefaultOrder = "XYZ",
    Object.defineProperties(x.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(x.prototype, {
        isEuler: !0,
        set: function(t, e, n, r) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._order = r || this._order,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._order)
        },
        copy: function(t) {
            return this._x = t._x,
            this._y = t._y,
            this._z = t._z,
            this._order = t._order,
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t, e, n) {
            var r = Cc.clamp
              , i = t.elements
              , o = i[0]
              , a = i[4]
              , s = i[8]
              , c = i[1]
              , l = i[5]
              , u = i[9]
              , h = i[2]
              , d = i[6]
              , p = i[10];
            return e = e || this._order,
            "XYZ" === e ? (this._y = Math.asin(r(s, -1, 1)),
            Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p),
            this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(d, l),
            this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-r(u, -1, 1)),
            Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p),
            this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, o),
            this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(r(d, -1, 1)),
            Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p),
            this._z = Math.atan2(-a, l)) : (this._y = 0,
            this._z = Math.atan2(c, o))) : "ZYX" === e ? (this._y = Math.asin(-r(h, -1, 1)),
            Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p),
            this._z = Math.atan2(c, o)) : (this._x = 0,
            this._z = Math.atan2(-a, l))) : "YZX" === e ? (this._z = Math.asin(r(c, -1, 1)),
            Math.abs(c) < .99999 ? (this._x = Math.atan2(-u, l),
            this._y = Math.atan2(-h, o)) : (this._x = 0,
            this._y = Math.atan2(s, p))) : "XZY" === e ? (this._z = Math.asin(-r(a, -1, 1)),
            Math.abs(a) < .99999 ? (this._x = Math.atan2(d, l),
            this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-u, p),
            this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
            this._order = e,
            !1 !== n && this.onChangeCallback(),
            this
        },
        setFromQuaternion: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeRotationFromQuaternion(e),
                this.setFromRotationMatrix(t, n, r)
            }
        }(),
        setFromVector3: function(t, e) {
            return this.set(t.x, t.y, t.z, e || this._order)
        },
        reorder: function() {
            var t = new a;
            return function(e) {
                return t.setFromEuler(this),
                this.setFromQuaternion(t, e)
            }
        }(),
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        },
        fromArray: function(t) {
            return this._x = t[0],
            this._y = t[1],
            this._z = t[2],
            void 0 !== t[3] && (this._order = t[3]),
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._order,
            t
        },
        toVector3: function(t) {
            return t ? t.set(this._x, this._y, this._z) : new s(this._x,this._y,this._z)
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(b.prototype, {
        set: function(t) {
            this.mask = 1 << t | 0
        },
        enable: function(t) {
            this.mask |= 1 << t | 0
        },
        toggle: function(t) {
            this.mask ^= 1 << t | 0
        },
        disable: function(t) {
            this.mask &= ~(1 << t | 0)
        },
        test: function(t) {
            return 0 != (this.mask & t.mask)
        }
    });
    var Nc = 0;
    w.DefaultUp = new s(0,1,0),
    w.DefaultMatrixAutoUpdate = !0,
    w.prototype = Object.assign(Object.create(r.prototype), {
        constructor: w,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix: function(t) {
            this.matrix.multiplyMatrices(t, this.matrix),
            this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(t) {
            return this.quaternion.premultiply(t),
            this
        },
        setRotationFromAxisAngle: function(t, e) {
            this.quaternion.setFromAxisAngle(t, e)
        },
        setRotationFromEuler: function(t) {
            this.quaternion.setFromEuler(t, !0)
        },
        setRotationFromMatrix: function(t) {
            this.quaternion.setFromRotationMatrix(t)
        },
        setRotationFromQuaternion: function(t) {
            this.quaternion.copy(t)
        },
        rotateOnAxis: function() {
            var t = new a;
            return function(e, n) {
                return t.setFromAxisAngle(e, n),
                this.quaternion.multiply(t),
                this
            }
        }(),
        rotateOnWorldAxis: function() {
            var t = new a;
            return function(e, n) {
                return t.setFromAxisAngle(e, n),
                this.quaternion.premultiply(t),
                this
            }
        }(),
        rotateX: function() {
            var t = new s(1,0,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateY: function() {
            var t = new s(0,1,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateZ: function() {
            var t = new s(0,0,1);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        translateOnAxis: function() {
            var t = new s;
            return function(e, n) {
                return t.copy(e).applyQuaternion(this.quaternion),
                this.position.add(t.multiplyScalar(n)),
                this
            }
        }(),
        translateX: function() {
            var t = new s(1,0,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateY: function() {
            var t = new s(0,1,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateZ: function() {
            var t = new s(0,0,1);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        localToWorld: function(t) {
            return t.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function() {
            var t = new o;
            return function(e) {
                return e.applyMatrix4(t.getInverse(this.matrixWorld))
            }
        }(),
        lookAt: function() {
            var t = new o
              , e = new s;
            return function(n, r, i) {
                n.isVector3 ? e.copy(n) : e.set(n, r, i),
                this.isCamera ? t.lookAt(this.position, e, this.up) : t.lookAt(e, this.position, this.up),
                this.quaternion.setFromRotationMatrix(t)
            }
        }(),
        add: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.add(arguments[e]);
                return this
            }
            return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t),
            this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
            t.parent = this,
            t.dispatchEvent({
                type: "added"
            }),
            this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
            this)
        },
        remove: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.remove(arguments[e]);
                return this
            }
            var n = this.children.indexOf(t);
            return -1 !== n && (t.parent = null,
            t.dispatchEvent({
                type: "removed"
            }),
            this.children.splice(n, 1)),
            this
        },
        getObjectById: function(t) {
            return this.getObjectByProperty("id", t)
        },
        getObjectByName: function(t) {
            return this.getObjectByProperty("name", t)
        },
        getObjectByProperty: function(t, e) {
            if (this[t] === e)
                return this;
            for (var n = 0, r = this.children.length; n < r; n++) {
                var i = this.children[n]
                  , o = i.getObjectByProperty(t, e);
                if (void 0 !== o)
                    return o
            }
        },
        getWorldPosition: function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"),
            t = new s),
            this.updateMatrixWorld(!0),
            t.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: function() {
            var t = new s
              , e = new s;
            return function(n) {
                return void 0 === n && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),
                n = new a),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, n, e),
                n
            }
        }(),
        getWorldScale: function() {
            var t = new s
              , e = new a;
            return function(n) {
                return void 0 === n && (console.warn("THREE.Object3D: .getWorldScale() target is now required"),
                n = new s),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, e, n),
                n
            }
        }(),
        getWorldDirection: function() {
            var t = new a;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
                e = new s),
                this.getWorldQuaternion(t),
                e.set(0, 0, 1).applyQuaternion(t)
            }
        }(),
        raycast: function() {},
        traverse: function(t) {
            t(this);
            for (var e = this.children, n = 0, r = e.length; n < r; n++)
                e[n].traverse(t)
        },
        traverseVisible: function(t) {
            if (!1 !== this.visible) {
                t(this);
                for (var e = this.children, n = 0, r = e.length; n < r; n++)
                    e[n].traverseVisible(t)
            }
        },
        traverseAncestors: function(t) {
            var e = this.parent;
            null !== e && (t(e),
            e.traverseAncestors(t))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
            this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            this.matrixWorldNeedsUpdate = !1,
            t = !0);
            for (var e = this.children, n = 0, r = e.length; n < r; n++)
                e[n].updateMatrixWorld(t)
        },
        toJSON: function(t) {
            function e(e, n) {
                return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)),
                n.uuid
            }
            function n(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    delete r.metadata,
                    e.push(r)
                }
                return e
            }
            var r = void 0 === t || "string" == typeof t
              , i = {};
            r && (t = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            },
            i.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var o = {};
            if (o.uuid = this.uuid,
            o.type = this.type,
            "" !== this.name && (o.name = this.name),
            !0 === this.castShadow && (o.castShadow = !0),
            !0 === this.receiveShadow && (o.receiveShadow = !0),
            !1 === this.visible && (o.visible = !1),
            !1 === this.frustumCulled && (o.frustumCulled = !1),
            0 !== this.renderOrder && (o.renderOrder = this.renderOrder),
            "{}" !== JSON.stringify(this.userData) && (o.userData = this.userData),
            o.matrix = this.matrix.toArray(),
            void 0 !== this.geometry) {
                o.geometry = e(t.geometries, this.geometry);
                var a = this.geometry.parameters;
                if (void 0 !== a && void 0 !== a.shapes) {
                    var s = a.shapes;
                    if (Array.isArray(s))
                        for (var c = 0, l = s.length; c < l; c++) {
                            var u = s[c];
                            e(t.shapes, u)
                        }
                    else
                        e(t.shapes, s)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    for (var h = [], c = 0, l = this.material.length; c < l; c++)
                        h.push(e(t.materials, this.material[c]));
                    o.material = h
                } else
                    o.material = e(t.materials, this.material);
            if (this.children.length > 0) {
                o.children = [];
                for (var c = 0; c < this.children.length; c++)
                    o.children.push(this.children[c].toJSON(t).object)
            }
            if (r) {
                var d = n(t.geometries)
                  , p = n(t.materials)
                  , f = n(t.textures)
                  , m = n(t.images)
                  , s = n(t.shapes);
                d.length > 0 && (i.geometries = d),
                p.length > 0 && (i.materials = p),
                f.length > 0 && (i.textures = f),
                m.length > 0 && (i.images = m),
                s.length > 0 && (i.shapes = s)
            }
            return i.object = o,
            i
        },
        clone: function(t) {
            return (new this.constructor).copy(this, t)
        },
        copy: function(t, e) {
            if (void 0 === e && (e = !0),
            this.name = t.name,
            this.up.copy(t.up),
            this.position.copy(t.position),
            this.quaternion.copy(t.quaternion),
            this.scale.copy(t.scale),
            this.matrix.copy(t.matrix),
            this.matrixWorld.copy(t.matrixWorld),
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
            this.layers.mask = t.layers.mask,
            this.visible = t.visible,
            this.castShadow = t.castShadow,
            this.receiveShadow = t.receiveShadow,
            this.frustumCulled = t.frustumCulled,
            this.renderOrder = t.renderOrder,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            !0 === e)
                for (var n = 0; n < t.children.length; n++) {
                    var r = t.children[n];
                    this.add(r.clone())
                }
            return this
        }
    }),
    M.prototype = Object.assign(Object.create(w.prototype), {
        constructor: M,
        isCamera: !0,
        copy: function(t, e) {
            return w.prototype.copy.call(this, t, e),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this
        },
        getWorldDirection: function() {
            var t = new a;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"),
                e = new s),
                this.getWorldQuaternion(t),
                e.set(0, 0, -1).applyQuaternion(t)
            }
        }(),
        updateMatrixWorld: function(t) {
            w.prototype.updateMatrixWorld.call(this, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    E.prototype = Object.assign(Object.create(M.prototype), {
        constructor: E,
        isOrthographicCamera: !0,
        copy: function(t, e) {
            return M.prototype.copy.call(this, t, e),
            this.left = t.left,
            this.right = t.right,
            this.top = t.top,
            this.bottom = t.bottom,
            this.near = t.near,
            this.far = t.far,
            this.zoom = t.zoom,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this
        },
        setViewOffset: function(t, e, n, r, i, o) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = o,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = (this.right - this.left) / (2 * this.zoom)
              , e = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , r = (this.top + this.bottom) / 2
              , i = n - t
              , o = n + t
              , a = r + e
              , s = r - e;
            if (null !== this.view && this.view.enabled) {
                var c = this.zoom / (this.view.width / this.view.fullWidth)
                  , l = this.zoom / (this.view.height / this.view.fullHeight)
                  , u = (this.right - this.left) / this.view.width
                  , h = (this.top - this.bottom) / this.view.height;
                i += u * (this.view.offsetX / c),
                o = i + u * (this.view.width / c),
                a -= h * (this.view.offsetY / l),
                s = a - h * (this.view.height / l)
            }
            this.projectionMatrix.makeOrthographic(i, o, a, s, this.near, this.far)
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.zoom = this.zoom,
            e.object.left = this.left,
            e.object.right = this.right,
            e.object.top = this.top,
            e.object.bottom = this.bottom,
            e.object.near = this.near,
            e.object.far = this.far,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e
        }
    }),
    Object.assign(T.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.a = t.a,
            this.b = t.b,
            this.c = t.c,
            this.normal.copy(t.normal),
            this.color.copy(t.color),
            this.materialIndex = t.materialIndex;
            for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                this.vertexNormals[e] = t.vertexNormals[e].clone();
            for (var e = 0, n = t.vertexColors.length; e < n; e++)
                this.vertexColors[e] = t.vertexColors[e].clone();
            return this
        }
    });
    var kc = 0;
    S.prototype = Object.assign(Object.create(r.prototype), {
        constructor: S,
        isGeometry: !0,
        applyMatrix: function(t) {
            for (var e = (new c).getNormalMatrix(t), n = 0, r = this.vertices.length; n < r; n++) {
                this.vertices[n].applyMatrix4(t)
            }
            for (var n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n];
                i.normal.applyMatrix3(e).normalize();
                for (var o = 0, a = i.vertexNormals.length; o < a; o++)
                    i.vertexNormals[o].applyMatrix3(e).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this.verticesNeedUpdate = !0,
            this.normalsNeedUpdate = !0,
            this
        },
        rotateX: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeTranslation(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeScale(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: function() {
            var t = new w;
            return function(e) {
                t.lookAt(e),
                t.updateMatrix(),
                this.applyMatrix(t.matrix)
            }
        }(),
        fromBufferGeometry: function(t) {
            function e(t, e, r, i) {
                var o = void 0 !== c ? [d[t].clone(), d[e].clone(), d[r].clone()] : []
                  , a = void 0 !== l ? [n.colors[t].clone(), n.colors[e].clone(), n.colors[r].clone()] : []
                  , s = new T(t,e,r,o,a,i);
                n.faces.push(s),
                void 0 !== u && n.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[r].clone()]),
                void 0 !== h && n.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[r].clone()])
            }
            var n = this
              , r = null !== t.index ? t.index.array : void 0
              , o = t.attributes
              , a = o.position.array
              , c = void 0 !== o.normal ? o.normal.array : void 0
              , l = void 0 !== o.color ? o.color.array : void 0
              , u = void 0 !== o.uv ? o.uv.array : void 0
              , h = void 0 !== o.uv2 ? o.uv2.array : void 0;
            void 0 !== h && (this.faceVertexUvs[1] = []);
            for (var d = [], p = [], f = [], m = 0, v = 0; m < a.length; m += 3,
            v += 2)
                n.vertices.push(new s(a[m],a[m + 1],a[m + 2])),
                void 0 !== c && d.push(new s(c[m],c[m + 1],c[m + 2])),
                void 0 !== l && n.colors.push(new y(l[m],l[m + 1],l[m + 2])),
                void 0 !== u && p.push(new i(u[v],u[v + 1])),
                void 0 !== h && f.push(new i(h[v],h[v + 1]));
            var g = t.groups;
            if (g.length > 0)
                for (var m = 0; m < g.length; m++)
                    for (var _ = g[m], x = _.start, b = _.count, v = x, w = x + b; v < w; v += 3)
                        void 0 !== r ? e(r[v], r[v + 1], r[v + 2], _.materialIndex) : e(v, v + 1, v + 2, _.materialIndex);
            else if (void 0 !== r)
                for (var m = 0; m < r.length; m += 3)
                    e(r[m], r[m + 1], r[m + 2]);
            else
                for (var m = 0; m < a.length / 3; m += 3)
                    e(m, m + 1, m + 2);
            return this.computeFaceNormals(),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            this
        },
        center: function() {
            var t = new s;
            return function() {
                return this.computeBoundingBox(),
                this.boundingBox.getCenter(t).negate(),
                this.translate(t.x, t.y, t.z),
                this
            }
        }(),
        normalize: function() {
            this.computeBoundingSphere();
            var t = this.boundingSphere.center
              , e = this.boundingSphere.radius
              , n = 0 === e ? 1 : 1 / e
              , r = new o;
            return r.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1),
            this.applyMatrix(r),
            this
        },
        computeFaceNormals: function() {
            for (var t = new s, e = new s, n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n]
                  , o = this.vertices[i.a]
                  , a = this.vertices[i.b]
                  , c = this.vertices[i.c];
                t.subVectors(c, a),
                e.subVectors(o, a),
                t.cross(e),
                t.normalize(),
                i.normal.copy(t)
            }
        },
        computeVertexNormals: function(t) {
            void 0 === t && (t = !0);
            var e, n, r, i, o, a;
            for (a = new Array(this.vertices.length),
            e = 0,
            n = this.vertices.length; e < n; e++)
                a[e] = new s;
            if (t) {
                var c, l, u, h = new s, d = new s;
                for (r = 0,
                i = this.faces.length; r < i; r++)
                    o = this.faces[r],
                    c = this.vertices[o.a],
                    l = this.vertices[o.b],
                    u = this.vertices[o.c],
                    h.subVectors(u, l),
                    d.subVectors(c, l),
                    h.cross(d),
                    a[o.a].add(h),
                    a[o.b].add(h),
                    a[o.c].add(h)
            } else
                for (this.computeFaceNormals(),
                r = 0,
                i = this.faces.length; r < i; r++)
                    o = this.faces[r],
                    a[o.a].add(o.normal),
                    a[o.b].add(o.normal),
                    a[o.c].add(o.normal);
            for (e = 0,
            n = this.vertices.length; e < n; e++)
                a[e].normalize();
            for (r = 0,
            i = this.faces.length; r < i; r++) {
                o = this.faces[r];
                var p = o.vertexNormals;
                3 === p.length ? (p[0].copy(a[o.a]),
                p[1].copy(a[o.b]),
                p[2].copy(a[o.c])) : (p[0] = a[o.a].clone(),
                p[1] = a[o.b].clone(),
                p[2] = a[o.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            var t, e, n;
            for (this.computeFaceNormals(),
            t = 0,
            e = this.faces.length; t < e; t++) {
                n = this.faces[t];
                var r = n.vertexNormals;
                3 === r.length ? (r[0].copy(n.normal),
                r[1].copy(n.normal),
                r[2].copy(n.normal)) : (r[0] = n.normal.clone(),
                r[1] = n.normal.clone(),
                r[2] = n.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            var t, e, n, r, i;
            for (n = 0,
            r = this.faces.length; n < r; n++)
                for (i = this.faces[n],
                i.__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(),
                i.__originalVertexNormals || (i.__originalVertexNormals = []),
                t = 0,
                e = i.vertexNormals.length; t < e; t++)
                    i.__originalVertexNormals[t] ? i.__originalVertexNormals[t].copy(i.vertexNormals[t]) : i.__originalVertexNormals[t] = i.vertexNormals[t].clone();
            var o = new S;
            for (o.faces = this.faces,
            t = 0,
            e = this.morphTargets.length; t < e; t++) {
                if (!this.morphNormals[t]) {
                    this.morphNormals[t] = {},
                    this.morphNormals[t].faceNormals = [],
                    this.morphNormals[t].vertexNormals = [];
                    var a, c, l = this.morphNormals[t].faceNormals, u = this.morphNormals[t].vertexNormals;
                    for (n = 0,
                    r = this.faces.length; n < r; n++)
                        a = new s,
                        c = {
                            a: new s,
                            b: new s,
                            c: new s
                        },
                        l.push(a),
                        u.push(c)
                }
                var h = this.morphNormals[t];
                o.vertices = this.morphTargets[t].vertices,
                o.computeFaceNormals(),
                o.computeVertexNormals();
                var a, c;
                for (n = 0,
                r = this.faces.length; n < r; n++)
                    i = this.faces[n],
                    a = h.faceNormals[n],
                    c = h.vertexNormals[n],
                    a.copy(i.normal),
                    c.a.copy(i.vertexNormals[0]),
                    c.b.copy(i.vertexNormals[1]),
                    c.c.copy(i.vertexNormals[2])
            }
            for (n = 0,
            r = this.faces.length; n < r; n++)
                i = this.faces[n],
                i.normal = i.__originalFaceNormal,
                i.vertexNormals = i.__originalVertexNormals
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new f),
            this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new m),
            this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(t, e, n) {
            if (!t || !t.isGeometry)
                return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
            var r, i = this.vertices.length, o = this.vertices, a = t.vertices, s = this.faces, l = t.faces, u = this.faceVertexUvs[0], h = t.faceVertexUvs[0], d = this.colors, p = t.colors;
            void 0 === n && (n = 0),
            void 0 !== e && (r = (new c).getNormalMatrix(e));
            for (var f = 0, m = a.length; f < m; f++) {
                var v = a[f]
                  , g = v.clone();
                void 0 !== e && g.applyMatrix4(e),
                o.push(g)
            }
            for (var f = 0, m = p.length; f < m; f++)
                d.push(p[f].clone());
            for (f = 0,
            m = l.length; f < m; f++) {
                var y, _, x, b = l[f], w = b.vertexNormals, M = b.vertexColors;
                y = new T(b.a + i,b.b + i,b.c + i),
                y.normal.copy(b.normal),
                void 0 !== r && y.normal.applyMatrix3(r).normalize();
                for (var E = 0, S = w.length; E < S; E++)
                    _ = w[E].clone(),
                    void 0 !== r && _.applyMatrix3(r).normalize(),
                    y.vertexNormals.push(_);
                y.color.copy(b.color);
                for (var E = 0, S = M.length; E < S; E++)
                    x = M[E],
                    y.vertexColors.push(x.clone());
                y.materialIndex = b.materialIndex + n,
                s.push(y)
            }
            for (f = 0,
            m = h.length; f < m; f++) {
                var A = h[f]
                  , C = [];
                if (void 0 !== A) {
                    for (var E = 0, S = A.length; E < S; E++)
                        C.push(A[E].clone());
                    u.push(C)
                }
            }
        },
        mergeMesh: function(t) {
            if (!t || !t.isMesh)
                return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t);
            t.matrixAutoUpdate && t.updateMatrix(),
            this.merge(t.geometry, t.matrix)
        },
        mergeVertices: function() {
            var t, e, n, r, i, o, a, s, c = {}, l = [], u = [], h = Math.pow(10, 4);
            for (n = 0,
            r = this.vertices.length; n < r; n++)
                t = this.vertices[n],
                e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h),
                void 0 === c[e] ? (c[e] = n,
                l.push(this.vertices[n]),
                u[n] = l.length - 1) : u[n] = u[c[e]];
            var d = [];
            for (n = 0,
            r = this.faces.length; n < r; n++) {
                i = this.faces[n],
                i.a = u[i.a],
                i.b = u[i.b],
                i.c = u[i.c],
                o = [i.a, i.b, i.c];
                for (var p = 0; p < 3; p++)
                    if (o[p] === o[(p + 1) % 3]) {
                        d.push(n);
                        break
                    }
            }
            for (n = d.length - 1; n >= 0; n--) {
                var f = d[n];
                for (this.faces.splice(f, 1),
                a = 0,
                s = this.faceVertexUvs.length; a < s; a++)
                    this.faceVertexUvs[a].splice(f, 1)
            }
            var m = this.vertices.length - l.length;
            return this.vertices = l,
            m
        },
        setFromPoints: function(t) {
            this.vertices = [];
            for (var e = 0, n = t.length; e < n; e++) {
                var r = t[e];
                this.vertices.push(new s(r.x,r.y,r.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            function t(t, e) {
                return t.materialIndex - e.materialIndex
            }
            for (var e = this.faces, n = e.length, r = 0; r < n; r++)
                e[r]._id = r;
            e.sort(t);
            var i, o, a = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
            a && a.length === n && (i = []),
            s && s.length === n && (o = []);
            for (var r = 0; r < n; r++) {
                var c = e[r]._id;
                i && i.push(a[c]),
                o && o.push(s[c])
            }
            i && (this.faceVertexUvs[0] = i),
            o && (this.faceVertexUvs[1] = o)
        },
        toJSON: function() {
            function t(t, e, n) {
                return n ? t | 1 << e : t & ~(1 << e)
            }
            function e(t) {
                var e = t.x.toString() + t.y.toString() + t.z.toString();
                return void 0 !== d[e] ? d[e] : (d[e] = h.length / 3,
                h.push(t.x, t.y, t.z),
                d[e])
            }
            function n(t) {
                var e = t.r.toString() + t.g.toString() + t.b.toString();
                return void 0 !== f[e] ? f[e] : (f[e] = p.length,
                p.push(t.getHex()),
                f[e])
            }
            function r(t) {
                var e = t.x.toString() + t.y.toString();
                return void 0 !== v[e] ? v[e] : (v[e] = m.length / 2,
                m.push(t.x, t.y),
                v[e])
            }
            var i = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (i.uuid = this.uuid,
            i.type = this.type,
            "" !== this.name && (i.name = this.name),
            void 0 !== this.parameters) {
                var o = this.parameters;
                for (var a in o)
                    void 0 !== o[a] && (i[a] = o[a]);
                return i
            }
            for (var s = [], c = 0; c < this.vertices.length; c++) {
                var l = this.vertices[c];
                s.push(l.x, l.y, l.z)
            }
            for (var u = [], h = [], d = {}, p = [], f = {}, m = [], v = {}, c = 0; c < this.faces.length; c++) {
                var g = this.faces[c]
                  , y = void 0 !== this.faceVertexUvs[0][c]
                  , _ = g.normal.length() > 0
                  , x = g.vertexNormals.length > 0
                  , b = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b
                  , w = g.vertexColors.length > 0
                  , M = 0;
                if (M = t(M, 0, 0),
                M = t(M, 1, !0),
                M = t(M, 2, !1),
                M = t(M, 3, y),
                M = t(M, 4, _),
                M = t(M, 5, x),
                M = t(M, 6, b),
                M = t(M, 7, w),
                u.push(M),
                u.push(g.a, g.b, g.c),
                u.push(g.materialIndex),
                y) {
                    var E = this.faceVertexUvs[0][c];
                    u.push(r(E[0]), r(E[1]), r(E[2]))
                }
                if (_ && u.push(e(g.normal)),
                x) {
                    var T = g.vertexNormals;
                    u.push(e(T[0]), e(T[1]), e(T[2]))
                }
                if (b && u.push(n(g.color)),
                w) {
                    var S = g.vertexColors;
                    u.push(n(S[0]), n(S[1]), n(S[2]))
                }
            }
            return i.data = {},
            i.data.vertices = s,
            i.data.normals = h,
            p.length > 0 && (i.data.colors = p),
            m.length > 0 && (i.data.uvs = [m]),
            i.data.faces = u,
            i
        },
        clone: function() {
            return (new S).copy(this)
        },
        copy: function(t) {
            var e, n, r, i, o, a;
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var s = t.vertices;
            for (e = 0,
            n = s.length; e < n; e++)
                this.vertices.push(s[e].clone());
            var c = t.colors;
            for (e = 0,
            n = c.length; e < n; e++)
                this.colors.push(c[e].clone());
            var l = t.faces;
            for (e = 0,
            n = l.length; e < n; e++)
                this.faces.push(l[e].clone());
            for (e = 0,
            n = t.faceVertexUvs.length; e < n; e++) {
                var u = t.faceVertexUvs[e];
                for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                r = 0,
                i = u.length; r < i; r++) {
                    var h = u[r]
                      , d = [];
                    for (o = 0,
                    a = h.length; o < a; o++) {
                        var p = h[o];
                        d.push(p.clone())
                    }
                    this.faceVertexUvs[e].push(d)
                }
            }
            var f = t.morphTargets;
            for (e = 0,
            n = f.length; e < n; e++) {
                var m = {};
                if (m.name = f[e].name,
                void 0 !== f[e].vertices)
                    for (m.vertices = [],
                    r = 0,
                    i = f[e].vertices.length; r < i; r++)
                        m.vertices.push(f[e].vertices[r].clone());
                if (void 0 !== f[e].normals)
                    for (m.normals = [],
                    r = 0,
                    i = f[e].normals.length; r < i; r++)
                        m.normals.push(f[e].normals[r].clone());
                this.morphTargets.push(m)
            }
            var v = t.morphNormals;
            for (e = 0,
            n = v.length; e < n; e++) {
                var g = {};
                if (void 0 !== v[e].vertexNormals)
                    for (g.vertexNormals = [],
                    r = 0,
                    i = v[e].vertexNormals.length; r < i; r++) {
                        var y = v[e].vertexNormals[r]
                          , _ = {};
                        _.a = y.a.clone(),
                        _.b = y.b.clone(),
                        _.c = y.c.clone(),
                        g.vertexNormals.push(_)
                    }
                if (void 0 !== v[e].faceNormals)
                    for (g.faceNormals = [],
                    r = 0,
                    i = v[e].faceNormals.length; r < i; r++)
                        g.faceNormals.push(v[e].faceNormals[r].clone());
                this.morphNormals.push(g)
            }
            var x = t.skinWeights;
            for (e = 0,
            n = x.length; e < n; e++)
                this.skinWeights.push(x[e].clone());
            var b = t.skinIndices;
            for (e = 0,
            n = b.length; e < n; e++)
                this.skinIndices.push(b[e].clone());
            var w = t.lineDistances;
            for (e = 0,
            n = w.length; e < n; e++)
                this.lineDistances.push(w[e]);
            var M = t.boundingBox;
            null !== M && (this.boundingBox = M.clone());
            var E = t.boundingSphere;
            return null !== E && (this.boundingSphere = E.clone()),
            this.elementsNeedUpdate = t.elementsNeedUpdate,
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(A.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(A.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            this.count = void 0 !== t ? t.length / this.itemSize : 0,
            this.array = t
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.array = new t.array.constructor(t.array),
            this.itemSize = t.itemSize,
            this.count = t.count,
            this.normalized = t.normalized,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.itemSize,
            n *= e.itemSize;
            for (var r = 0, i = this.itemSize; r < i; r++)
                this.array[t + r] = e.array[n + r];
            return this
        },
        copyArray: function(t) {
            return this.array.set(t),
            this
        },
        copyColorsArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r),
                o = new y),
                e[n++] = o.r,
                e[n++] = o.g,
                e[n++] = o.b
            }
            return this
        },
        copyVector2sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, o = t.length; r < o; r++) {
                var a = t[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r),
                a = new i),
                e[n++] = a.x,
                e[n++] = a.y
            }
            return this
        },
        copyVector3sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r),
                o = new s),
                e[n++] = o.x,
                e[n++] = o.y,
                e[n++] = o.z
            }
            return this
        },
        copyVector4sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r),
                o = new u),
                e[n++] = o.x,
                e[n++] = o.y,
                e[n++] = o.z,
                e[n++] = o.w
            }
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        getX: function(t) {
            return this.array[t * this.itemSize]
        },
        setX: function(t, e) {
            return this.array[t * this.itemSize] = e,
            this
        },
        getY: function(t) {
            return this.array[t * this.itemSize + 1]
        },
        setY: function(t, e) {
            return this.array[t * this.itemSize + 1] = e,
            this
        },
        getZ: function(t) {
            return this.array[t * this.itemSize + 2]
        },
        setZ: function(t, e) {
            return this.array[t * this.itemSize + 2] = e,
            this
        },
        getW: function(t) {
            return this.array[t * this.itemSize + 3]
        },
        setW: function(t, e) {
            return this.array[t * this.itemSize + 3] = e,
            this
        },
        setXY: function(t, e, n) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, r) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = r,
            this
        },
        setXYZW: function(t, e, n, r, i) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = r,
            this.array[t + 3] = i,
            this
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        },
        clone: function() {
            return new this.constructor(this.array,this.itemSize).copy(this)
        }
    }),
    C.prototype = Object.create(A.prototype),
    C.prototype.constructor = C,
    P.prototype = Object.create(A.prototype),
    P.prototype.constructor = P,
    L.prototype = Object.create(A.prototype),
    L.prototype.constructor = L,
    R.prototype = Object.create(A.prototype),
    R.prototype.constructor = R,
    O.prototype = Object.create(A.prototype),
    O.prototype.constructor = O,
    I.prototype = Object.create(A.prototype),
    I.prototype.constructor = I,
    D.prototype = Object.create(A.prototype),
    D.prototype.constructor = D,
    N.prototype = Object.create(A.prototype),
    N.prototype.constructor = N,
    k.prototype = Object.create(A.prototype),
    k.prototype.constructor = k,
    Object.assign(j.prototype, {
        computeGroups: function(t) {
            for (var e, n = [], r = void 0, i = t.faces, o = 0; o < i.length; o++) {
                var a = i[o];
                a.materialIndex !== r && (r = a.materialIndex,
                void 0 !== e && (e.count = 3 * o - e.start,
                n.push(e)),
                e = {
                    start: 3 * o,
                    materialIndex: r
                })
            }
            void 0 !== e && (e.count = 3 * o - e.start,
            n.push(e)),
            this.groups = n
        },
        fromGeometry: function(t) {
            var e, n = t.faces, r = t.vertices, o = t.faceVertexUvs, a = o[0] && o[0].length > 0, s = o[1] && o[1].length > 0, c = t.morphTargets, l = c.length;
            if (l > 0) {
                e = [];
                for (var u = 0; u < l; u++)
                    e[u] = [];
                this.morphTargets.position = e
            }
            var h, d = t.morphNormals, p = d.length;
            if (p > 0) {
                h = [];
                for (var u = 0; u < p; u++)
                    h[u] = [];
                this.morphTargets.normal = h
            }
            for (var f = t.skinIndices, m = t.skinWeights, v = f.length === r.length, g = m.length === r.length, u = 0; u < n.length; u++) {
                var y = n[u];
                this.vertices.push(r[y.a], r[y.b], r[y.c]);
                var _ = y.vertexNormals;
                if (3 === _.length)
                    this.normals.push(_[0], _[1], _[2]);
                else {
                    var x = y.normal;
                    this.normals.push(x, x, x)
                }
                var b = y.vertexColors;
                if (3 === b.length)
                    this.colors.push(b[0], b[1], b[2]);
                else {
                    var w = y.color;
                    this.colors.push(w, w, w)
                }
                if (!0 === a) {
                    var M = o[0][u];
                    void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u),
                    this.uvs.push(new i, new i, new i))
                }
                if (!0 === s) {
                    var M = o[1][u];
                    void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u),
                    this.uvs2.push(new i, new i, new i))
                }
                for (var E = 0; E < l; E++) {
                    var T = c[E].vertices;
                    e[E].push(T[y.a], T[y.b], T[y.c])
                }
                for (var E = 0; E < p; E++) {
                    var S = d[E].vertexNormals[u];
                    h[E].push(S.a, S.b, S.c)
                }
                v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]),
                g && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
            }
            return this.computeGroups(t),
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        }
    });
    var jc = 1;
    B.prototype = Object.assign(Object.create(r.prototype), {
        constructor: B,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(t) {
            Array.isArray(t) ? this.index = new (z(t) > 65535 ? D : O)(t,1) : this.index = t
        },
        addAttribute: function(t, e) {
            return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
            void this.setIndex(e)) : (this.attributes[t] = e,
            this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
            void this.addAttribute(t, new A(arguments[1],arguments[2])))
        },
        getAttribute: function(t) {
            return this.attributes[t]
        },
        removeAttribute: function(t) {
            return delete this.attributes[t],
            this
        },
        addGroup: function(t, e, n) {
            this.groups.push({
                start: t,
                count: e,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(t, e) {
            this.drawRange.start = t,
            this.drawRange.count = e
        },
        applyMatrix: function(t) {
            var e = this.attributes.position;
            void 0 !== e && (t.applyToBufferAttribute(e),
            e.needsUpdate = !0);
            var n = this.attributes.normal;
            if (void 0 !== n) {
                (new c).getNormalMatrix(t).applyToBufferAttribute(n),
                n.needsUpdate = !0
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
        },
        rotateX: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeTranslation(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeScale(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: function() {
            var t = new w;
            return function(e) {
                t.lookAt(e),
                t.updateMatrix(),
                this.applyMatrix(t.matrix)
            }
        }(),
        center: function() {
            var t = new s;
            return function() {
                return this.computeBoundingBox(),
                this.boundingBox.getCenter(t).negate(),
                this.translate(t.x, t.y, t.z),
                this
            }
        }(),
        setFromObject: function(t) {
            var e = t.geometry;
            if (t.isPoints || t.isLine) {
                var n = new N(3 * e.vertices.length,3)
                  , r = new N(3 * e.colors.length,3);
                if (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
                this.addAttribute("color", r.copyColorsArray(e.colors)),
                e.lineDistances && e.lineDistances.length === e.vertices.length) {
                    var i = new N(e.lineDistances.length,1);
                    this.addAttribute("lineDistance", i.copyArray(e.lineDistances))
                }
                null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
            } else
                t.isMesh && e && e.isGeometry && this.fromGeometry(e);
            return this
        },
        setFromPoints: function(t) {
            for (var e = [], n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.push(i.x, i.y, i.z || 0)
            }
            return this.addAttribute("position", new N(e,3)),
            this
        },
        updateFromObject: function(t) {
            var e = t.geometry;
            if (t.isMesh) {
                var n = e.__directGeometry;
                if (!0 === e.elementsNeedUpdate && (n = void 0,
                e.elementsNeedUpdate = !1),
                void 0 === n)
                    return this.fromGeometry(e);
                n.verticesNeedUpdate = e.verticesNeedUpdate,
                n.normalsNeedUpdate = e.normalsNeedUpdate,
                n.colorsNeedUpdate = e.colorsNeedUpdate,
                n.uvsNeedUpdate = e.uvsNeedUpdate,
                n.groupsNeedUpdate = e.groupsNeedUpdate,
                e.verticesNeedUpdate = !1,
                e.normalsNeedUpdate = !1,
                e.colorsNeedUpdate = !1,
                e.uvsNeedUpdate = !1,
                e.groupsNeedUpdate = !1,
                e = n
            }
            var r;
            return !0 === e.verticesNeedUpdate && (r = this.attributes.position,
            void 0 !== r && (r.copyVector3sArray(e.vertices),
            r.needsUpdate = !0),
            e.verticesNeedUpdate = !1),
            !0 === e.normalsNeedUpdate && (r = this.attributes.normal,
            void 0 !== r && (r.copyVector3sArray(e.normals),
            r.needsUpdate = !0),
            e.normalsNeedUpdate = !1),
            !0 === e.colorsNeedUpdate && (r = this.attributes.color,
            void 0 !== r && (r.copyColorsArray(e.colors),
            r.needsUpdate = !0),
            e.colorsNeedUpdate = !1),
            e.uvsNeedUpdate && (r = this.attributes.uv,
            void 0 !== r && (r.copyVector2sArray(e.uvs),
            r.needsUpdate = !0),
            e.uvsNeedUpdate = !1),
            e.lineDistancesNeedUpdate && (r = this.attributes.lineDistance,
            void 0 !== r && (r.copyArray(e.lineDistances),
            r.needsUpdate = !0),
            e.lineDistancesNeedUpdate = !1),
            e.groupsNeedUpdate && (e.computeGroups(t.geometry),
            this.groups = e.groups,
            e.groupsNeedUpdate = !1),
            this
        },
        fromGeometry: function(t) {
            return t.__directGeometry = (new j).fromGeometry(t),
            this.fromDirectGeometry(t.__directGeometry)
        },
        fromDirectGeometry: function(t) {
            var e = new Float32Array(3 * t.vertices.length);
            if (this.addAttribute("position", new A(e,3).copyVector3sArray(t.vertices)),
            t.normals.length > 0) {
                var n = new Float32Array(3 * t.normals.length);
                this.addAttribute("normal", new A(n,3).copyVector3sArray(t.normals))
            }
            if (t.colors.length > 0) {
                var r = new Float32Array(3 * t.colors.length);
                this.addAttribute("color", new A(r,3).copyColorsArray(t.colors))
            }
            if (t.uvs.length > 0) {
                var i = new Float32Array(2 * t.uvs.length);
                this.addAttribute("uv", new A(i,2).copyVector2sArray(t.uvs))
            }
            if (t.uvs2.length > 0) {
                var o = new Float32Array(2 * t.uvs2.length);
                this.addAttribute("uv2", new A(o,2).copyVector2sArray(t.uvs2))
            }
            this.groups = t.groups;
            for (var a in t.morphTargets) {
                for (var s = [], c = t.morphTargets[a], l = 0, u = c.length; l < u; l++) {
                    var h = c[l]
                      , d = new N(3 * h.length,3);
                    s.push(d.copyVector3sArray(h))
                }
                this.morphAttributes[a] = s
            }
            if (t.skinIndices.length > 0) {
                var p = new N(4 * t.skinIndices.length,4);
                this.addAttribute("skinIndex", p.copyVector4sArray(t.skinIndices))
            }
            if (t.skinWeights.length > 0) {
                var f = new N(4 * t.skinWeights.length,4);
                this.addAttribute("skinWeight", f.copyVector4sArray(t.skinWeights))
            }
            return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            this
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new f);
            var t = this.attributes.position;
            void 0 !== t ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(),
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
        },
        computeBoundingSphere: function() {
            var t = new f
              , e = new s;
            return function() {
                null === this.boundingSphere && (this.boundingSphere = new m);
                var n = this.attributes.position;
                if (n) {
                    var r = this.boundingSphere.center;
                    t.setFromBufferAttribute(n),
                    t.getCenter(r);
                    for (var i = 0, o = 0, a = n.count; o < a; o++)
                        e.x = n.getX(o),
                        e.y = n.getY(o),
                        e.z = n.getZ(o),
                        i = Math.max(i, r.distanceToSquared(e));
                    this.boundingSphere.radius = Math.sqrt(i),
                    isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                }
            }
        }(),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var t = this.index
              , e = this.attributes
              , n = this.groups;
            if (e.position) {
                var r = e.position.array;
                if (void 0 === e.normal)
                    this.addAttribute("normal", new A(new Float32Array(r.length),3));
                else
                    for (var i = e.normal.array, o = 0, a = i.length; o < a; o++)
                        i[o] = 0;
                var c, l, u, h = e.normal.array, d = new s, p = new s, f = new s, m = new s, v = new s;
                if (t) {
                    var g = t.array;
                    0 === n.length && this.addGroup(0, g.length);
                    for (var y = 0, _ = n.length; y < _; ++y)
                        for (var x = n[y], b = x.start, w = x.count, o = b, a = b + w; o < a; o += 3)
                            c = 3 * g[o + 0],
                            l = 3 * g[o + 1],
                            u = 3 * g[o + 2],
                            d.fromArray(r, c),
                            p.fromArray(r, l),
                            f.fromArray(r, u),
                            m.subVectors(f, p),
                            v.subVectors(d, p),
                            m.cross(v),
                            h[c] += m.x,
                            h[c + 1] += m.y,
                            h[c + 2] += m.z,
                            h[l] += m.x,
                            h[l + 1] += m.y,
                            h[l + 2] += m.z,
                            h[u] += m.x,
                            h[u + 1] += m.y,
                            h[u + 2] += m.z
                } else
                    for (var o = 0, a = r.length; o < a; o += 9)
                        d.fromArray(r, o),
                        p.fromArray(r, o + 3),
                        f.fromArray(r, o + 6),
                        m.subVectors(f, p),
                        v.subVectors(d, p),
                        m.cross(v),
                        h[o] = m.x,
                        h[o + 1] = m.y,
                        h[o + 2] = m.z,
                        h[o + 3] = m.x,
                        h[o + 4] = m.y,
                        h[o + 5] = m.z,
                        h[o + 6] = m.x,
                        h[o + 7] = m.y,
                        h[o + 8] = m.z;
                this.normalizeNormals(),
                e.normal.needsUpdate = !0
            }
        },
        merge: function(t, e) {
            if (!t || !t.isBufferGeometry)
                return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
            void 0 === e && (e = 0,
            console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
            var n = this.attributes;
            for (var r in n)
                if (void 0 !== t.attributes[r])
                    for (var i = n[r], o = i.array, a = t.attributes[r], s = a.array, c = a.itemSize, l = 0, u = c * e; l < s.length; l++,
                    u++)
                        o[u] = s[l];
            return this
        },
        normalizeNormals: function() {
            var t = new s;
            return function() {
                for (var e = this.attributes.normal, n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.normalize(),
                    e.setXYZ(n, t.x, t.y, t.z)
            }
        }(),
        toNonIndexed: function() {
            if (null === this.index)
                return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                this;
            var t = new B
              , e = this.index.array
              , n = this.attributes;
            for (var r in n) {
                for (var i = n[r], o = i.array, a = i.itemSize, s = new o.constructor(e.length * a), c = 0, l = 0, u = 0, h = e.length; u < h; u++) {
                    c = e[u] * a;
                    for (var d = 0; d < a; d++)
                        s[l++] = o[c++]
                }
                t.addAttribute(r, new A(s,a))
            }
            for (var p = this.groups, u = 0, h = p.length; u < h; u++) {
                var f = p[u];
                t.addGroup(f.start, f.count, f.materialIndex)
            }
            return t
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (t.uuid = this.uuid,
            t.type = this.type,
            "" !== this.name && (t.name = this.name),
            void 0 !== this.parameters) {
                var e = this.parameters;
                for (var n in e)
                    void 0 !== e[n] && (t[n] = e[n]);
                return t
            }
            t.data = {
                attributes: {}
            };
            var r = this.index;
            if (null !== r) {
                var i = Array.prototype.slice.call(r.array);
                t.data.index = {
                    type: r.array.constructor.name,
                    array: i
                }
            }
            var o = this.attributes;
            for (var n in o) {
                var a = o[n]
                  , i = Array.prototype.slice.call(a.array);
                t.data.attributes[n] = {
                    itemSize: a.itemSize,
                    type: a.array.constructor.name,
                    array: i,
                    normalized: a.normalized
                }
            }
            var s = this.groups;
            s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
            var c = this.boundingSphere;
            return null !== c && (t.data.boundingSphere = {
                center: c.center.toArray(),
                radius: c.radius
            }),
            t
        },
        clone: function() {
            return (new B).copy(this)
        },
        copy: function(t) {
            var e, n, r;
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var i = t.index;
            null !== i && this.setIndex(i.clone());
            var o = t.attributes;
            for (e in o) {
                var a = o[e];
                this.addAttribute(e, a.clone())
            }
            var s = t.morphAttributes;
            for (e in s) {
                var c = []
                  , l = s[e];
                for (n = 0,
                r = l.length; n < r; n++)
                    c.push(l[n].clone());
                this.morphAttributes[e] = c
            }
            var u = t.groups;
            for (n = 0,
            r = u.length; n < r; n++) {
                var h = u[n];
                this.addGroup(h.start, h.count, h.materialIndex)
            }
            var d = t.boundingBox;
            null !== d && (this.boundingBox = d.clone());
            var p = t.boundingSphere;
            return null !== p && (this.boundingSphere = p.clone()),
            this.drawRange.start = t.drawRange.start,
            this.drawRange.count = t.drawRange.count,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    U.prototype = Object.create(S.prototype),
    U.prototype.constructor = U,
    F.prototype = Object.create(B.prototype),
    F.prototype.constructor = F,
    H.prototype = Object.create(S.prototype),
    H.prototype.constructor = H,
    G.prototype = Object.create(B.prototype),
    G.prototype.constructor = G;
    var zc = 0;
    V.prototype = Object.assign(Object.create(r.prototype), {
        constructor: V,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(t) {
            if (void 0 !== t)
                for (var e in t) {
                    var n = t[e];
                    if (void 0 !== n)
                        if ("shading" !== e) {
                            var r = this[e];
                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[e] = "overdraw" === e ? Number(n) : n : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                        } else
                            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                            this.flatShading = n === ha;
                    else
                        console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                }
        },
        toJSON: function(t) {
            function e(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    delete r.metadata,
                    e.push(r)
                }
                return e
            }
            var n = void 0 === t || "string" == typeof t;
            n && (t = {
                textures: {},
                images: {}
            });
            var r = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            if (r.uuid = this.uuid,
            r.type = this.type,
            "" !== this.name && (r.name = this.name),
            this.color && this.color.isColor && (r.color = this.color.getHex()),
            void 0 !== this.roughness && (r.roughness = this.roughness),
            void 0 !== this.metalness && (r.metalness = this.metalness),
            this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()),
            1 !== this.emissiveIntensity && (r.emissiveIntensity = this.emissiveIntensity),
            this.specular && this.specular.isColor && (r.specular = this.specular.getHex()),
            void 0 !== this.shininess && (r.shininess = this.shininess),
            void 0 !== this.clearCoat && (r.clearCoat = this.clearCoat),
            void 0 !== this.clearCoatRoughness && (r.clearCoatRoughness = this.clearCoatRoughness),
            this.map && this.map.isTexture && (r.map = this.map.toJSON(t).uuid),
            this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(t).uuid),
            this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(t).uuid),
            this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(t).uuid,
            r.bumpScale = this.bumpScale),
            this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(t).uuid,
            r.normalScale = this.normalScale.toArray()),
            this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(t).uuid,
            r.displacementScale = this.displacementScale,
            r.displacementBias = this.displacementBias),
            this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(t).uuid),
            this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(t).uuid),
            this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(t).uuid),
            this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(t).uuid),
            this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(t).uuid,
            r.reflectivity = this.reflectivity),
            this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(t).uuid),
            void 0 !== this.size && (r.size = this.size),
            void 0 !== this.sizeAttenuation && (r.sizeAttenuation = this.sizeAttenuation),
            this.blending !== ga && (r.blending = this.blending),
            !0 === this.flatShading && (r.flatShading = this.flatShading),
            this.side !== ca && (r.side = this.side),
            this.vertexColors !== pa && (r.vertexColors = this.vertexColors),
            this.opacity < 1 && (r.opacity = this.opacity),
            !0 === this.transparent && (r.transparent = this.transparent),
            r.depthFunc = this.depthFunc,
            r.depthTest = this.depthTest,
            r.depthWrite = this.depthWrite,
            0 !== this.rotation && (r.rotation = this.rotation),
            1 !== this.linewidth && (r.linewidth = this.linewidth),
            void 0 !== this.dashSize && (r.dashSize = this.dashSize),
            void 0 !== this.gapSize && (r.gapSize = this.gapSize),
            void 0 !== this.scale && (r.scale = this.scale),
            !0 === this.dithering && (r.dithering = !0),
            this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha && (r.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (r.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap && (r.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin && (r.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (r.morphTargets = !0),
            !0 === this.skinning && (r.skinning = !0),
            !1 === this.visible && (r.visible = !1),
            "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
            n) {
                var i = e(t.textures)
                  , o = e(t.images);
                i.length > 0 && (r.textures = i),
                o.length > 0 && (r.images = o)
            }
            return r
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.name = t.name,
            this.fog = t.fog,
            this.lights = t.lights,
            this.blending = t.blending,
            this.side = t.side,
            this.flatShading = t.flatShading,
            this.vertexColors = t.vertexColors,
            this.opacity = t.opacity,
            this.transparent = t.transparent,
            this.blendSrc = t.blendSrc,
            this.blendDst = t.blendDst,
            this.blendEquation = t.blendEquation,
            this.blendSrcAlpha = t.blendSrcAlpha,
            this.blendDstAlpha = t.blendDstAlpha,
            this.blendEquationAlpha = t.blendEquationAlpha,
            this.depthFunc = t.depthFunc,
            this.depthTest = t.depthTest,
            this.depthWrite = t.depthWrite,
            this.colorWrite = t.colorWrite,
            this.precision = t.precision,
            this.polygonOffset = t.polygonOffset,
            this.polygonOffsetFactor = t.polygonOffsetFactor,
            this.polygonOffsetUnits = t.polygonOffsetUnits,
            this.dithering = t.dithering,
            this.alphaTest = t.alphaTest,
            this.premultipliedAlpha = t.premultipliedAlpha,
            this.overdraw = t.overdraw,
            this.visible = t.visible,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            this.clipShadows = t.clipShadows,
            this.clipIntersection = t.clipIntersection;
            var e = t.clippingPlanes
              , n = null;
            if (null !== e) {
                var r = e.length;
                n = new Array(r);
                for (var i = 0; i !== r; ++i)
                    n[i] = e[i].clone()
            }
            return this.clippingPlanes = n,
            this.shadowSide = t.shadowSide,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    W.prototype = Object.create(V.prototype),
    W.prototype.constructor = W,
    W.prototype.isMeshBasicMaterial = !0,
    W.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this
    }
    ,
    q.prototype = Object.create(V.prototype),
    q.prototype.constructor = q,
    q.prototype.isShaderMaterial = !0,
    q.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.fragmentShader = t.fragmentShader,
        this.vertexShader = t.vertexShader,
        this.uniforms = Rc.clone(t.uniforms),
        this.defines = t.defines,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.lights = t.lights,
        this.clipping = t.clipping,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this.extensions = t.extensions,
        this
    }
    ,
    q.prototype.toJSON = function(t) {
        var e = V.prototype.toJSON.call(this, t);
        return e.uniforms = this.uniforms,
        e.vertexShader = this.vertexShader,
        e.fragmentShader = this.fragmentShader,
        e
    }
    ,
    Object.assign(X.prototype, {
        set: function(t, e) {
            return this.origin.copy(t),
            this.direction.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.origin.copy(t.origin),
            this.direction.copy(t.direction),
            this
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Ray: .at() target is now required"),
            e = new s),
            e.copy(this.direction).multiplyScalar(t).add(this.origin)
        },
        lookAt: function(t) {
            return this.direction.copy(t).sub(this.origin).normalize(),
            this
        },
        recast: function() {
            var t = new s;
            return function(e) {
                return this.origin.copy(this.at(e, t)),
                this
            }
        }(),
        closestPointToPoint: function(t, e) {
            void 0 === e && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
            e = new s),
            e.subVectors(t, this.origin);
            var n = e.dot(this.direction);
            return n < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(n).add(this.origin)
        },
        distanceToPoint: function(t) {
            return Math.sqrt(this.distanceSqToPoint(t))
        },
        distanceSqToPoint: function() {
            var t = new s;
            return function(e) {
                var n = t.subVectors(e, this.origin).dot(this.direction);
                return n < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(n).add(this.origin),
                t.distanceToSquared(e))
            }
        }(),
        distanceSqToSegment: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o, a) {
                t.copy(r).add(i).multiplyScalar(.5),
                e.copy(i).sub(r).normalize(),
                n.copy(this.origin).sub(t);
                var s, c, l, u, h = .5 * r.distanceTo(i), d = -this.direction.dot(e), p = n.dot(this.direction), f = -n.dot(e), m = n.lengthSq(), v = Math.abs(1 - d * d);
                if (v > 0)
                    if (s = d * f - p,
                    c = d * p - f,
                    u = h * v,
                    s >= 0)
                        if (c >= -u)
                            if (c <= u) {
                                var g = 1 / v;
                                s *= g,
                                c *= g,
                                l = s * (s + d * c + 2 * p) + c * (d * s + c + 2 * f) + m
                            } else
                                c = h,
                                s = Math.max(0, -(d * c + p)),
                                l = -s * s + c * (c + 2 * f) + m;
                        else
                            c = -h,
                            s = Math.max(0, -(d * c + p)),
                            l = -s * s + c * (c + 2 * f) + m;
                    else
                        c <= -u ? (s = Math.max(0, -(-d * h + p)),
                        c = s > 0 ? -h : Math.min(Math.max(-h, -f), h),
                        l = -s * s + c * (c + 2 * f) + m) : c <= u ? (s = 0,
                        c = Math.min(Math.max(-h, -f), h),
                        l = c * (c + 2 * f) + m) : (s = Math.max(0, -(d * h + p)),
                        c = s > 0 ? h : Math.min(Math.max(-h, -f), h),
                        l = -s * s + c * (c + 2 * f) + m);
                else
                    c = d > 0 ? -h : h,
                    s = Math.max(0, -(d * c + p)),
                    l = -s * s + c * (c + 2 * f) + m;
                return o && o.copy(this.direction).multiplyScalar(s).add(this.origin),
                a && a.copy(e).multiplyScalar(c).add(t),
                l
            }
        }(),
        intersectSphere: function() {
            var t = new s;
            return function(e, n) {
                t.subVectors(e.center, this.origin);
                var r = t.dot(this.direction)
                  , i = t.dot(t) - r * r
                  , o = e.radius * e.radius;
                if (i > o)
                    return null;
                var a = Math.sqrt(o - i)
                  , s = r - a
                  , c = r + a;
                return s < 0 && c < 0 ? null : s < 0 ? this.at(c, n) : this.at(s, n)
            }
        }(),
        intersectsSphere: function(t) {
            return this.distanceToPoint(t.center) <= t.radius
        },
        distanceToPlane: function(t) {
            var e = t.normal.dot(this.direction);
            if (0 === e)
                return 0 === t.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(t.normal) + t.constant) / e;
            return n >= 0 ? n : null
        },
        intersectPlane: function(t, e) {
            var n = this.distanceToPlane(t);
            return null === n ? null : this.at(n, e)
        },
        intersectsPlane: function(t) {
            var e = t.distanceToPoint(this.origin);
            return 0 === e || t.normal.dot(this.direction) * e < 0
        },
        intersectBox: function(t, e) {
            var n, r, i, o, a, s, c = 1 / this.direction.x, l = 1 / this.direction.y, u = 1 / this.direction.z, h = this.origin;
            return c >= 0 ? (n = (t.min.x - h.x) * c,
            r = (t.max.x - h.x) * c) : (n = (t.max.x - h.x) * c,
            r = (t.min.x - h.x) * c),
            l >= 0 ? (i = (t.min.y - h.y) * l,
            o = (t.max.y - h.y) * l) : (i = (t.max.y - h.y) * l,
            o = (t.min.y - h.y) * l),
            n > o || i > r ? null : ((i > n || n !== n) && (n = i),
            (o < r || r !== r) && (r = o),
            u >= 0 ? (a = (t.min.z - h.z) * u,
            s = (t.max.z - h.z) * u) : (a = (t.max.z - h.z) * u,
            s = (t.min.z - h.z) * u),
            n > s || a > r ? null : ((a > n || n !== n) && (n = a),
            (s < r || r !== r) && (r = s),
            r < 0 ? null : this.at(n >= 0 ? n : r, e)))
        },
        intersectsBox: function() {
            var t = new s;
            return function(e) {
                return null !== this.intersectBox(e, t)
            }
        }(),
        intersectTriangle: function() {
            var t = new s
              , e = new s
              , n = new s
              , r = new s;
            return function(i, o, a, s, c) {
                e.subVectors(o, i),
                n.subVectors(a, i),
                r.crossVectors(e, n);
                var l, u = this.direction.dot(r);
                if (u > 0) {
                    if (s)
                        return null;
                    l = 1
                } else {
                    if (!(u < 0))
                        return null;
                    l = -1,
                    u = -u
                }
                t.subVectors(this.origin, i);
                var h = l * this.direction.dot(n.crossVectors(t, n));
                if (h < 0)
                    return null;
                var d = l * this.direction.dot(e.cross(t));
                if (d < 0)
                    return null;
                if (h + d > u)
                    return null;
                var p = -l * t.dot(r);
                return p < 0 ? null : this.at(p / u, c)
            }
        }(),
        applyMatrix4: function(t) {
            return this.origin.applyMatrix4(t),
            this.direction.transformDirection(t),
            this
        },
        equals: function(t) {
            return t.origin.equals(this.origin) && t.direction.equals(this.direction)
        }
    }),
    Object.assign(Y.prototype, {
        set: function(t, e) {
            return this.start.copy(t),
            this.end.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.start.copy(t.start),
            this.end.copy(t.end),
            this
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .getCenter() target is now required"),
            t = new s),
            t.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .delta() target is now required"),
            t = new s),
            t.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Line3: .at() target is now required"),
            e = new s),
            this.delta(e).multiplyScalar(t).add(this.start)
        },
        closestPointToPointParameter: function() {
            var t = new s
              , e = new s;
            return function(n, r) {
                t.subVectors(n, this.start),
                e.subVectors(this.end, this.start);
                var i = e.dot(e)
                  , o = e.dot(t)
                  , a = o / i;
                return r && (a = Cc.clamp(a, 0, 1)),
                a
            }
        }(),
        closestPointToPoint: function(t, e, n) {
            var r = this.closestPointToPointParameter(t, e);
            return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
            n = new s),
            this.delta(n).multiplyScalar(r).add(this.start)
        },
        applyMatrix4: function(t) {
            return this.start.applyMatrix4(t),
            this.end.applyMatrix4(t),
            this
        },
        equals: function(t) {
            return t.start.equals(this.start) && t.end.equals(this.end)
        }
    }),
    Object.assign($, {
        getNormal: function() {
            var t = new s;
            return function(e, n, r, i) {
                void 0 === i && (console.warn("THREE.Triangle: .getNormal() target is now required"),
                i = new s),
                i.subVectors(r, n),
                t.subVectors(e, n),
                i.cross(t);
                var o = i.lengthSq();
                return o > 0 ? i.multiplyScalar(1 / Math.sqrt(o)) : i.set(0, 0, 0)
            }
        }(),
        getBarycoord: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o, a, c) {
                t.subVectors(a, i),
                e.subVectors(o, i),
                n.subVectors(r, i);
                var l = t.dot(t)
                  , u = t.dot(e)
                  , h = t.dot(n)
                  , d = e.dot(e)
                  , p = e.dot(n)
                  , f = l * d - u * u;
                if (void 0 === c && (console.warn("THREE.Triangle: .getBarycoord() target is now required"),
                c = new s),
                0 === f)
                    return c.set(-2, -1, -1);
                var m = 1 / f
                  , v = (d * h - u * p) * m
                  , g = (l * p - u * h) * m;
                return c.set(1 - v - g, g, v)
            }
        }(),
        containsPoint: function() {
            var t = new s;
            return function(e, n, r, i) {
                return $.getBarycoord(e, n, r, i, t),
                t.x >= 0 && t.y >= 0 && t.x + t.y <= 1
            }
        }()
    }),
    Object.assign($.prototype, {
        set: function(t, e, n) {
            return this.a.copy(t),
            this.b.copy(e),
            this.c.copy(n),
            this
        },
        setFromPointsAndIndices: function(t, e, n, r) {
            return this.a.copy(t[e]),
            this.b.copy(t[n]),
            this.c.copy(t[r]),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.a.copy(t.a),
            this.b.copy(t.b),
            this.c.copy(t.c),
            this
        },
        getArea: function() {
            var t = new s
              , e = new s;
            return function() {
                return t.subVectors(this.c, this.b),
                e.subVectors(this.a, this.b),
                .5 * t.cross(e).length()
            }
        }(),
        getMidpoint: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getMidpoint() target is now required"),
            t = new s),
            t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(t) {
            return $.getNormal(this.a, this.b, this.c, t)
        },
        getPlane: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getPlane() target is now required"),
            t = new s),
            t.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(t, e) {
            return $.getBarycoord(t, this.a, this.b, this.c, e)
        },
        containsPoint: function(t) {
            return $.containsPoint(t, this.a, this.b, this.c)
        },
        intersectsBox: function(t) {
            return t.intersectsTriangle(this)
        },
        closestPointToPoint: function() {
            var t = new v
              , e = [new Y, new Y, new Y]
              , n = new s
              , r = new s;
            return function(i, o) {
                void 0 === o && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),
                o = new s);
                var a = 1 / 0;
                if (t.setFromCoplanarPoints(this.a, this.b, this.c),
                t.projectPoint(i, n),
                !0 === this.containsPoint(n))
                    o.copy(n);
                else {
                    e[0].set(this.a, this.b),
                    e[1].set(this.b, this.c),
                    e[2].set(this.c, this.a);
                    for (var c = 0; c < e.length; c++) {
                        e[c].closestPointToPoint(n, !0, r);
                        var l = n.distanceToSquared(r);
                        l < a && (a = l,
                        o.copy(r))
                    }
                }
                return o
            }
        }(),
        equals: function(t) {
            return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
        }
    }),
    Z.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Z,
        isMesh: !0,
        setDrawMode: function(t) {
            this.drawMode = t
        },
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            this.drawMode = t.drawMode,
            void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()),
            void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)),
            this
        },
        updateMorphTargets: function() {
            var t, e, n, r = this.geometry;
            if (r.isBufferGeometry) {
                var i = r.morphAttributes
                  , o = Object.keys(i);
                if (o.length > 0) {
                    var a = i[o[0]];
                    if (void 0 !== a)
                        for (this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {},
                        t = 0,
                        e = a.length; t < e; t++)
                            n = a[t].name || String(t),
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[n] = t
                }
            } else {
                var s = r.morphTargets;
                if (void 0 !== s && s.length > 0)
                    for (this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {},
                    t = 0,
                    e = s.length; t < e; t++)
                        n = s[t].name || String(t),
                        this.morphTargetInfluences.push(0),
                        this.morphTargetDictionary[n] = t
            }
        },
        raycast: function() {
            function t(t, e, n, r, i, o, a) {
                return $.getBarycoord(t, e, n, r, _),
                i.multiplyScalar(_.x),
                o.multiplyScalar(_.y),
                a.multiplyScalar(_.z),
                i.add(o).add(a),
                i.clone()
            }
            function e(t, e, n, r, i, o, a, s) {
                if (null === (e.side === la ? r.intersectTriangle(a, o, i, !0, s) : r.intersectTriangle(i, o, a, e.side !== ua, s)))
                    return null;
                b.copy(s),
                b.applyMatrix4(t.matrixWorld);
                var c = n.ray.origin.distanceTo(b);
                return c < n.near || c > n.far ? null : {
                    distance: c,
                    point: b.clone(),
                    object: t
                }
            }
            function n(n, r, i, o, a, s, c, d) {
                l.fromBufferAttribute(o, s),
                u.fromBufferAttribute(o, c),
                h.fromBufferAttribute(o, d);
                var p = e(n, n.material, r, i, l, u, h, x);
                if (p) {
                    a && (v.fromBufferAttribute(a, s),
                    g.fromBufferAttribute(a, c),
                    y.fromBufferAttribute(a, d),
                    p.uv = t(x, l, u, h, v, g, y));
                    var f = new T(s,c,d);
                    $.getNormal(l, u, h, f.normal),
                    p.face = f,
                    p.faceIndex = s
                }
                return p
            }
            var r = new o
              , a = new X
              , c = new m
              , l = new s
              , u = new s
              , h = new s
              , d = new s
              , p = new s
              , f = new s
              , v = new i
              , g = new i
              , y = new i
              , _ = new s
              , x = new s
              , b = new s;
            return function(i, o) {
                var s = this.geometry
                  , m = this.material
                  , _ = this.matrixWorld;
                if (void 0 !== m && (null === s.boundingSphere && s.computeBoundingSphere(),
                c.copy(s.boundingSphere),
                c.applyMatrix4(_),
                !1 !== i.ray.intersectsSphere(c) && (r.getInverse(_),
                a.copy(i.ray).applyMatrix4(r),
                null === s.boundingBox || !1 !== a.intersectsBox(s.boundingBox)))) {
                    var b;
                    if (s.isBufferGeometry) {
                        var w, M, E, T, S, A = s.index, C = s.attributes.position, P = s.attributes.uv;
                        if (null !== A)
                            for (T = 0,
                            S = A.count; T < S; T += 3)
                                w = A.getX(T),
                                M = A.getX(T + 1),
                                E = A.getX(T + 2),
                                (b = n(this, i, a, C, P, w, M, E)) && (b.faceIndex = Math.floor(T / 3),
                                o.push(b));
                        else if (void 0 !== C)
                            for (T = 0,
                            S = C.count; T < S; T += 3)
                                w = T,
                                M = T + 1,
                                E = T + 2,
                                (b = n(this, i, a, C, P, w, M, E)) && (b.index = w,
                                o.push(b))
                    } else if (s.isGeometry) {
                        var L, R, O, I, D = Array.isArray(m), N = s.vertices, k = s.faces, j = s.faceVertexUvs[0];
                        j.length > 0 && (I = j);
                        for (var z = 0, B = k.length; z < B; z++) {
                            var U = k[z]
                              , F = D ? m[U.materialIndex] : m;
                            if (void 0 !== F) {
                                if (L = N[U.a],
                                R = N[U.b],
                                O = N[U.c],
                                !0 === F.morphTargets) {
                                    var H = s.morphTargets
                                      , G = this.morphTargetInfluences;
                                    l.set(0, 0, 0),
                                    u.set(0, 0, 0),
                                    h.set(0, 0, 0);
                                    for (var V = 0, W = H.length; V < W; V++) {
                                        var q = G[V];
                                        if (0 !== q) {
                                            var X = H[V].vertices;
                                            l.addScaledVector(d.subVectors(X[U.a], L), q),
                                            u.addScaledVector(p.subVectors(X[U.b], R), q),
                                            h.addScaledVector(f.subVectors(X[U.c], O), q)
                                        }
                                    }
                                    l.add(L),
                                    u.add(R),
                                    h.add(O),
                                    L = l,
                                    R = u,
                                    O = h
                                }
                                if (b = e(this, F, i, a, L, R, O, x)) {
                                    if (I && I[z]) {
                                        var Y = I[z];
                                        v.copy(Y[0]),
                                        g.copy(Y[1]),
                                        y.copy(Y[2]),
                                        b.uv = t(x, L, R, O, v, g, y)
                                    }
                                    b.face = U,
                                    b.faceIndex = z,
                                    o.push(b)
                                }
                            }
                        }
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    ct.prototype = Object.create(l.prototype),
    ct.prototype.constructor = ct,
    ct.prototype.isCubeTexture = !0,
    Object.defineProperty(ct.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(t) {
            this.image = t
        }
    });
    var Bc = new l
      , Uc = new ct
      , Fc = []
      , Hc = []
      , Gc = new Float32Array(16)
      , Vc = new Float32Array(9);
    Bt.prototype.setValue = function(t, e) {
        for (var n = this.seq, r = 0, i = n.length; r !== i; ++r) {
            var o = n[r];
            o.setValue(t, e[o.id])
        }
    }
    ;
    var Wc = /([\w\d_]+)(\])?(\[|\.)?/g;
    Ht.prototype.setValue = function(t, e, n) {
        var r = this.map[e];
        void 0 !== r && r.setValue(t, n, this.renderer)
    }
    ,
    Ht.prototype.setOptional = function(t, e, n) {
        var r = e[n];
        void 0 !== r && this.setValue(t, n, r)
    }
    ,
    Ht.upload = function(t, e, n, r) {
        for (var i = 0, o = e.length; i !== o; ++i) {
            var a = e[i]
              , s = n[a.id];
            !1 !== s.needsUpdate && a.setValue(t, s.value, r)
        }
    }
    ,
    Ht.seqWithValue = function(t, e) {
        for (var n = [], r = 0, i = t.length; r !== i; ++r) {
            var o = t[r];
            o.id in e && n.push(o)
        }
        return n
    }
    ;
    var qc = 0
      , Xc = 0;
    fe.prototype = Object.create(V.prototype),
    fe.prototype.constructor = fe,
    fe.prototype.isMeshDepthMaterial = !0,
    fe.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.depthPacking = t.depthPacking,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this
    }
    ,
    me.prototype = Object.create(V.prototype),
    me.prototype.constructor = me,
    me.prototype.isMeshDistanceMaterial = !0,
    me.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.referencePosition.copy(t.referencePosition),
        this.nearDistance = t.nearDistance,
        this.farDistance = t.farDistance,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this
    }
    ,
    ge.prototype = Object.create(l.prototype),
    ge.prototype.constructor = ge,
    we.prototype = Object.assign(Object.create(M.prototype), {
        constructor: we,
        isPerspectiveCamera: !0,
        copy: function(t, e) {
            return M.prototype.copy.call(this, t, e),
            this.fov = t.fov,
            this.zoom = t.zoom,
            this.near = t.near,
            this.far = t.far,
            this.focus = t.focus,
            this.aspect = t.aspect,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this.filmGauge = t.filmGauge,
            this.filmOffset = t.filmOffset,
            this
        },
        setFocalLength: function(t) {
            var e = .5 * this.getFilmHeight() / t;
            this.fov = 2 * Cc.RAD2DEG * Math.atan(e),
            this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var t = Math.tan(.5 * Cc.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / t
        },
        getEffectiveFOV: function() {
            return 2 * Cc.RAD2DEG * Math.atan(Math.tan(.5 * Cc.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(t, e, n, r, i, o) {
            this.aspect = t / e,
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = o,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = this.near
              , e = t * Math.tan(.5 * Cc.DEG2RAD * this.fov) / this.zoom
              , n = 2 * e
              , r = this.aspect * n
              , i = -.5 * r
              , o = this.view;
            if (null !== this.view && this.view.enabled) {
                var a = o.fullWidth
                  , s = o.fullHeight;
                i += o.offsetX * r / a,
                e -= o.offsetY * n / s,
                r *= o.width / a,
                n *= o.height / s
            }
            var c = this.filmOffset;
            0 !== c && (i += t * c / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(i, i + r, e, e - n, t, this.far)
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.fov = this.fov,
            e.object.zoom = this.zoom,
            e.object.near = this.near,
            e.object.far = this.far,
            e.object.focus = this.focus,
            e.object.aspect = this.aspect,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e.object.filmGauge = this.filmGauge,
            e.object.filmOffset = this.filmOffset,
            e
        }
    }),
    Me.prototype = Object.assign(Object.create(we.prototype), {
        constructor: Me,
        isArrayCamera: !0
    }),
    Se.prototype.isFogExp2 = !0,
    Se.prototype.clone = function() {
        return new Se(this.color.getHex(),this.density)
    }
    ,
    Se.prototype.toJSON = function() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        }
    }
    ,
    Ae.prototype.isFog = !0,
    Ae.prototype.clone = function() {
        return new Ae(this.color.getHex(),this.near,this.far)
    }
    ,
    Ae.prototype.toJSON = function() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        }
    }
    ,
    Ce.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ce,
        copy: function(t, e) {
            return w.prototype.copy.call(this, t, e),
            null !== t.background && (this.background = t.background.clone()),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
            this.autoUpdate = t.autoUpdate,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return null !== this.background && (e.object.background = this.background.toJSON(t)),
            null !== this.fog && (e.object.fog = this.fog.toJSON()),
            e
        }
    }),
    Pe.prototype = Object.create(V.prototype),
    Pe.prototype.constructor = Pe,
    Pe.prototype.isSpriteMaterial = !0,
    Pe.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.rotation = t.rotation,
        this
    }
    ,
    Le.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Le,
        isSprite: !0,
        raycast: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i) {
                e.setFromMatrixPosition(this.matrixWorld),
                r.ray.closestPointToPoint(e, t),
                n.setFromMatrixScale(this.matrixWorld);
                var o = n.x * n.y / 4;
                if (!(e.distanceToSquared(t) > o)) {
                    var a = r.ray.origin.distanceTo(t);
                    a < r.near || a > r.far || i.push({
                        distance: a,
                        point: t.clone(),
                        face: null,
                        object: this
                    })
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.material).copy(this)
        },
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            void 0 !== t.center && this.center.copy(t.center),
            this
        }
    }),
    Re.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Re,
        copy: function(t) {
            w.prototype.copy.call(this, t, !1);
            for (var e = t.levels, n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                this.addLevel(i.object.clone(), i.distance)
            }
            return this
        },
        addLevel: function(t, e) {
            void 0 === e && (e = 0),
            e = Math.abs(e);
            for (var n = this.levels, r = 0; r < n.length && !(e < n[r].distance); r++)
                ;
            n.splice(r, 0, {
                distance: e,
                object: t
            }),
            this.add(t)
        },
        getObjectForDistance: function(t) {
            for (var e = this.levels, n = 1, r = e.length; n < r && !(t < e[n].distance); n++)
                ;
            return e[n - 1].object
        },
        raycast: function() {
            var t = new s;
            return function(e, n) {
                t.setFromMatrixPosition(this.matrixWorld);
                var r = e.ray.origin.distanceTo(t);
                this.getObjectForDistance(r).raycast(e, n)
            }
        }(),
        update: function() {
            var t = new s
              , e = new s;
            return function(n) {
                var r = this.levels;
                if (r.length > 1) {
                    t.setFromMatrixPosition(n.matrixWorld),
                    e.setFromMatrixPosition(this.matrixWorld);
                    var i = t.distanceTo(e);
                    r[0].object.visible = !0;
                    for (var o = 1, a = r.length; o < a && i >= r[o].distance; o++)
                        r[o - 1].object.visible = !1,
                        r[o].object.visible = !0;
                    for (; o < a; o++)
                        r[o].object.visible = !1
                }
            }
        }(),
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            e.object.levels = [];
            for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                var o = n[r];
                e.object.levels.push({
                    object: o.object.uuid,
                    distance: o.distance
                })
            }
            return e
        }
    }),
    Object.assign(Oe.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var t = 0, e = this.bones.length; t < e; t++) {
                var n = new o;
                this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                this.boneInverses.push(n)
            }
        },
        pose: function() {
            var t, e, n;
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                t.matrix.decompose(t.position, t.quaternion, t.scale))
        },
        update: function() {
            var t = new o
              , e = new o;
            return function() {
                for (var n = this.bones, r = this.boneInverses, i = this.boneMatrices, o = this.boneTexture, a = 0, s = n.length; a < s; a++) {
                    var c = n[a] ? n[a].matrixWorld : e;
                    t.multiplyMatrices(c, r[a]),
                    t.toArray(i, 16 * a)
                }
                void 0 !== o && (o.needsUpdate = !0)
            }
        }(),
        clone: function() {
            return new Oe(this.bones,this.boneInverses)
        },
        getBoneByName: function(t) {
            for (var e = 0, n = this.bones.length; e < n; e++) {
                var r = this.bones[e];
                if (r.name === t)
                    return r
            }
        }
    }),
    Ie.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ie,
        isBone: !0
    }),
    De.prototype = Object.assign(Object.create(Z.prototype), {
        constructor: De,
        isSkinnedMesh: !0,
        initBones: function() {
            var t, e, n, r, i = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
                for (n = 0,
                r = this.geometry.bones.length; n < r; n++)
                    e = this.geometry.bones[n],
                    t = new Ie,
                    i.push(t),
                    t.name = e.name,
                    t.position.fromArray(e.pos),
                    t.quaternion.fromArray(e.rotq),
                    void 0 !== e.scl && t.scale.fromArray(e.scl);
                for (n = 0,
                r = this.geometry.bones.length; n < r; n++)
                    e = this.geometry.bones[n],
                    -1 !== e.parent && null !== e.parent && void 0 !== i[e.parent] ? i[e.parent].add(i[n]) : this.add(i[n])
            }
            return this.updateMatrixWorld(!0),
            i
        },
        bind: function(t, e) {
            this.skeleton = t,
            void 0 === e && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            e = this.matrixWorld),
            this.bindMatrix.copy(e),
            this.bindMatrixInverse.getInverse(e)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            var t, e;
            if (this.geometry && this.geometry.isGeometry)
                for (e = 0; e < this.geometry.skinWeights.length; e++) {
                    var n = this.geometry.skinWeights[e];
                    t = 1 / n.manhattanLength(),
                    t !== 1 / 0 ? n.multiplyScalar(t) : n.set(1, 0, 0, 0)
                }
            else if (this.geometry && this.geometry.isBufferGeometry) {
                var r = new u
                  , i = this.geometry.attributes.skinWeight;
                for (e = 0; e < i.count; e++)
                    r.x = i.getX(e),
                    r.y = i.getY(e),
                    r.z = i.getZ(e),
                    r.w = i.getW(e),
                    t = 1 / r.manhattanLength(),
                    t !== 1 / 0 ? r.multiplyScalar(t) : r.set(1, 0, 0, 0),
                    i.setXYZW(e, r.x, r.y, r.z, r.w)
            }
        },
        updateMatrixWorld: function(t) {
            Z.prototype.updateMatrixWorld.call(this, t),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Ne.prototype = Object.create(V.prototype),
    Ne.prototype.constructor = Ne,
    Ne.prototype.isLineBasicMaterial = !0,
    Ne.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.linewidth = t.linewidth,
        this.linecap = t.linecap,
        this.linejoin = t.linejoin,
        this
    }
    ,
    ke.prototype = Object.assign(Object.create(w.prototype), {
        constructor: ke,
        isLine: !0,
        computeLineDistances: function() {
            var t = new s
              , e = new s;
            return function() {
                var n = this.geometry;
                if (n.isBufferGeometry)
                    if (null === n.index) {
                        for (var r = n.attributes.position, i = [0], o = 1, a = r.count; o < a; o++)
                            t.fromBufferAttribute(r, o - 1),
                            e.fromBufferAttribute(r, o),
                            i[o] = i[o - 1],
                            i[o] += t.distanceTo(e);
                        n.addAttribute("lineDistance", new THREE.Float32BufferAttribute(i,1))
                    } else
                        console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (n.isGeometry) {
                    var s = n.vertices
                      , i = n.lineDistances;
                    i[0] = 0;
                    for (var o = 1, a = s.length; o < a; o++)
                        i[o] = i[o - 1],
                        i[o] += s[o - 1].distanceTo(s[o])
                }
                return this
            }
        }(),
        raycast: function() {
            var t = new o
              , e = new X
              , n = new m;
            return function(r, i) {
                var o = r.linePrecision
                  , a = o * o
                  , c = this.geometry
                  , l = this.matrixWorld;
                if (null === c.boundingSphere && c.computeBoundingSphere(),
                n.copy(c.boundingSphere),
                n.applyMatrix4(l),
                !1 !== r.ray.intersectsSphere(n)) {
                    t.getInverse(l),
                    e.copy(r.ray).applyMatrix4(t);
                    var u = new s
                      , h = new s
                      , d = new s
                      , p = new s
                      , f = this && this.isLineSegments ? 2 : 1;
                    if (c.isBufferGeometry) {
                        var m = c.index
                          , v = c.attributes
                          , g = v.position.array;
                        if (null !== m)
                            for (var y = m.array, _ = 0, x = y.length - 1; _ < x; _ += f) {
                                var b = y[_]
                                  , w = y[_ + 1];
                                u.fromArray(g, 3 * b),
                                h.fromArray(g, 3 * w);
                                var M = e.distanceSqToSegment(u, h, p, d);
                                if (!(M > a)) {
                                    p.applyMatrix4(this.matrixWorld);
                                    var E = r.ray.origin.distanceTo(p);
                                    E < r.near || E > r.far || i.push({
                                        distance: E,
                                        point: d.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                        else
                            for (var _ = 0, x = g.length / 3 - 1; _ < x; _ += f) {
                                u.fromArray(g, 3 * _),
                                h.fromArray(g, 3 * _ + 3);
                                var M = e.distanceSqToSegment(u, h, p, d);
                                if (!(M > a)) {
                                    p.applyMatrix4(this.matrixWorld);
                                    var E = r.ray.origin.distanceTo(p);
                                    E < r.near || E > r.far || i.push({
                                        distance: E,
                                        point: d.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                    } else if (c.isGeometry)
                        for (var T = c.vertices, S = T.length, _ = 0; _ < S - 1; _ += f) {
                            var M = e.distanceSqToSegment(T[_], T[_ + 1], p, d);
                            if (!(M > a)) {
                                p.applyMatrix4(this.matrixWorld);
                                var E = r.ray.origin.distanceTo(p);
                                E < r.near || E > r.far || i.push({
                                    distance: E,
                                    point: d.clone().applyMatrix4(this.matrixWorld),
                                    index: _,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    je.prototype = Object.assign(Object.create(ke.prototype), {
        constructor: je,
        isLineSegments: !0,
        computeLineDistances: function() {
            var t = new s
              , e = new s;
            return function() {
                var n = this.geometry;
                if (n.isBufferGeometry)
                    if (null === n.index) {
                        for (var r = n.attributes.position, i = [], o = 0, a = r.count; o < a; o += 2)
                            t.fromBufferAttribute(r, o),
                            e.fromBufferAttribute(r, o + 1),
                            i[o] = 0 === o ? 0 : i[o - 1],
                            i[o + 1] = i[o] + t.distanceTo(e);
                        n.addAttribute("lineDistance", new THREE.Float32BufferAttribute(i,1))
                    } else
                        console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (n.isGeometry)
                    for (var s = n.vertices, i = n.lineDistances, o = 0, a = s.length; o < a; o += 2)
                        t.copy(s[o]),
                        e.copy(s[o + 1]),
                        i[o] = 0 === o ? 0 : i[o - 1],
                        i[o + 1] = i[o] + t.distanceTo(e);
                return this
            }
        }()
    }),
    ze.prototype = Object.assign(Object.create(ke.prototype), {
        constructor: ze,
        isLineLoop: !0
    }),
    Be.prototype = Object.create(V.prototype),
    Be.prototype.constructor = Be,
    Be.prototype.isPointsMaterial = !0,
    Be.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.size = t.size,
        this.sizeAttenuation = t.sizeAttenuation,
        this
    }
    ,
    Ue.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ue,
        isPoints: !0,
        raycast: function() {
            var t = new o
              , e = new X
              , n = new m;
            return function(r, i) {
                function o(t, n) {
                    var o = e.distanceSqToPoint(t);
                    if (o < d) {
                        e.closestPointToPoint(t, f),
                        f.applyMatrix4(l);
                        var s = r.ray.origin.distanceTo(f);
                        if (s < r.near || s > r.far)
                            return;
                        i.push({
                            distance: s,
                            distanceToRay: Math.sqrt(o),
                            point: f.clone(),
                            index: n,
                            face: null,
                            object: a
                        })
                    }
                }
                var a = this
                  , c = this.geometry
                  , l = this.matrixWorld
                  , u = r.params.Points.threshold;
                if (null === c.boundingSphere && c.computeBoundingSphere(),
                n.copy(c.boundingSphere),
                n.applyMatrix4(l),
                n.radius += u,
                !1 !== r.ray.intersectsSphere(n)) {
                    t.getInverse(l),
                    e.copy(r.ray).applyMatrix4(t);
                    var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                      , d = h * h
                      , p = new s
                      , f = new s;
                    if (c.isBufferGeometry) {
                        var m = c.index
                          , v = c.attributes
                          , g = v.position.array;
                        if (null !== m)
                            for (var y = m.array, _ = 0, x = y.length; _ < x; _++) {
                                var b = y[_];
                                p.fromArray(g, 3 * b),
                                o(p, b)
                            }
                        else
                            for (var _ = 0, w = g.length / 3; _ < w; _++)
                                p.fromArray(g, 3 * _),
                                o(p, _)
                    } else
                        for (var M = c.vertices, _ = 0, w = M.length; _ < w; _++)
                            o(M[_], _)
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Fe.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Fe,
        isGroup: !0
    }),
    He.prototype = Object.assign(Object.create(l.prototype), {
        constructor: He,
        isVideoTexture: !0,
        update: function() {
            var t = this.image;
            t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }),
    Ge.prototype = Object.create(l.prototype),
    Ge.prototype.constructor = Ge,
    Ge.prototype.isCompressedTexture = !0,
    Ve.prototype = Object.create(l.prototype),
    Ve.prototype.constructor = Ve,
    Ve.prototype.isDepthTexture = !0,
    We.prototype = Object.create(B.prototype),
    We.prototype.constructor = We,
    qe.prototype = Object.create(S.prototype),
    qe.prototype.constructor = qe,
    Xe.prototype = Object.create(B.prototype),
    Xe.prototype.constructor = Xe,
    Ye.prototype = Object.create(S.prototype),
    Ye.prototype.constructor = Ye,
    $e.prototype = Object.create(B.prototype),
    $e.prototype.constructor = $e,
    Ze.prototype = Object.create(S.prototype),
    Ze.prototype.constructor = Ze,
    Je.prototype = Object.create($e.prototype),
    Je.prototype.constructor = Je,
    Qe.prototype = Object.create(S.prototype),
    Qe.prototype.constructor = Qe,
    Ke.prototype = Object.create($e.prototype),
    Ke.prototype.constructor = Ke,
    tn.prototype = Object.create(S.prototype),
    tn.prototype.constructor = tn,
    en.prototype = Object.create($e.prototype),
    en.prototype.constructor = en,
    nn.prototype = Object.create(S.prototype),
    nn.prototype.constructor = nn,
    rn.prototype = Object.create($e.prototype),
    rn.prototype.constructor = rn,
    on.prototype = Object.create(S.prototype),
    on.prototype.constructor = on,
    an.prototype = Object.create(B.prototype),
    an.prototype.constructor = an,
    sn.prototype = Object.create(S.prototype),
    sn.prototype.constructor = sn,
    cn.prototype = Object.create(B.prototype),
    cn.prototype.constructor = cn,
    ln.prototype = Object.create(S.prototype),
    ln.prototype.constructor = ln,
    un.prototype = Object.create(B.prototype),
    un.prototype.constructor = un;
    var Yc = {
        triangulate: function(t, e, n) {
            n = n || 2;
            var r = e && e.length
              , i = r ? e[0] * n : t.length
              , o = hn(t, 0, i, n, !0)
              , a = [];
            if (!o)
                return a;
            var s, c, l, u, h, d, p;
            if (r && (o = yn(t, e, o, n)),
            t.length > 80 * n) {
                s = l = t[0],
                c = u = t[1];
                for (var f = n; f < i; f += n)
                    h = t[f],
                    d = t[f + 1],
                    h < s && (s = h),
                    d < c && (c = d),
                    h > l && (l = h),
                    d > u && (u = d);
                p = Math.max(l - s, u - c),
                p = 0 !== p ? 1 / p : 0
            }
            return pn(o, a, n, s, c, p),
            a
        }
    }
      , $c = {
        area: function(t) {
            for (var e = t.length, n = 0, r = e - 1, i = 0; i < e; r = i++)
                n += t[r].x * t[i].y - t[i].x * t[r].y;
            return .5 * n
        },
        isClockWise: function(t) {
            return $c.area(t) < 0
        },
        triangulateShape: function(t, e) {
            var n = []
              , r = []
              , i = [];
            Bn(t),
            Un(n, t);
            var o = t.length;
            e.forEach(Bn);
            for (var a = 0; a < e.length; a++)
                r.push(o),
                o += e[a].length,
                Un(n, e[a]);
            for (var s = Yc.triangulate(n, r), a = 0; a < s.length; a += 3)
                i.push(s.slice(a, a + 3));
            return i
        }
    };
    Fn.prototype = Object.create(S.prototype),
    Fn.prototype.constructor = Fn,
    Hn.prototype = Object.create(B.prototype),
    Hn.prototype.constructor = Hn,
    Hn.prototype.getArrays = function() {
        var t = this.getAttribute("position")
          , e = t ? Array.prototype.slice.call(t.array) : []
          , n = this.getAttribute("uv")
          , r = n ? Array.prototype.slice.call(n.array) : []
          , i = this.index;
        return {
            position: e,
            uv: r,
            index: i ? Array.prototype.slice.call(i.array) : []
        }
    }
    ,
    Hn.prototype.addShapeList = function(t, e) {
        var n = t.length;
        e.arrays = this.getArrays();
        for (var r = 0; r < n; r++) {
            var i = t[r];
            this.addShape(i, e)
        }
        this.setIndex(e.arrays.index),
        this.addAttribute("position", new N(e.arrays.position,3)),
        this.addAttribute("uv", new N(e.arrays.uv,2))
    }
    ,
    Hn.prototype.addShape = function(t, e) {
        function n(t, e, n) {
            return e || console.error("THREE.ExtrudeGeometry: vec does not exist"),
            e.clone().multiplyScalar(n).add(t)
        }
        function r(t, e, n) {
            var r, o, a, s = t.x - e.x, c = t.y - e.y, l = n.x - t.x, u = n.y - t.y, h = s * s + c * c, d = s * u - c * l;
            if (Math.abs(d) > Number.EPSILON) {
                var p = Math.sqrt(h)
                  , f = Math.sqrt(l * l + u * u)
                  , m = e.x - c / p
                  , v = e.y + s / p
                  , g = n.x - u / f
                  , y = n.y + l / f
                  , _ = ((g - m) * u - (y - v) * l) / (s * u - c * l);
                r = m + s * _ - t.x,
                o = v + c * _ - t.y;
                var x = r * r + o * o;
                if (x <= 2)
                    return new i(r,o);
                a = Math.sqrt(x / 2)
            } else {
                var b = !1;
                s > Number.EPSILON ? l > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? l < -Number.EPSILON && (b = !0) : Math.sign(c) === Math.sign(u) && (b = !0),
                b ? (r = -c,
                o = s,
                a = Math.sqrt(h)) : (r = s,
                o = c,
                a = Math.sqrt(h / 2))
            }
            return new i(r / a,o / a)
        }
        function o(t, e) {
            var n, r;
            for (J = t.length; --J >= 0; ) {
                n = J,
                r = J - 1,
                r < 0 && (r = t.length - 1);
                var i = 0
                  , o = C + 2 * T;
                for (i = 0; i < o; i++) {
                    var a = Y * i
                      , s = Y * (i + 1);
                    l(e + n + a, e + r + a, e + r + s, e + n + s)
                }
            }
        }
        function a(t, e, n) {
            b.push(t),
            b.push(e),
            b.push(n)
        }
        function c(t, e, n) {
            u(t),
            u(e),
            u(n);
            var r = y.length / 3
              , i = R.generateTopUV(k, y, r - 3, r - 2, r - 1);
            h(i[0]),
            h(i[1]),
            h(i[2])
        }
        function l(t, e, n, r) {
            u(t),
            u(e),
            u(r),
            u(e),
            u(n),
            u(r);
            var i = y.length / 3
              , o = R.generateSideWallUV(k, y, i - 6, i - 3, i - 2, i - 1);
            h(o[0]),
            h(o[1]),
            h(o[3]),
            h(o[1]),
            h(o[2]),
            h(o[3])
        }
        function u(t) {
            _.push(y.length / 3),
            y.push(b[3 * t + 0]),
            y.push(b[3 * t + 1]),
            y.push(b[3 * t + 2])
        }
        function h(t) {
            x.push(t.x),
            x.push(t.y)
        }
        var d, p, f, m, v, g = e.arrays ? e.arrays : this.getArrays(), y = g.position, _ = g.index, x = g.uv, b = [], w = void 0 !== e.amount ? e.amount : 100, M = void 0 !== e.bevelThickness ? e.bevelThickness : 6, E = void 0 !== e.bevelSize ? e.bevelSize : M - 2, T = void 0 !== e.bevelSegments ? e.bevelSegments : 3, S = void 0 === e.bevelEnabled || e.bevelEnabled, A = void 0 !== e.curveSegments ? e.curveSegments : 12, C = void 0 !== e.steps ? e.steps : 1, P = e.extrudePath, L = !1, R = void 0 !== e.UVGenerator ? e.UVGenerator : Fn.WorldUVGenerator;
        P && (d = P.getSpacedPoints(C),
        L = !0,
        S = !1,
        p = void 0 !== e.frames ? e.frames : P.computeFrenetFrames(C, !1),
        f = new s,
        m = new s,
        v = new s),
        S || (T = 0,
        M = 0,
        E = 0);
        var O, I, D, k = this, j = t.extractPoints(A), z = j.shape, B = j.holes;
        if (!$c.isClockWise(z))
            for (z = z.reverse(),
            I = 0,
            D = B.length; I < D; I++)
                O = B[I],
                $c.isClockWise(O) && (B[I] = O.reverse());
        var U = $c.triangulateShape(z, B)
          , F = z;
        for (I = 0,
        D = B.length; I < D; I++)
            O = B[I],
            z = z.concat(O);
        for (var H, G, V, W, q, X, Y = z.length, $ = U.length, Z = [], J = 0, Q = F.length, K = Q - 1, tt = J + 1; J < Q; J++,
        K++,
        tt++)
            K === Q && (K = 0),
            tt === Q && (tt = 0),
            Z[J] = r(F[J], F[K], F[tt]);
        var et, nt = [], rt = Z.concat();
        for (I = 0,
        D = B.length; I < D; I++) {
            for (O = B[I],
            et = [],
            J = 0,
            Q = O.length,
            K = Q - 1,
            tt = J + 1; J < Q; J++,
            K++,
            tt++)
                K === Q && (K = 0),
                tt === Q && (tt = 0),
                et[J] = r(O[J], O[K], O[tt]);
            nt.push(et),
            rt = rt.concat(et)
        }
        for (H = 0; H < T; H++) {
            for (V = H / T,
            W = M * Math.cos(V * Math.PI / 2),
            G = E * Math.sin(V * Math.PI / 2),
            J = 0,
            Q = F.length; J < Q; J++)
                q = n(F[J], Z[J], G),
                a(q.x, q.y, -W);
            for (I = 0,
            D = B.length; I < D; I++)
                for (O = B[I],
                et = nt[I],
                J = 0,
                Q = O.length; J < Q; J++)
                    q = n(O[J], et[J], G),
                    a(q.x, q.y, -W)
        }
        for (G = E,
        J = 0; J < Y; J++)
            q = S ? n(z[J], rt[J], G) : z[J],
            L ? (m.copy(p.normals[0]).multiplyScalar(q.x),
            f.copy(p.binormals[0]).multiplyScalar(q.y),
            v.copy(d[0]).add(m).add(f),
            a(v.x, v.y, v.z)) : a(q.x, q.y, 0);
        var it;
        for (it = 1; it <= C; it++)
            for (J = 0; J < Y; J++)
                q = S ? n(z[J], rt[J], G) : z[J],
                L ? (m.copy(p.normals[it]).multiplyScalar(q.x),
                f.copy(p.binormals[it]).multiplyScalar(q.y),
                v.copy(d[it]).add(m).add(f),
                a(v.x, v.y, v.z)) : a(q.x, q.y, w / C * it);
        for (H = T - 1; H >= 0; H--) {
            for (V = H / T,
            W = M * Math.cos(V * Math.PI / 2),
            G = E * Math.sin(V * Math.PI / 2),
            J = 0,
            Q = F.length; J < Q; J++)
                q = n(F[J], Z[J], G),
                a(q.x, q.y, w + W);
            for (I = 0,
            D = B.length; I < D; I++)
                for (O = B[I],
                et = nt[I],
                J = 0,
                Q = O.length; J < Q; J++)
                    q = n(O[J], et[J], G),
                    L ? a(q.x, q.y + d[C - 1].y, d[C - 1].x + W) : a(q.x, q.y, w + W)
        }
        !function() {
            var t = y.length / 3;
            if (S) {
                var e = 0
                  , n = Y * e;
                for (J = 0; J < $; J++)
                    X = U[J],
                    c(X[2] + n, X[1] + n, X[0] + n);
                for (e = C + 2 * T,
                n = Y * e,
                J = 0; J < $; J++)
                    X = U[J],
                    c(X[0] + n, X[1] + n, X[2] + n)
            } else {
                for (J = 0; J < $; J++)
                    X = U[J],
                    c(X[2], X[1], X[0]);
                for (J = 0; J < $; J++)
                    X = U[J],
                    c(X[0] + Y * C, X[1] + Y * C, X[2] + Y * C)
            }
            k.addGroup(t, y.length / 3 - t, 0)
        }(),
        function() {
            var t = y.length / 3
              , e = 0;
            for (o(F, e),
            e += F.length,
            I = 0,
            D = B.length; I < D; I++)
                O = B[I],
                o(O, e),
                e += O.length;
            k.addGroup(t, y.length / 3 - t, 1)
        }(),
        e.arrays || (this.setIndex(_),
        this.addAttribute("position", new N(y,3)),
        this.addAttribute("uv", new N(x,2)))
    }
    ,
    Fn.WorldUVGenerator = {
        generateTopUV: function(t, e, n, r, o) {
            var a = e[3 * n]
              , s = e[3 * n + 1]
              , c = e[3 * r]
              , l = e[3 * r + 1]
              , u = e[3 * o]
              , h = e[3 * o + 1];
            return [new i(a,s), new i(c,l), new i(u,h)]
        },
        generateSideWallUV: function(t, e, n, r, o, a) {
            var s = e[3 * n]
              , c = e[3 * n + 1]
              , l = e[3 * n + 2]
              , u = e[3 * r]
              , h = e[3 * r + 1]
              , d = e[3 * r + 2]
              , p = e[3 * o]
              , f = e[3 * o + 1]
              , m = e[3 * o + 2]
              , v = e[3 * a]
              , g = e[3 * a + 1]
              , y = e[3 * a + 2];
            return Math.abs(c - h) < .01 ? [new i(s,1 - l), new i(u,1 - d), new i(p,1 - m), new i(v,1 - y)] : [new i(c,1 - l), new i(h,1 - d), new i(f,1 - m), new i(g,1 - y)]
        }
    },
    Gn.prototype = Object.create(S.prototype),
    Gn.prototype.constructor = Gn,
    Vn.prototype = Object.create(Hn.prototype),
    Vn.prototype.constructor = Vn,
    Wn.prototype = Object.create(S.prototype),
    Wn.prototype.constructor = Wn,
    qn.prototype = Object.create(B.prototype),
    qn.prototype.constructor = qn,
    Xn.prototype = Object.create(S.prototype),
    Xn.prototype.constructor = Xn,
    Yn.prototype = Object.create(B.prototype),
    Yn.prototype.constructor = Yn,
    $n.prototype = Object.create(S.prototype),
    $n.prototype.constructor = $n,
    Zn.prototype = Object.create(B.prototype),
    Zn.prototype.constructor = Zn,
    Jn.prototype = Object.create(S.prototype),
    Jn.prototype.constructor = Jn,
    Jn.prototype.toJSON = function() {
        var t = S.prototype.toJSON.call(this);
        return Kn(this.parameters.shapes, t)
    }
    ,
    Qn.prototype = Object.create(B.prototype),
    Qn.prototype.constructor = Qn,
    Qn.prototype.toJSON = function() {
        var t = B.prototype.toJSON.call(this);
        return Kn(this.parameters.shapes, t)
    }
    ,
    tr.prototype = Object.create(B.prototype),
    tr.prototype.constructor = tr,
    er.prototype = Object.create(S.prototype),
    er.prototype.constructor = er,
    nr.prototype = Object.create(B.prototype),
    nr.prototype.constructor = nr,
    rr.prototype = Object.create(er.prototype),
    rr.prototype.constructor = rr,
    ir.prototype = Object.create(nr.prototype),
    ir.prototype.constructor = ir,
    or.prototype = Object.create(S.prototype),
    or.prototype.constructor = or,
    ar.prototype = Object.create(B.prototype),
    ar.prototype.constructor = ar;
    var Zc = Object.freeze({
        WireframeGeometry: We,
        ParametricGeometry: qe,
        ParametricBufferGeometry: Xe,
        TetrahedronGeometry: Ze,
        TetrahedronBufferGeometry: Je,
        OctahedronGeometry: Qe,
        OctahedronBufferGeometry: Ke,
        IcosahedronGeometry: tn,
        IcosahedronBufferGeometry: en,
        DodecahedronGeometry: nn,
        DodecahedronBufferGeometry: rn,
        PolyhedronGeometry: Ye,
        PolyhedronBufferGeometry: $e,
        TubeGeometry: on,
        TubeBufferGeometry: an,
        TorusKnotGeometry: sn,
        TorusKnotBufferGeometry: cn,
        TorusGeometry: ln,
        TorusBufferGeometry: un,
        TextGeometry: Gn,
        TextBufferGeometry: Vn,
        SphereGeometry: Wn,
        SphereBufferGeometry: qn,
        RingGeometry: Xn,
        RingBufferGeometry: Yn,
        PlaneGeometry: H,
        PlaneBufferGeometry: G,
        LatheGeometry: $n,
        LatheBufferGeometry: Zn,
        ShapeGeometry: Jn,
        ShapeBufferGeometry: Qn,
        ExtrudeGeometry: Fn,
        ExtrudeBufferGeometry: Hn,
        EdgesGeometry: tr,
        ConeGeometry: rr,
        ConeBufferGeometry: ir,
        CylinderGeometry: er,
        CylinderBufferGeometry: nr,
        CircleGeometry: or,
        CircleBufferGeometry: ar,
        BoxGeometry: U,
        BoxBufferGeometry: F
    });
    sr.prototype = Object.create(V.prototype),
    sr.prototype.constructor = sr,
    sr.prototype.isShadowMaterial = !0,
    sr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this
    }
    ,
    cr.prototype = Object.create(q.prototype),
    cr.prototype.constructor = cr,
    cr.prototype.isRawShaderMaterial = !0,
    lr.prototype = Object.create(V.prototype),
    lr.prototype.constructor = lr,
    lr.prototype.isMeshStandardMaterial = !0,
    lr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.defines = {
            STANDARD: ""
        },
        this.color.copy(t.color),
        this.roughness = t.roughness,
        this.metalness = t.metalness,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.roughnessMap = t.roughnessMap,
        this.metalnessMap = t.metalnessMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.envMapIntensity = t.envMapIntensity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    ur.prototype = Object.create(lr.prototype),
    ur.prototype.constructor = ur,
    ur.prototype.isMeshPhysicalMaterial = !0,
    ur.prototype.copy = function(t) {
        return lr.prototype.copy.call(this, t),
        this.defines = {
            PHYSICAL: ""
        },
        this.reflectivity = t.reflectivity,
        this.clearCoat = t.clearCoat,
        this.clearCoatRoughness = t.clearCoatRoughness,
        this
    }
    ,
    hr.prototype = Object.create(V.prototype),
    hr.prototype.constructor = hr,
    hr.prototype.isMeshPhongMaterial = !0,
    hr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.specular.copy(t.specular),
        this.shininess = t.shininess,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    dr.prototype = Object.create(hr.prototype),
    dr.prototype.constructor = dr,
    dr.prototype.isMeshToonMaterial = !0,
    dr.prototype.copy = function(t) {
        return hr.prototype.copy.call(this, t),
        this.gradientMap = t.gradientMap,
        this
    }
    ,
    pr.prototype = Object.create(V.prototype),
    pr.prototype.constructor = pr,
    pr.prototype.isMeshNormalMaterial = !0,
    pr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    fr.prototype = Object.create(V.prototype),
    fr.prototype.constructor = fr,
    fr.prototype.isMeshLambertMaterial = !0,
    fr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    mr.prototype = Object.create(Ne.prototype),
    mr.prototype.constructor = mr,
    mr.prototype.isLineDashedMaterial = !0,
    mr.prototype.copy = function(t) {
        return Ne.prototype.copy.call(this, t),
        this.scale = t.scale,
        this.dashSize = t.dashSize,
        this.gapSize = t.gapSize,
        this
    }
    ;
    var Jc = Object.freeze({
        ShadowMaterial: sr,
        SpriteMaterial: Pe,
        RawShaderMaterial: cr,
        ShaderMaterial: q,
        PointsMaterial: Be,
        MeshPhysicalMaterial: ur,
        MeshStandardMaterial: lr,
        MeshPhongMaterial: hr,
        MeshToonMaterial: dr,
        MeshNormalMaterial: pr,
        MeshLambertMaterial: fr,
        MeshDepthMaterial: fe,
        MeshDistanceMaterial: me,
        MeshBasicMaterial: W,
        LineDashedMaterial: mr,
        LineBasicMaterial: Ne,
        Material: V
    })
      , Qc = {
        enabled: !1,
        files: {},
        add: function(t, e) {
            !1 !== this.enabled && (this.files[t] = e)
        },
        get: function(t) {
            if (!1 !== this.enabled)
                return this.files[t]
        },
        remove: function(t) {
            delete this.files[t]
        },
        clear: function() {
            this.files = {}
        }
    }
      , Kc = new vr
      , tl = {};
    Object.assign(gr.prototype, {
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var i = this
              , o = Qc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            if (void 0 !== tl[t])
                return void tl[t].push({
                    onLoad: e,
                    onProgress: n,
                    onError: r
                });
            var a = /^data:(.*?)(;base64)?,(.*)$/
              , s = t.match(a);
            if (s) {
                var c = s[1]
                  , l = !!s[2]
                  , u = s[3];
                u = window.decodeURIComponent(u),
                l && (u = window.atob(u));
                try {
                    var h, d = (this.responseType || "").toLowerCase();
                    switch (d) {
                    case "arraybuffer":
                    case "blob":
                        for (var p = new Uint8Array(u.length), f = 0; f < u.length; f++)
                            p[f] = u.charCodeAt(f);
                        h = "blob" === d ? new Blob([p.buffer],{
                            type: c
                        }) : p.buffer;
                        break;
                    case "document":
                        var m = new DOMParser;
                        h = m.parseFromString(u, c);
                        break;
                    case "json":
                        h = JSON.parse(u);
                        break;
                    default:
                        h = u
                    }
                    window.setTimeout(function() {
                        e && e(h),
                        i.manager.itemEnd(t)
                    }, 0)
                } catch (e) {
                    window.setTimeout(function() {
                        r && r(e),
                        i.manager.itemEnd(t),
                        i.manager.itemError(t)
                    }, 0)
                }
            } else {
                tl[t] = [],
                tl[t].push({
                    onLoad: e,
                    onProgress: n,
                    onError: r
                });
                var v = new XMLHttpRequest;
                v.open("GET", t, !0),
                v.addEventListener("load", function(e) {
                    var n = this.response;
                    Qc.add(t, n);
                    var r = tl[t];
                    if (delete tl[t],
                    200 === this.status) {
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onLoad && s.onLoad(n)
                        }
                        i.manager.itemEnd(t)
                    } else if (0 === this.status) {
                        console.warn("THREE.FileLoader: HTTP Status 0 received.");
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onLoad && s.onLoad(n)
                        }
                        i.manager.itemEnd(t)
                    } else {
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onError && s.onError(e)
                        }
                        i.manager.itemEnd(t),
                        i.manager.itemError(t)
                    }
                }, !1),
                v.addEventListener("progress", function(e) {
                    for (var n = tl[t], r = 0, i = n.length; r < i; r++) {
                        var o = n[r];
                        o.onProgress && o.onProgress(e)
                    }
                }, !1),
                v.addEventListener("error", function(e) {
                    var n = tl[t];
                    delete tl[t];
                    for (var r = 0, o = n.length; r < o; r++) {
                        var a = n[r];
                        a.onError && a.onError(e)
                    }
                    i.manager.itemEnd(t),
                    i.manager.itemError(t)
                }, !1),
                void 0 !== this.responseType && (v.responseType = this.responseType),
                void 0 !== this.withCredentials && (v.withCredentials = this.withCredentials),
                v.overrideMimeType && v.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                for (var g in this.requestHeader)
                    v.setRequestHeader(g, this.requestHeader[g]);
                v.send(null)
            }
            return i.manager.itemStart(t),
            v
        },
        setPath: function(t) {
            return this.path = t,
            this
        },
        setResponseType: function(t) {
            return this.responseType = t,
            this
        },
        setWithCredentials: function(t) {
            return this.withCredentials = t,
            this
        },
        setMimeType: function(t) {
            return this.mimeType = t,
            this
        },
        setRequestHeader: function(t) {
            return this.requestHeader = t,
            this
        }
    }),
    Object.assign(yr.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = []
              , a = new Ge;
            a.image = o;
            var s = new gr(this.manager);
            if (s.setPath(this.path),
            s.setResponseType("arraybuffer"),
            Array.isArray(t))
                for (var c = 0, l = 0, u = t.length; l < u; ++l)
                    !function(l) {
                        s.load(t[l], function(t) {
                            var n = i._parser(t, !0);
                            o[l] = {
                                width: n.width,
                                height: n.height,
                                format: n.format,
                                mipmaps: n.mipmaps
                            },
                            6 === (c += 1) && (1 === n.mipmapCount && (a.minFilter = fs),
                            a.format = n.format,
                            a.needsUpdate = !0,
                            e && e(a))
                        }, n, r)
                    }(l);
            else
                s.load(t, function(t) {
                    var n = i._parser(t, !0);
                    if (n.isCubemap)
                        for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                            o[s] = {
                                mipmaps: []
                            };
                            for (var c = 0; c < n.mipmapCount; c++)
                                o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]),
                                o[s].format = n.format,
                                o[s].width = n.width,
                                o[s].height = n.height
                        }
                    else
                        a.image.width = n.width,
                        a.image.height = n.height,
                        a.mipmaps = n.mipmaps;
                    1 === n.mipmapCount && (a.minFilter = fs),
                    a.format = n.format,
                    a.needsUpdate = !0,
                    e && e(a)
                }, n, r);
            return a
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(_r.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = new p
              , a = new gr(this.manager);
            return a.setResponseType("arraybuffer"),
            a.load(t, function(t) {
                var n = i._parser(t);
                n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width,
                o.image.height = n.height,
                o.image.data = n.data),
                o.wrapS = void 0 !== n.wrapS ? n.wrapS : ls,
                o.wrapT = void 0 !== n.wrapT ? n.wrapT : ls,
                o.magFilter = void 0 !== n.magFilter ? n.magFilter : fs,
                o.minFilter = void 0 !== n.minFilter ? n.minFilter : vs,
                o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                void 0 !== n.format && (o.format = n.format),
                void 0 !== n.type && (o.type = n.type),
                void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps),
                1 === n.mipmapCount && (o.minFilter = fs),
                o.needsUpdate = !0,
                e && e(o, n))
            }, n, r),
            o
        }
    }),
    Object.assign(xr.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var i = this
              , o = Qc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
            return a.addEventListener("load", function() {
                Qc.add(t, this),
                e && e(this),
                i.manager.itemEnd(t)
            }, !1),
            a.addEventListener("error", function(e) {
                r && r(e),
                i.manager.itemEnd(t),
                i.manager.itemError(t)
            }, !1),
            "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin),
            i.manager.itemStart(t),
            a.src = t,
            a
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(br.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            var i = new ct
              , o = new xr(this.manager);
            o.setCrossOrigin(this.crossOrigin),
            o.setPath(this.path);
            for (var a = 0, s = 0; s < t.length; ++s)
                !function(n) {
                    o.load(t[n], function(t) {
                        i.images[n] = t,
                        6 == ++a && (i.needsUpdate = !0,
                        e && e(i))
                    }, void 0, r)
                }(s);
            return i
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(wr.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            var i = new l
              , o = new xr(this.manager);
            return o.setCrossOrigin(this.crossOrigin),
            o.setPath(this.path),
            o.load(t, function(n) {
                i.image = n;
                var r = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                i.format = r ? Ls : Rs,
                i.needsUpdate = !0,
                void 0 !== e && e(i)
            }, n, r),
            i
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Mr.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."),
            null
        },
        getPointAt: function(t, e) {
            var n = this.getUtoTmapping(t);
            return this.getPoint(n, e)
        },
        getPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return e
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPointAt(n / t));
            return e
        },
        getLength: function() {
            var t = this.getLengths();
            return t[t.length - 1]
        },
        getLengths: function(t) {
            if (void 0 === t && (t = this.arcLengthDivisions),
            this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var e, n, r = [], i = this.getPoint(0), o = 0;
            for (r.push(0),
            n = 1; n <= t; n++)
                e = this.getPoint(n / t),
                o += e.distanceTo(i),
                r.push(o),
                i = e;
            return this.cacheArcLengths = r,
            r
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.getLengths()
        },
        getUtoTmapping: function(t, e) {
            var n, r = this.getLengths(), i = 0, o = r.length;
            n = e || t * r[o - 1];
            for (var a, s = 0, c = o - 1; s <= c; )
                if (i = Math.floor(s + (c - s) / 2),
                (a = r[i] - n) < 0)
                    s = i + 1;
                else {
                    if (!(a > 0)) {
                        c = i;
                        break
                    }
                    c = i - 1
                }
            if (i = c,
            r[i] === n)
                return i / (o - 1);
            var l = r[i];
            return (i + (n - l) / (r[i + 1] - l)) / (o - 1)
        },
        getTangent: function(t) {
            var e = t - 1e-4
              , n = t + 1e-4;
            e < 0 && (e = 0),
            n > 1 && (n = 1);
            var r = this.getPoint(e);
            return this.getPoint(n).clone().sub(r).normalize()
        },
        getTangentAt: function(t) {
            var e = this.getUtoTmapping(t);
            return this.getTangent(e)
        },
        computeFrenetFrames: function(t, e) {
            var n, r, i, a = new s, c = [], l = [], u = [], h = new s, d = new o;
            for (n = 0; n <= t; n++)
                r = n / t,
                c[n] = this.getTangentAt(r),
                c[n].normalize();
            l[0] = new s,
            u[0] = new s;
            var p = Number.MAX_VALUE
              , f = Math.abs(c[0].x)
              , m = Math.abs(c[0].y)
              , v = Math.abs(c[0].z);
            for (f <= p && (p = f,
            a.set(1, 0, 0)),
            m <= p && (p = m,
            a.set(0, 1, 0)),
            v <= p && a.set(0, 0, 1),
            h.crossVectors(c[0], a).normalize(),
            l[0].crossVectors(c[0], h),
            u[0].crossVectors(c[0], l[0]),
            n = 1; n <= t; n++)
                l[n] = l[n - 1].clone(),
                u[n] = u[n - 1].clone(),
                h.crossVectors(c[n - 1], c[n]),
                h.length() > Number.EPSILON && (h.normalize(),
                i = Math.acos(Cc.clamp(c[n - 1].dot(c[n]), -1, 1)),
                l[n].applyMatrix4(d.makeRotationAxis(h, i))),
                u[n].crossVectors(c[n], l[n]);
            if (!0 === e)
                for (i = Math.acos(Cc.clamp(l[0].dot(l[t]), -1, 1)),
                i /= t,
                c[0].dot(h.crossVectors(l[0], l[t])) > 0 && (i = -i),
                n = 1; n <= t; n++)
                    l[n].applyMatrix4(d.makeRotationAxis(c[n], i * n)),
                    u[n].crossVectors(c[n], l[n]);
            return {
                tangents: c,
                normals: l,
                binormals: u
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return t.arcLengthDivisions = this.arcLengthDivisions,
            t.type = this.type,
            t
        },
        fromJSON: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        }
    }),
    Er.prototype = Object.create(Mr.prototype),
    Er.prototype.constructor = Er,
    Er.prototype.isEllipseCurve = !0,
    Er.prototype.getPoint = function(t, e) {
        for (var n = e || new i, r = 2 * Math.PI, o = this.aEndAngle - this.aStartAngle, a = Math.abs(o) < Number.EPSILON; o < 0; )
            o += r;
        for (; o > r; )
            o -= r;
        o < Number.EPSILON && (o = a ? 0 : r),
        !0 !== this.aClockwise || a || (o === r ? o = -r : o -= r);
        var s = this.aStartAngle + t * o
          , c = this.aX + this.xRadius * Math.cos(s)
          , l = this.aY + this.yRadius * Math.sin(s);
        if (0 !== this.aRotation) {
            var u = Math.cos(this.aRotation)
              , h = Math.sin(this.aRotation)
              , d = c - this.aX
              , p = l - this.aY;
            c = d * u - p * h + this.aX,
            l = d * h + p * u + this.aY
        }
        return n.set(c, l)
    }
    ,
    Er.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    Er.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.aX = this.aX,
        t.aY = this.aY,
        t.xRadius = this.xRadius,
        t.yRadius = this.yRadius,
        t.aStartAngle = this.aStartAngle,
        t.aEndAngle = this.aEndAngle,
        t.aClockwise = this.aClockwise,
        t.aRotation = this.aRotation,
        t
    }
    ,
    Er.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    Tr.prototype = Object.create(Er.prototype),
    Tr.prototype.constructor = Tr,
    Tr.prototype.isArcCurve = !0;
    var el = new s
      , nl = new Sr
      , rl = new Sr
      , il = new Sr;
    Ar.prototype = Object.create(Mr.prototype),
    Ar.prototype.constructor = Ar,
    Ar.prototype.isCatmullRomCurve3 = !0,
    Ar.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.points
          , i = r.length
          , o = (i - (this.closed ? 0 : 1)) * t
          , a = Math.floor(o)
          , c = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r.length) + 1) * r.length : 0 === c && a === i - 1 && (a = i - 2,
        c = 1);
        var l, u, h, d;
        if (this.closed || a > 0 ? l = r[(a - 1) % i] : (el.subVectors(r[0], r[1]).add(r[0]),
        l = el),
        u = r[a % i],
        h = r[(a + 1) % i],
        this.closed || a + 2 < i ? d = r[(a + 2) % i] : (el.subVectors(r[i - 1], r[i - 2]).add(r[i - 1]),
        d = el),
        "centripetal" === this.curveType || "chordal" === this.curveType) {
            var p = "chordal" === this.curveType ? .5 : .25
              , f = Math.pow(l.distanceToSquared(u), p)
              , m = Math.pow(u.distanceToSquared(h), p)
              , v = Math.pow(h.distanceToSquared(d), p);
            m < 1e-4 && (m = 1),
            f < 1e-4 && (f = m),
            v < 1e-4 && (v = m),
            nl.initNonuniformCatmullRom(l.x, u.x, h.x, d.x, f, m, v),
            rl.initNonuniformCatmullRom(l.y, u.y, h.y, d.y, f, m, v),
            il.initNonuniformCatmullRom(l.z, u.z, h.z, d.z, f, m, v)
        } else
            "catmullrom" === this.curveType && (nl.initCatmullRom(l.x, u.x, h.x, d.x, this.tension),
            rl.initCatmullRom(l.y, u.y, h.y, d.y, this.tension),
            il.initCatmullRom(l.z, u.z, h.z, d.z, this.tension));
        return n.set(nl.calc(c), rl.calc(c), il.calc(c)),
        n
    }
    ,
    Ar.prototype.copy = function(t) {
        Mr.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push(r.clone())
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    Ar.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var r = this.points[e];
            t.points.push(r.toArray())
        }
        return t.closed = this.closed,
        t.curveType = this.curveType,
        t.tension = this.tension,
        t
    }
    ,
    Ar.prototype.fromJSON = function(t) {
        Mr.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push((new s).fromArray(r))
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    zr.prototype = Object.create(Mr.prototype),
    zr.prototype.constructor = zr,
    zr.prototype.isCubicBezierCurve = !0,
    zr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.v0
          , o = this.v1
          , a = this.v2
          , s = this.v3;
        return n.set(jr(t, r.x, o.x, a.x, s.x), jr(t, r.y, o.y, a.y, s.y)),
        n
    }
    ,
    zr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    zr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    zr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    Br.prototype = Object.create(Mr.prototype),
    Br.prototype.constructor = Br,
    Br.prototype.isCubicBezierCurve3 = !0,
    Br.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.v0
          , i = this.v1
          , o = this.v2
          , a = this.v3;
        return n.set(jr(t, r.x, i.x, o.x, a.x), jr(t, r.y, i.y, o.y, a.y), jr(t, r.z, i.z, o.z, a.z)),
        n
    }
    ,
    Br.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    Br.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    Br.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    Ur.prototype = Object.create(Mr.prototype),
    Ur.prototype.constructor = Ur,
    Ur.prototype.isLineCurve = !0,
    Ur.prototype.getPoint = function(t, e) {
        var n = e || new i;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    Ur.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    Ur.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize()
    }
    ,
    Ur.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Ur.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Ur.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Fr.prototype = Object.create(Mr.prototype),
    Fr.prototype.constructor = Fr,
    Fr.prototype.isLineCurve3 = !0,
    Fr.prototype.getPoint = function(t, e) {
        var n = e || new s;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    Fr.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    Fr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Fr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Fr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Hr.prototype = Object.create(Mr.prototype),
    Hr.prototype.constructor = Hr,
    Hr.prototype.isQuadraticBezierCurve = !0,
    Hr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.v0
          , o = this.v1
          , a = this.v2;
        return n.set(Or(t, r.x, o.x, a.x), Or(t, r.y, o.y, a.y)),
        n
    }
    ,
    Hr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Hr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Hr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Gr.prototype = Object.create(Mr.prototype),
    Gr.prototype.constructor = Gr,
    Gr.prototype.isQuadraticBezierCurve3 = !0,
    Gr.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.v0
          , i = this.v1
          , o = this.v2;
        return n.set(Or(t, r.x, i.x, o.x), Or(t, r.y, i.y, o.y), Or(t, r.z, i.z, o.z)),
        n
    }
    ,
    Gr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Gr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Gr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Vr.prototype = Object.create(Mr.prototype),
    Vr.prototype.constructor = Vr,
    Vr.prototype.isSplineCurve = !0,
    Vr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.points
          , o = (r.length - 1) * t
          , a = Math.floor(o)
          , s = o - a
          , c = r[0 === a ? a : a - 1]
          , l = r[a]
          , u = r[a > r.length - 2 ? r.length - 1 : a + 1]
          , h = r[a > r.length - 3 ? r.length - 1 : a + 2];
        return n.set(Cr(s, c.x, l.x, u.x, h.x), Cr(s, c.y, l.y, u.y, h.y)),
        n
    }
    ,
    Vr.prototype.copy = function(t) {
        Mr.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push(r.clone())
        }
        return this
    }
    ,
    Vr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var r = this.points[e];
            t.points.push(r.toArray())
        }
        return t
    }
    ,
    Vr.prototype.fromJSON = function(t) {
        Mr.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push((new i).fromArray(r))
        }
        return this
    }
    ;
    var ol = Object.freeze({
        ArcCurve: Tr,
        CatmullRomCurve3: Ar,
        CubicBezierCurve: zr,
        CubicBezierCurve3: Br,
        EllipseCurve: Er,
        LineCurve: Ur,
        LineCurve3: Fr,
        QuadraticBezierCurve: Hr,
        QuadraticBezierCurve3: Gr,
        SplineCurve: Vr
    });
    Wr.prototype = Object.assign(Object.create(Mr.prototype), {
        constructor: Wr,
        add: function(t) {
            this.curves.push(t)
        },
        closePath: function() {
            var t = this.curves[0].getPoint(0)
              , e = this.curves[this.curves.length - 1].getPoint(1);
            t.equals(e) || this.curves.push(new Ur(e,t))
        },
        getPoint: function(t) {
            for (var e = t * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                if (n[r] >= e) {
                    var i = n[r] - e
                      , o = this.curves[r]
                      , a = o.getLength()
                      , s = 0 === a ? 0 : 1 - i / a;
                    return o.getPointAt(s)
                }
                r++
            }
            return null
        },
        getLength: function() {
            var t = this.getCurveLengths();
            return t[t.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.cacheLengths = null,
            this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var t = [], e = 0, n = 0, r = this.curves.length; n < r; n++)
                e += this.curves[n].getLength(),
                t.push(e);
            return this.cacheLengths = t,
            t
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 40);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return this.autoClose && e.push(e[0]),
            e
        },
        getPoints: function(t) {
            t = t || 12;
            for (var e, n = [], r = 0, i = this.curves; r < i.length; r++)
                for (var o = i[r], a = o && o.isEllipseCurve ? 2 * t : o && o.isLineCurve ? 1 : o && o.isSplineCurve ? t * o.points.length : t, s = o.getPoints(a), c = 0; c < s.length; c++) {
                    var l = s[c];
                    e && e.equals(l) || (n.push(l),
                    e = l)
                }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
            n
        },
        copy: function(t) {
            Mr.prototype.copy.call(this, t),
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var r = t.curves[e];
                this.curves.push(r.clone())
            }
            return this.autoClose = t.autoClose,
            this
        },
        toJSON: function() {
            var t = Mr.prototype.toJSON.call(this);
            t.autoClose = this.autoClose,
            t.curves = [];
            for (var e = 0, n = this.curves.length; e < n; e++) {
                var r = this.curves[e];
                t.curves.push(r.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            Mr.prototype.fromJSON.call(this, t),
            this.autoClose = t.autoClose,
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var r = t.curves[e];
                this.curves.push((new ol[r.type]).fromJSON(r))
            }
            return this
        }
    }),
    qr.prototype = Object.assign(Object.create(Wr.prototype), {
        constructor: qr,
        setFromPoints: function(t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, n = t.length; e < n; e++)
                this.lineTo(t[e].x, t[e].y)
        },
        moveTo: function(t, e) {
            this.currentPoint.set(t, e)
        },
        lineTo: function(t, e) {
            var n = new Ur(this.currentPoint.clone(),new i(t,e));
            this.curves.push(n),
            this.currentPoint.set(t, e)
        },
        quadraticCurveTo: function(t, e, n, r) {
            var o = new Hr(this.currentPoint.clone(),new i(t,e),new i(n,r));
            this.curves.push(o),
            this.currentPoint.set(n, r)
        },
        bezierCurveTo: function(t, e, n, r, o, a) {
            var s = new zr(this.currentPoint.clone(),new i(t,e),new i(n,r),new i(o,a));
            this.curves.push(s),
            this.currentPoint.set(o, a)
        },
        splineThru: function(t) {
            var e = [this.currentPoint.clone()].concat(t)
              , n = new Vr(e);
            this.curves.push(n),
            this.currentPoint.copy(t[t.length - 1])
        },
        arc: function(t, e, n, r, i, o) {
            var a = this.currentPoint.x
              , s = this.currentPoint.y;
            this.absarc(t + a, e + s, n, r, i, o)
        },
        absarc: function(t, e, n, r, i, o) {
            this.absellipse(t, e, n, n, r, i, o)
        },
        ellipse: function(t, e, n, r, i, o, a, s) {
            var c = this.currentPoint.x
              , l = this.currentPoint.y;
            this.absellipse(t + c, e + l, n, r, i, o, a, s)
        },
        absellipse: function(t, e, n, r, i, o, a, s) {
            var c = new Er(t,e,n,r,i,o,a,s);
            if (this.curves.length > 0) {
                var l = c.getPoint(0);
                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
            }
            this.curves.push(c);
            var u = c.getPoint(1);
            this.currentPoint.copy(u)
        },
        copy: function(t) {
            return Wr.prototype.copy.call(this, t),
            this.currentPoint.copy(t.currentPoint),
            this
        },
        toJSON: function() {
            var t = Wr.prototype.toJSON.call(this);
            return t.currentPoint = this.currentPoint.toArray(),
            t
        },
        fromJSON: function(t) {
            return Wr.prototype.fromJSON.call(this, t),
            this.currentPoint.fromArray(t.currentPoint),
            this
        }
    }),
    Xr.prototype = Object.assign(Object.create(qr.prototype), {
        constructor: Xr,
        getPointsHoles: function(t) {
            for (var e = [], n = 0, r = this.holes.length; n < r; n++)
                e[n] = this.holes[n].getPoints(t);
            return e
        },
        extractPoints: function(t) {
            return {
                shape: this.getPoints(t),
                holes: this.getPointsHoles(t)
            }
        },
        copy: function(t) {
            qr.prototype.copy.call(this, t),
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var r = t.holes[e];
                this.holes.push(r.clone())
            }
            return this
        },
        toJSON: function() {
            var t = qr.prototype.toJSON.call(this);
            t.uuid = this.uuid,
            t.holes = [];
            for (var e = 0, n = this.holes.length; e < n; e++) {
                var r = this.holes[e];
                t.holes.push(r.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            qr.prototype.fromJSON.call(this, t),
            this.uuid = t.uuid,
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var r = t.holes[e];
                this.holes.push((new qr).fromJSON(r))
            }
            return this
        }
    }),
    Yr.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Yr,
        isLight: !0,
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.intensity = t.intensity,
            this
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.color = this.color.getHex(),
            e.object.intensity = this.intensity,
            void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (e.object.distance = this.distance),
            void 0 !== this.angle && (e.object.angle = this.angle),
            void 0 !== this.decay && (e.object.decay = this.decay),
            void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
            e
        }
    }),
    $r.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: $r,
        isHemisphereLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.groundColor.copy(t.groundColor),
            this
        }
    }),
    Object.assign(Zr.prototype, {
        copy: function(t) {
            return this.camera = t.camera.clone(),
            this.bias = t.bias,
            this.radius = t.radius,
            this.mapSize.copy(t.mapSize),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var t = {};
            return 0 !== this.bias && (t.bias = this.bias),
            1 !== this.radius && (t.radius = this.radius),
            512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
            t.camera = this.camera.toJSON(!1).object,
            delete t.camera.matrix,
            t
        }
    }),
    Jr.prototype = Object.assign(Object.create(Zr.prototype), {
        constructor: Jr,
        isSpotLightShadow: !0,
        update: function(t) {
            var e = this.camera
              , n = 2 * Cc.RAD2DEG * t.angle
              , r = this.mapSize.width / this.mapSize.height
              , i = t.distance || e.far;
            n === e.fov && r === e.aspect && i === e.far || (e.fov = n,
            e.aspect = r,
            e.far = i,
            e.updateProjectionMatrix())
        }
    }),
    Qr.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: Qr,
        isSpotLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.angle = t.angle,
            this.penumbra = t.penumbra,
            this.decay = t.decay,
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    Kr.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: Kr,
        isPointLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.decay = t.decay,
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    ti.prototype = Object.assign(Object.create(Zr.prototype), {
        constructor: ti
    }),
    ei.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ei,
        isDirectionalLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    ni.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ni,
        isAmbientLight: !0
    }),
    ri.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ri,
        isRectAreaLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.width = t.width,
            this.height = t.height,
            this
        },
        toJSON: function(t) {
            var e = Yr.prototype.toJSON.call(this, t);
            return e.object.width = this.width,
            e.object.height = this.height,
            e
        }
    }),
    ii.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ii,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: lc,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    oi.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: oi,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: lc,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    Object.assign(ai.prototype, {
        evaluate: function(t) {
            var e = this.parameterPositions
              , n = this._cachedIndex
              , r = e[n]
              , i = e[n - 1];
            t: {
                e: {
                    var o;
                    n: {
                        r: if (!(t < r)) {
                            for (var a = n + 2; ; ) {
                                if (void 0 === r) {
                                    if (t < i)
                                        break r;
                                    return n = e.length,
                                    this._cachedIndex = n,
                                    this.afterEnd_(n - 1, t, i)
                                }
                                if (n === a)
                                    break;
                                if (i = r,
                                r = e[++n],
                                t < r)
                                    break e
                            }
                            o = e.length;
                            break n
                        }
                        {
                            if (t >= i)
                                break t;
                            var s = e[1];
                            t < s && (n = 2,
                            i = s);
                            for (var a = n - 2; ; ) {
                                if (void 0 === i)
                                    return this._cachedIndex = 0,
                                    this.beforeStart_(0, t, r);
                                if (n === a)
                                    break;
                                if (r = i,
                                i = e[--n - 1],
                                t >= i)
                                    break e
                            }
                            o = n,
                            n = 0
                        }
                    }
                    for (; n < o; ) {
                        var c = n + o >>> 1;
                        t < e[c] ? o = c : n = c + 1
                    }
                    if (r = e[n],
                    void 0 === (i = e[n - 1]))
                        return this._cachedIndex = 0,
                        this.beforeStart_(0, t, r);
                    if (void 0 === r)
                        return n = e.length,
                        this._cachedIndex = n,
                        this.afterEnd_(n - 1, i, t)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, i, r)
            }
            return this.interpolate_(n, i, t, r)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function() {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(t) {
            for (var e = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = t * r, o = 0; o !== r; ++o)
                e[o] = n[i + o];
            return e
        },
        interpolate_: function() {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(ai.prototype, {
        beforeStart_: ai.prototype.copySampleValue_,
        afterEnd_: ai.prototype.copySampleValue_
    }),
    si.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: si,
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, s = this.valueSize, c = t * s, l = (n - e) / (r - e), u = c + s; c !== u; c += 4)
                a.slerpFlat(i, 0, o, c - s, o, c, l);
            return i
        }
    }),
    ci.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ci,
        ValueTypeName: "quaternion",
        DefaultInterpolation: uc,
        InterpolantFactoryMethodLinear: function(t) {
            return new si(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: void 0
    }),
    li.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: li,
        ValueTypeName: "color"
    }),
    ui.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ui,
        ValueTypeName: "number"
    }),
    hi.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: hi,
        DefaultSettings_: {
            endingStart: dc,
            endingEnd: dc
        },
        intervalChanged_: function(t, e, n) {
            var r = this.parameterPositions
              , i = t - 2
              , o = t + 1
              , a = r[i]
              , s = r[o];
            if (void 0 === a)
                switch (this.getSettings_().endingStart) {
                case pc:
                    i = t,
                    a = 2 * e - n;
                    break;
                case fc:
                    i = r.length - 2,
                    a = e + r[i] - r[i + 1];
                    break;
                default:
                    i = t,
                    a = n
                }
            if (void 0 === s)
                switch (this.getSettings_().endingEnd) {
                case pc:
                    o = t,
                    s = 2 * n - e;
                    break;
                case fc:
                    o = 1,
                    s = n + r[1] - r[0];
                    break;
                default:
                    o = t - 1,
                    s = e
                }
            var c = .5 * (n - e)
              , l = this.valueSize;
            this._weightPrev = c / (e - a),
            this._weightNext = c / (s - n),
            this._offsetPrev = i * l,
            this._offsetNext = o * l
        },
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, c = s - a, l = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (n - e) / (r - e), f = p * p, m = f * p, v = -h * m + 2 * h * f - h * p, g = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, _ = d * m - d * f, x = 0; x !== a; ++x)
                i[x] = v * o[l + x] + g * o[c + x] + y * o[s + x] + _ * o[u + x];
            return i
        }
    }),
    di.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: di,
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, c = s - a, l = (n - e) / (r - e), u = 1 - l, h = 0; h !== a; ++h)
                i[h] = o[c + h] * u + o[s + h] * l;
            return i
        }
    }),
    pi.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: pi,
        interpolate_: function(t) {
            return this.copySampleValue_(t - 1)
        }
    });
    var al = {
        arraySlice: function(t, e, n) {
            return al.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n)
        },
        convertArray: function(t, e, n) {
            return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
        },
        isTypedArray: function(t) {
            return ArrayBuffer.isView(t) && !(t instanceof DataView)
        },
        getKeyframeOrder: function(t) {
            function e(e, n) {
                return t[e] - t[n]
            }
            for (var n = t.length, r = new Array(n), i = 0; i !== n; ++i)
                r[i] = i;
            return r.sort(e),
            r
        },
        sortedArray: function(t, e, n) {
            for (var r = t.length, i = new t.constructor(r), o = 0, a = 0; a !== r; ++o)
                for (var s = n[o] * e, c = 0; c !== e; ++c)
                    i[a++] = t[s + c];
            return i
        },
        flattenJSON: function(t, e, n, r) {
            for (var i = 1, o = t[0]; void 0 !== o && void 0 === o[r]; )
                o = t[i++];
            if (void 0 !== o) {
                var a = o[r];
                if (void 0 !== a)
                    if (Array.isArray(a))
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            n.push.apply(n, a)),
                            o = t[i++]
                        } while (void 0 !== o);
                    else if (void 0 !== a.toArray)
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            a.toArray(n, n.length)),
                            o = t[i++]
                        } while (void 0 !== o);
                    else
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            n.push(a)),
                            o = t[i++]
                        } while (void 0 !== o)
            }
        }
    };
    Object.assign(fi, {
        parse: function(t) {
            if (void 0 === t.type)
                throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
            var e = fi._getTrackTypeForValueTypeName(t.type);
            if (void 0 === t.times) {
                var n = []
                  , r = [];
                al.flattenJSON(t.keys, n, r, "value"),
                t.times = n,
                t.values = r
            }
            return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
        },
        toJSON: function(t) {
            var e, n = t.constructor;
            if (void 0 !== n.toJSON)
                e = n.toJSON(t);
            else {
                e = {
                    name: t.name,
                    times: al.convertArray(t.times, Array),
                    values: al.convertArray(t.values, Array)
                };
                var r = t.getInterpolation();
                r !== t.DefaultInterpolation && (e.interpolation = r)
            }
            return e.type = t.ValueTypeName,
            e
        },
        _getTrackTypeForValueTypeName: function(t) {
            switch (t.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return ui;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return mi;
            case "color":
                return li;
            case "quaternion":
                return ci;
            case "bool":
            case "boolean":
                return oi;
            case "string":
                return ii
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t)
        }
    }),
    Object.assign(fi.prototype, {
        constructor: fi,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: uc,
        InterpolantFactoryMethodDiscrete: function(t) {
            return new pi(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodLinear: function(t) {
            return new di(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: function(t) {
            return new hi(this.times,this.values,this.getValueSize(),t)
        },
        setInterpolation: function(t) {
            var e;
            switch (t) {
            case lc:
                e = this.InterpolantFactoryMethodDiscrete;
                break;
            case uc:
                e = this.InterpolantFactoryMethodLinear;
                break;
            case hc:
                e = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === e) {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (t === this.DefaultInterpolation)
                        throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return void console.warn("THREE.KeyframeTrack:", n)
            }
            this.createInterpolant = e
        },
        getInterpolation: function() {
            switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return lc;
            case this.InterpolantFactoryMethodLinear:
                return uc;
            case this.InterpolantFactoryMethodSmooth:
                return hc
            }
        },
        getValueSize: function() {
            return this.values.length / this.times.length
        },
        shift: function(t) {
            if (0 !== t)
                for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                    e[n] += t;
            return this
        },
        scale: function(t) {
            if (1 !== t)
                for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                    e[n] *= t;
            return this
        },
        trim: function(t, e) {
            for (var n = this.times, r = n.length, i = 0, o = r - 1; i !== r && n[i] < t; )
                ++i;
            for (; -1 !== o && n[o] > e; )
                --o;
            if (++o,
            0 !== i || o !== r) {
                i >= o && (o = Math.max(o, 1),
                i = o - 1);
                var a = this.getValueSize();
                this.times = al.arraySlice(n, i, o),
                this.values = al.arraySlice(this.values, i * a, o * a)
            }
            return this
        },
        validate: function() {
            var t = !0
              , e = this.getValueSize();
            e - Math.floor(e) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
            t = !1);
            var n = this.times
              , r = this.values
              , i = n.length;
            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this),
            t = !1);
            for (var o = null, a = 0; a !== i; a++) {
                var s = n[a];
                if ("number" == typeof s && isNaN(s)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, s),
                    t = !1;
                    break
                }
                if (null !== o && o > s) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, s, o),
                    t = !1;
                    break
                }
                o = s
            }
            if (void 0 !== r && al.isTypedArray(r))
                for (var a = 0, c = r.length; a !== c; ++a) {
                    var l = r[a];
                    if (isNaN(l)) {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, l),
                        t = !1;
                        break
                    }
                }
            return t
        },
        optimize: function() {
            for (var t = this.times, e = this.values, n = this.getValueSize(), r = this.getInterpolation() === hc, i = 1, o = t.length - 1, a = 1; a < o; ++a) {
                var s = !1
                  , c = t[a];
                if (c !== t[a + 1] && (1 !== a || c !== c[0]))
                    if (r)
                        s = !0;
                    else
                        for (var l = a * n, u = l - n, h = l + n, d = 0; d !== n; ++d) {
                            var p = e[l + d];
                            if (p !== e[u + d] || p !== e[h + d]) {
                                s = !0;
                                break
                            }
                        }
                if (s) {
                    if (a !== i) {
                        t[i] = t[a];
                        for (var f = a * n, m = i * n, d = 0; d !== n; ++d)
                            e[m + d] = e[f + d]
                    }
                    ++i
                }
            }
            if (o > 0) {
                t[i] = t[o];
                for (var f = o * n, m = i * n, d = 0; d !== n; ++d)
                    e[m + d] = e[f + d];
                ++i
            }
            return i !== t.length && (this.times = al.arraySlice(t, 0, i),
            this.values = al.arraySlice(e, 0, i * n)),
            this
        }
    }),
    mi.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: mi,
        ValueTypeName: "vector"
    }),
    Object.assign(vi, {
        parse: function(t) {
            for (var e = [], n = t.tracks, r = 1 / (t.fps || 1), i = 0, o = n.length; i !== o; ++i)
                e.push(fi.parse(n[i]).scale(r));
            return new vi(t.name,t.duration,e)
        },
        toJSON: function(t) {
            for (var e = [], n = t.tracks, r = {
                name: t.name,
                duration: t.duration,
                tracks: e
            }, i = 0, o = n.length; i !== o; ++i)
                e.push(fi.toJSON(n[i]));
            return r
        },
        CreateFromMorphTargetSequence: function(t, e, n, r) {
            for (var i = e.length, o = [], a = 0; a < i; a++) {
                var s = []
                  , c = [];
                s.push((a + i - 1) % i, a, (a + 1) % i),
                c.push(0, 1, 0);
                var l = al.getKeyframeOrder(s);
                s = al.sortedArray(s, 1, l),
                c = al.sortedArray(c, 1, l),
                r || 0 !== s[0] || (s.push(i),
                c.push(c[0])),
                o.push(new ui(".morphTargetInfluences[" + e[a].name + "]",s,c).scale(1 / n))
            }
            return new vi(t,-1,o)
        },
        findByName: function(t, e) {
            var n = t;
            if (!Array.isArray(t)) {
                var r = t;
                n = r.geometry && r.geometry.animations || r.animations
            }
            for (var i = 0; i < n.length; i++)
                if (n[i].name === e)
                    return n[i];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(t, e, n) {
            for (var r = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = t.length; o < a; o++) {
                var s = t[o]
                  , c = s.name.match(i);
                if (c && c.length > 1) {
                    var l = c[1]
                      , u = r[l];
                    u || (r[l] = u = []),
                    u.push(s)
                }
            }
            var h = [];
            for (var l in r)
                h.push(vi.CreateFromMorphTargetSequence(l, r[l], e, n));
            return h
        },
        parseAnimation: function(t, e) {
            if (!t)
                return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                null;
            for (var n = function(t, e, n, r, i) {
                if (0 !== n.length) {
                    var o = []
                      , a = [];
                    al.flattenJSON(n, o, a, r),
                    0 !== o.length && i.push(new t(e,o,a))
                }
            }, r = [], i = t.name || "default", o = t.length || -1, a = t.fps || 30, s = t.hierarchy || [], c = 0; c < s.length; c++) {
                var l = s[c].keys;
                if (l && 0 !== l.length)
                    if (l[0].morphTargets) {
                        for (var u = {}, h = 0; h < l.length; h++)
                            if (l[h].morphTargets)
                                for (var d = 0; d < l[h].morphTargets.length; d++)
                                    u[l[h].morphTargets[d]] = -1;
                        for (var p in u) {
                            for (var f = [], m = [], d = 0; d !== l[h].morphTargets.length; ++d) {
                                var v = l[h];
                                f.push(v.time),
                                m.push(v.morphTarget === p ? 1 : 0)
                            }
                            r.push(new ui(".morphTargetInfluence[" + p + "]",f,m))
                        }
                        o = u.length * (a || 1)
                    } else {
                        var g = ".bones[" + e[c].name + "]";
                        n(mi, g + ".position", l, "pos", r),
                        n(ci, g + ".quaternion", l, "rot", r),
                        n(mi, g + ".scale", l, "scl", r)
                    }
            }
            return 0 === r.length ? null : new vi(i,o,r)
        }
    }),
    Object.assign(vi.prototype, {
        resetDuration: function() {
            for (var t = this.tracks, e = 0, n = 0, r = t.length; n !== r; ++n) {
                var i = this.tracks[n];
                e = Math.max(e, i.times[i.times.length - 1])
            }
            this.duration = e
        },
        trim: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].trim(0, this.duration);
            return this
        },
        optimize: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].optimize();
            return this
        }
    }),
    Object.assign(gi.prototype, {
        load: function(t, e, n, r) {
            var i = this;
            new gr(i.manager).load(t, function(t) {
                e(i.parse(JSON.parse(t)))
            }, n, r)
        },
        setTextures: function(t) {
            this.textures = t
        },
        parse: function(t) {
            function e(t) {
                return void 0 === n[t] && console.warn("THREE.MaterialLoader: Undefined texture", t),
                n[t]
            }
            var n = this.textures
              , r = new Jc[t.type];
            if (void 0 !== t.uuid && (r.uuid = t.uuid),
            void 0 !== t.name && (r.name = t.name),
            void 0 !== t.color && r.color.setHex(t.color),
            void 0 !== t.roughness && (r.roughness = t.roughness),
            void 0 !== t.metalness && (r.metalness = t.metalness),
            void 0 !== t.emissive && r.emissive.setHex(t.emissive),
            void 0 !== t.specular && r.specular.setHex(t.specular),
            void 0 !== t.shininess && (r.shininess = t.shininess),
            void 0 !== t.clearCoat && (r.clearCoat = t.clearCoat),
            void 0 !== t.clearCoatRoughness && (r.clearCoatRoughness = t.clearCoatRoughness),
            void 0 !== t.uniforms && (r.uniforms = t.uniforms),
            void 0 !== t.vertexShader && (r.vertexShader = t.vertexShader),
            void 0 !== t.fragmentShader && (r.fragmentShader = t.fragmentShader),
            void 0 !== t.vertexColors && (r.vertexColors = t.vertexColors),
            void 0 !== t.fog && (r.fog = t.fog),
            void 0 !== t.flatShading && (r.flatShading = t.flatShading),
            void 0 !== t.blending && (r.blending = t.blending),
            void 0 !== t.side && (r.side = t.side),
            void 0 !== t.opacity && (r.opacity = t.opacity),
            void 0 !== t.transparent && (r.transparent = t.transparent),
            void 0 !== t.alphaTest && (r.alphaTest = t.alphaTest),
            void 0 !== t.depthTest && (r.depthTest = t.depthTest),
            void 0 !== t.depthWrite && (r.depthWrite = t.depthWrite),
            void 0 !== t.colorWrite && (r.colorWrite = t.colorWrite),
            void 0 !== t.wireframe && (r.wireframe = t.wireframe),
            void 0 !== t.wireframeLinewidth && (r.wireframeLinewidth = t.wireframeLinewidth),
            void 0 !== t.wireframeLinecap && (r.wireframeLinecap = t.wireframeLinecap),
            void 0 !== t.wireframeLinejoin && (r.wireframeLinejoin = t.wireframeLinejoin),
            void 0 !== t.rotation && (r.rotation = t.rotation),
            1 !== t.linewidth && (r.linewidth = t.linewidth),
            void 0 !== t.dashSize && (r.dashSize = t.dashSize),
            void 0 !== t.gapSize && (r.gapSize = t.gapSize),
            void 0 !== t.scale && (r.scale = t.scale),
            void 0 !== t.polygonOffset && (r.polygonOffset = t.polygonOffset),
            void 0 !== t.polygonOffsetFactor && (r.polygonOffsetFactor = t.polygonOffsetFactor),
            void 0 !== t.polygonOffsetUnits && (r.polygonOffsetUnits = t.polygonOffsetUnits),
            void 0 !== t.skinning && (r.skinning = t.skinning),
            void 0 !== t.morphTargets && (r.morphTargets = t.morphTargets),
            void 0 !== t.dithering && (r.dithering = t.dithering),
            void 0 !== t.visible && (r.visible = t.visible),
            void 0 !== t.userData && (r.userData = t.userData),
            void 0 !== t.shading && (r.flatShading = 1 === t.shading),
            void 0 !== t.size && (r.size = t.size),
            void 0 !== t.sizeAttenuation && (r.sizeAttenuation = t.sizeAttenuation),
            void 0 !== t.map && (r.map = e(t.map)),
            void 0 !== t.alphaMap && (r.alphaMap = e(t.alphaMap),
            r.transparent = !0),
            void 0 !== t.bumpMap && (r.bumpMap = e(t.bumpMap)),
            void 0 !== t.bumpScale && (r.bumpScale = t.bumpScale),
            void 0 !== t.normalMap && (r.normalMap = e(t.normalMap)),
            void 0 !== t.normalScale) {
                var o = t.normalScale;
                !1 === Array.isArray(o) && (o = [o, o]),
                r.normalScale = (new i).fromArray(o)
            }
            return void 0 !== t.displacementMap && (r.displacementMap = e(t.displacementMap)),
            void 0 !== t.displacementScale && (r.displacementScale = t.displacementScale),
            void 0 !== t.displacementBias && (r.displacementBias = t.displacementBias),
            void 0 !== t.roughnessMap && (r.roughnessMap = e(t.roughnessMap)),
            void 0 !== t.metalnessMap && (r.metalnessMap = e(t.metalnessMap)),
            void 0 !== t.emissiveMap && (r.emissiveMap = e(t.emissiveMap)),
            void 0 !== t.emissiveIntensity && (r.emissiveIntensity = t.emissiveIntensity),
            void 0 !== t.specularMap && (r.specularMap = e(t.specularMap)),
            void 0 !== t.envMap && (r.envMap = e(t.envMap)),
            void 0 !== t.reflectivity && (r.reflectivity = t.reflectivity),
            void 0 !== t.lightMap && (r.lightMap = e(t.lightMap)),
            void 0 !== t.lightMapIntensity && (r.lightMapIntensity = t.lightMapIntensity),
            void 0 !== t.aoMap && (r.aoMap = e(t.aoMap)),
            void 0 !== t.aoMapIntensity && (r.aoMapIntensity = t.aoMapIntensity),
            void 0 !== t.gradientMap && (r.gradientMap = e(t.gradientMap)),
            r
        }
    }),
    Object.assign(yi.prototype, {
        load: function(t, e, n, r) {
            var i = this;
            new gr(i.manager).load(t, function(t) {
                e(i.parse(JSON.parse(t)))
            }, n, r)
        },
        parse: function(t) {
            var e = new B
              , n = t.data.index;
            if (void 0 !== n) {
                var r = new sl[n.type](n.array);
                e.setIndex(new A(r,1))
            }
            var i = t.data.attributes;
            for (var o in i) {
                var a = i[o]
                  , r = new sl[a.type](a.array);
                e.addAttribute(o, new A(r,a.itemSize,a.normalized))
            }
            var c = t.data.groups || t.data.drawcalls || t.data.offsets;
            if (void 0 !== c)
                for (var l = 0, u = c.length; l !== u; ++l) {
                    var h = c[l];
                    e.addGroup(h.start, h.count, h.materialIndex)
                }
            var d = t.data.boundingSphere;
            if (void 0 !== d) {
                var p = new s;
                void 0 !== d.center && p.fromArray(d.center),
                e.boundingSphere = new m(p,d.radius)
            }
            return e
        }
    });
    var sl = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    _i.Handlers = {
        handlers: [],
        add: function(t, e) {
            this.handlers.push(t, e)
        },
        get: function(t) {
            for (var e = this.handlers, n = 0, r = e.length; n < r; n += 2) {
                var i = e[n]
                  , o = e[n + 1];
                if (i.test(t))
                    return o
            }
            return null
        }
    },
    Object.assign(_i.prototype, {
        crossOrigin: void 0,
        onLoadStart: function() {},
        onLoadProgress: function() {},
        onLoadComplete: function() {},
        initMaterials: function(t, e, n) {
            for (var r = [], i = 0; i < t.length; ++i)
                r[i] = this.createMaterial(t[i], e, n);
            return r
        },
        createMaterial: function() {
            var t = {
                NoBlending: va,
                NormalBlending: ga,
                AdditiveBlending: ya,
                SubtractiveBlending: _a,
                MultiplyBlending: xa,
                CustomBlending: ba
            }
              , e = new y
              , n = new wr
              , r = new gi;
            return function(i, o, a) {
                function s(t, e, r, i, s) {
                    var l, u = o + t, h = _i.Handlers.get(u);
                    null !== h ? l = h.load(u) : (n.setCrossOrigin(a),
                    l = n.load(u)),
                    void 0 !== e && (l.repeat.fromArray(e),
                    1 !== e[0] && (l.wrapS = cs),
                    1 !== e[1] && (l.wrapT = cs)),
                    void 0 !== r && l.offset.fromArray(r),
                    void 0 !== i && ("repeat" === i[0] && (l.wrapS = cs),
                    "mirror" === i[0] && (l.wrapS = us),
                    "repeat" === i[1] && (l.wrapT = cs),
                    "mirror" === i[1] && (l.wrapT = us)),
                    void 0 !== s && (l.anisotropy = s);
                    var d = Cc.generateUUID();
                    return c[d] = l,
                    d
                }
                var c = {}
                  , l = {
                    uuid: Cc.generateUUID(),
                    type: "MeshLambertMaterial"
                };
                for (var u in i) {
                    var h = i[u];
                    switch (u) {
                    case "DbgColor":
                    case "DbgIndex":
                    case "opticalDensity":
                    case "illumination":
                        break;
                    case "DbgName":
                        l.name = h;
                        break;
                    case "blending":
                        l.blending = t[h];
                        break;
                    case "colorAmbient":
                    case "mapAmbient":
                        console.warn("THREE.Loader.createMaterial:", u, "is no longer supported.");
                        break;
                    case "colorDiffuse":
                        l.color = e.fromArray(h).getHex();
                        break;
                    case "colorSpecular":
                        l.specular = e.fromArray(h).getHex();
                        break;
                    case "colorEmissive":
                        l.emissive = e.fromArray(h).getHex();
                        break;
                    case "specularCoef":
                        l.shininess = h;
                        break;
                    case "shading":
                        "basic" === h.toLowerCase() && (l.type = "MeshBasicMaterial"),
                        "phong" === h.toLowerCase() && (l.type = "MeshPhongMaterial"),
                        "standard" === h.toLowerCase() && (l.type = "MeshStandardMaterial");
                        break;
                    case "mapDiffuse":
                        l.map = s(h, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                        break;
                    case "mapDiffuseRepeat":
                    case "mapDiffuseOffset":
                    case "mapDiffuseWrap":
                    case "mapDiffuseAnisotropy":
                        break;
                    case "mapEmissive":
                        l.emissiveMap = s(h, i.mapEmissiveRepeat, i.mapEmissiveOffset, i.mapEmissiveWrap, i.mapEmissiveAnisotropy);
                        break;
                    case "mapEmissiveRepeat":
                    case "mapEmissiveOffset":
                    case "mapEmissiveWrap":
                    case "mapEmissiveAnisotropy":
                        break;
                    case "mapLight":
                        l.lightMap = s(h, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                        break;
                    case "mapLightRepeat":
                    case "mapLightOffset":
                    case "mapLightWrap":
                    case "mapLightAnisotropy":
                        break;
                    case "mapAO":
                        l.aoMap = s(h, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                        break;
                    case "mapAORepeat":
                    case "mapAOOffset":
                    case "mapAOWrap":
                    case "mapAOAnisotropy":
                        break;
                    case "mapBump":
                        l.bumpMap = s(h, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                        break;
                    case "mapBumpScale":
                        l.bumpScale = h;
                        break;
                    case "mapBumpRepeat":
                    case "mapBumpOffset":
                    case "mapBumpWrap":
                    case "mapBumpAnisotropy":
                        break;
                    case "mapNormal":
                        l.normalMap = s(h, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                        break;
                    case "mapNormalFactor":
                        l.normalScale = h;
                        break;
                    case "mapNormalRepeat":
                    case "mapNormalOffset":
                    case "mapNormalWrap":
                    case "mapNormalAnisotropy":
                        break;
                    case "mapSpecular":
                        l.specularMap = s(h, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                        break;
                    case "mapSpecularRepeat":
                    case "mapSpecularOffset":
                    case "mapSpecularWrap":
                    case "mapSpecularAnisotropy":
                        break;
                    case "mapMetalness":
                        l.metalnessMap = s(h, i.mapMetalnessRepeat, i.mapMetalnessOffset, i.mapMetalnessWrap, i.mapMetalnessAnisotropy);
                        break;
                    case "mapMetalnessRepeat":
                    case "mapMetalnessOffset":
                    case "mapMetalnessWrap":
                    case "mapMetalnessAnisotropy":
                        break;
                    case "mapRoughness":
                        l.roughnessMap = s(h, i.mapRoughnessRepeat, i.mapRoughnessOffset, i.mapRoughnessWrap, i.mapRoughnessAnisotropy);
                        break;
                    case "mapRoughnessRepeat":
                    case "mapRoughnessOffset":
                    case "mapRoughnessWrap":
                    case "mapRoughnessAnisotropy":
                        break;
                    case "mapAlpha":
                        l.alphaMap = s(h, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                        break;
                    case "mapAlphaRepeat":
                    case "mapAlphaOffset":
                    case "mapAlphaWrap":
                    case "mapAlphaAnisotropy":
                        break;
                    case "flipSided":
                        l.side = la;
                        break;
                    case "doubleSided":
                        l.side = ua;
                        break;
                    case "transparency":
                        console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                        l.opacity = h;
                        break;
                    case "depthTest":
                    case "depthWrite":
                    case "colorWrite":
                    case "opacity":
                    case "reflectivity":
                    case "transparent":
                    case "visible":
                    case "wireframe":
                        l[u] = h;
                        break;
                    case "vertexColors":
                        !0 === h && (l.vertexColors = ma),
                        "face" === h && (l.vertexColors = fa);
                        break;
                    default:
                        console.error("THREE.Loader.createMaterial: Unsupported", u, h)
                    }
                }
                return "MeshBasicMaterial" === l.type && delete l.emissive,
                "MeshPhongMaterial" !== l.type && delete l.specular,
                l.opacity < 1 && (l.transparent = !0),
                r.setTextures(c),
                r.parse(l)
            }
        }()
    });
    var cl = {
        decodeText: function(t) {
            if ("undefined" != typeof TextDecoder)
                return (new TextDecoder).decode(t);
            for (var e = "", n = 0, r = t.length; n < r; n++)
                e += String.fromCharCode(t[n]);
            return decodeURIComponent(escape(e))
        },
        extractUrlBase: function(t) {
            var e = t.split("/");
            return 1 === e.length ? "./" : (e.pop(),
            e.join("/") + "/")
        }
    };
    Object.assign(xi.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : cl.extractUrlBase(t)
              , a = new gr(this.manager);
            a.setWithCredentials(this.withCredentials),
            a.load(t, function(n) {
                var r = JSON.parse(n)
                  , a = r.metadata;
                if (void 0 !== a) {
                    var s = a.type;
                    if (void 0 !== s && "object" === s.toLowerCase())
                        return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.")
                }
                var c = i.parse(r, o);
                e(c.geometry, c.materials)
            }, n, r)
        },
        setTexturePath: function(t) {
            this.texturePath = t
        },
        parse: function() {
            function t(t, e) {
                function n(t, e) {
                    return t & 1 << e
                }
                var r, o, a, c, l, u, h, d, p, f, m, v, g, _, x, b, w, M, E, S, A, C, P, L, R, O, I, D = t.faces, N = t.vertices, k = t.normals, j = t.colors, z = t.scale, B = 0;
                if (void 0 !== t.uvs) {
                    for (r = 0; r < t.uvs.length; r++)
                        t.uvs[r].length && B++;
                    for (r = 0; r < B; r++)
                        e.faceVertexUvs[r] = []
                }
                for (c = 0,
                l = N.length; c < l; )
                    M = new s,
                    M.x = N[c++] * z,
                    M.y = N[c++] * z,
                    M.z = N[c++] * z,
                    e.vertices.push(M);
                for (c = 0,
                l = D.length; c < l; )
                    if (f = D[c++],
                    m = n(f, 0),
                    v = n(f, 1),
                    g = n(f, 3),
                    _ = n(f, 4),
                    x = n(f, 5),
                    b = n(f, 6),
                    w = n(f, 7),
                    m) {
                        if (S = new T,
                        S.a = D[c],
                        S.b = D[c + 1],
                        S.c = D[c + 3],
                        A = new T,
                        A.a = D[c + 1],
                        A.b = D[c + 2],
                        A.c = D[c + 3],
                        c += 4,
                        v && (p = D[c++],
                        S.materialIndex = p,
                        A.materialIndex = p),
                        a = e.faces.length,
                        g)
                            for (r = 0; r < B; r++)
                                for (L = t.uvs[r],
                                e.faceVertexUvs[r][a] = [],
                                e.faceVertexUvs[r][a + 1] = [],
                                o = 0; o < 4; o++)
                                    d = D[c++],
                                    O = L[2 * d],
                                    I = L[2 * d + 1],
                                    R = new i(O,I),
                                    2 !== o && e.faceVertexUvs[r][a].push(R),
                                    0 !== o && e.faceVertexUvs[r][a + 1].push(R);
                        if (_ && (h = 3 * D[c++],
                        S.normal.set(k[h++], k[h++], k[h]),
                        A.normal.copy(S.normal)),
                        x)
                            for (r = 0; r < 4; r++)
                                h = 3 * D[c++],
                                P = new s(k[h++],k[h++],k[h]),
                                2 !== r && S.vertexNormals.push(P),
                                0 !== r && A.vertexNormals.push(P);
                        if (b && (u = D[c++],
                        C = j[u],
                        S.color.setHex(C),
                        A.color.setHex(C)),
                        w)
                            for (r = 0; r < 4; r++)
                                u = D[c++],
                                C = j[u],
                                2 !== r && S.vertexColors.push(new y(C)),
                                0 !== r && A.vertexColors.push(new y(C));
                        e.faces.push(S),
                        e.faces.push(A)
                    } else {
                        if (E = new T,
                        E.a = D[c++],
                        E.b = D[c++],
                        E.c = D[c++],
                        v && (p = D[c++],
                        E.materialIndex = p),
                        a = e.faces.length,
                        g)
                            for (r = 0; r < B; r++)
                                for (L = t.uvs[r],
                                e.faceVertexUvs[r][a] = [],
                                o = 0; o < 3; o++)
                                    d = D[c++],
                                    O = L[2 * d],
                                    I = L[2 * d + 1],
                                    R = new i(O,I),
                                    e.faceVertexUvs[r][a].push(R);
                        if (_ && (h = 3 * D[c++],
                        E.normal.set(k[h++], k[h++], k[h])),
                        x)
                            for (r = 0; r < 3; r++)
                                h = 3 * D[c++],
                                P = new s(k[h++],k[h++],k[h]),
                                E.vertexNormals.push(P);
                        if (b && (u = D[c++],
                        E.color.setHex(j[u])),
                        w)
                            for (r = 0; r < 3; r++)
                                u = D[c++],
                                E.vertexColors.push(new y(j[u]));
                        e.faces.push(E)
                    }
            }
            function e(t, e) {
                var n = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                if (t.skinWeights)
                    for (var r = 0, i = t.skinWeights.length; r < i; r += n) {
                        var o = t.skinWeights[r]
                          , a = n > 1 ? t.skinWeights[r + 1] : 0
                          , s = n > 2 ? t.skinWeights[r + 2] : 0
                          , c = n > 3 ? t.skinWeights[r + 3] : 0;
                        e.skinWeights.push(new u(o,a,s,c))
                    }
                if (t.skinIndices)
                    for (var r = 0, i = t.skinIndices.length; r < i; r += n) {
                        var l = t.skinIndices[r]
                          , h = n > 1 ? t.skinIndices[r + 1] : 0
                          , d = n > 2 ? t.skinIndices[r + 2] : 0
                          , p = n > 3 ? t.skinIndices[r + 3] : 0;
                        e.skinIndices.push(new u(l,h,d,p))
                    }
                e.bones = t.bones,
                e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || e.skinIndices.length !== e.vertices.length) && console.warn("When skinning, number of vertices (" + e.vertices.length + "), skinIndices (" + e.skinIndices.length + "), and skinWeights (" + e.skinWeights.length + ") should match.")
            }
            function n(t, e) {
                var n = t.scale;
                if (void 0 !== t.morphTargets)
                    for (var r = 0, i = t.morphTargets.length; r < i; r++) {
                        e.morphTargets[r] = {},
                        e.morphTargets[r].name = t.morphTargets[r].name,
                        e.morphTargets[r].vertices = [];
                        for (var o = e.morphTargets[r].vertices, a = t.morphTargets[r].vertices, c = 0, l = a.length; c < l; c += 3) {
                            var u = new s;
                            u.x = a[c] * n,
                            u.y = a[c + 1] * n,
                            u.z = a[c + 2] * n,
                            o.push(u)
                        }
                    }
                if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                    console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                    for (var h = e.faces, d = t.morphColors[0].colors, r = 0, i = h.length; r < i; r++)
                        h[r].color.fromArray(d, 3 * r)
                }
            }
            function r(t, e) {
                var n = []
                  , r = [];
                void 0 !== t.animation && r.push(t.animation),
                void 0 !== t.animations && (t.animations.length ? r = r.concat(t.animations) : r.push(t.animations));
                for (var i = 0; i < r.length; i++) {
                    var o = vi.parseAnimation(r[i], e.bones);
                    o && n.push(o)
                }
                if (e.morphTargets) {
                    var a = vi.CreateClipsFromMorphTargetSequences(e.morphTargets, 10);
                    n = n.concat(a)
                }
                n.length > 0 && (e.animations = n)
            }
            return function(i, o) {
                void 0 !== i.data && (i = i.data),
                void 0 !== i.scale ? i.scale = 1 / i.scale : i.scale = 1;
                var a = new S;
                return t(i, a),
                e(i, a),
                n(i, a),
                r(i, a),
                a.computeFaceNormals(),
                a.computeBoundingSphere(),
                void 0 === i.materials || 0 === i.materials.length ? {
                    geometry: a
                } : {
                    geometry: a,
                    materials: _i.prototype.initMaterials(i.materials, o, this.crossOrigin)
                }
            }
        }()
    }),
    Object.assign(bi.prototype, {
        load: function(t, e, n, r) {
            "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
            var i = this;
            new gr(i.manager).load(t, function(n) {
                var o = null;
                try {
                    o = JSON.parse(n)
                } catch (e) {
                    return void 0 !== r && r(e),
                    void console.error("THREE:ObjectLoader: Can't parse " + t + ".", e.message)
                }
                var a = o.metadata;
                if (void 0 === a || void 0 === a.type || "geometry" === a.type.toLowerCase())
                    return void console.error("THREE.ObjectLoader: Can't load " + t + ". Use THREE.JSONLoader instead.");
                i.parse(o, e)
            }, n, r)
        },
        setTexturePath: function(t) {
            this.texturePath = t
        },
        setCrossOrigin: function(t) {
            this.crossOrigin = t
        },
        parse: function(t, e) {
            var n = this.parseShape(t.shapes)
              , r = this.parseGeometries(t.geometries, n)
              , i = this.parseImages(t.images, function() {
                void 0 !== e && e(s)
            })
              , o = this.parseTextures(t.textures, i)
              , a = this.parseMaterials(t.materials, o)
              , s = this.parseObject(t.object, r, a);
            return t.animations && (s.animations = this.parseAnimations(t.animations)),
            void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(s),
            s
        },
        parseShape: function(t) {
            var e = {};
            if (void 0 !== t)
                for (var n = 0, r = t.length; n < r; n++) {
                    var i = (new Xr).fromJSON(t[n]);
                    e[i.uuid] = i
                }
            return e
        },
        parseGeometries: function(t, e) {
            var n = {};
            if (void 0 !== t)
                for (var r = new xi, i = new yi, o = 0, a = t.length; o < a; o++) {
                    var s, c = t[o];
                    switch (c.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        s = new Zc[c.type](c.width,c.height,c.widthSegments,c.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        s = new Zc[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        s = new Zc[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        s = new Zc[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        s = new Zc[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        s = new Zc[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        s = new Zc[c.type](c.radius,c.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        s = new Zc[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        s = new Zc[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        s = new Zc[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        s = new Zc[c.type](c.points,c.segments,c.phiStart,c.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        s = new Zc[c.type](c.vertices,c.indices,c.radius,c.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        for (var l = [], o = 0, a = c.shapes.length; o < a; o++) {
                            var u = e[c.shapes[o]];
                            l.push(u)
                        }
                        s = new Zc[c.type](l,c.curveSegments);
                        break;
                    case "BufferGeometry":
                        s = i.parse(c);
                        break;
                    case "Geometry":
                        s = r.parse(c, this.texturePath).geometry;
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + c.type + '"');
                        continue
                    }
                    s.uuid = c.uuid,
                    void 0 !== c.name && (s.name = c.name),
                    n[c.uuid] = s
                }
            return n
        },
        parseMaterials: function(t, e) {
            var n = {};
            if (void 0 !== t) {
                var r = new gi;
                r.setTextures(e);
                for (var i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    if ("MultiMaterial" === a.type) {
                        for (var s = [], c = 0; c < a.materials.length; c++)
                            s.push(r.parse(a.materials[c]));
                        n[a.uuid] = s
                    } else
                        n[a.uuid] = r.parse(a)
                }
            }
            return n
        },
        parseAnimations: function(t) {
            for (var e = [], n = 0; n < t.length; n++) {
                var r = vi.parse(t[n]);
                e.push(r)
            }
            return e
        },
        parseImages: function(t, e) {
            var n = this
              , r = {};
            if (void 0 !== t && t.length > 0) {
                var i = new vr(e)
                  , o = new xr(i);
                o.setCrossOrigin(this.crossOrigin);
                for (var a = 0, s = t.length; a < s; a++) {
                    var c = t[a]
                      , l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.texturePath + c.url;
                    r[c.uuid] = function(t) {
                        return n.manager.itemStart(t),
                        o.load(t, function() {
                            n.manager.itemEnd(t)
                        }, void 0, function() {
                            n.manager.itemEnd(t),
                            n.manager.itemError(t)
                        })
                    }(l)
                }
            }
            return r
        },
        parseTextures: function(t, e) {
            function n(t, e) {
                return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t),
                e[t])
            }
            var r = {};
            if (void 0 !== t)
                for (var i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid),
                    void 0 === e[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                    var s = new l(e[a.image]);
                    s.needsUpdate = !0,
                    s.uuid = a.uuid,
                    void 0 !== a.name && (s.name = a.name),
                    void 0 !== a.mapping && (s.mapping = n(a.mapping, ll)),
                    void 0 !== a.offset && s.offset.fromArray(a.offset),
                    void 0 !== a.repeat && s.repeat.fromArray(a.repeat),
                    void 0 !== a.center && s.center.fromArray(a.center),
                    void 0 !== a.rotation && (s.rotation = a.rotation),
                    void 0 !== a.wrap && (s.wrapS = n(a.wrap[0], ul),
                    s.wrapT = n(a.wrap[1], ul)),
                    void 0 !== a.format && (s.format = a.format),
                    void 0 !== a.minFilter && (s.minFilter = n(a.minFilter, hl)),
                    void 0 !== a.magFilter && (s.magFilter = n(a.magFilter, hl)),
                    void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy),
                    void 0 !== a.flipY && (s.flipY = a.flipY),
                    r[a.uuid] = s
                }
            return r
        },
        parseObject: function(t, e, n) {
            function r(t) {
                return void 0 === e[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t),
                e[t]
            }
            function i(t) {
                if (void 0 !== t) {
                    if (Array.isArray(t)) {
                        for (var e = [], r = 0, i = t.length; r < i; r++) {
                            var o = t[r];
                            void 0 === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o),
                            e.push(n[o])
                        }
                        return e
                    }
                    return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined material", t),
                    n[t]
                }
            }
            var o;
            switch (t.type) {
            case "Scene":
                o = new Ce,
                void 0 !== t.background && Number.isInteger(t.background) && (o.background = new y(t.background)),
                void 0 !== t.fog && ("Fog" === t.fog.type ? o.fog = new Ae(t.fog.color,t.fog.near,t.fog.far) : "FogExp2" === t.fog.type && (o.fog = new Se(t.fog.color,t.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new we(t.fov,t.aspect,t.near,t.far),
                void 0 !== t.focus && (o.focus = t.focus),
                void 0 !== t.zoom && (o.zoom = t.zoom),
                void 0 !== t.filmGauge && (o.filmGauge = t.filmGauge),
                void 0 !== t.filmOffset && (o.filmOffset = t.filmOffset),
                void 0 !== t.view && (o.view = Object.assign({}, t.view));
                break;
            case "OrthographicCamera":
                o = new E(t.left,t.right,t.top,t.bottom,t.near,t.far),
                void 0 !== t.zoom && (o.zoom = t.zoom),
                void 0 !== t.view && (o.view = Object.assign({}, t.view));
                break;
            case "AmbientLight":
                o = new ni(t.color,t.intensity);
                break;
            case "DirectionalLight":
                o = new ei(t.color,t.intensity);
                break;
            case "PointLight":
                o = new Kr(t.color,t.intensity,t.distance,t.decay);
                break;
            case "RectAreaLight":
                o = new ri(t.color,t.intensity,t.width,t.height);
                break;
            case "SpotLight":
                o = new Qr(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                break;
            case "HemisphereLight":
                o = new $r(t.color,t.groundColor,t.intensity);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                var a = r(t.geometry)
                  , s = i(t.material);
                o = a.bones && a.bones.length > 0 ? new De(a,s) : new Z(a,s);
                break;
            case "LOD":
                o = new Re;
                break;
            case "Line":
                o = new ke(r(t.geometry),i(t.material),t.mode);
                break;
            case "LineLoop":
                o = new ze(r(t.geometry),i(t.material));
                break;
            case "LineSegments":
                o = new je(r(t.geometry),i(t.material));
                break;
            case "PointCloud":
            case "Points":
                o = new Ue(r(t.geometry),i(t.material));
                break;
            case "Sprite":
                o = new Le(i(t.material));
                break;
            case "Group":
                o = new Fe;
                break;
            default:
                o = new w
            }
            if (o.uuid = t.uuid,
            void 0 !== t.name && (o.name = t.name),
            void 0 !== t.matrix ? (o.matrix.fromArray(t.matrix),
            o.matrix.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== t.position && o.position.fromArray(t.position),
            void 0 !== t.rotation && o.rotation.fromArray(t.rotation),
            void 0 !== t.quaternion && o.quaternion.fromArray(t.quaternion),
            void 0 !== t.scale && o.scale.fromArray(t.scale)),
            void 0 !== t.castShadow && (o.castShadow = t.castShadow),
            void 0 !== t.receiveShadow && (o.receiveShadow = t.receiveShadow),
            t.shadow && (void 0 !== t.shadow.bias && (o.shadow.bias = t.shadow.bias),
            void 0 !== t.shadow.radius && (o.shadow.radius = t.shadow.radius),
            void 0 !== t.shadow.mapSize && o.shadow.mapSize.fromArray(t.shadow.mapSize),
            void 0 !== t.shadow.camera && (o.shadow.camera = this.parseObject(t.shadow.camera))),
            void 0 !== t.visible && (o.visible = t.visible),
            void 0 !== t.frustumCulled && (o.frustumCulled = t.frustumCulled),
            void 0 !== t.renderOrder && (o.renderOrder = t.renderOrder),
            void 0 !== t.userData && (o.userData = t.userData),
            void 0 !== t.children)
                for (var c = t.children, l = 0; l < c.length; l++)
                    o.add(this.parseObject(c[l], e, n));
            if ("LOD" === t.type)
                for (var u = t.levels, h = 0; h < u.length; h++) {
                    var d = u[h]
                      , p = o.getObjectByProperty("uuid", d.object);
                    void 0 !== p && o.addLevel(p, d.distance)
                }
            return o
        }
    });
    var ll = {
        UVMapping: ts,
        CubeReflectionMapping: es,
        CubeRefractionMapping: ns,
        EquirectangularReflectionMapping: rs,
        EquirectangularRefractionMapping: is,
        SphericalReflectionMapping: os,
        CubeUVReflectionMapping: as,
        CubeUVRefractionMapping: ss
    }
      , ul = {
        RepeatWrapping: cs,
        ClampToEdgeWrapping: ls,
        MirroredRepeatWrapping: us
    }
      , hl = {
        NearestFilter: hs,
        NearestMipMapNearestFilter: ds,
        NearestMipMapLinearFilter: ps,
        LinearFilter: fs,
        LinearMipMapNearestFilter: ms,
        LinearMipMapLinearFilter: vs
    };
    wi.prototype = {
        constructor: wi,
        setOptions: function(t) {
            return this.options = t,
            this
        },
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t);
            var i = this
              , o = Qc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            fetch(t).then(function(t) {
                return t.blob()
            }).then(function(t) {
                return createImageBitmap(t, i.options)
            }).then(function(n) {
                Qc.add(t, n),
                e && e(n),
                i.manager.itemEnd(t)
            }).catch(function(e) {
                r && r(e),
                i.manager.itemEnd(t),
                i.manager.itemError(t)
            })
        },
        setCrossOrigin: function() {
            return this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    },
    Object.assign(Mi.prototype, {
        moveTo: function(t, e) {
            this.currentPath = new qr,
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(t, e)
        },
        lineTo: function(t, e) {
            this.currentPath.lineTo(t, e)
        },
        quadraticCurveTo: function(t, e, n, r) {
            this.currentPath.quadraticCurveTo(t, e, n, r)
        },
        bezierCurveTo: function(t, e, n, r, i, o) {
            this.currentPath.bezierCurveTo(t, e, n, r, i, o)
        },
        splineThru: function(t) {
            this.currentPath.splineThru(t)
        },
        toShapes: function(t, e) {
            function n(t) {
                for (var e = [], n = 0, r = t.length; n < r; n++) {
                    var i = t[n]
                      , o = new Xr;
                    o.curves = i.curves,
                    e.push(o)
                }
                return e
            }
            var r = $c.isClockWise
              , i = this.subPaths;
            if (0 === i.length)
                return [];
            if (!0 === e)
                return n(i);
            var o, a, s, c = [];
            if (1 === i.length)
                return a = i[0],
                s = new Xr,
                s.curves = a.curves,
                c.push(s),
                c;
            var l = !r(i[0].getPoints());
            l = t ? !l : l;
            var u, h = [], d = [], p = [], f = 0;
            d[f] = void 0,
            p[f] = [];
            for (var m = 0, v = i.length; m < v; m++)
                a = i[m],
                u = a.getPoints(),
                o = r(u),
                o = t ? !o : o,
                o ? (!l && d[f] && f++,
                d[f] = {
                    s: new Xr,
                    p: u
                },
                d[f].s.curves = a.curves,
                l && f++,
                p[f] = []) : p[f].push({
                    h: a,
                    p: u[0]
                });
            if (!d[0])
                return n(i);
            if (d.length > 1) {
                for (var g = !1, y = [], _ = 0, x = d.length; _ < x; _++)
                    h[_] = [];
                for (var _ = 0, x = d.length; _ < x; _++)
                    for (var b = p[_], w = 0; w < b.length; w++) {
                        for (var M = b[w], E = !0, T = 0; T < d.length; T++)
                            (function(t, e) {
                                for (var n = e.length, r = !1, i = n - 1, o = 0; o < n; i = o++) {
                                    var a = e[i]
                                      , s = e[o]
                                      , c = s.x - a.x
                                      , l = s.y - a.y;
                                    if (Math.abs(l) > Number.EPSILON) {
                                        if (l < 0 && (a = e[o],
                                        c = -c,
                                        s = e[i],
                                        l = -l),
                                        t.y < a.y || t.y > s.y)
                                            continue;
                                        if (t.y === a.y) {
                                            if (t.x === a.x)
                                                return !0
                                        } else {
                                            var u = l * (t.x - a.x) - c * (t.y - a.y);
                                            if (0 === u)
                                                return !0;
                                            if (u < 0)
                                                continue;
                                            r = !r
                                        }
                                    } else {
                                        if (t.y !== a.y)
                                            continue;
                                        if (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x)
                                            return !0
                                    }
                                }
                                return r
                            }
                            )(M.p, d[T].p) && (_ !== T && y.push({
                                froms: _,
                                tos: T,
                                hole: w
                            }),
                            E ? (E = !1,
                            h[T].push(M)) : g = !0);
                        E && h[_].push(M)
                    }
                y.length > 0 && (g || (p = h))
            }
            for (var S, m = 0, A = d.length; m < A; m++) {
                s = d[m].s,
                c.push(s),
                S = p[m];
                for (var C = 0, P = S.length; C < P; C++)
                    s.holes.push(S[C].h)
            }
            return c
        }
    }),
    Object.assign(Ei.prototype, {
        isFont: !0,
        generateShapes: function(t, e, n) {
            void 0 === e && (e = 100),
            void 0 === n && (n = 4);
            for (var r = [], i = Ti(t, e, n, this.data), o = 0, a = i.length; o < a; o++)
                Array.prototype.push.apply(r, i[o].toShapes());
            return r
        }
    }),
    Object.assign(Ai.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = new gr(this.manager);
            o.setPath(this.path),
            o.load(t, function(t) {
                var n;
                try {
                    n = JSON.parse(t)
                } catch (e) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                    n = JSON.parse(t.substring(65, t.length - 2))
                }
                var r = i.parse(n);
                e && e(r)
            }, n, r)
        },
        parse: function(t) {
            return new Ei(t)
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    });
    var dl, pl = {
        getContext: function() {
            return void 0 === dl && (dl = new (window.AudioContext || window.webkitAudioContext)),
            dl
        },
        setContext: function(t) {
            dl = t
        }
    };
    Object.assign(Ci.prototype, {
        load: function(t, e, n, r) {
            var i = new gr(this.manager);
            i.setResponseType("arraybuffer"),
            i.load(t, function(t) {
                pl.getContext().decodeAudioData(t, function(t) {
                    e(t)
                })
            }, n, r)
        }
    }),
    Object.assign(Pi.prototype, {
        update: function() {
            var t, e, n, r, i, a, s, c, l = new o, u = new o;
            return function(o) {
                if (t !== this || e !== o.focus || n !== o.fov || r !== o.aspect * this.aspect || i !== o.near || a !== o.far || s !== o.zoom || c !== this.eyeSep) {
                    t = this,
                    e = o.focus,
                    n = o.fov,
                    r = o.aspect * this.aspect,
                    i = o.near,
                    a = o.far,
                    s = o.zoom;
                    var h = o.projectionMatrix.clone();
                    c = this.eyeSep / 2;
                    var d, p, f = c * i / e, m = i * Math.tan(Cc.DEG2RAD * n * .5) / s;
                    u.elements[12] = -c,
                    l.elements[12] = c,
                    d = -m * r + f,
                    p = m * r + f,
                    h.elements[0] = 2 * i / (p - d),
                    h.elements[8] = (p + d) / (p - d),
                    this.cameraL.projectionMatrix.copy(h),
                    d = -m * r - f,
                    p = m * r - f,
                    h.elements[0] = 2 * i / (p - d),
                    h.elements[8] = (p + d) / (p - d),
                    this.cameraR.projectionMatrix.copy(h)
                }
                this.cameraL.matrixWorld.copy(o.matrixWorld).multiply(u),
                this.cameraR.matrixWorld.copy(o.matrixWorld).multiply(l)
            }
        }()
    }),
    Li.prototype = Object.create(w.prototype),
    Li.prototype.constructor = Li,
    Ri.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ri,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null)
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(t) {
            null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = t,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination)
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(t) {
            this.gain.gain.value = t
        },
        updateMatrixWorld: function() {
            var t = new s
              , e = new a
              , n = new s
              , r = new s;
            return function(i) {
                w.prototype.updateMatrixWorld.call(this, i);
                var o = this.context.listener
                  , a = this.up;
                this.matrixWorld.decompose(t, e, n),
                r.set(0, 0, -1).applyQuaternion(e),
                o.positionX ? (o.positionX.setValueAtTime(t.x, this.context.currentTime),
                o.positionY.setValueAtTime(t.y, this.context.currentTime),
                o.positionZ.setValueAtTime(t.z, this.context.currentTime),
                o.forwardX.setValueAtTime(r.x, this.context.currentTime),
                o.forwardY.setValueAtTime(r.y, this.context.currentTime),
                o.forwardZ.setValueAtTime(r.z, this.context.currentTime),
                o.upX.setValueAtTime(a.x, this.context.currentTime),
                o.upY.setValueAtTime(a.y, this.context.currentTime),
                o.upZ.setValueAtTime(a.z, this.context.currentTime)) : (o.setPosition(t.x, t.y, t.z),
                o.setOrientation(r.x, r.y, r.z, a.x, a.y, a.z))
            }
        }()
    }),
    Oi.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Oi,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(t) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = t,
            this.connect(),
            this
        },
        setBuffer: function(t) {
            return this.buffer = t,
            this.sourceType = "buffer",
            this.autoplay && this.play(),
            this
        },
        play: function() {
            if (!0 === this.isPlaying)
                return void console.warn("THREE.Audio: Audio is already playing.");
            if (!1 === this.hasPlaybackControl)
                return void console.warn("THREE.Audio: this Audio has no playback control.");
            var t = this.context.createBufferSource();
            return t.buffer = this.buffer,
            t.loop = this.loop,
            t.onended = this.onEnded.bind(this),
            t.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
            this.startTime = this.context.currentTime,
            t.start(this.startTime, this.offset),
            this.isPlaying = !0,
            this.source = t,
            this.connect()
        },
        pause: function() {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (!0 === this.isPlaying && (this.source.stop(),
            this.offset += (this.context.currentTime - this.startTime) * this.playbackRate,
            this.isPlaying = !1),
            this)
        },
        stop: function() {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
            this.offset = 0,
            this.isPlaying = !1,
            this)
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].connect(this.filters[t]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else
                this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].disconnect(this.filters[t]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else
                this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(t) {
            return t || (t = []),
            !0 === this.isPlaying ? (this.disconnect(),
            this.filters = t,
            this.connect()) : this.filters = t,
            this
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(t) {
            return this.setFilters(t ? [t] : [])
        },
        setPlaybackRate: function(t) {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.playbackRate = t,
            !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
            this)
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.loop
        },
        setLoop: function(t) {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.loop = t,
            !0 === this.isPlaying && (this.source.loop = this.loop),
            this)
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(t) {
            return this.gain.gain.value = t,
            this
        }
    }),
    Ii.prototype = Object.assign(Object.create(Oi.prototype), {
        constructor: Ii,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(t) {
            this.panner.refDistance = t
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(t) {
            this.panner.rolloffFactor = t
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(t) {
            this.panner.distanceModel = t
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(t) {
            this.panner.maxDistance = t
        },
        updateMatrixWorld: function() {
            var t = new s;
            return function(e) {
                w.prototype.updateMatrixWorld.call(this, e),
                t.setFromMatrixPosition(this.matrixWorld),
                this.panner.setPosition(t.x, t.y, t.z)
            }
        }()
    }),
    Object.assign(Di.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data),
            this.data
        },
        getAverageFrequency: function() {
            for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
                t += e[n];
            return t / e.length
        }
    }),
    Object.assign(Ni.prototype, {
        accumulate: function(t, e) {
            var n = this.buffer
              , r = this.valueSize
              , i = t * r + r
              , o = this.cumulativeWeight;
            if (0 === o) {
                for (var a = 0; a !== r; ++a)
                    n[i + a] = n[a];
                o = e
            } else {
                o += e;
                var s = e / o;
                this._mixBufferRegion(n, i, 0, s, r)
            }
            this.cumulativeWeight = o
        },
        apply: function(t) {
            var e = this.valueSize
              , n = this.buffer
              , r = t * e + e
              , i = this.cumulativeWeight
              , o = this.binding;
            if (this.cumulativeWeight = 0,
            i < 1) {
                var a = 3 * e;
                this._mixBufferRegion(n, r, a, 1 - i, e)
            }
            for (var s = e, c = e + e; s !== c; ++s)
                if (n[s] !== n[s + e]) {
                    o.setValue(n, r);
                    break
                }
        },
        saveOriginalState: function() {
            var t = this.binding
              , e = this.buffer
              , n = this.valueSize
              , r = 3 * n;
            t.getValue(e, r);
            for (var i = n, o = r; i !== o; ++i)
                e[i] = e[r + i % n];
            this.cumulativeWeight = 0
        },
        restoreOriginalState: function() {
            var t = 3 * this.valueSize;
            this.binding.setValue(this.buffer, t)
        },
        _select: function(t, e, n, r, i) {
            if (r >= .5)
                for (var o = 0; o !== i; ++o)
                    t[e + o] = t[n + o]
        },
        _slerp: function(t, e, n, r) {
            a.slerpFlat(t, e, t, e, t, n, r)
        },
        _lerp: function(t, e, n, r, i) {
            for (var o = 1 - r, a = 0; a !== i; ++a) {
                var s = e + a;
                t[s] = t[s] * o + t[n + a] * r
            }
        }
    });
    var fl = "\\[\\]\\.:\\/";
    Object.assign(ki.prototype, {
        getValue: function(t, e) {
            this.bind();
            var n = this._targetGroup.nCachedObjects_
              , r = this._bindings[n];
            void 0 !== r && r.getValue(t, e)
        },
        setValue: function(t, e) {
            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                n[r].setValue(t, e)
        },
        bind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].bind()
        },
        unbind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].unbind()
        }
    }),
    Object.assign(ji, {
        Composite: ki,
        create: function(t, e, n) {
            return t && t.isAnimationObjectGroup ? new ji.Composite(t,e,n) : new ji(t,e,n)
        },
        sanitizeNodeName: function() {
            var t = new RegExp("[" + fl + "]","g");
            return function(e) {
                return e.replace(/\s/g, "_").replace(t, "")
            }
        }(),
        parseTrackName: function() {
            var t = "[^" + fl + "]"
              , e = "[^" + fl.replace("\\.", "") + "]"
              , n = /((?:WC+[\/:])*)/.source.replace("WC", t)
              , r = /(WCOD+)?/.source.replace("WCOD", e)
              , i = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", t)
              , o = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", t)
              , a = new RegExp("^" + n + r + i + o + "$")
              , s = ["material", "materials", "bones"];
            return function(t) {
                var e = a.exec(t);
                if (!e)
                    throw new Error("PropertyBinding: Cannot parse trackName: " + t);
                var n = {
                    nodeName: e[2],
                    objectName: e[3],
                    objectIndex: e[4],
                    propertyName: e[5],
                    propertyIndex: e[6]
                }
                  , r = n.nodeName && n.nodeName.lastIndexOf(".");
                if (void 0 !== r && -1 !== r) {
                    var i = n.nodeName.substring(r + 1);
                    -1 !== s.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r),
                    n.objectName = i)
                }
                if (null === n.propertyName || 0 === n.propertyName.length)
                    throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                return n
            }
        }(),
        findNode: function(t, e) {
            if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                return t;
            if (t.skeleton) {
                var n = t.skeleton.getBoneByName(e);
                if (void 0 !== n)
                    return n
            }
            if (t.children) {
                var r = function(t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        if (i.name === e || i.uuid === e)
                            return i;
                        var o = r(i.children);
                        if (o)
                            return o
                    }
                    return null
                }
                  , i = r(t.children);
                if (i)
                    return i
            }
            return null
        }
    }),
    Object.assign(ji.prototype, {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning: {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(t, e) {
            t[e] = this.node[this.propertyName]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                t[e++] = n[r]
        }
        , function(t, e) {
            t[e] = this.resolvedProperty[this.propertyIndex]
        }
        , function(t, e) {
            this.resolvedProperty.toArray(t, e)
        }
        ],
        SetterByBindingTypeAndVersioning: [[function(t, e) {
            this.targetObject[this.propertyName] = t[e]
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++];
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++];
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e]
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty.fromArray(t, e)
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ]],
        getValue: function(t, e) {
            this.bind(),
            this.getValue(t, e)
        },
        setValue: function(t, e) {
            this.bind(),
            this.setValue(t, e)
        },
        bind: function() {
            var t = this.node
              , e = this.parsedPath
              , n = e.objectName
              , r = e.propertyName
              , i = e.propertyIndex;
            if (t || (t = ji.findNode(this.rootNode, e.nodeName) || this.rootNode,
            this.node = t),
            this.getValue = this._getValue_unavailable,
            this.setValue = this._setValue_unavailable,
            !t)
                return void console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            if (n) {
                var o = e.objectIndex;
                switch (n) {
                case "materials":
                    if (!t.material)
                        return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                    if (!t.material.materials)
                        return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                    t = t.material.materials;
                    break;
                case "bones":
                    if (!t.skeleton)
                        return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                    t = t.skeleton.bones;
                    for (var a = 0; a < t.length; a++)
                        if (t[a].name === o) {
                            o = a;
                            break
                        }
                    break;
                default:
                    if (void 0 === t[n])
                        return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                    t = t[n]
                }
                if (void 0 !== o) {
                    if (void 0 === t[o])
                        return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                    t = t[o]
                }
            }
            var s = t[r];
            if (void 0 === s) {
                var c = e.nodeName;
                return void console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + r + " but it wasn't found.", t)
            }
            var l = this.Versioning.None;
            void 0 !== t.needsUpdate ? (l = this.Versioning.NeedsUpdate,
            this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate,
            this.targetObject = t);
            var u = this.BindingType.Direct;
            if (void 0 !== i) {
                if ("morphTargetInfluences" === r) {
                    if (!t.geometry)
                        return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    if (t.geometry.isBufferGeometry) {
                        if (!t.geometry.morphAttributes)
                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        for (var a = 0; a < this.node.geometry.morphAttributes.position.length; a++)
                            if (t.geometry.morphAttributes.position[a].name === i) {
                                i = a;
                                break
                            }
                    } else {
                        if (!t.geometry.morphTargets)
                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                        for (var a = 0; a < this.node.geometry.morphTargets.length; a++)
                            if (t.geometry.morphTargets[a].name === i) {
                                i = a;
                                break
                            }
                    }
                }
                u = this.BindingType.ArrayElement,
                this.resolvedProperty = s,
                this.propertyIndex = i
            } else
                void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray,
                this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray,
                this.resolvedProperty = s) : this.propertyName = r;
            this.getValue = this.GetterByBindingType[u],
            this.setValue = this.SetterByBindingTypeAndVersioning[u][l]
        },
        unbind: function() {
            this.node = null,
            this.getValue = this._getValue_unbound,
            this.setValue = this._setValue_unbound
        }
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(ji.prototype, {
        _getValue_unbound: ji.prototype.getValue,
        _setValue_unbound: ji.prototype.setValue
    }),
    Object.assign(zi.prototype, {
        isAnimationObjectGroup: !0,
        add: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._paths, o = this._parsedPaths, a = this._bindings, s = a.length, c = void 0, l = 0, u = arguments.length; l !== u; ++l) {
                var h = arguments[l]
                  , d = h.uuid
                  , p = r[d];
                if (void 0 === p) {
                    p = e++,
                    r[d] = p,
                    t.push(h);
                    for (var f = 0, m = s; f !== m; ++f)
                        a[f].push(new ji(h,i[f],o[f]))
                } else if (p < n) {
                    c = t[p];
                    var v = --n
                      , g = t[v];
                    r[g.uuid] = p,
                    t[p] = g,
                    r[d] = v,
                    t[v] = h;
                    for (var f = 0, m = s; f !== m; ++f) {
                        var y = a[f]
                          , _ = y[v]
                          , x = y[p];
                        y[p] = _,
                        void 0 === x && (x = new ji(h,i[f],o[f])),
                        y[v] = x
                    }
                } else
                    t[p] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = n
        },
        remove: function() {
            for (var t = this._objects, e = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, i = r.length, o = 0, a = arguments.length; o !== a; ++o) {
                var s = arguments[o]
                  , c = s.uuid
                  , l = n[c];
                if (void 0 !== l && l >= e) {
                    var u = e++
                      , h = t[u];
                    n[h.uuid] = l,
                    t[l] = h,
                    n[c] = u,
                    t[u] = s;
                    for (var d = 0, p = i; d !== p; ++d) {
                        var f = r[d]
                          , m = f[u]
                          , v = f[l];
                        f[l] = m,
                        f[u] = v
                    }
                }
            }
            this.nCachedObjects_ = e
        },
        uncache: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, o = i.length, a = 0, s = arguments.length; a !== s; ++a) {
                var c = arguments[a]
                  , l = c.uuid
                  , u = r[l];
                if (void 0 !== u)
                    if (delete r[l],
                    u < n) {
                        var h = --n
                          , d = t[h]
                          , p = --e
                          , f = t[p];
                        r[d.uuid] = u,
                        t[u] = d,
                        r[f.uuid] = h,
                        t[h] = f,
                        t.pop();
                        for (var m = 0, v = o; m !== v; ++m) {
                            var g = i[m]
                              , y = g[h]
                              , _ = g[p];
                            g[u] = y,
                            g[h] = _,
                            g.pop()
                        }
                    } else {
                        var p = --e
                          , f = t[p];
                        r[f.uuid] = u,
                        t[u] = f,
                        t.pop();
                        for (var m = 0, v = o; m !== v; ++m) {
                            var g = i[m];
                            g[u] = g[p],
                            g.pop()
                        }
                    }
            }
            this.nCachedObjects_ = n
        },
        subscribe_: function(t, e) {
            var n = this._bindingsIndicesByPath
              , r = n[t]
              , i = this._bindings;
            if (void 0 !== r)
                return i[r];
            var o = this._paths
              , a = this._parsedPaths
              , s = this._objects
              , c = s.length
              , l = this.nCachedObjects_
              , u = new Array(c);
            r = i.length,
            n[t] = r,
            o.push(t),
            a.push(e),
            i.push(u);
            for (var h = l, d = s.length; h !== d; ++h) {
                var p = s[h];
                u[h] = new ji(p,t,e)
            }
            return u
        },
        unsubscribe_: function(t) {
            var e = this._bindingsIndicesByPath
              , n = e[t];
            if (void 0 !== n) {
                var r = this._paths
                  , i = this._parsedPaths
                  , o = this._bindings
                  , a = o.length - 1
                  , s = o[a];
                e[t[a]] = n,
                o[n] = s,
                o.pop(),
                i[n] = i[a],
                i.pop(),
                r[n] = r[a],
                r.pop()
            }
        }
    }),
    Object.assign(Bi.prototype, {
        play: function() {
            return this._mixer._activateAction(this),
            this
        },
        stop: function() {
            return this._mixer._deactivateAction(this),
            this.reset()
        },
        reset: function() {
            return this.paused = !1,
            this.enabled = !0,
            this.time = 0,
            this._loopCount = -1,
            this._startTime = null,
            this.stopFading().stopWarping()
        },
        isRunning: function() {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function() {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(t) {
            return this._startTime = t,
            this
        },
        setLoop: function(t, e) {
            return this.loop = t,
            this.repetitions = e,
            this
        },
        setEffectiveWeight: function(t) {
            return this.weight = t,
            this._effectiveWeight = this.enabled ? t : 0,
            this.stopFading()
        },
        getEffectiveWeight: function() {
            return this._effectiveWeight
        },
        fadeIn: function(t) {
            return this._scheduleFading(t, 0, 1)
        },
        fadeOut: function(t) {
            return this._scheduleFading(t, 1, 0)
        },
        crossFadeFrom: function(t, e, n) {
            if (t.fadeOut(e),
            this.fadeIn(e),
            n) {
                var r = this._clip.duration
                  , i = t._clip.duration
                  , o = i / r
                  , a = r / i;
                t.warp(1, o, e),
                this.warp(a, 1, e)
            }
            return this
        },
        crossFadeTo: function(t, e, n) {
            return t.crossFadeFrom(this, e, n)
        },
        stopFading: function() {
            var t = this._weightInterpolant;
            return null !== t && (this._weightInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        setEffectiveTimeScale: function(t) {
            return this.timeScale = t,
            this._effectiveTimeScale = this.paused ? 0 : t,
            this.stopWarping()
        },
        getEffectiveTimeScale: function() {
            return this._effectiveTimeScale
        },
        setDuration: function(t) {
            return this.timeScale = this._clip.duration / t,
            this.stopWarping()
        },
        syncWith: function(t) {
            return this.time = t.time,
            this.timeScale = t.timeScale,
            this.stopWarping()
        },
        halt: function(t) {
            return this.warp(this._effectiveTimeScale, 0, t)
        },
        warp: function(t, e, n) {
            var r = this._mixer
              , i = r.time
              , o = this._timeScaleInterpolant
              , a = this.timeScale;
            null === o && (o = r._lendControlInterpolant(),
            this._timeScaleInterpolant = o);
            var s = o.parameterPositions
              , c = o.sampleValues;
            return s[0] = i,
            s[1] = i + n,
            c[0] = t / a,
            c[1] = e / a,
            this
        },
        stopWarping: function() {
            var t = this._timeScaleInterpolant;
            return null !== t && (this._timeScaleInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        getMixer: function() {
            return this._mixer
        },
        getClip: function() {
            return this._clip
        },
        getRoot: function() {
            return this._localRoot || this._mixer._root
        },
        _update: function(t, e, n, r) {
            if (!this.enabled)
                return void this._updateWeight(t);
            var i = this._startTime;
            if (null !== i) {
                var o = (t - i) * n;
                if (o < 0 || 0 === n)
                    return;
                this._startTime = null,
                e = n * o
            }
            e *= this._updateTimeScale(t);
            var a = this._updateTime(e)
              , s = this._updateWeight(t);
            if (s > 0)
                for (var c = this._interpolants, l = this._propertyBindings, u = 0, h = c.length; u !== h; ++u)
                    c[u].evaluate(a),
                    l[u].accumulate(r, s)
        },
        _updateWeight: function(t) {
            var e = 0;
            if (this.enabled) {
                e = this.weight;
                var n = this._weightInterpolant;
                if (null !== n) {
                    var r = n.evaluate(t)[0];
                    e *= r,
                    t > n.parameterPositions[1] && (this.stopFading(),
                    0 === r && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = e,
            e
        },
        _updateTimeScale: function(t) {
            var e = 0;
            if (!this.paused) {
                e = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n) {
                    e *= n.evaluate(t)[0],
                    t > n.parameterPositions[1] && (this.stopWarping(),
                    0 === e ? this.paused = !0 : this.timeScale = e)
                }
            }
            return this._effectiveTimeScale = e,
            e
        },
        _updateTime: function(t) {
            var e = this.time + t;
            if (0 === t)
                return e;
            var n = this._clip.duration
              , r = this.loop
              , i = this._loopCount;
            if (r === ac) {
                -1 === i && (this._loopCount = 0,
                this._setEndings(!0, !0, !1));
                t: {
                    if (e >= n)
                        e = n;
                    else {
                        if (!(e < 0))
                            break t;
                        e = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: t < 0 ? -1 : 1
                    })
                }
            } else {
                var o = r === cc;
                if (-1 === i && (t >= 0 ? (i = 0,
                this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)),
                e >= n || e < 0) {
                    var a = Math.floor(e / n);
                    e -= n * a,
                    i += Math.abs(a);
                    var s = this.repetitions - i;
                    if (s <= 0)
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        e = t > 0 ? n : 0,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t > 0 ? 1 : -1
                        });
                    else {
                        if (1 === s) {
                            var c = t < 0;
                            this._setEndings(c, !c, o)
                        } else
                            this._setEndings(!1, !1, o);
                        this._loopCount = i,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: a
                        })
                    }
                }
                if (o && 1 == (1 & i))
                    return this.time = e,
                    n - e
            }
            return this.time = e,
            e
        },
        _setEndings: function(t, e, n) {
            var r = this._interpolantSettings;
            n ? (r.endingStart = pc,
            r.endingEnd = pc) : (r.endingStart = t ? this.zeroSlopeAtStart ? pc : dc : fc,
            r.endingEnd = e ? this.zeroSlopeAtEnd ? pc : dc : fc)
        },
        _scheduleFading: function(t, e, n) {
            var r = this._mixer
              , i = r.time
              , o = this._weightInterpolant;
            null === o && (o = r._lendControlInterpolant(),
            this._weightInterpolant = o);
            var a = o.parameterPositions
              , s = o.sampleValues;
            return a[0] = i,
            s[0] = e,
            a[1] = i + t,
            s[1] = n,
            this
        }
    }),
    Ui.prototype = Object.assign(Object.create(r.prototype), {
        constructor: Ui,
        _bindAction: function(t, e) {
            var n = t._localRoot || this._root
              , r = t._clip.tracks
              , i = r.length
              , o = t._propertyBindings
              , a = t._interpolants
              , s = n.uuid
              , c = this._bindingsByRootAndName
              , l = c[s];
            void 0 === l && (l = {},
            c[s] = l);
            for (var u = 0; u !== i; ++u) {
                var h = r[u]
                  , d = h.name
                  , p = l[d];
                if (void 0 !== p)
                    o[u] = p;
                else {
                    if (void 0 !== (p = o[u])) {
                        null === p._cacheIndex && (++p.referenceCount,
                        this._addInactiveBinding(p, s, d));
                        continue
                    }
                    var f = e && e._propertyBindings[u].binding.parsedPath;
                    p = new Ni(ji.create(n, d, f),h.ValueTypeName,h.getValueSize()),
                    ++p.referenceCount,
                    this._addInactiveBinding(p, s, d),
                    o[u] = p
                }
                a[u].resultBuffer = p.buffer
            }
        },
        _activateAction: function(t) {
            if (!this._isActiveAction(t)) {
                if (null === t._cacheIndex) {
                    var e = (t._localRoot || this._root).uuid
                      , n = t._clip.uuid
                      , r = this._actionsByClip[n];
                    this._bindAction(t, r && r.knownActions[0]),
                    this._addInactiveAction(t, n, e)
                }
                for (var i = t._propertyBindings, o = 0, a = i.length; o !== a; ++o) {
                    var s = i[o];
                    0 == s.useCount++ && (this._lendBinding(s),
                    s.saveOriginalState())
                }
                this._lendAction(t)
            }
        },
        _deactivateAction: function(t) {
            if (this._isActiveAction(t)) {
                for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                    var i = e[n];
                    0 == --i.useCount && (i.restoreOriginalState(),
                    this._takeBackBinding(i))
                }
                this._takeBackAction(t)
            }
        },
        _initMemoryManager: function() {
            this._actions = [],
            this._nActiveActions = 0,
            this._actionsByClip = {},
            this._bindings = [],
            this._nActiveBindings = 0,
            this._bindingsByRootAndName = {},
            this._controlInterpolants = [],
            this._nActiveControlInterpolants = 0;
            var t = this;
            this.stats = {
                actions: {
                    get total() {
                        return t._actions.length
                    },
                    get inUse() {
                        return t._nActiveActions
                    }
                },
                bindings: {
                    get total() {
                        return t._bindings.length
                    },
                    get inUse() {
                        return t._nActiveBindings
                    }
                },
                controlInterpolants: {
                    get total() {
                        return t._controlInterpolants.length
                    },
                    get inUse() {
                        return t._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(t) {
            var e = t._cacheIndex;
            return null !== e && e < this._nActiveActions
        },
        _addInactiveAction: function(t, e, n) {
            var r = this._actions
              , i = this._actionsByClip
              , o = i[e];
            if (void 0 === o)
                o = {
                    knownActions: [t],
                    actionByRoot: {}
                },
                t._byClipCacheIndex = 0,
                i[e] = o;
            else {
                var a = o.knownActions;
                t._byClipCacheIndex = a.length,
                a.push(t)
            }
            t._cacheIndex = r.length,
            r.push(t),
            o.actionByRoot[n] = t
        },
        _removeInactiveAction: function(t) {
            var e = this._actions
              , n = e[e.length - 1]
              , r = t._cacheIndex;
            n._cacheIndex = r,
            e[r] = n,
            e.pop(),
            t._cacheIndex = null;
            var i = t._clip.uuid
              , o = this._actionsByClip
              , a = o[i]
              , s = a.knownActions
              , c = s[s.length - 1]
              , l = t._byClipCacheIndex;
            c._byClipCacheIndex = l,
            s[l] = c,
            s.pop(),
            t._byClipCacheIndex = null,
            delete a.actionByRoot[(t._localRoot || this._root).uuid],
            0 === s.length && delete o[i],
            this._removeInactiveBindingsForAction(t)
        },
        _removeInactiveBindingsForAction: function(t) {
            for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                var i = e[n];
                0 == --i.referenceCount && this._removeInactiveBinding(i)
            }
        },
        _lendAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , r = this._nActiveActions++
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _takeBackAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , r = --this._nActiveActions
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _addInactiveBinding: function(t, e, n) {
            var r = this._bindingsByRootAndName
              , i = r[e]
              , o = this._bindings;
            void 0 === i && (i = {},
            r[e] = i),
            i[n] = t,
            t._cacheIndex = o.length,
            o.push(t)
        },
        _removeInactiveBinding: function(t) {
            var e = this._bindings
              , n = t.binding
              , r = n.rootNode.uuid
              , i = n.path
              , o = this._bindingsByRootAndName
              , a = o[r]
              , s = e[e.length - 1]
              , c = t._cacheIndex;
            s._cacheIndex = c,
            e[c] = s,
            e.pop(),
            delete a[i];
            t: {
                for (var l in a)
                    break t;
                delete o[r]
            }
        },
        _lendBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , r = this._nActiveBindings++
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _takeBackBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , r = --this._nActiveBindings
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _lendControlInterpolant: function() {
            var t = this._controlInterpolants
              , e = this._nActiveControlInterpolants++
              , n = t[e];
            return void 0 === n && (n = new di(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
            n.__cacheIndex = e,
            t[e] = n),
            n
        },
        _takeBackControlInterpolant: function(t) {
            var e = this._controlInterpolants
              , n = t.__cacheIndex
              , r = --this._nActiveControlInterpolants
              , i = e[r];
            t.__cacheIndex = r,
            e[r] = t,
            i.__cacheIndex = n,
            e[n] = i
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(t, e) {
            var n = e || this._root
              , r = n.uuid
              , i = "string" == typeof t ? vi.findByName(n, t) : t
              , o = null !== i ? i.uuid : t
              , a = this._actionsByClip[o]
              , s = null;
            if (void 0 !== a) {
                var c = a.actionByRoot[r];
                if (void 0 !== c)
                    return c;
                s = a.knownActions[0],
                null === i && (i = s._clip)
            }
            if (null === i)
                return null;
            var l = new Bi(this,i,e);
            return this._bindAction(l, s),
            this._addInactiveAction(l, o, r),
            l
        },
        existingAction: function(t, e) {
            var n = e || this._root
              , r = n.uuid
              , i = "string" == typeof t ? vi.findByName(n, t) : t
              , o = i ? i.uuid : t
              , a = this._actionsByClip[o];
            return void 0 !== a ? a.actionByRoot[r] || null : null
        },
        stopAllAction: function() {
            var t = this._actions
              , e = this._nActiveActions
              , n = this._bindings
              , r = this._nActiveBindings;
            this._nActiveActions = 0,
            this._nActiveBindings = 0;
            for (var i = 0; i !== e; ++i)
                t[i].reset();
            for (var i = 0; i !== r; ++i)
                n[i].useCount = 0;
            return this
        },
        update: function(t) {
            t *= this.timeScale;
            for (var e = this._actions, n = this._nActiveActions, r = this.time += t, i = Math.sign(t), o = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
                e[a]._update(r, t, i, o)
            }
            for (var s = this._bindings, c = this._nActiveBindings, a = 0; a !== c; ++a)
                s[a].apply(o);
            return this
        },
        getRoot: function() {
            return this._root
        },
        uncacheClip: function(t) {
            var e = this._actions
              , n = t.uuid
              , r = this._actionsByClip
              , i = r[n];
            if (void 0 !== i) {
                for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a) {
                    var c = o[a];
                    this._deactivateAction(c);
                    var l = c._cacheIndex
                      , u = e[e.length - 1];
                    c._cacheIndex = null,
                    c._byClipCacheIndex = null,
                    u._cacheIndex = l,
                    e[l] = u,
                    e.pop(),
                    this._removeInactiveBindingsForAction(c)
                }
                delete r[n]
            }
        },
        uncacheRoot: function(t) {
            var e = t.uuid
              , n = this._actionsByClip;
            for (var r in n) {
                var i = n[r].actionByRoot
                  , o = i[e];
                void 0 !== o && (this._deactivateAction(o),
                this._removeInactiveAction(o))
            }
            var a = this._bindingsByRootAndName
              , s = a[e];
            if (void 0 !== s)
                for (var c in s) {
                    var l = s[c];
                    l.restoreOriginalState(),
                    this._removeInactiveBinding(l)
                }
        },
        uncacheAction: function(t, e) {
            var n = this.existingAction(t, e);
            null !== n && (this._deactivateAction(n),
            this._removeInactiveAction(n))
        }
    }),
    Fi.prototype.clone = function() {
        return new Fi(void 0 === this.value.clone ? this.value : this.value.clone())
    }
    ,
    Hi.prototype = Object.assign(Object.create(B.prototype), {
        constructor: Hi,
        isInstancedBufferGeometry: !0,
        copy: function(t) {
            return B.prototype.copy.call(this, t),
            this.maxInstancedCount = t.maxInstancedCount,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    Object.defineProperties(Gi.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        }
    }),
    Object.assign(Gi.prototype, {
        isInterleavedBufferAttribute: !0,
        setX: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset] = e,
            this
        },
        setY: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 1] = e,
            this
        },
        setZ: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 2] = e,
            this
        },
        setW: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 3] = e,
            this
        },
        getX: function(t) {
            return this.data.array[t * this.data.stride + this.offset]
        },
        getY: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 1]
        },
        getZ: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 2]
        },
        getW: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 3]
        },
        setXY: function(t, e, n) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, r) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = r,
            this
        },
        setXYZW: function(t, e, n, r, i) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = r,
            this.data.array[t + 3] = i,
            this
        }
    }),
    Object.defineProperty(Vi.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(Vi.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            this.count = void 0 !== t ? t.length / this.stride : 0,
            this.array = t
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.array = new t.array.constructor(t.array),
            this.count = t.count,
            this.stride = t.stride,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.stride,
            n *= e.stride;
            for (var r = 0, i = this.stride; r < i; r++)
                this.array[t + r] = e.array[n + r];
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        }
    }),
    Wi.prototype = Object.assign(Object.create(Vi.prototype), {
        constructor: Wi,
        isInstancedInterleavedBuffer: !0,
        copy: function(t) {
            return Vi.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
    }),
    qi.prototype = Object.assign(Object.create(A.prototype), {
        constructor: qi,
        isInstancedBufferAttribute: !0,
        copy: function(t) {
            return A.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
    }),
    Object.assign(Xi.prototype, {
        linePrecision: 1,
        set: function(t, e) {
            this.ray.set(t, e)
        },
        setFromCamera: function(t, e) {
            e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
            this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
            this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(t, e, n) {
            var r = n || [];
            return $i(t, this, r, e),
            r.sort(Yi),
            r
        },
        intersectObjects: function(t, e, n) {
            var r = n || [];
            if (!1 === Array.isArray(t))
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var i = 0, o = t.length; i < o; i++)
                $i(t[i], this, r, e);
            return r.sort(Yi),
            r
        }
    }),
    Object.assign(Zi.prototype, {
        start: function() {
            this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
            this.oldTime = this.startTime,
            this.elapsedTime = 0,
            this.running = !0
        },
        stop: function() {
            this.getElapsedTime(),
            this.running = !1,
            this.autoStart = !1
        },
        getElapsedTime: function() {
            return this.getDelta(),
            this.elapsedTime
        },
        getDelta: function() {
            var t = 0;
            if (this.autoStart && !this.running)
                return this.start(),
                0;
            if (this.running) {
                var e = ("undefined" == typeof performance ? Date : performance).now();
                t = (e - this.oldTime) / 1e3,
                this.oldTime = e,
                this.elapsedTime += t
            }
            return t
        }
    }),
    Object.assign(Ji.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.phi = e,
            this.theta = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.phi = t.phi,
            this.theta = t.theta,
            this
        },
        makeSafe: function() {
            return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
            this
        },
        setFromVector3: function(t) {
            return this.radius = t.length(),
            0 === this.radius ? (this.theta = 0,
            this.phi = 0) : (this.theta = Math.atan2(t.x, t.z),
            this.phi = Math.acos(Cc.clamp(t.y / this.radius, -1, 1))),
            this
        }
    }),
    Object.assign(Qi.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.theta = e,
            this.y = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.theta = t.theta,
            this.y = t.y,
            this
        },
        setFromVector3: function(t) {
            return this.radius = Math.sqrt(t.x * t.x + t.z * t.z),
            this.theta = Math.atan2(t.x, t.z),
            this.y = t.y,
            this
        }
    }),
    Object.assign(Ki.prototype, {
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new i;
            return function(e, n) {
                var r = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(r),
                this.max.copy(e).add(r),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0,
            this.max.x = this.max.y = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getCenter() target is now required"),
            t = new i),
            this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getSize() target is now required"),
            t = new i),
            this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .getParameter() target is now required"),
            e = new i),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
        },
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .clampPoint() target is now required"),
            e = new i),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new i;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    to.prototype = Object.create(w.prototype),
    to.prototype.constructor = to,
    to.prototype.isImmediateRenderObject = !0,
    eo.prototype = Object.create(je.prototype),
    eo.prototype.constructor = eo,
    eo.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new c;
        return function() {
            var r = ["a", "b", "c"];
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            var i = this.object.matrixWorld
              , o = this.geometry.attributes.position
              , a = this.object.geometry;
            if (a && a.isGeometry)
                for (var s = a.vertices, c = a.faces, l = 0, u = 0, h = c.length; u < h; u++)
                    for (var d = c[u], p = 0, f = d.vertexNormals.length; p < f; p++) {
                        var m = s[d[r[p]]]
                          , v = d.vertexNormals[p];
                        t.copy(m).applyMatrix4(i),
                        e.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                        o.setXYZ(l, t.x, t.y, t.z),
                        l += 1,
                        o.setXYZ(l, e.x, e.y, e.z),
                        l += 1
                    }
            else if (a && a.isBufferGeometry)
                for (var g = a.attributes.position, y = a.attributes.normal, l = 0, p = 0, f = g.count; p < f; p++)
                    t.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(i),
                    e.set(y.getX(p), y.getY(p), y.getZ(p)),
                    e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                    o.setXYZ(l, t.x, t.y, t.z),
                    l += 1,
                    o.setXYZ(l, e.x, e.y, e.z),
                    l += 1;
            o.needsUpdate = !0
        }
    }(),
    no.prototype = Object.create(w.prototype),
    no.prototype.constructor = no,
    no.prototype.dispose = function() {
        this.cone.geometry.dispose(),
        this.cone.material.dispose()
    }
    ,
    no.prototype.update = function() {
        var t = new s
          , e = new s;
        return function() {
            this.light.updateMatrixWorld();
            var n = this.light.distance ? this.light.distance : 1e3
              , r = n * Math.tan(this.light.angle);
            this.cone.scale.set(r, r, n),
            t.setFromMatrixPosition(this.light.matrixWorld),
            e.setFromMatrixPosition(this.light.target.matrixWorld),
            this.cone.lookAt(e.sub(t)),
            void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
        }
    }(),
    io.prototype = Object.create(je.prototype),
    io.prototype.constructor = io,
    io.prototype.updateMatrixWorld = function() {
        var t = new s
          , e = new o
          , n = new o;
        return function(r) {
            var i = this.bones
              , o = this.geometry
              , a = o.getAttribute("position");
            n.getInverse(this.root.matrixWorld);
            for (var s = 0, c = 0; s < i.length; s++) {
                var l = i[s];
                l.parent && l.parent.isBone && (e.multiplyMatrices(n, l.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c, t.x, t.y, t.z),
                e.multiplyMatrices(n, l.parent.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c + 1, t.x, t.y, t.z),
                c += 2)
            }
            o.getAttribute("position").needsUpdate = !0,
            w.prototype.updateMatrixWorld.call(this, r)
        }
    }(),
    oo.prototype = Object.create(Z.prototype),
    oo.prototype.constructor = oo,
    oo.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    oo.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
    }
    ,
    ao.prototype = Object.create(w.prototype),
    ao.prototype.constructor = ao,
    ao.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    ao.prototype.update = function() {
        var t = .5 * this.light.width
          , e = .5 * this.light.height
          , n = this.line.geometry.attributes.position
          , r = n.array;
        r[0] = t,
        r[1] = -e,
        r[2] = 0,
        r[3] = t,
        r[4] = e,
        r[5] = 0,
        r[6] = -t,
        r[7] = e,
        r[8] = 0,
        r[9] = -t,
        r[10] = -e,
        r[11] = 0,
        r[12] = t,
        r[13] = -e,
        r[14] = 0,
        n.needsUpdate = !0,
        void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color)
    }
    ,
    so.prototype = Object.create(w.prototype),
    so.prototype.constructor = so,
    so.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    so.prototype.update = function() {
        var t = new s
          , e = new y
          , n = new y;
        return function() {
            var r = this.children[0];
            if (void 0 !== this.color)
                this.material.color.set(this.color);
            else {
                var i = r.geometry.getAttribute("color");
                e.copy(this.light.color),
                n.copy(this.light.groundColor);
                for (var o = 0, a = i.count; o < a; o++) {
                    var s = o < a / 2 ? e : n;
                    i.setXYZ(o, s.r, s.g, s.b)
                }
                i.needsUpdate = !0
            }
            r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())
        }
    }(),
    co.prototype = Object.create(je.prototype),
    co.prototype.constructor = co,
    lo.prototype = Object.create(je.prototype),
    lo.prototype.constructor = lo,
    uo.prototype = Object.create(je.prototype),
    uo.prototype.constructor = uo,
    uo.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new c;
        return function() {
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            for (var r = this.object.matrixWorld, i = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, c = 0, l = 0, u = s.length; l < u; l++) {
                var h = s[l]
                  , d = h.normal;
                t.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(r),
                e.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                i.setXYZ(c, t.x, t.y, t.z),
                c += 1,
                i.setXYZ(c, e.x, e.y, e.z),
                c += 1
            }
            i.needsUpdate = !0
        }
    }(),
    ho.prototype = Object.create(w.prototype),
    ho.prototype.constructor = ho,
    ho.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(),
        this.lightPlane.material.dispose(),
        this.targetLine.geometry.dispose(),
        this.targetLine.material.dispose()
    }
    ,
    ho.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new s;
        return function() {
            t.setFromMatrixPosition(this.light.matrixWorld),
            e.setFromMatrixPosition(this.light.target.matrixWorld),
            n.subVectors(e, t),
            this.lightPlane.lookAt(n),
            void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
            this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
            this.targetLine.material.color.copy(this.light.color)),
            this.targetLine.lookAt(n),
            this.targetLine.scale.z = n.length()
        }
    }(),
    po.prototype = Object.create(je.prototype),
    po.prototype.constructor = po,
    po.prototype.update = function() {
        function t(t, o, a, s) {
            r.set(o, a, s).unproject(i);
            var c = n[t];
            if (void 0 !== c)
                for (var l = e.getAttribute("position"), u = 0, h = c.length; u < h; u++)
                    l.setXYZ(c[u], r.x, r.y, r.z)
        }
        var e, n, r = new s, i = new M;
        return function() {
            e = this.geometry,
            n = this.pointMap;
            i.projectionMatrix.copy(this.camera.projectionMatrix),
            t("c", 0, 0, -1),
            t("t", 0, 0, 1),
            t("n1", -1, -1, -1),
            t("n2", 1, -1, -1),
            t("n3", -1, 1, -1),
            t("n4", 1, 1, -1),
            t("f1", -1, -1, 1),
            t("f2", 1, -1, 1),
            t("f3", -1, 1, 1),
            t("f4", 1, 1, 1),
            t("u1", .7, 1.1, -1),
            t("u2", -.7, 1.1, -1),
            t("u3", 0, 2, -1),
            t("cf1", -1, 0, 1),
            t("cf2", 1, 0, 1),
            t("cf3", 0, -1, 1),
            t("cf4", 0, 1, 1),
            t("cn1", -1, 0, -1),
            t("cn2", 1, 0, -1),
            t("cn3", 0, -1, -1),
            t("cn4", 0, 1, -1),
            e.getAttribute("position").needsUpdate = !0
        }
    }(),
    fo.prototype = Object.create(je.prototype),
    fo.prototype.constructor = fo,
    fo.prototype.update = function() {
        var t = new f;
        return function(e) {
            if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
            void 0 !== this.object && t.setFromObject(this.object),
            !t.isEmpty()) {
                var n = t.min
                  , r = t.max
                  , i = this.geometry.attributes.position
                  , o = i.array;
                o[0] = r.x,
                o[1] = r.y,
                o[2] = r.z,
                o[3] = n.x,
                o[4] = r.y,
                o[5] = r.z,
                o[6] = n.x,
                o[7] = n.y,
                o[8] = r.z,
                o[9] = r.x,
                o[10] = n.y,
                o[11] = r.z,
                o[12] = r.x,
                o[13] = r.y,
                o[14] = n.z,
                o[15] = n.x,
                o[16] = r.y,
                o[17] = n.z,
                o[18] = n.x,
                o[19] = n.y,
                o[20] = n.z,
                o[21] = r.x,
                o[22] = n.y,
                o[23] = n.z,
                i.needsUpdate = !0,
                this.geometry.computeBoundingSphere()
            }
        }
    }(),
    fo.prototype.setFromObject = function(t) {
        return this.object = t,
        this.update(),
        this
    }
    ,
    mo.prototype = Object.create(je.prototype),
    mo.prototype.constructor = mo,
    mo.prototype.updateMatrixWorld = function(t) {
        var e = this.box;
        e.isEmpty() || (e.getCenter(this.position),
        e.getSize(this.scale),
        this.scale.multiplyScalar(.5),
        w.prototype.updateMatrixWorld.call(this, t))
    }
    ,
    vo.prototype = Object.create(ke.prototype),
    vo.prototype.constructor = vo,
    vo.prototype.updateMatrixWorld = function(t) {
        var e = -this.plane.constant;
        Math.abs(e) < 1e-8 && (e = 1e-8),
        this.scale.set(.5 * this.size, .5 * this.size, e),
        this.lookAt(this.plane.normal),
        w.prototype.updateMatrixWorld.call(this, t)
    }
    ;
    var ml, vl;
    go.prototype = Object.create(w.prototype),
    go.prototype.constructor = go,
    go.prototype.setDirection = function() {
        var t, e = new s;
        return function(n) {
            n.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : n.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(n.z, 0, -n.x).normalize(),
            t = Math.acos(n.y),
            this.quaternion.setFromAxisAngle(e, t))
        }
    }(),
    go.prototype.setLength = function(t, e, n) {
        void 0 === e && (e = .2 * t),
        void 0 === n && (n = .2 * e),
        this.line.scale.set(1, Math.max(0, t - e), 1),
        this.line.updateMatrix(),
        this.cone.scale.set(n, e, n),
        this.cone.position.y = t,
        this.cone.updateMatrix()
    }
    ,
    go.prototype.setColor = function(t) {
        this.line.material.color.copy(t),
        this.cone.material.color.copy(t)
    }
    ,
    yo.prototype = Object.create(je.prototype),
    yo.prototype.constructor = yo;
    var gl = 0
      , yl = 1;
    Mr.create = function(t, e) {
        return console.log("THREE.Curve.create() has been deprecated"),
        t.prototype = Object.create(Mr.prototype),
        t.prototype.constructor = t,
        t.prototype.getPoint = e,
        t
    }
    ,
    Object.assign(Wr.prototype, {
        createPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getPoints(t);
            return this.createGeometry(e)
        },
        createSpacedPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getSpacedPoints(t);
            return this.createGeometry(e)
        },
        createGeometry: function(t) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var e = new S, n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.vertices.push(new s(i.x,i.y,i.z || 0))
            }
            return e
        }
    }),
    Object.assign(qr.prototype, {
        fromPoints: function(t) {
            console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
            this.setFromPoints(t)
        }
    }),
    Bo.prototype = Object.create(Ar.prototype),
    Uo.prototype = Object.create(Ar.prototype),
    Fo.prototype = Object.create(Ar.prototype),
    Object.assign(Fo.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }),
    co.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }
    ,
    io.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }
    ,
    Object.assign(_i.prototype, {
        extractUrlBase: function(t) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
            cl.extractUrlBase(t)
        }
    }),
    Object.assign(Ki.prototype, {
        center: function(t) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        size: function(t) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Object.assign(f.prototype, {
        center: function(t) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        },
        size: function(t) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Y.prototype.center = function(t) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
        this.getCenter(t)
    }
    ,
    Object.assign(Cc, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
            Math.random()
        },
        nearestPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
            Cc.floorPowerOfTwo(t)
        },
        nextPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
            Cc.ceilPowerOfTwo(t)
        }
    }),
    Object.assign(c.prototype, {
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
            t.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }),
    Object.assign(o.prototype, {
        extractPosition: function(t) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
            this.copyPosition(t)
        },
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        getPosition: function() {
            var t;
            return function() {
                return void 0 === t && (t = new s),
                console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                t.setFromMatrixColumn(this, 3)
            }
        }(),
        setRotationFromQuaternion: function(t) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
            this.makeRotationFromQuaternion(t)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector4: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(t) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
            t.transformDirection(this)
        },
        crossVector: function(t) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(t, e, n, r, i, o) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
            this.makePerspective(t, e, r, n, i, o)
        }
    }),
    v.prototype.isIntersectionLine = function(t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(t)
    }
    ,
    a.prototype.multiplyVector3 = function(t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        t.applyQuaternion(this)
    }
    ,
    Object.assign(X.prototype, {
        isIntersectionBox: function(t) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionPlane: function(t) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
            this.intersectsPlane(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        }
    }),
    Object.assign($.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
            this.getArea()
        },
        barycoordFromPoint: function(t, e) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            this.getBarycoord(t, e)
        },
        midpoint: function(t) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
            this.getMidpoint(t)
        },
        normal: function(t) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            this.getNormal(t)
        },
        plane: function(t) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
            this.getPlane(t)
        }
    }),
    Object.assign($, {
        barycoordFromPoint: function(t, e, n, r, i) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            $.getBarycoord(t, e, n, r, i)
        },
        normal: function(t, e, n, r) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            $.getNormal(t, e, n, r)
        }
    }),
    Object.assign(Xr.prototype, {
        extractAllPoints: function(t) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
            this.extractPoints(t)
        },
        extrude: function(t) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
            new Fn(this,t)
        },
        makeGeometry: function(t) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
            new Jn(this,t)
        }
    }),
    Object.assign(i.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(s.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
            this.setFromMatrixPosition(t)
        },
        getScaleFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
            this.setFromMatrixScale(t)
        },
        getColumnFromMatrix: function(t, e) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
            this.setFromMatrixColumn(e, t)
        },
        applyProjection: function(t) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
            this.applyMatrix4(t)
        },
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(u.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(S.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        }
    }),
    Object.assign(w.prototype, {
        getChildByName: function(t) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
            this.getObjectByName(t)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(t, e) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
            this.translateOnAxis(e, t)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        }
    }),
    Object.defineProperties(w.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order
            },
            set: function(t) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order = t
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }),
    Object.defineProperties(Re.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                this.levels
            }
        }
    }),
    Object.defineProperty(Oe.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }),
    Object.defineProperty(Mr.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions
        },
        set: function(t) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions = t
        }
    }),
    we.prototype.setLens = function(t, e) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
        void 0 !== e && (this.filmGauge = e),
        this.setFocalLength(t)
    }
    ,
    Object.defineProperties(Yr.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                this.shadow.camera.fov = t
            }
        },
        shadowCameraLeft: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                this.shadow.camera.left = t
            }
        },
        shadowCameraRight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                this.shadow.camera.right = t
            }
        },
        shadowCameraTop: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                this.shadow.camera.top = t
            }
        },
        shadowCameraBottom: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                this.shadow.camera.bottom = t
            }
        },
        shadowCameraNear: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                this.shadow.camera.near = t
            }
        },
        shadowCameraFar: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                this.shadow.camera.far = t
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(t) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                this.shadow.bias = t
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                this.shadow.mapSize.width = t
            }
        },
        shadowMapHeight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                this.shadow.mapSize.height = t
            }
        }
    }),
    Object.defineProperties(A.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                this.array.length
            }
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        }
    }),
    Object.assign(B.prototype, {
        addIndex: function(t) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
            this.setIndex(t)
        },
        addDrawCall: function(t, e, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
            console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
            this.addGroup(t, e)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
            this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        }
    }),
    Object.defineProperties(B.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                this.groups
            }
        }
    }),
    Object.defineProperties(Fi.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                this
            }
        }
    }),
    Object.defineProperties(V.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."),
                new y
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(t) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                this.flatShading = t === ha
            }
        }
    }),
    Object.defineProperties(hr.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }),
    Object.defineProperties(q.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives
            },
            set: function(t) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives = t
            }
        }
    }),
    Object.assign(Te.prototype, {
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
            this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
            this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
            this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
            this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
            this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
            this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
            this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
            this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
            this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
            this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(t) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
            this.setScissorTest(t)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        }
    }),
    Object.defineProperties(Te.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                this.shadowMap.enabled = t
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                this.shadowMap.type = t
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(ve.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(h.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS = t
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT = t
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter = t
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter = t
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy = t
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset = t
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat = t
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format = t
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type = t
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps = t
            }
        }
    }),
    Object.defineProperties(Ee.prototype, {
        standing: {
            set: function() {
                console.warn("THREE.WebVRManager: .standing has been removed.")
            }
        }
    }),
    Oi.prototype.load = function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var e = this;
        return (new Ci).load(t, function(t) {
            e.setBuffer(t)
        }),
        this
    }
    ,
    Di.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
    ,
    Li.prototype.updateCubeMap = function(t, e) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
        this.update(t, e)
    }
    ;
    var _l = {
        merge: function(t, e, n) {
            console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
            var r;
            e.isMesh && (e.matrixAutoUpdate && e.updateMatrix(),
            r = e.matrix,
            e = e.geometry),
            t.merge(e, r, n)
        },
        center: function(t) {
            return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
            t.center()
        }
    }
      , xl = {
        crossOrigin: void 0,
        loadTexture: function(t, e, n, r) {
            console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
            var i = new wr;
            i.setCrossOrigin(this.crossOrigin);
            var o = i.load(t, n, void 0, r);
            return e && (o.mapping = e),
            o
        },
        loadTextureCube: function(t, e, n, r) {
            console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
            var i = new br;
            i.setCrossOrigin(this.crossOrigin);
            var o = i.load(t, n, void 0, r);
            return e && (o.mapping = e),
            o
        },
        loadCompressedTexture: function() {
            console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
        },
        loadCompressedTextureCube: function() {
            console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
        }
    }
      , bl = {
        createMultiMaterialObject: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        detach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        },
        attach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")
        }
    }
}
, function(t, e) {
    function n(t, e, n) {
        if ("[object Array]" === Object.prototype.toString.call(n))
            for (var i = 0; i < n.length; ++i)
                r(t, e, n[i]);
        else
            for (var o in t)
                r(t, e, o)
    }
    function r(t, e, n) {
        if (t.hasOwnProperty(n)) {
            if ("function" == typeof e[n])
                return;
            e[n] = function(r) {
                return void 0 !== r ? (t[n] = r,
                e) : t[n]
            }
        }
    }
    t.exports = n
}
, , , function(t, e, n) {
    var r = n(47)
      , i = n(96);
    t.exports = n(49) ? function(t, e, n) {
        return r.f(t, e, i(1, n))
    }
    : function(t, e, n) {
        return t[e] = n,
        t
    }
}
, function(t, e) {
    var n = {}.hasOwnProperty;
    t.exports = function(t, e) {
        return n.call(t, e)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        return function() {
            return t
        }
    }
}
, , , , , , , , , , , , function(t, e) {
    t.exports = function(t) {
        try {
            return !!t()
        } catch (t) {
            return !0
        }
    }
}
, function(t, e, n) {
    var r = n(192)
      , i = n(127);
    t.exports = function(t) {
        return r(i(t))
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    e.__esModule = !0;
    var i = n(568)
      , o = r(i)
      , a = n(576)
      , s = r(a)
      , c = "function" == typeof s.default && "symbol" == typeof o.default ? function(t) {
        return typeof t
    }
    : function(t) {
        return t && "function" == typeof s.default && t.constructor === s.default && t !== s.default.prototype ? "symbol" : typeof t
    }
    ;
    e.default = "function" == typeof s.default && "symbol" === c(o.default) ? function(t) {
        return void 0 === t ? "undefined" : c(t)
    }
    : function(t) {
        return t && "function" == typeof s.default && t.constructor === s.default && t !== s.default.prototype ? "symbol" : void 0 === t ? "undefined" : c(t)
    }
}
, function(t, e, n) {
    var r;
    (function() {
        !function(i, o) {
            void 0 !== (r = function() {
                return o(i)
            }
            .call(e, n, e, t)) && (t.exports = r)
        }(this, function(t) {
            var e = function() {
                function e(t) {
                    return null == t ? String(t) : $[Z.call(t)] || "object"
                }
                function n(t) {
                    return "function" == e(t)
                }
                function r(t) {
                    return null != t && t == t.window
                }
                function i(t) {
                    return null != t && t.nodeType == t.DOCUMENT_NODE
                }
                function o(t) {
                    return "object" == e(t)
                }
                function a(t) {
                    return o(t) && !r(t) && Object.getPrototypeOf(t) == Object.prototype
                }
                function s(t) {
                    var e = !!t && "length"in t && t.length
                      , n = T.type(t);
                    return "function" != n && !r(t) && ("array" == n || 0 === e || "number" == typeof e && e > 0 && e - 1 in t)
                }
                function c(t) {
                    return R.call(t, function(t) {
                        return null != t
                    })
                }
                function l(t) {
                    return t.length > 0 ? T.fn.concat.apply([], t) : t
                }
                function u(t) {
                    return t.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase()
                }
                function h(t) {
                    return t in N ? N[t] : N[t] = new RegExp("(^|\\s)" + t + "(\\s|$)")
                }
                function d(t, e) {
                    return "number" != typeof e || k[u(t)] ? e : e + "px"
                }
                function p(t) {
                    var e, n;
                    return D[t] || (e = I.createElement(t),
                    I.body.appendChild(e),
                    n = getComputedStyle(e, "").getPropertyValue("display"),
                    e.parentNode.removeChild(e),
                    "none" == n && (n = "block"),
                    D[t] = n),
                    D[t]
                }
                function f(t) {
                    return "children"in t ? O.call(t.children) : T.map(t.childNodes, function(t) {
                        if (1 == t.nodeType)
                            return t
                    })
                }
                function m(t, e) {
                    var n, r = t ? t.length : 0;
                    for (n = 0; n < r; n++)
                        this[n] = t[n];
                    this.length = r,
                    this.selector = e || ""
                }
                function v(t, e, n) {
                    for (E in e)
                        n && (a(e[E]) || tt(e[E])) ? (a(e[E]) && !a(t[E]) && (t[E] = {}),
                        tt(e[E]) && !tt(t[E]) && (t[E] = []),
                        v(t[E], e[E], n)) : e[E] !== M && (t[E] = e[E])
                }
                function g(t, e) {
                    return null == e ? T(t) : T(t).filter(e)
                }
                function y(t, e, r, i) {
                    return n(e) ? e.call(t, r, i) : e
                }
                function _(t, e, n) {
                    null == n ? t.removeAttribute(e) : t.setAttribute(e, n)
                }
                function x(t, e) {
                    var n = t.className || ""
                      , r = n && n.baseVal !== M;
                    if (e === M)
                        return r ? n.baseVal : n;
                    r ? n.baseVal = e : t.className = e
                }
                function b(t) {
                    try {
                        return t ? "true" == t || "false" != t && ("null" == t ? null : +t + "" == t ? +t : /^[\[\{]/.test(t) ? T.parseJSON(t) : t) : t
                    } catch (e) {
                        return t
                    }
                }
                function w(t, e) {
                    e(t);
                    for (var n = 0, r = t.childNodes.length; n < r; n++)
                        w(t.childNodes[n], e)
                }
                var M, E, T, S, A, C, P = [], L = P.concat, R = P.filter, O = P.slice, I = t.document, D = {}, N = {}, k = {
                    "column-count": 1,
                    columns: 1,
                    "font-weight": 1,
                    "line-height": 1,
                    opacity: 1,
                    "z-index": 1,
                    zoom: 1
                }, j = /^\s*<(\w+|!)[^>]*>/, z = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, B = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, U = /^(?:body|html)$/i, F = /([A-Z])/g, H = ["val", "css", "html", "text", "data", "width", "height", "offset"], G = ["after", "prepend", "before", "append"], V = I.createElement("table"), W = I.createElement("tr"), q = {
                    tr: I.createElement("tbody"),
                    tbody: V,
                    thead: V,
                    tfoot: V,
                    td: W,
                    th: W,
                    "*": I.createElement("div")
                }, X = /complete|loaded|interactive/, Y = /^[\w-]*$/, $ = {}, Z = $.toString, J = {}, Q = I.createElement("div"), K = {
                    tabindex: "tabIndex",
                    readonly: "readOnly",
                    for: "htmlFor",
                    class: "className",
                    maxlength: "maxLength",
                    cellspacing: "cellSpacing",
                    cellpadding: "cellPadding",
                    rowspan: "rowSpan",
                    colspan: "colSpan",
                    usemap: "useMap",
                    frameborder: "frameBorder",
                    contenteditable: "contentEditable"
                }, tt = Array.isArray || function(t) {
                    return t instanceof Array
                }
                ;
                return J.matches = function(t, e) {
                    if (!e || !t || 1 !== t.nodeType)
                        return !1;
                    var n = t.matches || t.webkitMatchesSelector || t.mozMatchesSelector || t.oMatchesSelector || t.matchesSelector;
                    if (n)
                        return n.call(t, e);
                    var r, i = t.parentNode, o = !i;
                    return o && (i = Q).appendChild(t),
                    r = ~J.qsa(i, e).indexOf(t),
                    o && Q.removeChild(t),
                    r
                }
                ,
                A = function(t) {
                    return t.replace(/-+(.)?/g, function(t, e) {
                        return e ? e.toUpperCase() : ""
                    })
                }
                ,
                C = function(t) {
                    return R.call(t, function(e, n) {
                        return t.indexOf(e) == n
                    })
                }
                ,
                J.fragment = function(t, e, n) {
                    var r, i, o;
                    return z.test(t) && (r = T(I.createElement(RegExp.$1))),
                    r || (t.replace && (t = t.replace(B, "<$1></$2>")),
                    e === M && (e = j.test(t) && RegExp.$1),
                    e in q || (e = "*"),
                    o = q[e],
                    o.innerHTML = "" + t,
                    r = T.each(O.call(o.childNodes), function() {
                        o.removeChild(this)
                    })),
                    a(n) && (i = T(r),
                    T.each(n, function(t, e) {
                        H.indexOf(t) > -1 ? i[t](e) : i.attr(t, e)
                    })),
                    r
                }
                ,
                J.Z = function(t, e) {
                    return new m(t,e)
                }
                ,
                J.isZ = function(t) {
                    return t instanceof J.Z
                }
                ,
                J.init = function(t, e) {
                    var r;
                    if (!t)
                        return J.Z();
                    if ("string" == typeof t)
                        if (t = t.trim(),
                        "<" == t[0] && j.test(t))
                            r = J.fragment(t, RegExp.$1, e),
                            t = null;
                        else {
                            if (e !== M)
                                return T(e).find(t);
                            r = J.qsa(I, t)
                        }
                    else {
                        if (n(t))
                            return T(I).ready(t);
                        if (J.isZ(t))
                            return t;
                        if (tt(t))
                            r = c(t);
                        else if (o(t))
                            r = [t],
                            t = null;
                        else if (j.test(t))
                            r = J.fragment(t.trim(), RegExp.$1, e),
                            t = null;
                        else {
                            if (e !== M)
                                return T(e).find(t);
                            r = J.qsa(I, t)
                        }
                    }
                    return J.Z(r, t)
                }
                ,
                T = function(t, e) {
                    return J.init(t, e)
                }
                ,
                T.extend = function(t) {
                    var e, n = O.call(arguments, 1);
                    return "boolean" == typeof t && (e = t,
                    t = n.shift()),
                    n.forEach(function(n) {
                        v(t, n, e)
                    }),
                    t
                }
                ,
                J.qsa = function(t, e) {
                    var n, r = "#" == e[0], i = !r && "." == e[0], o = r || i ? e.slice(1) : e, a = Y.test(o);
                    return t.getElementById && a && r ? (n = t.getElementById(o)) ? [n] : [] : 1 !== t.nodeType && 9 !== t.nodeType && 11 !== t.nodeType ? [] : O.call(a && !r && t.getElementsByClassName ? i ? t.getElementsByClassName(o) : t.getElementsByTagName(e) : t.querySelectorAll(e))
                }
                ,
                T.contains = I.documentElement.contains ? function(t, e) {
                    return t !== e && t.contains(e)
                }
                : function(t, e) {
                    for (; e && (e = e.parentNode); )
                        if (e === t)
                            return !0;
                    return !1
                }
                ,
                T.type = e,
                T.isFunction = n,
                T.isWindow = r,
                T.isArray = tt,
                T.isPlainObject = a,
                T.isEmptyObject = function(t) {
                    var e;
                    for (e in t)
                        return !1;
                    return !0
                }
                ,
                T.isNumeric = function(t) {
                    var e = Number(t)
                      , n = typeof t;
                    return null != t && "boolean" != n && ("string" != n || t.length) && !isNaN(e) && isFinite(e) || !1
                }
                ,
                T.inArray = function(t, e, n) {
                    return P.indexOf.call(e, t, n)
                }
                ,
                T.camelCase = A,
                T.trim = function(t) {
                    return null == t ? "" : String.prototype.trim.call(t)
                }
                ,
                T.uuid = 0,
                T.support = {},
                T.expr = {},
                T.noop = function() {}
                ,
                T.map = function(t, e) {
                    var n, r, i, o = [];
                    if (s(t))
                        for (r = 0; r < t.length; r++)
                            null != (n = e(t[r], r)) && o.push(n);
                    else
                        for (i in t)
                            null != (n = e(t[i], i)) && o.push(n);
                    return l(o)
                }
                ,
                T.each = function(t, e) {
                    var n, r;
                    if (s(t)) {
                        for (n = 0; n < t.length; n++)
                            if (!1 === e.call(t[n], n, t[n]))
                                return t
                    } else
                        for (r in t)
                            if (!1 === e.call(t[r], r, t[r]))
                                return t;
                    return t
                }
                ,
                T.grep = function(t, e) {
                    return R.call(t, e)
                }
                ,
                t.JSON && (T.parseJSON = JSON.parse),
                T.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(t, e) {
                    $["[object " + e + "]"] = e.toLowerCase()
                }),
                T.fn = {
                    constructor: J.Z,
                    length: 0,
                    forEach: P.forEach,
                    reduce: P.reduce,
                    push: P.push,
                    sort: P.sort,
                    splice: P.splice,
                    indexOf: P.indexOf,
                    concat: function() {
                        var t, e, n = [];
                        for (t = 0; t < arguments.length; t++)
                            e = arguments[t],
                            n[t] = J.isZ(e) ? e.toArray() : e;
                        return L.apply(J.isZ(this) ? this.toArray() : this, n)
                    },
                    map: function(t) {
                        return T(T.map(this, function(e, n) {
                            return t.call(e, n, e)
                        }))
                    },
                    slice: function() {
                        return T(O.apply(this, arguments))
                    },
                    ready: function(t) {
                        return X.test(I.readyState) && I.body ? t(T) : I.addEventListener("DOMContentLoaded", function() {
                            t(T)
                        }, !1),
                        this
                    },
                    get: function(t) {
                        return t === M ? O.call(this) : this[t >= 0 ? t : t + this.length]
                    },
                    toArray: function() {
                        return this.get()
                    },
                    size: function() {
                        return this.length
                    },
                    remove: function() {
                        return this.each(function() {
                            null != this.parentNode && this.parentNode.removeChild(this)
                        })
                    },
                    each: function(t) {
                        return P.every.call(this, function(e, n) {
                            return !1 !== t.call(e, n, e)
                        }),
                        this
                    },
                    filter: function(t) {
                        return n(t) ? this.not(this.not(t)) : T(R.call(this, function(e) {
                            return J.matches(e, t)
                        }))
                    },
                    add: function(t, e) {
                        return T(C(this.concat(T(t, e))))
                    },
                    is: function(t) {
                        return this.length > 0 && J.matches(this[0], t)
                    },
                    not: function(t) {
                        var e = [];
                        if (n(t) && t.call !== M)
                            this.each(function(n) {
                                t.call(this, n) || e.push(this)
                            });
                        else {
                            var r = "string" == typeof t ? this.filter(t) : s(t) && n(t.item) ? O.call(t) : T(t);
                            this.forEach(function(t) {
                                r.indexOf(t) < 0 && e.push(t)
                            })
                        }
                        return T(e)
                    },
                    has: function(t) {
                        return this.filter(function() {
                            return o(t) ? T.contains(this, t) : T(this).find(t).size()
                        })
                    },
                    eq: function(t) {
                        return -1 === t ? this.slice(t) : this.slice(t, +t + 1)
                    },
                    first: function() {
                        var t = this[0];
                        return t && !o(t) ? t : T(t)
                    },
                    last: function() {
                        var t = this[this.length - 1];
                        return t && !o(t) ? t : T(t)
                    },
                    find: function(t) {
                        var e = this;
                        return t ? "object" == typeof t ? T(t).filter(function() {
                            var t = this;
                            return P.some.call(e, function(e) {
                                return T.contains(e, t)
                            })
                        }) : 1 == this.length ? T(J.qsa(this[0], t)) : this.map(function() {
                            return J.qsa(this, t)
                        }) : T()
                    },
                    closest: function(t, e) {
                        var n = []
                          , r = "object" == typeof t && T(t);
                        return this.each(function(o, a) {
                            for (; a && !(r ? r.indexOf(a) >= 0 : J.matches(a, t)); )
                                a = a !== e && !i(a) && a.parentNode;
                            a && n.indexOf(a) < 0 && n.push(a)
                        }),
                        T(n)
                    },
                    parents: function(t) {
                        for (var e = [], n = this; n.length > 0; )
                            n = T.map(n, function(t) {
                                if ((t = t.parentNode) && !i(t) && e.indexOf(t) < 0)
                                    return e.push(t),
                                    t
                            });
                        return g(e, t)
                    },
                    parent: function(t) {
                        return g(C(this.pluck("parentNode")), t)
                    },
                    children: function(t) {
                        return g(this.map(function() {
                            return f(this)
                        }), t)
                    },
                    contents: function() {
                        return this.map(function() {
                            return this.contentDocument || O.call(this.childNodes)
                        })
                    },
                    siblings: function(t) {
                        return g(this.map(function(t, e) {
                            return R.call(f(e.parentNode), function(t) {
                                return t !== e
                            })
                        }), t)
                    },
                    empty: function() {
                        return this.each(function() {
                            this.innerHTML = ""
                        })
                    },
                    pluck: function(t) {
                        return T.map(this, function(e) {
                            return e[t]
                        })
                    },
                    show: function() {
                        return this.each(function() {
                            "none" == this.style.display && (this.style.display = ""),
                            "none" == getComputedStyle(this, "").getPropertyValue("display") && (this.style.display = p(this.nodeName))
                        })
                    },
                    replaceWith: function(t) {
                        return this.before(t).remove()
                    },
                    wrap: function(t) {
                        var e = n(t);
                        if (this[0] && !e)
                            var r = T(t).get(0)
                              , i = r.parentNode || this.length > 1;
                        return this.each(function(n) {
                            T(this).wrapAll(e ? t.call(this, n) : i ? r.cloneNode(!0) : r)
                        })
                    },
                    wrapAll: function(t) {
                        if (this[0]) {
                            T(this[0]).before(t = T(t));
                            for (var e; (e = t.children()).length; )
                                t = e.first();
                            T(t).append(this)
                        }
                        return this
                    },
                    wrapInner: function(t) {
                        var e = n(t);
                        return this.each(function(n) {
                            var r = T(this)
                              , i = r.contents()
                              , o = e ? t.call(this, n) : t;
                            i.length ? i.wrapAll(o) : r.append(o)
                        })
                    },
                    unwrap: function() {
                        return this.parent().each(function() {
                            T(this).replaceWith(T(this).children())
                        }),
                        this
                    },
                    clone: function() {
                        return this.map(function() {
                            return this.cloneNode(!0)
                        })
                    },
                    hide: function() {
                        return this.css("display", "none")
                    },
                    toggle: function(t) {
                        return this.each(function() {
                            var e = T(this);
                            (t === M ? "none" == e.css("display") : t) ? e.show() : e.hide()
                        })
                    },
                    prev: function(t) {
                        return T(this.pluck("previousElementSibling")).filter(t || "*")
                    },
                    next: function(t) {
                        return T(this.pluck("nextElementSibling")).filter(t || "*")
                    },
                    html: function(t) {
                        return 0 in arguments ? this.each(function(e) {
                            var n = this.innerHTML;
                            T(this).empty().append(y(this, t, e, n))
                        }) : 0 in this ? this[0].innerHTML : null
                    },
                    text: function(t) {
                        return 0 in arguments ? this.each(function(e) {
                            var n = y(this, t, e, this.textContent);
                            this.textContent = null == n ? "" : "" + n
                        }) : 0 in this ? this.pluck("textContent").join("") : null
                    },
                    attr: function(t, e) {
                        var n;
                        return "string" != typeof t || 1 in arguments ? this.each(function(n) {
                            if (1 === this.nodeType)
                                if (o(t))
                                    for (E in t)
                                        _(this, E, t[E]);
                                else
                                    _(this, t, y(this, e, n, this.getAttribute(t)))
                        }) : 0 in this && 1 == this[0].nodeType && null != (n = this[0].getAttribute(t)) ? n : M
                    },
                    removeAttr: function(t) {
                        return this.each(function() {
                            1 === this.nodeType && t.split(" ").forEach(function(t) {
                                _(this, t)
                            }, this)
                        })
                    },
                    prop: function(t, e) {
                        return t = K[t] || t,
                        1 in arguments ? this.each(function(n) {
                            this[t] = y(this, e, n, this[t])
                        }) : this[0] && this[0][t]
                    },
                    removeProp: function(t) {
                        return t = K[t] || t,
                        this.each(function() {
                            delete this[t]
                        })
                    },
                    data: function(t, e) {
                        var n = "data-" + t.replace(F, "-$1").toLowerCase()
                          , r = 1 in arguments ? this.attr(n, e) : this.attr(n);
                        return null !== r ? b(r) : M
                    },
                    val: function(t) {
                        return 0 in arguments ? (null == t && (t = ""),
                        this.each(function(e) {
                            this.value = y(this, t, e, this.value)
                        })) : this[0] && (this[0].multiple ? T(this[0]).find("option").filter(function() {
                            return this.selected
                        }).pluck("value") : this[0].value)
                    },
                    offset: function(e) {
                        if (e)
                            return this.each(function(t) {
                                var n = T(this)
                                  , r = y(this, e, t, n.offset())
                                  , i = n.offsetParent().offset()
                                  , o = {
                                    top: r.top - i.top,
                                    left: r.left - i.left
                                };
                                "static" == n.css("position") && (o.position = "relative"),
                                n.css(o)
                            });
                        if (!this.length)
                            return null;
                        if (I.documentElement !== this[0] && !T.contains(I.documentElement, this[0]))
                            return {
                                top: 0,
                                left: 0
                            };
                        var n = this[0].getBoundingClientRect();
                        return {
                            left: n.left + t.pageXOffset,
                            top: n.top + t.pageYOffset,
                            width: Math.round(n.width),
                            height: Math.round(n.height)
                        }
                    },
                    css: function(t, n) {
                        if (arguments.length < 2) {
                            var r = this[0];
                            if ("string" == typeof t) {
                                if (!r)
                                    return;
                                return r.style[A(t)] || getComputedStyle(r, "").getPropertyValue(t)
                            }
                            if (tt(t)) {
                                if (!r)
                                    return;
                                var i = {}
                                  , o = getComputedStyle(r, "");
                                return T.each(t, function(t, e) {
                                    i[e] = r.style[A(e)] || o.getPropertyValue(e)
                                }),
                                i
                            }
                        }
                        var a = "";
                        if ("string" == e(t))
                            n || 0 === n ? a = u(t) + ":" + d(t, n) : this.each(function() {
                                this.style.removeProperty(u(t))
                            });
                        else
                            for (E in t)
                                t[E] || 0 === t[E] ? a += u(E) + ":" + d(E, t[E]) + ";" : this.each(function() {
                                    this.style.removeProperty(u(E))
                                });
                        return this.each(function() {
                            this.style.cssText += ";" + a
                        })
                    },
                    index: function(t) {
                        return t ? this.indexOf(T(t)[0]) : this.parent().children().indexOf(this[0])
                    },
                    hasClass: function(t) {
                        return !!t && P.some.call(this, function(t) {
                            return this.test(x(t))
                        }, h(t))
                    },
                    addClass: function(t) {
                        return t ? this.each(function(e) {
                            if ("className"in this) {
                                S = [];
                                var n = x(this);
                                y(this, t, e, n).split(/\s+/g).forEach(function(t) {
                                    T(this).hasClass(t) || S.push(t)
                                }, this),
                                S.length && x(this, n + (n ? " " : "") + S.join(" "))
                            }
                        }) : this
                    },
                    removeClass: function(t) {
                        return this.each(function(e) {
                            if ("className"in this) {
                                if (t === M)
                                    return x(this, "");
                                S = x(this),
                                y(this, t, e, S).split(/\s+/g).forEach(function(t) {
                                    S = S.replace(h(t), " ")
                                }),
                                x(this, S.trim())
                            }
                        })
                    },
                    toggleClass: function(t, e) {
                        return t ? this.each(function(n) {
                            var r = T(this);
                            y(this, t, n, x(this)).split(/\s+/g).forEach(function(t) {
                                (e === M ? !r.hasClass(t) : e) ? r.addClass(t) : r.removeClass(t)
                            })
                        }) : this
                    },
                    scrollTop: function(t) {
                        if (this.length) {
                            var e = "scrollTop"in this[0];
                            return t === M ? e ? this[0].scrollTop : this[0].pageYOffset : this.each(e ? function() {
                                this.scrollTop = t
                            }
                            : function() {
                                this.scrollTo(this.scrollX, t)
                            }
                            )
                        }
                    },
                    scrollLeft: function(t) {
                        if (this.length) {
                            var e = "scrollLeft"in this[0];
                            return t === M ? e ? this[0].scrollLeft : this[0].pageXOffset : this.each(e ? function() {
                                this.scrollLeft = t
                            }
                            : function() {
                                this.scrollTo(t, this.scrollY)
                            }
                            )
                        }
                    },
                    position: function() {
                        if (this.length) {
                            var t = this[0]
                              , e = this.offsetParent()
                              , n = this.offset()
                              , r = U.test(e[0].nodeName) ? {
                                top: 0,
                                left: 0
                            } : e.offset();
                            return n.top -= parseFloat(T(t).css("margin-top")) || 0,
                            n.left -= parseFloat(T(t).css("margin-left")) || 0,
                            r.top += parseFloat(T(e[0]).css("border-top-width")) || 0,
                            r.left += parseFloat(T(e[0]).css("border-left-width")) || 0,
                            {
                                top: n.top - r.top,
                                left: n.left - r.left
                            }
                        }
                    },
                    offsetParent: function() {
                        return this.map(function() {
                            for (var t = this.offsetParent || I.body; t && !U.test(t.nodeName) && "static" == T(t).css("position"); )
                                t = t.offsetParent;
                            return t
                        })
                    }
                },
                T.fn.detach = T.fn.remove,
                ["width", "height"].forEach(function(t) {
                    var e = t.replace(/./, function(t) {
                        return t[0].toUpperCase()
                    });
                    T.fn[t] = function(n) {
                        var o, a = this[0];
                        return n === M ? r(a) ? a["inner" + e] : i(a) ? a.documentElement["scroll" + e] : (o = this.offset()) && o[t] : this.each(function(e) {
                            a = T(this),
                            a.css(t, y(this, n, e, a[t]()))
                        })
                    }
                }),
                G.forEach(function(n, r) {
                    var i = r % 2;
                    T.fn[n] = function() {
                        var n, o, a = T.map(arguments, function(t) {
                            var r = [];
                            return n = e(t),
                            "array" == n ? (t.forEach(function(t) {
                                return t.nodeType !== M ? r.push(t) : T.zepto.isZ(t) ? r = r.concat(t.get()) : void (r = r.concat(J.fragment(t)))
                            }),
                            r) : "object" == n || null == t ? t : J.fragment(t)
                        }), s = this.length > 1;
                        return a.length < 1 ? this : this.each(function(e, n) {
                            o = i ? n : n.parentNode,
                            n = 0 == r ? n.nextSibling : 1 == r ? n.firstChild : 2 == r ? n : null;
                            var c = T.contains(I.documentElement, o);
                            a.forEach(function(e) {
                                if (s)
                                    e = e.cloneNode(!0);
                                else if (!o)
                                    return T(e).remove();
                                o.insertBefore(e, n),
                                c && w(e, function(e) {
                                    if (!(null == e.nodeName || "SCRIPT" !== e.nodeName.toUpperCase() || e.type && "text/javascript" !== e.type || e.src)) {
                                        var n = e.ownerDocument ? e.ownerDocument.defaultView : t;
                                        n.eval.call(n, e.innerHTML)
                                    }
                                })
                            })
                        })
                    }
                    ,
                    T.fn[i ? n + "To" : "insert" + (r ? "Before" : "After")] = function(t) {
                        return T(t)[n](this),
                        this
                    }
                }),
                J.Z.prototype = m.prototype = T.fn,
                J.uniq = C,
                J.deserializeValue = b,
                T.zepto = J,
                T
            }();
            return t.Zepto = e,
            void 0 === t.$ && (t.$ = e),
            function(e) {
                function n(t) {
                    return t._zid || (t._zid = p++)
                }
                function r(t, e, r, a) {
                    if (e = i(e),
                    e.ns)
                        var s = o(e.ns);
                    return (g[n(t)] || []).filter(function(t) {
                        return t && (!e.e || t.e == e.e) && (!e.ns || s.test(t.ns)) && (!r || n(t.fn) === n(r)) && (!a || t.sel == a)
                    })
                }
                function i(t) {
                    var e = ("" + t).split(".");
                    return {
                        e: e[0],
                        ns: e.slice(1).sort().join(" ")
                    }
                }
                function o(t) {
                    return new RegExp("(?:^| )" + t.replace(" ", " .* ?") + "(?: |$)")
                }
                function a(t, e) {
                    return t.del && !_ && t.e in x || !!e
                }
                function s(t) {
                    return b[t] || _ && x[t] || t
                }
                function c(t, r, o, c, l, h, p) {
                    var f = n(t)
                      , m = g[f] || (g[f] = []);
                    r.split(/\s/).forEach(function(n) {
                        if ("ready" == n)
                            return e(document).ready(o);
                        var r = i(n);
                        r.fn = o,
                        r.sel = l,
                        r.e in b && (o = function(t) {
                            var n = t.relatedTarget;
                            if (!n || n !== this && !e.contains(this, n))
                                return r.fn.apply(this, arguments)
                        }
                        ),
                        r.del = h;
                        var f = h || o;
                        r.proxy = function(e) {
                            if (e = u(e),
                            !e.isImmediatePropagationStopped()) {
                                e.data = c;
                                var n = f.apply(t, e._args == d ? [e] : [e].concat(e._args));
                                return !1 === n && (e.preventDefault(),
                                e.stopPropagation()),
                                n
                            }
                        }
                        ,
                        r.i = m.length,
                        m.push(r),
                        "addEventListener"in t && t.addEventListener(s(r.e), r.proxy, a(r, p))
                    })
                }
                function l(t, e, i, o, c) {
                    var l = n(t);
                    (e || "").split(/\s/).forEach(function(e) {
                        r(t, e, i, o).forEach(function(e) {
                            delete g[l][e.i],
                            "removeEventListener"in t && t.removeEventListener(s(e.e), e.proxy, a(e, c))
                        })
                    })
                }
                function u(t, n) {
                    return !n && t.isDefaultPrevented || (n || (n = t),
                    e.each(T, function(e, r) {
                        var i = n[e];
                        t[e] = function() {
                            return this[r] = w,
                            i && i.apply(n, arguments)
                        }
                        ,
                        t[r] = M
                    }),
                    t.timeStamp || (t.timeStamp = Date.now()),
                    (n.defaultPrevented !== d ? n.defaultPrevented : "returnValue"in n ? !1 === n.returnValue : n.getPreventDefault && n.getPreventDefault()) && (t.isDefaultPrevented = w)),
                    t
                }
                function h(t) {
                    var e, n = {
                        originalEvent: t
                    };
                    for (e in t)
                        E.test(e) || t[e] === d || (n[e] = t[e]);
                    return u(n, t)
                }
                var d, p = 1, f = Array.prototype.slice, m = e.isFunction, v = function(t) {
                    return "string" == typeof t
                }, g = {}, y = {}, _ = "onfocusin"in t, x = {
                    focus: "focusin",
                    blur: "focusout"
                }, b = {
                    mouseenter: "mouseover",
                    mouseleave: "mouseout"
                };
                y.click = y.mousedown = y.mouseup = y.mousemove = "MouseEvents",
                e.event = {
                    add: c,
                    remove: l
                },
                e.proxy = function(t, r) {
                    var i = 2 in arguments && f.call(arguments, 2);
                    if (m(t)) {
                        var o = function() {
                            return t.apply(r, i ? i.concat(f.call(arguments)) : arguments)
                        };
                        return o._zid = n(t),
                        o
                    }
                    if (v(r))
                        return i ? (i.unshift(t[r], t),
                        e.proxy.apply(null, i)) : e.proxy(t[r], t);
                    throw new TypeError("expected function")
                }
                ,
                e.fn.bind = function(t, e, n) {
                    return this.on(t, e, n)
                }
                ,
                e.fn.unbind = function(t, e) {
                    return this.off(t, e)
                }
                ,
                e.fn.one = function(t, e, n, r) {
                    return this.on(t, e, n, r, 1)
                }
                ;
                var w = function() {
                    return !0
                }
                  , M = function() {
                    return !1
                }
                  , E = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/
                  , T = {
                    preventDefault: "isDefaultPrevented",
                    stopImmediatePropagation: "isImmediatePropagationStopped",
                    stopPropagation: "isPropagationStopped"
                };
                e.fn.delegate = function(t, e, n) {
                    return this.on(e, t, n)
                }
                ,
                e.fn.undelegate = function(t, e, n) {
                    return this.off(e, t, n)
                }
                ,
                e.fn.live = function(t, n) {
                    return e(document.body).delegate(this.selector, t, n),
                    this
                }
                ,
                e.fn.die = function(t, n) {
                    return e(document.body).undelegate(this.selector, t, n),
                    this
                }
                ,
                e.fn.on = function(t, n, r, i, o) {
                    var a, s, u = this;
                    return t && !v(t) ? (e.each(t, function(t, e) {
                        u.on(t, n, r, e, o)
                    }),
                    u) : (v(n) || m(i) || !1 === i || (i = r,
                    r = n,
                    n = d),
                    i !== d && !1 !== r || (i = r,
                    r = d),
                    !1 === i && (i = M),
                    u.each(function(u, d) {
                        o && (a = function(t) {
                            return l(d, t.type, i),
                            i.apply(this, arguments)
                        }
                        ),
                        n && (s = function(t) {
                            var r, o = e(t.target).closest(n, d).get(0);
                            if (o && o !== d)
                                return r = e.extend(h(t), {
                                    currentTarget: o,
                                    liveFired: d
                                }),
                                (a || i).apply(o, [r].concat(f.call(arguments, 1)))
                        }
                        ),
                        c(d, t, i, r, n, s || a)
                    }))
                }
                ,
                e.fn.off = function(t, n, r) {
                    var i = this;
                    return t && !v(t) ? (e.each(t, function(t, e) {
                        i.off(t, n, e)
                    }),
                    i) : (v(n) || m(r) || !1 === r || (r = n,
                    n = d),
                    !1 === r && (r = M),
                    i.each(function() {
                        l(this, t, r, n)
                    }))
                }
                ,
                e.fn.trigger = function(t, n) {
                    return t = v(t) || e.isPlainObject(t) ? e.Event(t) : u(t),
                    t._args = n,
                    this.each(function() {
                        t.type in x && "function" == typeof this[t.type] ? this[t.type]() : "dispatchEvent"in this ? this.dispatchEvent(t) : e(this).triggerHandler(t, n)
                    })
                }
                ,
                e.fn.triggerHandler = function(t, n) {
                    var i, o;
                    return this.each(function(a, s) {
                        i = h(v(t) ? e.Event(t) : t),
                        i._args = n,
                        i.target = s,
                        e.each(r(s, t.type || t), function(t, e) {
                            if (o = e.proxy(i),
                            i.isImmediatePropagationStopped())
                                return !1
                        })
                    }),
                    o
                }
                ,
                "focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(t) {
                    e.fn[t] = function(e) {
                        return 0 in arguments ? this.bind(t, e) : this.trigger(t)
                    }
                }),
                e.Event = function(t, e) {
                    v(t) || (e = t,
                    t = e.type);
                    var n = document.createEvent(y[t] || "Events")
                      , r = !0;
                    if (e)
                        for (var i in e)
                            "bubbles" == i ? r = !!e[i] : n[i] = e[i];
                    return n.initEvent(t, r, !0),
                    u(n)
                }
            }(e),
            function(e) {
                function n(t, n, r) {
                    var i = e.Event(n);
                    return e(t).trigger(i, r),
                    !i.isDefaultPrevented()
                }
                function r(t, e, r, i) {
                    if (t.global)
                        return n(e || x, r, i)
                }
                function i(t) {
                    t.global && 0 == e.active++ && r(t, null, "ajaxStart")
                }
                function o(t) {
                    t.global && !--e.active && r(t, null, "ajaxStop")
                }
                function a(t, e) {
                    var n = e.context;
                    if (!1 === e.beforeSend.call(n, t, e) || !1 === r(e, n, "ajaxBeforeSend", [t, e]))
                        return !1;
                    r(e, n, "ajaxSend", [t, e])
                }
                function s(t, e, n, i) {
                    var o = n.context;
                    n.success.call(o, t, "success", e),
                    i && i.resolveWith(o, [t, "success", e]),
                    r(n, o, "ajaxSuccess", [e, n, t]),
                    l("success", e, n)
                }
                function c(t, e, n, i, o) {
                    var a = i.context;
                    i.error.call(a, n, e, t),
                    o && o.rejectWith(a, [n, e, t]),
                    r(i, a, "ajaxError", [n, i, t || e]),
                    l(e, n, i)
                }
                function l(t, e, n) {
                    var i = n.context;
                    n.complete.call(i, e, t),
                    r(n, i, "ajaxComplete", [e, n]),
                    o(n)
                }
                function u(t, e, n) {
                    if (n.dataFilter == h)
                        return t;
                    var r = n.context;
                    return n.dataFilter.call(r, t, e)
                }
                function h() {}
                function d(t) {
                    return t && (t = t.split(";", 2)[0]),
                    t && (t == T ? "html" : t == E ? "json" : w.test(t) ? "script" : M.test(t) && "xml") || "text"
                }
                function p(t, e) {
                    return "" == e ? t : (t + "&" + e).replace(/[&?]{1,2}/, "?")
                }
                function f(t) {
                    t.processData && t.data && "string" != e.type(t.data) && (t.data = e.param(t.data, t.traditional)),
                    !t.data || t.type && "GET" != t.type.toUpperCase() && "jsonp" != t.dataType || (t.url = p(t.url, t.data),
                    t.data = void 0)
                }
                function m(t, n, r, i) {
                    return e.isFunction(n) && (i = r,
                    r = n,
                    n = void 0),
                    e.isFunction(r) || (i = r,
                    r = void 0),
                    {
                        url: t,
                        data: n,
                        success: r,
                        dataType: i
                    }
                }
                function v(t, n, r, i) {
                    var o, a = e.isArray(n), s = e.isPlainObject(n);
                    e.each(n, function(n, c) {
                        o = e.type(c),
                        i && (n = r ? i : i + "[" + (s || "object" == o || "array" == o ? n : "") + "]"),
                        !i && a ? t.add(c.name, c.value) : "array" == o || !r && "object" == o ? v(t, c, r, n) : t.add(n, c)
                    })
                }
                var g, y, _ = +new Date, x = t.document, b = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, w = /^(?:text|application)\/javascript/i, M = /^(?:text|application)\/xml/i, E = "application/json", T = "text/html", S = /^\s*$/, A = x.createElement("a");
                A.href = t.location.href,
                e.active = 0,
                e.ajaxJSONP = function(n, r) {
                    if (!("type"in n))
                        return e.ajax(n);
                    var i, o, l = n.jsonpCallback, u = (e.isFunction(l) ? l() : l) || "Zepto" + _++, h = x.createElement("script"), d = t[u], p = function(t) {
                        e(h).triggerHandler("error", t || "abort")
                    }, f = {
                        abort: p
                    };
                    return r && r.promise(f),
                    e(h).on("load error", function(a, l) {
                        clearTimeout(o),
                        e(h).off().remove(),
                        "error" != a.type && i ? s(i[0], f, n, r) : c(null, l || "error", f, n, r),
                        t[u] = d,
                        i && e.isFunction(d) && d(i[0]),
                        d = i = void 0
                    }),
                    !1 === a(f, n) ? (p("abort"),
                    f) : (t[u] = function() {
                        i = arguments
                    }
                    ,
                    h.src = n.url.replace(/\?(.+)=\?/, "?$1=" + u),
                    x.head.appendChild(h),
                    n.timeout > 0 && (o = setTimeout(function() {
                        p("timeout")
                    }, n.timeout)),
                    f)
                }
                ,
                e.ajaxSettings = {
                    type: "GET",
                    beforeSend: h,
                    success: h,
                    error: h,
                    complete: h,
                    context: null,
                    global: !0,
                    xhr: function() {
                        return new t.XMLHttpRequest
                    },
                    accepts: {
                        script: "text/javascript, application/javascript, application/x-javascript",
                        json: E,
                        xml: "application/xml, text/xml",
                        html: T,
                        text: "text/plain"
                    },
                    crossDomain: !1,
                    timeout: 0,
                    processData: !0,
                    cache: !0,
                    dataFilter: h
                },
                e.ajax = function(n) {
                    var r, o, l = e.extend({}, n || {}), m = e.Deferred && e.Deferred();
                    for (g in e.ajaxSettings)
                        void 0 === l[g] && (l[g] = e.ajaxSettings[g]);
                    i(l),
                    l.crossDomain || (r = x.createElement("a"),
                    r.href = l.url,
                    r.href = r.href,
                    l.crossDomain = A.protocol + "//" + A.host != r.protocol + "//" + r.host),
                    l.url || (l.url = t.location.toString()),
                    (o = l.url.indexOf("#")) > -1 && (l.url = l.url.slice(0, o)),
                    f(l);
                    var v = l.dataType
                      , _ = /\?.+=\?/.test(l.url);
                    if (_ && (v = "jsonp"),
                    !1 !== l.cache && (n && !0 === n.cache || "script" != v && "jsonp" != v) || (l.url = p(l.url, "_=" + Date.now())),
                    "jsonp" == v)
                        return _ || (l.url = p(l.url, l.jsonp ? l.jsonp + "=?" : !1 === l.jsonp ? "" : "callback=?")),
                        e.ajaxJSONP(l, m);
                    var b, w = l.accepts[v], M = {}, E = function(t, e) {
                        M[t.toLowerCase()] = [t, e]
                    }, T = /^([\w-]+:)\/\//.test(l.url) ? RegExp.$1 : t.location.protocol, C = l.xhr(), P = C.setRequestHeader;
                    if (m && m.promise(C),
                    l.crossDomain || E("X-Requested-With", "XMLHttpRequest"),
                    E("Accept", w || "*/*"),
                    (w = l.mimeType || w) && (w.indexOf(",") > -1 && (w = w.split(",", 2)[0]),
                    C.overrideMimeType && C.overrideMimeType(w)),
                    (l.contentType || !1 !== l.contentType && l.data && "GET" != l.type.toUpperCase()) && E("Content-Type", l.contentType || "application/x-www-form-urlencoded"),
                    l.headers)
                        for (y in l.headers)
                            E(y, l.headers[y]);
                    if (C.setRequestHeader = E,
                    C.onreadystatechange = function() {
                        if (4 == C.readyState) {
                            C.onreadystatechange = h,
                            clearTimeout(b);
                            var t, n = !1;
                            if (C.status >= 200 && C.status < 300 || 304 == C.status || 0 == C.status && "file:" == T) {
                                if (v = v || d(l.mimeType || C.getResponseHeader("content-type")),
                                "arraybuffer" == C.responseType || "blob" == C.responseType)
                                    t = C.response;
                                else {
                                    t = C.responseText;
                                    try {
                                        t = u(t, v, l),
                                        "script" == v ? (0,
                                        eval)(t) : "xml" == v ? t = C.responseXML : "json" == v && (t = S.test(t) ? null : e.parseJSON(t))
                                    } catch (t) {
                                        n = t
                                    }
                                    if (n)
                                        return c(n, "parsererror", C, l, m)
                                }
                                s(t, C, l, m)
                            } else
                                c(C.statusText || null, C.status ? "error" : "abort", C, l, m)
                        }
                    }
                    ,
                    !1 === a(C, l))
                        return C.abort(),
                        c(null, "abort", C, l, m),
                        C;
                    var L = !("async"in l) || l.async;
                    if (C.open(l.type, l.url, L, l.username, l.password),
                    l.xhrFields)
                        for (y in l.xhrFields)
                            C[y] = l.xhrFields[y];
                    for (y in M)
                        P.apply(C, M[y]);
                    return l.timeout > 0 && (b = setTimeout(function() {
                        C.onreadystatechange = h,
                        C.abort(),
                        c(null, "timeout", C, l, m)
                    }, l.timeout)),
                    C.send(l.data ? l.data : null),
                    C
                }
                ,
                e.get = function() {
                    return e.ajax(m.apply(null, arguments))
                }
                ,
                e.post = function() {
                    var t = m.apply(null, arguments);
                    return t.type = "POST",
                    e.ajax(t)
                }
                ,
                e.getJSON = function() {
                    var t = m.apply(null, arguments);
                    return t.dataType = "json",
                    e.ajax(t)
                }
                ,
                e.fn.load = function(t, n, r) {
                    if (!this.length)
                        return this;
                    var i, o = this, a = t.split(/\s/), s = m(t, n, r), c = s.success;
                    return a.length > 1 && (s.url = a[0],
                    i = a[1]),
                    s.success = function(t) {
                        o.html(i ? e("<div>").html(t.replace(b, "")).find(i) : t),
                        c && c.apply(o, arguments)
                    }
                    ,
                    e.ajax(s),
                    this
                }
                ;
                var C = encodeURIComponent;
                e.param = function(t, n) {
                    var r = [];
                    return r.add = function(t, n) {
                        e.isFunction(n) && (n = n()),
                        null == n && (n = ""),
                        this.push(C(t) + "=" + C(n))
                    }
                    ,
                    v(r, t, n),
                    r.join("&").replace(/%20/g, "+")
                }
            }(e),
            function(t) {
                t.fn.serializeArray = function() {
                    var e, n, r = [], i = function(t) {
                        if (t.forEach)
                            return t.forEach(i);
                        r.push({
                            name: e,
                            value: t
                        })
                    };
                    return this[0] && t.each(this[0].elements, function(r, o) {
                        n = o.type,
                        e = o.name,
                        e && "fieldset" != o.nodeName.toLowerCase() && !o.disabled && "submit" != n && "reset" != n && "button" != n && "file" != n && ("radio" != n && "checkbox" != n || o.checked) && i(t(o).val())
                    }),
                    r
                }
                ,
                t.fn.serialize = function() {
                    var t = [];
                    return this.serializeArray().forEach(function(e) {
                        t.push(encodeURIComponent(e.name) + "=" + encodeURIComponent(e.value))
                    }),
                    t.join("&")
                }
                ,
                t.fn.submit = function(e) {
                    if (0 in arguments)
                        this.bind("submit", e);
                    else if (this.length) {
                        var n = t.Event("submit");
                        this.eq(0).trigger(n),
                        n.isDefaultPrevented() || this.get(0).submit()
                    }
                    return this
                }
            }(e),
            function() {
                try {
                    getComputedStyle(void 0)
                } catch (n) {
                    var e = getComputedStyle;
                    t.getComputedStyle = function(t, n) {
                        try {
                            return e(t, n)
                        } catch (t) {
                            return null
                        }
                    }
                }
            }(),
            e
        })
    }
    ).call(window)
}
, , , , function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        artefacs: {
            subtitle: n(964),
            paragraph: n(967),
            bullets: n(969),
            "svg-folder": n(972),
            videocontent: n(993),
            videoplayer: n(996),
            photo: n(999),
            quote: n(1002),
            "graph-container": n(1004)
        },
        block: {
            "st-credits": n(1157),
            "st-next-chapter": n(1160)
        }
    }
}
, , , , , , function(t, e, n) {
    "use strict";
    e.__esModule = !0;
    var r = n(562)
      , i = function(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }(r);
    e.default = i.default || function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
        }
        return t
    }
}
, function(t, e, n) {
    var r = n(95);
    t.exports = function(t, e, n) {
        if (r(t),
        void 0 === e)
            return t;
        switch (n) {
        case 1:
            return function(n) {
                return t.call(e, n)
            }
            ;
        case 2:
            return function(n, r) {
                return t.call(e, n, r)
            }
            ;
        case 3:
            return function(n, r, i) {
                return t.call(e, n, r, i)
            }
        }
        return function() {
            return t.apply(e, arguments)
        }
    }
}
, function(t, e, n) {
    var r = n(191)
      , i = n(131);
    t.exports = Object.keys || function(t) {
        return r(t, i)
    }
}
, function(t, e) {
    var n = {}.toString;
    t.exports = function(t) {
        return n.call(t).slice(8, -1)
    }
}
, function(t, e) {
    t.exports = {}
}
, , , , , , , , function(t, e) {
    t.exports = function(t) {
        if ("function" != typeof t)
            throw TypeError(t + " is not a function!");
        return t
    }
}
, function(t, e) {
    t.exports = function(t, e) {
        return {
            enumerable: !(1 & t),
            configurable: !(2 & t),
            writable: !(4 & t),
            value: e
        }
    }
}
, function(t, e) {
    var n = 0
      , r = Math.random();
    t.exports = function(t) {
        return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++n + r).toString(36))
    }
}
, function(t, e) {
    e.f = {}.propertyIsEnumerable
}
, function(t, e, n) {
    var r = n(127);
    t.exports = function(t) {
        return Object(r(t))
    }
}
, function(t, e) {
    t.exports = !0
}
, function(t, e, n) {
    var r = n(47).f
      , i = n(57)
      , o = n(17)("toStringTag");
    t.exports = function(t, e, n) {
        t && !i(t = n ? t : t.prototype, o) && r(t, o, {
            configurable: !0,
            value: e
        })
    }
}
, , , , , function(t, e, n) {
    t.exports = {
        default: n(672),
        __esModule: !0
    }
}
, , , , function(t, e, n) {
    t.exports = {
        default: n(1148),
        __esModule: !0
    }
}
, , , , , , , , , , , , , , , function(t, e, n) {
    var r = n(48)
      , i = n(16).document
      , o = r(i) && r(i.createElement);
    t.exports = function(t) {
        return o ? i.createElement(t) : {}
    }
}
, function(t, e, n) {
    var r = n(48);
    t.exports = function(t, e) {
        if (!r(t))
            return t;
        var n, i;
        if (e && "function" == typeof (n = t.toString) && !r(i = n.call(t)))
            return i;
        if ("function" == typeof (n = t.valueOf) && !r(i = n.call(t)))
            return i;
        if (!e && "function" == typeof (n = t.toString) && !r(i = n.call(t)))
            return i;
        throw TypeError("Can't convert object to primitive value")
    }
}
, function(t, e) {
    t.exports = function(t) {
        if (void 0 == t)
            throw TypeError("Can't call method on  " + t);
        return t
    }
}
, function(t, e) {
    var n = Math.ceil
      , r = Math.floor;
    t.exports = function(t) {
        return isNaN(t = +t) ? 0 : (t > 0 ? r : n)(t)
    }
}
, function(t, e, n) {
    var r = n(130)("keys")
      , i = n(97);
    t.exports = function(t) {
        return r[t] || (r[t] = i(t))
    }
}
, function(t, e, n) {
    var r = n(16)
      , i = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
    t.exports = function(t) {
        return i[t] || (i[t] = {})
    }
}
, function(t, e) {
    t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
}
, function(t, e) {
    e.f = Object.getOwnPropertySymbols
}
, function(t, e, n) {
    var r = n(40)
      , i = n(572)
      , o = n(131)
      , a = n(129)("IE_PROTO")
      , s = function() {}
      , c = function() {
        var t, e = n(125)("iframe"), r = o.length;
        for (e.style.display = "none",
        n(197).appendChild(e),
        e.src = "javascript:",
        t = e.contentWindow.document,
        t.open(),
        t.write("<script>document.F=Object<\/script>"),
        t.close(),
        c = t.F; r--; )
            delete c.prototype[o[r]];
        return c()
    };
    t.exports = Object.create || function(t, e) {
        var n;
        return null !== t ? (s.prototype = r(t),
        n = new s,
        s.prototype = null,
        n[a] = t) : n = c(),
        void 0 === e ? n : i(n, e)
    }
}
, function(t, e, n) {
    e.f = n(17)
}
, function(t, e, n) {
    var r = n(16)
      , i = n(13)
      , o = n(100)
      , a = n(134)
      , s = n(47).f;
    t.exports = function(t) {
        var e = i.Symbol || (i.Symbol = o ? {} : r.Symbol || {});
        "_" == t.charAt(0) || t in e || s(e, t, {
            value: a.f(t)
        })
    }
}
, , , , , , , , , , , , function(t, e, n) {
    "use strict";
    function r(t) {
        var e, n;
        this.promise = new t(function(t, r) {
            if (void 0 !== e || void 0 !== n)
                throw TypeError("Bad Promise constructor");
            e = t,
            n = r
        }
        ),
        this.resolve = i(e),
        this.reject = i(n)
    }
    var i = n(95);
    t.exports.f = function(t) {
        return new r(t)
    }
}
, function(t, e, n) {
    function r(t) {
        return n(i(t))
    }
    function i(t) {
        var e = o[t];
        if (!(e + 1))
            throw new Error("Cannot find module '" + t + "'.");
        return e
    }
    var o = {
        "./marvel/icons/creation.svg": 709,
        "./marvel/icons/enemy.svg": 710,
        "./marvel/icons/family.svg": 711,
        "./marvel/icons/friend.svg": 712,
        "./marvel/icons/movies.svg": 713,
        "./marvel/icons/romance.svg": 714,
        "./marvel/icons/work.svg": 715,
        "./marvel/instructions/doubleTap.svg": 716,
        "./marvel/instructions/mouseL.svg": 717,
        "./marvel/instructions/mouseM.svg": 718,
        "./marvel/instructions/mouseR.svg": 719,
        "./marvel/instructions/oneFinger.svg": 720,
        "./marvel/instructions/twoFinger.svg": 721,
        "./marvel/marvelLogo.svg": 722,
        "./marvel/nodeIcons/aarond.svg": 723,
        "./marvel/nodeIcons/abomination.svg": 724,
        "./marvel/nodeIcons/abrahame.svg": 725,
        "./marvel/nodeIcons/abub.svg": 726,
        "./marvel/nodeIcons/adriant.svg": 727,
        "./marvel/nodeIcons/aldrichk.svg": 728,
        "./marvel/nodeIcons/aletao.svg": 729,
        "./marvel/nodeIcons/alexanderp.svg": 730,
        "./marvel/nodeIcons/algrim.svg": 731,
        "./marvel/nodeIcons/am1": 234,
        "./marvel/nodeIcons/am1.png": 234,
        "./marvel/nodeIcons/anciento.svg": 732,
        "./marvel/nodeIcons/annem.svg": 733,
        "./marvel/nodeIcons/antman.svg": 734,
        "./marvel/nodeIcons/antonvo.svg": 735,
        "./marvel/nodeIcons/antonvy.svg": 736,
        "./marvel/nodeIcons/arnimz.svg": 737,
        "./marvel/nodeIcons/asgardian.svg": 738,
        "./marvel/nodeIcons/av1": 235,
        "./marvel/nodeIcons/av1.png": 235,
        "./marvel/nodeIcons/av2": 236,
        "./marvel/nodeIcons/av2.png": 236,
        "./marvel/nodeIcons/av3": 237,
        "./marvel/nodeIcons/av3.png": 237,
        "./marvel/nodeIcons/ayesha.svg": 739,
        "./marvel/nodeIcons/bettyb.svg": 740,
        "./marvel/nodeIcons/bettyr.svg": 741,
        "./marvel/nodeIcons/blackp.svg": 742,
        "./marvel/nodeIcons/blackpk.svg": 743,
        "./marvel/nodeIcons/blackw.svg": 744,
        "./marvel/nodeIcons/blackwca3.svg": 745,
        "./marvel/nodeIcons/bor.svg": 746,
        "./marvel/nodeIcons/bordert.svg": 747,
        "./marvel/nodeIcons/bp1": 238,
        "./marvel/nodeIcons/bp1.png": 238,
        "./marvel/nodeIcons/brockr.svg": 748,
        "./marvel/nodeIcons/bruceb.svg": 749,
        "./marvel/nodeIcons/bucky.svg": 750,
        "./marvel/nodeIcons/ca1": 239,
        "./marvel/nodeIcons/ca1.png": 239,
        "./marvel/nodeIcons/ca2": 240,
        "./marvel/nodeIcons/ca2.png": 240,
        "./marvel/nodeIcons/ca3": 241,
        "./marvel/nodeIcons/ca3.png": 241,
        "./marvel/nodeIcons/capta.svg": 751,
        "./marvel/nodeIcons/carina.svg": 752,
        "./marvel/nodeIcons/cassiel.svg": 753,
        "./marvel/nodeIcons/charlie.svg": 754,
        "./marvel/nodeIcons/chesterp.svg": 755,
        "./marvel/nodeIcons/chitauri.svg": 756,
        "./marvel/nodeIcons/christinee.svg": 757,
        "./marvel/nodeIcons/christinep.svg": 758,
        "./marvel/nodeIcons/collector.svg": 759,
        "./marvel/nodeIcons/corviusg.svg": 760,
        "./marvel/nodeIcons/cosmo.svg": 761,
        "./marvel/nodeIcons/crossb.svg": 762,
        "./marvel/nodeIcons/darcyl.svg": 763,
        "./marvel/nodeIcons/darkelf.svg": 764,
        "./marvel/nodeIcons/darrenc.svg": 765,
        "./marvel/nodeIcons/dave.svg": 766,
        "./marvel/nodeIcons/destroyer.svg": 767,
        "./marvel/nodeIcons/dormammu.svg": 768,
        "./marvel/nodeIcons/drax.svg": 769,
        "./marvel/nodeIcons/ds1": 242,
        "./marvel/nodeIcons/ds1.png": 242,
        "./marvel/nodeIcons/dumdum.svg": 770,
        "./marvel/nodeIcons/ebonym.svg": 771,
        "./marvel/nodeIcons/ego.svg": 772,
        "./marvel/nodeIcons/ellenb.svg": 773,
        "./marvel/nodeIcons/emilb.svg": 774,
        "./marvel/nodeIcons/erics.svg": 775,
        "./marvel/nodeIcons/erikk.svg": 776,
        "./marvel/nodeIcons/eriks.svg": 777,
        "./marvel/nodeIcons/eugenet.svg": 778,
        "./marvel/nodeIcons/everettr.svg": 779,
        "./marvel/nodeIcons/falcon.svg": 780,
        "./marvel/nodeIcons/fandral.svg": 781,
        "./marvel/nodeIcons/fenris.svg": 782,
        "./marvel/nodeIcons/frigga.svg": 783,
        "./marvel/nodeIcons/gabej.svg": 784,
        "./marvel/nodeIcons/gamora.svg": 785,
        "./marvel/nodeIcons/garthans.svg": 786,
        "./marvel/nodeIcons/georgesb.svg": 787,
        "./marvel/nodeIcons/gotg1": 243,
        "./marvel/nodeIcons/gotg1.png": 243,
        "./marvel/nodeIcons/gotg2": 244,
        "./marvel/nodeIcons/gotg2.png": 244,
        "./marvel/nodeIcons/grandm.svg": 788,
        "./marvel/nodeIcons/groota.svg": 789,
        "./marvel/nodeIcons/grootb.svg": 790,
        "./marvel/nodeIcons/grootp.svg": 791,
        "./marvel/nodeIcons/groott.svg": 792,
        "./marvel/nodeIcons/hamir.svg": 793,
        "./marvel/nodeIcons/hankp.svg": 794,
        "./marvel/nodeIcons/happyh.svg": 795,
        "./marvel/nodeIcons/harleyk.svg": 796,
        "./marvel/nodeIcons/hawke.svg": 797,
        "./marvel/nodeIcons/heimdall.svg": 798,
        "./marvel/nodeIcons/heimdallh.svg": 799,
        "./marvel/nodeIcons/hela.svg": 800,
        "./marvel/nodeIcons/helenc.svg": 801,
        "./marvel/nodeIcons/helmutz.svg": 802,
        "./marvel/nodeIcons/hermans.svg": 803,
        "./marvel/nodeIcons/hk1": 245,
        "./marvel/nodeIcons/hk1.png": 245,
        "./marvel/nodeIcons/hogun.svg": 804,
        "./marvel/nodeIcons/hopev.svg": 805,
        "./marvel/nodeIcons/howardd.svg": 806,
        "./marvel/nodeIcons/howards-trim.svg": 807,
        "./marvel/nodeIcons/howardso.svg": 808,
        "./marvel/nodeIcons/howardsy.svg": 809,
        "./marvel/nodeIcons/hulk.svg": 810,
        "./marvel/nodeIcons/hulkg.svg": 811,
        "./marvel/nodeIcons/im1": 246,
        "./marvel/nodeIcons/im1.png": 246,
        "./marvel/nodeIcons/im2": 247,
        "./marvel/nodeIcons/im2.png": 247,
        "./marvel/nodeIcons/im3": 248,
        "./marvel/nodeIcons/im3.png": 248,
        "./marvel/nodeIcons/iranir.svg": 812,
        "./marvel/nodeIcons/ironl.svg": 813,
        "./marvel/nodeIcons/ironm.svg": 814,
        "./marvel/nodeIcons/ironmo.svg": 815,
        "./marvel/nodeIcons/jackr.svg": 816,
        "./marvel/nodeIcons/jacksonb.svg": 817,
        "./marvel/nodeIcons/jacksonn.svg": 818,
        "./marvel/nodeIcons/jackt.svg": 819,
        "./marvel/nodeIcons/jamesm.svg": 820,
        "./marvel/nodeIcons/janef.svg": 821,
        "./marvel/nodeIcons/jarvis.svg": 822,
        "./marvel/nodeIcons/jaspers.svg": 823,
        "./marvel/nodeIcons/jimm.svg": 824,
        "./marvel/nodeIcons/johanns.svg": 825,
        "./marvel/nodeIcons/jonathanp.svg": 826,
        "./marvel/nodeIcons/justinh.svg": 827,
        "./marvel/nodeIcons/kaecilius.svg": 828,
        "./marvel/nodeIcons/karlm.svg": 829,
        "./marvel/nodeIcons/korath.svg": 830,
        "./marvel/nodeIcons/korg.svg": 831,
        "./marvel/nodeIcons/kraglino.svg": 832,
        "./marvel/nodeIcons/krugarr.svg": 833,
        "./marvel/nodeIcons/kurse.svg": 834,
        "./marvel/nodeIcons/kurt.svg": 835,
        "./marvel/nodeIcons/laufey.svg": 836,
        "./marvel/nodeIcons/laurab.svg": 837,
        "./marvel/nodeIcons/leonards.svg": 838,
        "./marvel/nodeIcons/list.svg": 839,
        "./marvel/nodeIcons/lizt.svg": 840,
        "./marvel/nodeIcons/loki.svg": 841,
        "./marvel/nodeIcons/luis.svg": 842,
        "./marvel/nodeIcons/macg.svg": 843,
        "./marvel/nodeIcons/madameb.svg": 844,
        "./marvel/nodeIcons/maggiel.svg": 845,
        "./marvel/nodeIcons/mainf.svg": 846,
        "./marvel/nodeIcons/malekith.svg": 847,
        "./marvel/nodeIcons/mandarin.svg": 848,
        "./marvel/nodeIcons/mantis.svg": 849,
        "./marvel/nodeIcons/mariah.svg": 850,
        "./marvel/nodeIcons/marias.svg": 851,
        "./marvel/nodeIcons/martinex.svg": 852,
        "./marvel/nodeIcons/matthewe.svg": 853,
        "./marvel/nodeIcons/mayah.svg": 854,
        "./marvel/nodeIcons/mayp.svg": 855,
        "./marvel/nodeIcons/mbaku.svg": 856,
        "./marvel/nodeIcons/merchantt.svg": 857,
        "./marvel/nodeIcons/meredithq.svg": 858,
        "./marvel/nodeIcons/meredithqy.svg": 859,
        "./marvel/nodeIcons/michellej.svg": 860,
        "./marvel/nodeIcons/midnightp.svg": 861,
        "./marvel/nodeIcons/miek.svg": 862,
        "./marvel/nodeIcons/miningt.svg": 863,
        "./marvel/nodeIcons/nakia.svg": 864,
        "./marvel/nodeIcons/nebula.svg": 865,
        "./marvel/nodeIcons/nedl.svg": 866,
        "./marvel/nodeIcons/nickf.svg": 867,
        "./marvel/nodeIcons/njobu.svg": 868,
        "./marvel/nodeIcons/novac.svg": 869,
        "./marvel/nodeIcons/obadiahs.svg": 870,
        "./marvel/nodeIcons/obsidianc.svg": 871,
        "./marvel/nodeIcons/odin.svg": 872,
        "./marvel/nodeIcons/okoye.svg": 873,
        "./marvel/nodeIcons/other.svg": 874,
        "./marvel/nodeIcons/outrider.svg": 875,
        "./marvel/nodeIcons/peggyc.svg": 876,
        "./marvel/nodeIcons/pepperp.svg": 877,
        "./marvel/nodeIcons/peterp.svg": 878,
        "./marvel/nodeIcons/peterq.svg": 879,
        "./marvel/nodeIcons/philc.svg": 880,
        "./marvel/nodeIcons/phineasm.svg": 881,
        "./marvel/nodeIcons/pietrom.svg": 882,
        "./marvel/nodeIcons/principalm.svg": 883,
        "./marvel/nodeIcons/ramonda.svg": 884,
        "./marvel/nodeIcons/raza.svg": 885,
        "./marvel/nodeIcons/reds.svg": 886,
        "./marvel/nodeIcons/rhody.svg": 887,
        "./marvel/nodeIcons/rhomannd.svg": 888,
        "./marvel/nodeIcons/rivert.svg": 889,
        "./marvel/nodeIcons/rocket.svg": 890,
        "./marvel/nodeIcons/ronan.svg": 891,
        "./marvel/nodeIcons/samuels.svg": 892,
        "./marvel/nodeIcons/scottl.svg": 893,
        "./marvel/nodeIcons/scrapper.svg": 894,
        "./marvel/nodeIcons/sharonc.svg": 895,
        "./marvel/nodeIcons/shuri.svg": 896,
        "./marvel/nodeIcons/sif.svg": 897,
        "./marvel/nodeIcons/skurge.svg": 898,
        "./marvel/nodeIcons/sm1": 249,
        "./marvel/nodeIcons/sm1.png": 249,
        "./marvel/nodeIcons/spiderman.svg": 899,
        "./marvel/nodeIcons/stakaro.svg": 900,
        "./marvel/nodeIcons/stanlee.svg": 901,
        "./marvel/nodeIcons/stanleeam1.svg": 902,
        "./marvel/nodeIcons/stanleeav1.svg": 903,
        "./marvel/nodeIcons/stanleeav2.svg": 904,
        "./marvel/nodeIcons/stanleebp1.svg": 905,
        "./marvel/nodeIcons/stanleeca1.svg": 906,
        "./marvel/nodeIcons/stanleeca2.svg": 907,
        "./marvel/nodeIcons/stanleeca3.svg": 908,
        "./marvel/nodeIcons/stanleeds1.svg": 909,
        "./marvel/nodeIcons/stanleegotg1.svg": 910,
        "./marvel/nodeIcons/stanleegotg2.svg": 911,
        "./marvel/nodeIcons/stanleehk1.svg": 912,
        "./marvel/nodeIcons/stanleeim1.svg": 913,
        "./marvel/nodeIcons/stanleeim2.svg": 914,
        "./marvel/nodeIcons/stanleeim3.svg": 915,
        "./marvel/nodeIcons/stanleesm1.svg": 916,
        "./marvel/nodeIcons/stanleeth1.svg": 917,
        "./marvel/nodeIcons/stanleeth2.svg": 918,
        "./marvel/nodeIcons/stanleeth3.svg": 919,
        "./marvel/nodeIcons/starlord.svg": 920,
        "./marvel/nodeIcons/stephens.svg": 921,
        "./marvel/nodeIcons/stern.svg": 922,
        "./marvel/nodeIcons/stever.svg": 923,
        "./marvel/nodeIcons/surtur.svg": 924,
        "./marvel/nodeIcons/taserf.svg": 925,
        "./marvel/nodeIcons/tchaka.svg": 926,
        "./marvel/nodeIcons/tchakay.svg": 927,
        "./marvel/nodeIcons/tchalla.svg": 928,
        "./marvel/nodeIcons/th1": 250,
        "./marvel/nodeIcons/th1.png": 250,
        "./marvel/nodeIcons/th2": 251,
        "./marvel/nodeIcons/th2.png": 251,
        "./marvel/nodeIcons/th3": 252,
        "./marvel/nodeIcons/th3.png": 252,
        "./marvel/nodeIcons/thanos.svg": 929,
        "./marvel/nodeIcons/thanosa.svg": 930,
        "./marvel/nodeIcons/thor.svg": 931,
        "./marvel/nodeIcons/thorlh.svg": 932,
        "./marvel/nodeIcons/thunderboltr.svg": 933,
        "./marvel/nodeIcons/tonys-trim.svg": 934,
        "./marvel/nodeIcons/tonys.svg": 935,
        "./marvel/nodeIcons/topaz.svg": 936,
        "./marvel/nodeIcons/trevors.svg": 937,
        "./marvel/nodeIcons/ultron1.svg": 938,
        "./marvel/nodeIcons/ultronp.svg": 939,
        "./marvel/nodeIcons/ultrons.svg": 940,
        "./marvel/nodeIcons/ultronu.svg": 941,
        "./marvel/nodeIcons/ulyssesk.svg": 942,
        "./marvel/nodeIcons/valk.svg": 943,
        "./marvel/nodeIcons/vision.svg": 944,
        "./marvel/nodeIcons/volstagg.svg": 945,
        "./marvel/nodeIcons/vulture.svg": 946,
        "./marvel/nodeIcons/wandam.svg": 947,
        "./marvel/nodeIcons/warm.svg": 948,
        "./marvel/nodeIcons/wasp.svg": 949,
        "./marvel/nodeIcons/whiplash.svg": 950,
        "./marvel/nodeIcons/winters.svg": 951,
        "./marvel/nodeIcons/wkabi.svg": 952,
        "./marvel/nodeIcons/wolfgangv.svg": 953,
        "./marvel/nodeIcons/wong.svg": 954,
        "./marvel/nodeIcons/yellowj.svg": 955,
        "./marvel/nodeIcons/yinsen.svg": 956,
        "./marvel/nodeIcons/yonduu.svg": 957,
        "./marvel/nodeIcons/zuri.svg": 958,
        "./marvel/nodeIcons/zuriy.svg": 959,
        "./marvel/screenshots/aarond.": 253,
        "./marvel/screenshots/aarond.jpg": 253,
        "./marvel/screenshots/abomination.": 254,
        "./marvel/screenshots/abomination.jpg": 254,
        "./marvel/screenshots/abrahame.": 255,
        "./marvel/screenshots/abrahame.jpg": 255,
        "./marvel/screenshots/abub.": 256,
        "./marvel/screenshots/abub.jpg": 256,
        "./marvel/screenshots/adriant.": 257,
        "./marvel/screenshots/adriant.jpg": 257,
        "./marvel/screenshots/aldrichk.": 258,
        "./marvel/screenshots/aldrichk.jpg": 258,
        "./marvel/screenshots/aletao.": 259,
        "./marvel/screenshots/aletao.jpg": 259,
        "./marvel/screenshots/alexanderp.": 260,
        "./marvel/screenshots/alexanderp.jpg": 260,
        "./marvel/screenshots/algrim.": 261,
        "./marvel/screenshots/algrim.jpg": 261,
        "./marvel/screenshots/anciento.": 262,
        "./marvel/screenshots/anciento.jpg": 262,
        "./marvel/screenshots/annem.": 263,
        "./marvel/screenshots/annem.jpg": 263,
        "./marvel/screenshots/antman.": 264,
        "./marvel/screenshots/antman.jpg": 264,
        "./marvel/screenshots/antonvo.": 265,
        "./marvel/screenshots/antonvo.jpg": 265,
        "./marvel/screenshots/antonvy.": 266,
        "./marvel/screenshots/antonvy.jpg": 266,
        "./marvel/screenshots/arnimz.": 267,
        "./marvel/screenshots/arnimz.jpg": 267,
        "./marvel/screenshots/asgardian.": 268,
        "./marvel/screenshots/asgardian.jpg": 268,
        "./marvel/screenshots/ayesha.": 269,
        "./marvel/screenshots/ayesha.jpg": 269,
        "./marvel/screenshots/bettyb.": 270,
        "./marvel/screenshots/bettyb.jpg": 270,
        "./marvel/screenshots/bettyr.": 271,
        "./marvel/screenshots/bettyr.jpg": 271,
        "./marvel/screenshots/blackp.": 272,
        "./marvel/screenshots/blackp.jpg": 272,
        "./marvel/screenshots/blackpk.": 273,
        "./marvel/screenshots/blackpk.jpg": 273,
        "./marvel/screenshots/blackw.": 274,
        "./marvel/screenshots/blackw.jpg": 274,
        "./marvel/screenshots/blackwca3.": 275,
        "./marvel/screenshots/blackwca3.jpg": 275,
        "./marvel/screenshots/bor.": 276,
        "./marvel/screenshots/bor.jpg": 276,
        "./marvel/screenshots/brockr.": 277,
        "./marvel/screenshots/brockr.jpg": 277,
        "./marvel/screenshots/bruceb.": 278,
        "./marvel/screenshots/bruceb.jpg": 278,
        "./marvel/screenshots/bucky.": 279,
        "./marvel/screenshots/bucky.jpg": 279,
        "./marvel/screenshots/capta.": 280,
        "./marvel/screenshots/capta.jpg": 280,
        "./marvel/screenshots/carina.": 281,
        "./marvel/screenshots/carina.jpg": 281,
        "./marvel/screenshots/cassiel.": 282,
        "./marvel/screenshots/cassiel.jpg": 282,
        "./marvel/screenshots/charlie.": 283,
        "./marvel/screenshots/charlie.jpg": 283,
        "./marvel/screenshots/chesterp.": 284,
        "./marvel/screenshots/chesterp.jpg": 284,
        "./marvel/screenshots/chitauri.": 285,
        "./marvel/screenshots/chitauri.jpg": 285,
        "./marvel/screenshots/christinee.": 286,
        "./marvel/screenshots/christinee.jpg": 286,
        "./marvel/screenshots/christinep.": 287,
        "./marvel/screenshots/christinep.jpg": 287,
        "./marvel/screenshots/collector.": 288,
        "./marvel/screenshots/collector.jpg": 288,
        "./marvel/screenshots/cosmo.": 289,
        "./marvel/screenshots/cosmo.jpg": 289,
        "./marvel/screenshots/crossb.": 290,
        "./marvel/screenshots/crossb.jpg": 290,
        "./marvel/screenshots/darcyl.": 291,
        "./marvel/screenshots/darcyl.jpg": 291,
        "./marvel/screenshots/darkelf.": 292,
        "./marvel/screenshots/darkelf.jpg": 292,
        "./marvel/screenshots/darrenc.": 293,
        "./marvel/screenshots/darrenc.jpg": 293,
        "./marvel/screenshots/dave.": 294,
        "./marvel/screenshots/dave.jpg": 294,
        "./marvel/screenshots/destroyer.": 295,
        "./marvel/screenshots/destroyer.jpg": 295,
        "./marvel/screenshots/dormammu.": 296,
        "./marvel/screenshots/dormammu.jpg": 296,
        "./marvel/screenshots/drax.": 297,
        "./marvel/screenshots/drax.jpg": 297,
        "./marvel/screenshots/dumdum.": 298,
        "./marvel/screenshots/dumdum.jpg": 298,
        "./marvel/screenshots/ego.": 299,
        "./marvel/screenshots/ego.jpg": 299,
        "./marvel/screenshots/ellenb.": 300,
        "./marvel/screenshots/ellenb.jpg": 300,
        "./marvel/screenshots/emilb.": 301,
        "./marvel/screenshots/emilb.jpg": 301,
        "./marvel/screenshots/erics.": 302,
        "./marvel/screenshots/erics.jpg": 302,
        "./marvel/screenshots/erikk.": 303,
        "./marvel/screenshots/erikk.jpg": 303,
        "./marvel/screenshots/eriks.": 304,
        "./marvel/screenshots/eriks.jpg": 304,
        "./marvel/screenshots/eugenet.": 305,
        "./marvel/screenshots/eugenet.jpg": 305,
        "./marvel/screenshots/everettr.": 306,
        "./marvel/screenshots/everettr.jpg": 306,
        "./marvel/screenshots/falcon.": 307,
        "./marvel/screenshots/falcon.jpg": 307,
        "./marvel/screenshots/fandral.": 308,
        "./marvel/screenshots/fandral.jpg": 308,
        "./marvel/screenshots/fenris.": 309,
        "./marvel/screenshots/fenris.jpg": 309,
        "./marvel/screenshots/frigga.": 310,
        "./marvel/screenshots/frigga.jpg": 310,
        "./marvel/screenshots/gabej.": 311,
        "./marvel/screenshots/gabej.jpg": 311,
        "./marvel/screenshots/gamora.": 312,
        "./marvel/screenshots/gamora.jpg": 312,
        "./marvel/screenshots/garthans.": 313,
        "./marvel/screenshots/garthans.jpg": 313,
        "./marvel/screenshots/georgesb.": 314,
        "./marvel/screenshots/georgesb.jpg": 314,
        "./marvel/screenshots/grandm.": 315,
        "./marvel/screenshots/grandm.jpg": 315,
        "./marvel/screenshots/groota.": 316,
        "./marvel/screenshots/groota.jpg": 316,
        "./marvel/screenshots/grootb.": 317,
        "./marvel/screenshots/grootb.jpg": 317,
        "./marvel/screenshots/grootp.": 318,
        "./marvel/screenshots/grootp.jpg": 318,
        "./marvel/screenshots/groott.": 319,
        "./marvel/screenshots/groott.jpg": 319,
        "./marvel/screenshots/hamir.": 320,
        "./marvel/screenshots/hamir.jpg": 320,
        "./marvel/screenshots/hankp.": 321,
        "./marvel/screenshots/hankp.jpg": 321,
        "./marvel/screenshots/happyh.": 322,
        "./marvel/screenshots/happyh.jpg": 322,
        "./marvel/screenshots/harleyk.": 323,
        "./marvel/screenshots/harleyk.jpg": 323,
        "./marvel/screenshots/hawke.": 324,
        "./marvel/screenshots/hawke.jpg": 324,
        "./marvel/screenshots/heimdall.": 325,
        "./marvel/screenshots/heimdall.jpg": 325,
        "./marvel/screenshots/heimdallh.": 326,
        "./marvel/screenshots/heimdallh.jpg": 326,
        "./marvel/screenshots/hela.": 327,
        "./marvel/screenshots/hela.jpg": 327,
        "./marvel/screenshots/helenc.": 328,
        "./marvel/screenshots/helenc.jpg": 328,
        "./marvel/screenshots/helmutz.": 329,
        "./marvel/screenshots/helmutz.jpg": 329,
        "./marvel/screenshots/hermans.": 330,
        "./marvel/screenshots/hermans.jpg": 330,
        "./marvel/screenshots/hogun.": 331,
        "./marvel/screenshots/hogun.jpg": 331,
        "./marvel/screenshots/hopev.": 332,
        "./marvel/screenshots/hopev.jpg": 332,
        "./marvel/screenshots/howardd.": 333,
        "./marvel/screenshots/howardd.jpg": 333,
        "./marvel/screenshots/howardso.": 334,
        "./marvel/screenshots/howardso.jpg": 334,
        "./marvel/screenshots/howardsy.": 335,
        "./marvel/screenshots/howardsy.jpg": 335,
        "./marvel/screenshots/hulk.": 336,
        "./marvel/screenshots/hulk.jpg": 336,
        "./marvel/screenshots/hulkg.": 337,
        "./marvel/screenshots/hulkg.jpg": 337,
        "./marvel/screenshots/iranir.": 338,
        "./marvel/screenshots/iranir.jpg": 338,
        "./marvel/screenshots/ironl.": 339,
        "./marvel/screenshots/ironl.jpg": 339,
        "./marvel/screenshots/ironm.": 340,
        "./marvel/screenshots/ironm.jpg": 340,
        "./marvel/screenshots/ironmo.": 341,
        "./marvel/screenshots/ironmo.jpg": 341,
        "./marvel/screenshots/jackr.": 342,
        "./marvel/screenshots/jackr.jpg": 342,
        "./marvel/screenshots/jacksonb.": 343,
        "./marvel/screenshots/jacksonb.jpg": 343,
        "./marvel/screenshots/jacksonn.": 344,
        "./marvel/screenshots/jacksonn.jpg": 344,
        "./marvel/screenshots/jackt.": 345,
        "./marvel/screenshots/jackt.jpg": 345,
        "./marvel/screenshots/jamesm.": 346,
        "./marvel/screenshots/jamesm.jpg": 346,
        "./marvel/screenshots/janef.": 347,
        "./marvel/screenshots/janef.jpg": 347,
        "./marvel/screenshots/jarvis.": 348,
        "./marvel/screenshots/jarvis.jpg": 348,
        "./marvel/screenshots/jaspers.": 349,
        "./marvel/screenshots/jaspers.jpg": 349,
        "./marvel/screenshots/jimm.": 350,
        "./marvel/screenshots/jimm.jpg": 350,
        "./marvel/screenshots/johanns.": 351,
        "./marvel/screenshots/johanns.jpg": 351,
        "./marvel/screenshots/jonathanp.": 352,
        "./marvel/screenshots/jonathanp.jpg": 352,
        "./marvel/screenshots/justinh.": 353,
        "./marvel/screenshots/justinh.jpg": 353,
        "./marvel/screenshots/kaecilius.": 354,
        "./marvel/screenshots/kaecilius.jpg": 354,
        "./marvel/screenshots/karlm.": 355,
        "./marvel/screenshots/karlm.jpg": 355,
        "./marvel/screenshots/korath.": 356,
        "./marvel/screenshots/korath.jpg": 356,
        "./marvel/screenshots/korg.": 357,
        "./marvel/screenshots/korg.jpg": 357,
        "./marvel/screenshots/kraglino.": 358,
        "./marvel/screenshots/kraglino.jpg": 358,
        "./marvel/screenshots/krugarr.": 359,
        "./marvel/screenshots/krugarr.jpg": 359,
        "./marvel/screenshots/kurse.": 360,
        "./marvel/screenshots/kurse.jpg": 360,
        "./marvel/screenshots/kurt.": 361,
        "./marvel/screenshots/kurt.jpg": 361,
        "./marvel/screenshots/laufey.": 362,
        "./marvel/screenshots/laufey.jpg": 362,
        "./marvel/screenshots/laurab.": 363,
        "./marvel/screenshots/laurab.jpg": 363,
        "./marvel/screenshots/leonards.": 364,
        "./marvel/screenshots/leonards.jpg": 364,
        "./marvel/screenshots/list.": 365,
        "./marvel/screenshots/list.jpg": 365,
        "./marvel/screenshots/lizt.": 366,
        "./marvel/screenshots/lizt.jpg": 366,
        "./marvel/screenshots/loki.": 367,
        "./marvel/screenshots/loki.jpg": 367,
        "./marvel/screenshots/luis.": 368,
        "./marvel/screenshots/luis.jpg": 368,
        "./marvel/screenshots/macg.": 369,
        "./marvel/screenshots/macg.jpg": 369,
        "./marvel/screenshots/madameb.": 370,
        "./marvel/screenshots/madameb.jpg": 370,
        "./marvel/screenshots/maggiel.": 371,
        "./marvel/screenshots/maggiel.jpg": 371,
        "./marvel/screenshots/mainf.": 372,
        "./marvel/screenshots/mainf.jpg": 372,
        "./marvel/screenshots/malekith.": 373,
        "./marvel/screenshots/malekith.jpg": 373,
        "./marvel/screenshots/mandarin.": 374,
        "./marvel/screenshots/mandarin.jpg": 374,
        "./marvel/screenshots/mantis.": 375,
        "./marvel/screenshots/mantis.jpg": 375,
        "./marvel/screenshots/mariah.": 376,
        "./marvel/screenshots/mariah.jpg": 376,
        "./marvel/screenshots/marias.": 377,
        "./marvel/screenshots/marias.jpg": 377,
        "./marvel/screenshots/martinex.": 378,
        "./marvel/screenshots/martinex.jpg": 378,
        "./marvel/screenshots/matthewe.": 379,
        "./marvel/screenshots/matthewe.jpg": 379,
        "./marvel/screenshots/mayah.": 380,
        "./marvel/screenshots/mayah.jpg": 380,
        "./marvel/screenshots/mayp.": 381,
        "./marvel/screenshots/mayp.jpg": 381,
        "./marvel/screenshots/mbaku.": 382,
        "./marvel/screenshots/mbaku.jpg": 382,
        "./marvel/screenshots/meredithq.": 383,
        "./marvel/screenshots/meredithq.jpg": 383,
        "./marvel/screenshots/meredithqy.": 384,
        "./marvel/screenshots/meredithqy.jpg": 384,
        "./marvel/screenshots/michellej.": 385,
        "./marvel/screenshots/michellej.jpg": 385,
        "./marvel/screenshots/miek.": 386,
        "./marvel/screenshots/miek.jpg": 386,
        "./marvel/screenshots/miningt.": 387,
        "./marvel/screenshots/miningt.jpg": 387,
        "./marvel/screenshots/nakia.": 388,
        "./marvel/screenshots/nakia.jpg": 388,
        "./marvel/screenshots/nebula.": 389,
        "./marvel/screenshots/nebula.jpg": 389,
        "./marvel/screenshots/nedl.": 390,
        "./marvel/screenshots/nedl.jpg": 390,
        "./marvel/screenshots/nickf.": 391,
        "./marvel/screenshots/nickf.jpg": 391,
        "./marvel/screenshots/njobu.": 392,
        "./marvel/screenshots/njobu.jpg": 392,
        "./marvel/screenshots/novac.": 393,
        "./marvel/screenshots/novac.jpg": 393,
        "./marvel/screenshots/obadiahs.": 394,
        "./marvel/screenshots/obadiahs.jpg": 394,
        "./marvel/screenshots/odin.": 395,
        "./marvel/screenshots/odin.jpg": 395,
        "./marvel/screenshots/okoye.": 396,
        "./marvel/screenshots/okoye.jpg": 396,
        "./marvel/screenshots/other.": 397,
        "./marvel/screenshots/other.jpg": 397,
        "./marvel/screenshots/peggyc.": 398,
        "./marvel/screenshots/peggyc.jpg": 398,
        "./marvel/screenshots/pepperp.": 399,
        "./marvel/screenshots/pepperp.jpg": 399,
        "./marvel/screenshots/peterp.": 400,
        "./marvel/screenshots/peterp.jpg": 400,
        "./marvel/screenshots/peterq.": 401,
        "./marvel/screenshots/peterq.jpg": 401,
        "./marvel/screenshots/philc.": 402,
        "./marvel/screenshots/philc.jpg": 402,
        "./marvel/screenshots/phineasm.": 403,
        "./marvel/screenshots/phineasm.jpg": 403,
        "./marvel/screenshots/pietrom.": 404,
        "./marvel/screenshots/pietrom.jpg": 404,
        "./marvel/screenshots/principalm.": 405,
        "./marvel/screenshots/principalm.jpg": 405,
        "./marvel/screenshots/ramonda.": 406,
        "./marvel/screenshots/ramonda.jpg": 406,
        "./marvel/screenshots/raza.": 407,
        "./marvel/screenshots/raza.jpg": 407,
        "./marvel/screenshots/reds.": 408,
        "./marvel/screenshots/reds.jpg": 408,
        "./marvel/screenshots/rhody.": 409,
        "./marvel/screenshots/rhody.jpg": 409,
        "./marvel/screenshots/rhomannd.": 410,
        "./marvel/screenshots/rhomannd.jpg": 410,
        "./marvel/screenshots/rivert.": 411,
        "./marvel/screenshots/rivert.jpg": 411,
        "./marvel/screenshots/rocket.": 412,
        "./marvel/screenshots/rocket.jpg": 412,
        "./marvel/screenshots/ronan.": 413,
        "./marvel/screenshots/ronan.jpg": 413,
        "./marvel/screenshots/samuels.": 414,
        "./marvel/screenshots/samuels.jpg": 414,
        "./marvel/screenshots/scottl.": 415,
        "./marvel/screenshots/scottl.jpg": 415,
        "./marvel/screenshots/scrapper.": 416,
        "./marvel/screenshots/scrapper.jpg": 416,
        "./marvel/screenshots/sharonc.": 417,
        "./marvel/screenshots/sharonc.jpg": 417,
        "./marvel/screenshots/shuri.": 418,
        "./marvel/screenshots/shuri.jpg": 418,
        "./marvel/screenshots/sif.": 419,
        "./marvel/screenshots/sif.jpg": 419,
        "./marvel/screenshots/skurge.": 420,
        "./marvel/screenshots/skurge.jpg": 420,
        "./marvel/screenshots/spiderman.": 421,
        "./marvel/screenshots/spiderman.jpg": 421,
        "./marvel/screenshots/stakaro.": 422,
        "./marvel/screenshots/stakaro.jpg": 422,
        "./marvel/screenshots/stanlee.": 423,
        "./marvel/screenshots/stanlee.jpg": 423,
        "./marvel/screenshots/starlord.": 424,
        "./marvel/screenshots/starlord.jpg": 424,
        "./marvel/screenshots/stephens.": 425,
        "./marvel/screenshots/stephens.jpg": 425,
        "./marvel/screenshots/stern.": 426,
        "./marvel/screenshots/stern.jpg": 426,
        "./marvel/screenshots/stever.": 427,
        "./marvel/screenshots/stever.jpg": 427,
        "./marvel/screenshots/surtur.": 428,
        "./marvel/screenshots/surtur.jpg": 428,
        "./marvel/screenshots/taserf.": 429,
        "./marvel/screenshots/taserf.jpg": 429,
        "./marvel/screenshots/tchaka.": 430,
        "./marvel/screenshots/tchaka.jpg": 430,
        "./marvel/screenshots/tchalla.": 431,
        "./marvel/screenshots/tchalla.jpg": 431,
        "./marvel/screenshots/thanos.": 432,
        "./marvel/screenshots/thanos.jpg": 432,
        "./marvel/screenshots/thanosa.": 433,
        "./marvel/screenshots/thanosa.jpg": 433,
        "./marvel/screenshots/thor.": 434,
        "./marvel/screenshots/thor.jpg": 434,
        "./marvel/screenshots/thorlh.": 435,
        "./marvel/screenshots/thorlh.jpg": 435,
        "./marvel/screenshots/thunderboltr.": 436,
        "./marvel/screenshots/thunderboltr.jpg": 436,
        "./marvel/screenshots/tonys.": 437,
        "./marvel/screenshots/tonys.jpg": 437,
        "./marvel/screenshots/topaz.": 438,
        "./marvel/screenshots/topaz.jpg": 438,
        "./marvel/screenshots/trevors.": 439,
        "./marvel/screenshots/trevors.jpg": 439,
        "./marvel/screenshots/ultron1.": 440,
        "./marvel/screenshots/ultron1.jpg": 440,
        "./marvel/screenshots/ultronp.": 441,
        "./marvel/screenshots/ultronp.jpg": 441,
        "./marvel/screenshots/ultrons.": 442,
        "./marvel/screenshots/ultrons.jpg": 442,
        "./marvel/screenshots/ultronu.": 443,
        "./marvel/screenshots/ultronu.jpg": 443,
        "./marvel/screenshots/ulyssesk.": 444,
        "./marvel/screenshots/ulyssesk.jpg": 444,
        "./marvel/screenshots/valk.": 445,
        "./marvel/screenshots/valk.jpg": 445,
        "./marvel/screenshots/vision.": 446,
        "./marvel/screenshots/vision.jpg": 446,
        "./marvel/screenshots/volstagg.": 447,
        "./marvel/screenshots/volstagg.jpg": 447,
        "./marvel/screenshots/vulture.": 448,
        "./marvel/screenshots/vulture.jpg": 448,
        "./marvel/screenshots/wandam.": 449,
        "./marvel/screenshots/wandam.jpg": 449,
        "./marvel/screenshots/warm.": 450,
        "./marvel/screenshots/warm.jpg": 450,
        "./marvel/screenshots/whiplash.": 451,
        "./marvel/screenshots/whiplash.jpg": 451,
        "./marvel/screenshots/winters.": 452,
        "./marvel/screenshots/winters.jpg": 452,
        "./marvel/screenshots/wkabi.": 453,
        "./marvel/screenshots/wkabi.jpg": 453,
        "./marvel/screenshots/wolfgangv.": 454,
        "./marvel/screenshots/wolfgangv.jpg": 454,
        "./marvel/screenshots/wong.": 455,
        "./marvel/screenshots/wong.jpg": 455,
        "./marvel/screenshots/yellowj.": 456,
        "./marvel/screenshots/yellowj.jpg": 456,
        "./marvel/screenshots/yinsen.": 457,
        "./marvel/screenshots/yinsen.jpg": 457,
        "./marvel/screenshots/yonduu.": 458,
        "./marvel/screenshots/yonduu.jpg": 458,
        "./marvel/screenshots/zuri.": 459,
        "./marvel/screenshots/zuri.jpg": 459,
        "./marvel/skybox1/marvel_back6": 460,
        "./marvel/skybox1/marvel_back6-mobile": 461,
        "./marvel/skybox1/marvel_back6-mobile.png": 461,
        "./marvel/skybox1/marvel_back6.png": 460,
        "./marvel/skybox1/marvel_bottom4": 462,
        "./marvel/skybox1/marvel_bottom4-mobile": 463,
        "./marvel/skybox1/marvel_bottom4-mobile.png": 463,
        "./marvel/skybox1/marvel_bottom4.png": 462,
        "./marvel/skybox1/marvel_front5": 464,
        "./marvel/skybox1/marvel_front5-mobile": 465,
        "./marvel/skybox1/marvel_front5-mobile.png": 465,
        "./marvel/skybox1/marvel_front5.png": 464,
        "./marvel/skybox1/marvel_left2": 466,
        "./marvel/skybox1/marvel_left2-mobile": 467,
        "./marvel/skybox1/marvel_left2-mobile.png": 467,
        "./marvel/skybox1/marvel_left2.png": 466,
        "./marvel/skybox1/marvel_right1": 468,
        "./marvel/skybox1/marvel_right1-mobile": 469,
        "./marvel/skybox1/marvel_right1-mobile.png": 469,
        "./marvel/skybox1/marvel_right1.png": 468,
        "./marvel/skybox1/marvel_top3": 470,
        "./marvel/skybox1/marvel_top3-mobile": 471,
        "./marvel/skybox1/marvel_top3-mobile.png": 471,
        "./marvel/skybox1/marvel_top3.png": 470,
        "./template/image-background-header-mobile.": 472,
        "./template/image-background-header-mobile.jpg": 472,
        "./template/image-background-header.": 473,
        "./template/image-background-header.jpg": 473,
        "./template/sample-image": 474,
        "./template/sample-image-mobile": 475,
        "./template/sample-image-mobile.png": 475,
        "./template/sample-image.png": 474
    };
    r.keys = function() {
        return Object.keys(o)
    }
    ,
    r.resolve = i,
    t.exports = r,
    r.id = 148
}
, , , , , function(t, e, n) {
    "use strict";
    e.a = function() {
        return 1e-6 * (Math.random() - .5)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e, n) {
        this.node = t,
        this.x0 = e,
        this.x1 = n
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e, n, r, i) {
        this.node = t,
        this.x0 = e,
        this.y0 = n,
        this.x1 = r,
        this.y1 = i
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e, n, r, i, o, a) {
        this.node = t,
        this.x0 = e,
        this.y0 = n,
        this.z0 = r,
        this.x1 = i,
        this.y1 = o,
        this.z1 = a
    }
}
, function(t, e) {
    function n(t, e) {
        this.pos = new r(t,e),
        this.prevPos = new r(t,e),
        this.force = new r,
        this.velocity = new r,
        this.mass = 1
    }
    function r(t, e) {
        t && "number" != typeof t ? (this.x = "number" == typeof t.x ? t.x : 0,
        this.y = "number" == typeof t.y ? t.y : 0) : (this.x = "number" == typeof t ? t : 0,
        this.y = "number" == typeof e ? e : 0)
    }
    function i(t, e, n) {
        this.pos = new o(t,e,n),
        this.prevPos = new o(t,e,n),
        this.force = new o,
        this.velocity = new o,
        this.mass = 1
    }
    function o(t, e, n) {
        t && "number" != typeof t ? (this.x = "number" == typeof t.x ? t.x : 0,
        this.y = "number" == typeof t.y ? t.y : 0,
        this.z = "number" == typeof t.z ? t.z : 0) : (this.x = "number" == typeof t ? t : 0,
        this.y = "number" == typeof e ? e : 0,
        this.z = "number" == typeof n ? n : 0)
    }
    t.exports = {
        Body: n,
        Vector2d: r,
        Body3d: i,
        Vector3d: o
    },
    n.prototype.setPosition = function(t, e) {
        this.prevPos.x = this.pos.x = t,
        this.prevPos.y = this.pos.y = e
    }
    ,
    r.prototype.reset = function() {
        this.x = this.y = 0
    }
    ,
    i.prototype.setPosition = function(t, e, n) {
        this.prevPos.x = this.pos.x = t,
        this.prevPos.y = this.pos.y = e,
        this.prevPos.z = this.pos.z = n
    }
    ,
    o.prototype.reset = function() {
        this.x = this.y = this.z = 0
    }
}
, function(t, e, n) {
    !function(e, n) {
        t.exports = n()
    }("undefined" != typeof self && self, function() {
        return function(t) {
            function e(r) {
                if (n[r])
                    return n[r].exports;
                var i = n[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return t[r].call(i.exports, i, i.exports, e),
                i.l = !0,
                i.exports
            }
            var n = {};
            return e.m = t,
            e.c = n,
            e.d = function(t, n, r) {
                e.o(t, n) || Object.defineProperty(t, n, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }
            ,
            e.n = function(t) {
                var n = t && t.__esModule ? function() {
                    return t.default
                }
                : function() {
                    return t
                }
                ;
                return e.d(n, "a", n),
                n
            }
            ,
            e.o = function(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }
            ,
            e.p = "",
            e(e.s = 0)
        }([function(t, e, n) {
            var r, i, o;
            a = function(t, e, n) {
                "use strict";
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.default = function(t) {
                    var e = t.stateInit
                      , n = void 0 === e ? function() {
                        return {}
                    }
                    : e
                      , r = t.props
                      , s = void 0 === r ? {} : r
                      , c = t.methods
                      , l = void 0 === c ? {} : c
                      , u = t.aliases
                      , h = void 0 === u ? {} : u
                      , d = t.init
                      , p = void 0 === d ? function() {}
                    : d
                      , f = t.update
                      , m = void 0 === f ? function() {}
                    : f
                      , v = Object.keys(s).map(function(t) {
                        return new a(t,s[t])
                    });
                    return function() {
                        function t(n) {
                            return a(n, e),
                            s(),
                            t
                        }
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                          , r = Object.assign({}, n instanceof Function ? n() : n, {
                            initialised: !1
                        })
                          , a = function(e, n) {
                            p.call(t, e, r, n),
                            r.initialised = !0
                        }
                          , s = (0,
                        i.default)(function() {
                            r.initialised && m.call(t, r)
                        }, 1);
                        return v.forEach(function(e) {
                            t[e.name] = function(e) {
                                var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                                  , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(t, e) {}
                                ;
                                return function(o) {
                                    return arguments.length ? (r[e] = o,
                                    i.call(t, o, r),
                                    n && s(),
                                    t) : r[e]
                                }
                            }(e.name, e.triggerUpdate, e.onChange)
                        }),
                        Object.keys(l).forEach(function(e) {
                            t[e] = function() {
                                for (var n, i = arguments.length, o = Array(i), a = 0; a < i; a++)
                                    o[a] = arguments[a];
                                return (n = l[e]).call.apply(n, [t, r].concat(o))
                            }
                        }),
                        Object.entries(h).forEach(function(e) {
                            var n = o(e, 2)
                              , r = n[0]
                              , i = n[1];
                            return t[r] = t[i]
                        }),
                        t.resetProps = function() {
                            return v.forEach(function(e) {
                                t[e.name](e.defaultVal)
                            }),
                            t
                        }
                        ,
                        t.resetProps(),
                        r._rerender = s,
                        t
                    }
                }
                ;
                var r, i = (r = n,
                r && r.__esModule ? r : {
                    default: r
                }), o = function() {
                    return function(t, e) {
                        if (Array.isArray(t))
                            return t;
                        if (Symbol.iterator in Object(t))
                            return function(t, e) {
                                var n = []
                                  , r = !0
                                  , i = !1
                                  , o = void 0;
                                try {
                                    for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value),
                                    !e || n.length !== e); r = !0)
                                        ;
                                } catch (t) {
                                    i = !0,
                                    o = t
                                } finally {
                                    try {
                                        !r && s.return && s.return()
                                    } finally {
                                        if (i)
                                            throw o
                                    }
                                }
                                return n
                            }(t, e);
                        throw new TypeError("Invalid attempt to destructure non-iterable instance")
                    }
                }(), a = function t(e, n) {
                    var r = n.default
                      , i = void 0 === r ? null : r
                      , o = n.triggerUpdate
                      , a = void 0 === o || o
                      , s = n.onChange
                      , c = void 0 === s ? function(t, e) {}
                    : s;
                    !function(t, e) {
                        if (!(t instanceof e))
                            throw new TypeError("Cannot call a class as a function")
                    }(this, t),
                    this.name = e,
                    this.defaultVal = i,
                    this.triggerUpdate = a,
                    this.onChange = c
                };
                t.exports = e.default
            }
            ,
            i = [t, e, n(1)],
            void 0 === (o = "function" == typeof (r = a) ? r.apply(e, i) : r) || (t.exports = o);
            var a
        }
        , function(t, e) {
            t.exports = function(t, e, n) {
                function r() {
                    var l = Date.now() - s;
                    l < e && l >= 0 ? i = setTimeout(r, e - l) : (i = null,
                    n || (c = t.apply(a, o),
                    a = o = null))
                }
                var i, o, a, s, c;
                null == e && (e = 100);
                var l = function() {
                    a = this,
                    o = arguments,
                    s = Date.now();
                    var l = n && !i;
                    return i || (i = setTimeout(r, e)),
                    l && (c = t.apply(a, o),
                    a = o = null),
                    c
                };
                return l.clear = function() {
                    i && (clearTimeout(i),
                    i = null)
                }
                ,
                l.flush = function() {
                    i && (c = t.apply(a, o),
                    a = o = null,
                    clearTimeout(i),
                    i = null)
                }
                ,
                l
            }
        }
        ])
    })
}
, function(t, e, n) {
    !function(e, n) {
        t.exports = n()
    }(0, function() {
        return function(t) {
            function e(r) {
                if (n[r])
                    return n[r].exports;
                var i = n[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return t[r].call(i.exports, i, i.exports, e),
                i.l = !0,
                i.exports
            }
            var n = {};
            return e.m = t,
            e.c = n,
            e.d = function(t, n, r) {
                e.o(t, n) || Object.defineProperty(t, n, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }
            ,
            e.n = function(t) {
                var n = t && t.__esModule ? function() {
                    return t.default
                }
                : function() {
                    return t
                }
                ;
                return e.d(n, "a", n),
                n
            }
            ,
            e.o = function(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }
            ,
            e.p = "",
            e(e.s = 0)
        }([function(t, e, n) {
            var r, i, o;
            !function(n, a) {
                i = [t, e],
                void 0 !== (o = "function" == typeof (r = a) ? r.apply(e, i) : r) && (t.exports = o)
            }(0, function(t, e) {
                "use strict";
                Object.defineProperty(e, "__esModule", {
                    value: !0
                }),
                e.default = function(t) {
                    return t instanceof Function ? t : "string" == typeof t ? function(e) {
                        return e[t]
                    }
                    : function(e) {
                        return t
                    }
                }
                ,
                t.exports = e.default
            })
        }
        ])
    })
}
, function(t, e, n) {
    "use strict";
    e.__esModule = !0;
    var r = n(72)
      , i = function(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }(r);
    e.default = function(t, e) {
        if (!t)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !e || "object" !== (void 0 === e ? "undefined" : (0,
        i.default)(e)) && "function" != typeof e ? t : e
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    e.__esModule = !0;
    var i = n(502)
      , o = r(i)
      , a = n(503)
      , s = r(a)
      , c = n(72)
      , l = r(c);
    e.default = function(t, e) {
        if ("function" != typeof e && null !== e)
            throw new TypeError("Super expression must either be null or a function, not " + (void 0 === e ? "undefined" : (0,
            l.default)(e)));
        t.prototype = (0,
        s.default)(e && e.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        e && (o.default ? (0,
        o.default)(t, e) : t.__proto__ = e)
    }
}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
    t.exports = !n(49) && !n(70)(function() {
        return 7 != Object.defineProperty(n(125)("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    })
}
, function(t, e, n) {
    var r = n(57)
      , i = n(71)
      , o = n(566)(!1)
      , a = n(129)("IE_PROTO");
    t.exports = function(t, e) {
        var n, s = i(t), c = 0, l = [];
        for (n in s)
            n != a && r(s, n) && l.push(n);
        for (; e.length > c; )
            r(s, n = e[c++]) && (~o(l, n) || l.push(n));
        return l
    }
}
, function(t, e, n) {
    var r = n(86);
    t.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t) {
        return "String" == r(t) ? t.split("") : Object(t)
    }
}
, function(t, e, n) {
    var r = n(128)
      , i = Math.min;
    t.exports = function(t) {
        return t > 0 ? i(r(t), 9007199254740991) : 0
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(570)(!0);
    n(195)(String, "String", function(t) {
        this._t = String(t),
        this._i = 0
    }, function() {
        var t, e = this._t, n = this._i;
        return n >= e.length ? {
            value: void 0,
            done: !0
        } : (t = r(e, n),
        this._i += t.length,
        {
            value: t,
            done: !1
        })
    })
}
, function(t, e, n) {
    "use strict";
    var r = n(100)
      , i = n(27)
      , o = n(196)
      , a = n(56)
      , s = n(57)
      , c = n(87)
      , l = n(571)
      , u = n(101)
      , h = n(198)
      , d = n(17)("iterator")
      , p = !([].keys && "next"in [].keys())
      , f = function() {
        return this
    };
    t.exports = function(t, e, n, m, v, g, y) {
        l(n, e, m);
        var _, x, b, w = function(t) {
            if (!p && t in S)
                return S[t];
            switch (t) {
            case "keys":
            case "values":
                return function() {
                    return new n(this,t)
                }
            }
            return function() {
                return new n(this,t)
            }
        }, M = e + " Iterator", E = "values" == v, T = !1, S = t.prototype, A = S[d] || S["@@iterator"] || v && S[v], C = !p && A || w(v), P = v ? E ? w("entries") : C : void 0, L = "Array" == e ? S.entries || A : A;
        if (L && (b = h(L.call(new t))) !== Object.prototype && b.next && (u(b, M, !0),
        r || s(b, d) || a(b, d, f)),
        E && A && "values" !== A.name && (T = !0,
        C = function() {
            return A.call(this)
        }
        ),
        r && !y || !p && !T && S[d] || a(S, d, C),
        c[e] = C,
        c[M] = f,
        v)
            if (_ = {
                values: E ? C : w("values"),
                keys: g ? C : w("keys"),
                entries: P
            },
            y)
                for (x in _)
                    x in S || o(S, x, _[x]);
            else
                i(i.P + i.F * (p || T), e, _);
        return _
    }
}
, function(t, e, n) {
    t.exports = n(56)
}
, function(t, e, n) {
    var r = n(16).document;
    t.exports = r && r.documentElement
}
, function(t, e, n) {
    var r = n(57)
      , i = n(99)
      , o = n(129)("IE_PROTO")
      , a = Object.prototype;
    t.exports = Object.getPrototypeOf || function(t) {
        return t = i(t),
        r(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? a : null
    }
}
, function(t, e, n) {
    n(573);
    for (var r = n(16), i = n(56), o = n(87), a = n(17)("toStringTag"), s = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), c = 0; c < s.length; c++) {
        var l = s[c]
          , u = r[l]
          , h = u && u.prototype;
        h && !h[a] && i(h, a, l),
        o[l] = o.Array
    }
}
, function(t, e, n) {
    var r = n(191)
      , i = n(131).concat("length", "prototype");
    e.f = Object.getOwnPropertyNames || function(t) {
        return r(t, i)
    }
}
, function(t, e, n) {
    var r = n(98)
      , i = n(96)
      , o = n(71)
      , a = n(126)
      , s = n(57)
      , c = n(190)
      , l = Object.getOwnPropertyDescriptor;
    e.f = n(49) ? l : function(t, e) {
        if (t = o(t),
        e = a(e, !0),
        c)
            try {
                return l(t, e)
            } catch (t) {}
        if (s(t, e))
            return i(!r.f.call(t, e), t[e])
    }
}
, function(t, e) {}
, , , , , , , , , , , , , , , , , , , function(t, e, n) {
    var r = n(27)
      , i = n(13)
      , o = n(70);
    t.exports = function(t, e) {
        var n = (i.Object || {})[t] || Object[t]
          , a = {};
        a[t] = e(n),
        r(r.S + r.F * o(function() {
            n(1)
        }), "Object", a)
    }
}
, , , function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(23)
      , o = n(679)
      , a = r(o)
      , s = n(687)
      , c = r(s);
    e.default = {
        components: {
            "st-menu": a.default,
            "st-footer": c.default
        },
        computed: (0,
        i.mapState)(["loading", "date"])
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(23)
      , o = n(226)
      , a = r(o)
      , s = n(76)
      , c = r(s)
      , l = n(681)
      , u = r(l);
    c.default.use(u.default),
    e.default = {
        computed: (0,
        i.mapState)(["menu", "meta"]),
        data: function() {
            return {
                cinemaModeOn: !1
            }
        },
        mounted: function() {
            this.$nextTick(function() {
                var t = new a.default("#wrapper-detail-menu-mobile",{
                    scrollX: !1,
                    scrollY: !0,
                    scrollbars: !0,
                    useTransform: !1,
                    useTransition: !1,
                    probeType: 3,
                    click: !0,
                    mouseWheel: !0,
                    disablePointer: !0,
                    disableTouch: !1,
                    disableMouse: !1
                });
                window.addEventListener("resize", function() {
                    setTimeout(function() {
                        t.refresh()
                    }, 500)
                }),
                window.addEventListener("orientationchange", function() {
                    setTimeout(function() {
                        t.refresh()
                    }, 500)
                })
            })
        },
        methods: {
            is_mobile: function() {
                return /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)
            },
            toggleDisplayMode: function() {
                this.cinemaModeOn = !this.cinemaModeOn,
                cinemaModeOn = this.cinemaModeOn,
                this.cinemaModeOn ? ($(".marvel-info-panel .close").attr("src", "images/close-light.svg"),
                $(".marvel-graph-container").addClass("cinemaOn"),
                $(".st-content-menu-fixed").addClass("cinemaOn"),
                $(".modal-menu-mobile").addClass("cinemaOn")) : ($(".marvel-info-panel .close").attr("src", "images/close.svg"),
                $(".marvel-graph-container").removeClass("cinemaOn"),
                $(".st-content-menu-fixed").removeClass("cinemaOn"),
                $(".modal-menu-mobile").removeClass("cinemaOn"))
            },
            getImageFacebook: function() {
                return n(682)
            },
            getImageTwitter: function() {
                return n(683)
            },
            shareFacebook: function() {
                FB.ui({
                    method: "feed",
                    link: window.location.href
                }, function(t) {})
            },
            shareTwitter: function() {
                var t = this;
                this.meta.forEach(function(e) {
                    if (e.name && "twitter:description" === e.name) {
                        var n = e.content.replace(new RegExp("#","g"), "%23")
                          , n = n.replace(/'|’|‘/, "%27")
                          , r = t.findUrls(n)
                          , n = n.replace(r[0], "", "g");
                        window.open("http://twitter.com/share?text=" + n + "&url=" + r[0], "twitter", "_blank")
                    }
                })
            },
            findUrls: function(t) {
                for (var e, n = (t || "").toString(), r = [], i = /(((ftp|https?):\/\/)[\-\w@:%_\+.~#?,&\/\/=]+)|((mailto:)?[_.\w-]+@([\w][\w\-]+\.)+[a-zA-Z]{2,3})/g; null !== (e = i.exec(n)); ) {
                    var o = e[0];
                    r.push(o)
                }
                return r
            }
        }
    }
}
, , function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(23)
      , o = n(691)
      , a = r(o)
      , s = n(961)
      , c = r(s);
    e.default = {
        components: {
            "st-header": a.default,
            "st-article": c.default
        },
        computed: (0,
        i.mapState)(["identifier"])
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(23);
    n(693),
    e.default = {
        computed: (0,
        r.mapState)(["fullWidth", "header"]),
        watch: {
            header: function(t) {
                t && t.video && !t.logo && this.$nextTick(function() {
                    var t = document.querySelector(".st-content-banner-video video");
                    enableInlineVideo(t, {
                        iPad: !0
                    }),
                    setTimeout(function() {
                        t.play()
                    }, 1e3)
                })
            }
        },
        methods: {
            path_image: function(t) {
                var e = t;
                if (this.fullWidth < 550 && t) {
                    var r = t.split(".")
                      , i = r[1];
                    e = r[0] + "-mobile." + i
                }
                return !!t && n(148)("./" + e)
            },
            position_header: function(t) {
                var e = t;
                "left" == e ? $(".main-headline-container").addClass("container1200") : "middle" == e && $(".main-headline-container").addClass("container800")
            }
        },
        mounted: function() {}
    }
}
, function(t, e, n) {
    var r = n(86)
      , i = n(17)("toStringTag")
      , o = "Arguments" == r(function() {
        return arguments
    }())
      , a = function(t, e) {
        try {
            return t[e]
        } catch (t) {}
    };
    t.exports = function(t) {
        var e, n, s;
        return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (n = a(e = Object(t), i)) ? n : o ? r(e) : "Object" == (s = r(e)) && "function" == typeof e.callee ? "Arguments" : s
    }
}
, function(t, e, n) {
    var r = n(40)
      , i = n(95)
      , o = n(17)("species");
    t.exports = function(t, e) {
        var n, a = r(t).constructor;
        return void 0 === a || void 0 == (n = r(a)[o]) ? e : i(n)
    }
}
, function(t, e, n) {
    var r, i, o, a = n(84), s = n(702), c = n(197), l = n(125), u = n(16), h = u.process, d = u.setImmediate, p = u.clearImmediate, f = u.MessageChannel, m = u.Dispatch, v = 0, g = {}, y = function() {
        var t = +this;
        if (g.hasOwnProperty(t)) {
            var e = g[t];
            delete g[t],
            e()
        }
    }, _ = function(t) {
        y.call(t.data)
    };
    d && p || (d = function(t) {
        for (var e = [], n = 1; arguments.length > n; )
            e.push(arguments[n++]);
        return g[++v] = function() {
            s("function" == typeof t ? t : Function(t), e)
        }
        ,
        r(v),
        v
    }
    ,
    p = function(t) {
        delete g[t]
    }
    ,
    "process" == n(86)(h) ? r = function(t) {
        h.nextTick(a(y, t, 1))
    }
    : m && m.now ? r = function(t) {
        m.now(a(y, t, 1))
    }
    : f ? (i = new f,
    o = i.port2,
    i.port1.onmessage = _,
    r = a(o.postMessage, o, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (r = function(t) {
        u.postMessage(t + "", "*")
    }
    ,
    u.addEventListener("message", _, !1)) : r = "onreadystatechange"in l("script") ? function(t) {
        c.appendChild(l("script")).onreadystatechange = function() {
            c.removeChild(this),
            y.call(t)
        }
    }
    : function(t) {
        setTimeout(a(y, t, 1), 0)
    }
    ),
    t.exports = {
        set: d,
        clear: p
    }
}
, function(t, e) {
    t.exports = function(t) {
        try {
            return {
                e: !1,
                v: t()
            }
        } catch (t) {
            return {
                e: !0,
                v: t
            }
        }
    }
}
, function(t, e, n) {
    var r = n(40)
      , i = n(48)
      , o = n(147);
    t.exports = function(t, e) {
        if (r(t),
        i(e) && e.constructor === t)
            return e;
        var n = o.f(t);
        return (0,
        n.resolve)(e),
        n.promise
    }
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/am1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/av1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/av2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/av3.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bp1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ca1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ca2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ca3.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ds1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/gotg1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/gotg2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hk1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/im1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/im2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/im3.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/sm1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/th1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/th2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/th3.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/aarond.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/abomination.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/abrahame.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/abub.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/adriant.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/aldrichk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/aletao.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/alexanderp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/algrim.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/anciento.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/annem.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/antman.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/antonvo.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/antonvy.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/arnimz.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/asgardian.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ayesha.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/bettyb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/bettyr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/blackp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/blackpk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/blackw.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/blackwca3.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/bor.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/brockr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/bruceb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/bucky.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/capta.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/carina.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/cassiel.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/charlie.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/chesterp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/chitauri.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/christinee.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/christinep.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/collector.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/cosmo.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/crossb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/darcyl.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/darkelf.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/darrenc.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/dave.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/destroyer.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/dormammu.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/drax.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/dumdum.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ego.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ellenb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/emilb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/erics.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/erikk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/eriks.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/eugenet.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/everettr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/falcon.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/fandral.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/fenris.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/frigga.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/gabej.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/gamora.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/garthans.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/georgesb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/grandm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/groota.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/grootb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/grootp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/groott.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hamir.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hankp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/happyh.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/harleyk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hawke.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/heimdall.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/heimdallh.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hela.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/helenc.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/helmutz.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hermans.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hogun.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hopev.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/howardd.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/howardso.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/howardsy.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hulk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/hulkg.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/iranir.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ironl.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ironm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ironmo.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jackr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jacksonb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jacksonn.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jackt.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jamesm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/janef.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jarvis.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jaspers.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jimm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/johanns.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/jonathanp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/justinh.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/kaecilius.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/karlm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/korath.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/korg.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/kraglino.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/krugarr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/kurse.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/kurt.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/laufey.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/laurab.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/leonards.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/list.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/lizt.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/loki.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/luis.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/macg.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/madameb.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/maggiel.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mainf.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/malekith.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mandarin.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mantis.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mariah.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/marias.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/martinex.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/matthewe.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mayah.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mayp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/mbaku.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/meredithq.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/meredithqy.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/michellej.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/miek.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/miningt.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/nakia.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/nebula.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/nedl.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/nickf.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/njobu.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/novac.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/obadiahs.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/odin.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/okoye.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/other.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/peggyc.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/pepperp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/peterp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/peterq.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/philc.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/phineasm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/pietrom.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/principalm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ramonda.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/raza.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/reds.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/rhody.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/rhomannd.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/rivert.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/rocket.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ronan.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/samuels.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/scottl.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/scrapper.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/sharonc.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/shuri.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/sif.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/skurge.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/spiderman.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/stakaro.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/stanlee.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/starlord.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/stephens.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/stern.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/stever.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/surtur.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/taserf.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/tchaka.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/tchalla.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/thanos.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/thanosa.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/thor.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/thorlh.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/thunderboltr.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/tonys.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/topaz.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/trevors.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ultron1.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ultronp.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ultrons.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ultronu.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/ulyssesk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/valk.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/vision.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/volstagg.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/vulture.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/wandam.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/warm.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/whiplash.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/winters.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/wkabi.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/wolfgangv.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/wong.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/yellowj.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/yinsen.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/yonduu.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/screenshots/zuri.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_back6.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_back6-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_bottom4.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_bottom4-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_front5.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_front5-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_left2.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_left2-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_right1.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_right1-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_top3.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/skybox1/marvel_top3-mobile.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/template/image-background-header-mobile.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/template/image-background-header.jpg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/template/sample-image.png"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/template/sample-image-mobile.png"
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(23)
      , o = n(962)
      , a = r(o)
      , s = n(1167)
      , c = r(s)
      , l = n(77)
      , u = r(l)
      , h = {
        "container-fullwidth": a.default,
        container: c.default
    };
    for (var d in u.default.block)
        h[d] = u.default.block[d].default;
    e.default = {
        computed: (0,
        i.mapState)(["article"]),
        methods: {
            url: function() {
                return window.location.href
            },
            isMobile: function(t) {
                function e() {
                    return t.apply(this, arguments)
                }
                return e.toString = function() {
                    return t.toString()
                }
                ,
                e
            }(function() {
                return isMobile
            }),
            registerComponents: function() {
                return u.default.block
            }
        },
        components: h
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(478)
      , s = r(a)
      , c = n(509)
      , l = r(c)
      , u = n(511)
      , h = r(u)
      , d = n(77)
      , p = r(d)
      , f = {
        unique: h.default,
        left: s.default,
        right: l.default
    };
    for (var m in p.default.artefacs)
        f[m] = p.default.artefacs[m].default;
    e.default = {
        props: ["attributes", "division"],
        computed: {
            a_newComponents: function() {
                return (0,
                o.default)(this.attributes[0])
            }
        },
        components: f,
        methods: {
            existComponent: function(t) {
                var e = !1;
                return (0,
                o.default)(f).forEach(function(n) {
                    n === t && (e = !0)
                }),
                e
            }
        }
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(479)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1163)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/st-column-left.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(77)
      , s = r(a)
      , c = {};
    for (var l in s.default.artefacs)
        c[l] = s.default.artefacs[l].default;
    e.default = {
        props: ["attributes"],
        components: c,
        methods: {
            existComponent: function(t) {
                var e = !1;
                return (0,
                o.default)(c).forEach(function(n) {
                    n === t && (e = !0)
                }),
                e
            }
        }
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes"]
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes"]
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes"]
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(83)
      , o = r(i)
      , a = n(974)
      , s = r(a)
      , c = n(485);
    r(c),
    (0,
    o.default)({}, n(15), n(88), n(74), n(150));
    e.default = {
        props: ["attributes"],
        methods: {
            getSvg: function(t) {
                t && this.$el && new s.default({
                    tags: [this.$el],
                    folders: [t],
                    todo: function(t) {}
                })
            },
            defineClassFromPath: function(t) {
                return t.split("/").join("-")
            }
        },
        mounted: function() {
            this.getSvg(this.attributes)
        }
    }
}
, , function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(72)
      , o = r(i)
      , a = n(33)
      , s = r(a)
      , c = n(42)
      , l = r(c)
      , u = n(83)
      , h = r(u)
      , d = n(73)
      , p = r(d)
      , f = (0,
    h.default)({}, n(15), n(88), n(107));
    n(983);
    var m = function() {
        function t(e) {
            if ((0,
            s.default)(this, t),
            e) {
                this.options = e;
                var n = e.tag;
                this.o_type_animations = {
                    "animate-up": "slideUp",
                    "animate-down": "slideDown",
                    "animate-left": "slideLeft",
                    "animate-right": "slideRight",
                    "animate-fadeIn": "fadeIn",
                    "animate-fadeOut": "fadeOut",
                    "animate-line": "animatePath",
                    "st-AnimateBackgound-virtual": "stAnimateBackgound_virtual",
                    "st-AnimateBackgound-health": "stAnimateBackgound_health",
                    "st-AnimateBackgound-transport": "stAnimateBackgound_transport",
                    "st-AnimateBackgound-environment": "stAnimateBackgound_environment",
                    "st-AnimateBackgound-digital": "stAnimateBackgound_digital",
                    "st-AnimateBackgound-security": "stAnimateBackgound_security"
                },
                this.entries_animations = f.entries(this.o_type_animations),
                this.checkIsAnimate(n)
            }
        }
        return (0,
        l.default)(t, [{
            key: "checkIsAnimate",
            value: function(t) {
                var e = this
                  , n = !1
                  , r = "object" === (void 0 === t ? "undefined" : (0,
                o.default)(t)) ? f.select(t) : f.selectAll(t);
                0 !== r.size() && (this.entries_animations.forEach(function(t) {
                    r.classed(t.key) && (n = !0,
                    e.animateTag(r, t.value, "in"))
                }),
                n || this.entries_animations.forEach(function(t) {
                    r.selectAll("." + t.key).size() > 0 && (n = !0,
                    e.animateTag(r.selectAll("." + t.key), t.value, "in"))
                }),
                n || this.animateTag(r))
            }
        }, {
            key: "animateTag",
            value: function(t, e, n) {
                var r = this;
                t.each(function() {
                    if ("animatePath" === e) {
                        var t;
                        t = "path" === (0,
                        p.default)(this).get(0).tagName ? (0,
                        p.default)(this).get(0) : (0,
                        p.default)(this).find("path").get(0);
                        var i, o = t.getTotalLength();
                        i = "path" === (0,
                        p.default)(this).get(0).tagName ? f.select(this) : f.select(this).select("path"),
                        i.attr("stroke-dasharray", o).attr("stroke-dashoffset", o)
                    }
                    new Waypoint({
                        element: this,
                        handler: function(t) {
                            var i = this.element;
                            if ("down" === t)
                                if ("function" == typeof r.options.todo && r.options.todo(i),
                                "animatePath" !== e)
                                    void 0 !== e && (0,
                                    p.default)(i).animateCss(e, n);
                                else {
                                    var o;
                                    o = "path" === (0,
                                    p.default)(i).get(0).tagName ? f.select(i) : f.select(i).select("path"),
                                    o.transition().duration(3e3).attr("stroke-dashoffset", 0)
                                }
                            else if ("up" === t)
                                if ("function" == typeof r.options.before && r.options.before(i),
                                "animatePath" !== e)
                                    ;
                                else {
                                    var o;
                                    o = "path" === (0,
                                    p.default)(i).get(0).tagName ? f.select(i) : f.select(i).select("path");
                                    var a = o.node().getTotalLength();
                                    o.transition().duration(0).attr("stroke-dasharray", a).attr("stroke-dashoffset", a)
                                }
                        },
                        offset: "100%"
                    })
                })
            }
        }, {
            key: "animateCss",
            value: function() {}
        }, {
            key: "animateHand",
            value: function() {}
        }]),
        t
    }();
    e.default = m
}
, , , function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes"]
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes"]
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(23);
    e.default = {
        props: ["attributes", "division"],
        computed: (0,
        r.mapState)(["fullWidth"]),
        methods: {
            path_image: function(t) {
                var e = t;
                if (this.fullWidth < 550 && void 0 !== t) {
                    var r = t.split(".")
                      , i = r[1];
                    e = r[0] + "-mobile." + i
                }
                return !!t && n(148)("./" + e)
            }
        }
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    e.default = {
        props: ["attributes", "division"]
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(1006)
      , o = r(i)
      , a = n(22)
      , s = r(a)
      , c = n(1007)
      , l = r(c)
      , u = n(1146)
      , h = r(u)
      , d = n(23)
      , p = n(109)
      , f = r(p)
      , m = n(1147)
      , v = r(m)
      , g = n(506)
      , y = r(g)
      , _ = n(1155)
      , x = r(_);
    e.default = {
        props: ["attributes"],
        components: {
            "marvel-3d-graph": l.default
        },
        computed: (0,
        d.mapState)([]),
        data: function() {
            return {
                newDataManager: null,
                dataReady: !1,
                start: !1,
                startScene: !1
            }
        },
        watch: {
            start: function() {
                var t = this;
                (0,
                f.default)(".add-to-home-container").fadeOut(),
                setTimeout(function() {
                    t.setToFitScreen()
                }, 1e3)
            },
            dataReady: function() {
                var t = this;
                if (this.dataReady) {
                    (0,
                    f.default)(".marvel-graph-container .overlay").show();
                    var e = (0,
                    f.default)(".intro-content .fade");
                    e.hide(),
                    setTimeout(function() {
                        (0,
                        f.default)(".marvel-graph-container .overlay").fadeOut(),
                        t.setToFitScreen(),
                        t.fadeInElement(".intro-content .fade", 0, 1e3, e.length)
                    }, 2e3)
                }
            }
        },
        created: function() {
            var t = this;
            f.default.ajax({
                type: "GET",
                url: "./data/marvel-data.json",
                dataType: "json",
                timeout: 5e3,
                success: function(e) {
                    var n = {};
                    t.attributes.description.forEach(function(t) {
                        n[t.id] = t.description
                    });
                    var r = {}
                      , i = {}
                      , a = {}
                      , c = [];
                    (0,
                    s.default)(e.movies).forEach(function(t) {
                        var r = e.movies[t];
                        "tv" !== r.id && -1 === r.released.indexOf("no") && (i[r.id] = new v.default({
                            index: r.index,
                            id: r.id,
                            name: r.name,
                            description: n[r.id] ? n[r.id] : "movie description pending",
                            relationships: (0,
                            s.default)(e.relationship).filter(function(t) {
                                return e.relationship[t].movie_id === r.id
                            }).map(function(t) {
                                return e.relationship[t]
                            }),
                            group: r.group_id,
                            groupName: r.group_name,
                            phase: r.phase,
                            year: r.year,
                            released: r.released
                        }))
                    });
                    var l = {};
                    (0,
                    s.default)(e.alter_ego).forEach(function(t) {
                        var n = e.alter_ego[t];
                        l[n.origin_id] || (l[n.origin_id] = []),
                        l[n.origin_id].push(n)
                    }),
                    (0,
                    s.default)(e.characters).forEach(function(t, c) {
                        var u = e.characters[t]
                          , h = {};
                        r[u.id] = new y.default({
                            id: u.id,
                            name: u.name,
                            fullName: u.full_name ? u.full_name : u.name,
                            alias: u.alias ? u.alias : null,
                            playedBy: u.played_by,
                            hasScreenshot: !u.screenshot,
                            description: n[u.id] ? n[u.id] : "",
                            movies: (0,
                            s.default)(u.movies).reduce(function(t, e) {
                                return i[e] && (t[e] = (0,
                                o.default)({}, e, !0)),
                                t
                            }, {}),
                            species: u.species,
                            status: "null" === u.status ? null : u.status,
                            type: u.type,
                            affiliation: u.affiliation,
                            relationships: (0,
                            s.default)(e.relationship).reduce(function(t, n) {
                                if ("yes" === e.relationship[n].is_updated_relationship && (e.relationship[n].id === u.id || e.relationship[n].target_id === u.id)) {
                                    var r = e.relationship[n]
                                      , o = r.id === u.id ? r.target_id : r.id;
                                    h[o] ? i[e.relationship[n].movie_id] && i[h[o].movie_id].index < i[r.movie_id].index && (h[o] = r) : h[o] = r
                                }
                                return (0,
                                s.default)(h).map(function(t) {
                                    return h[t]
                                })
                            })
                        }),
                        "normal" !== u.type && (a[u.type] || (a[u.type] = []),
                        a[u.type].push(r[u.id])),
                        (0,
                        s.default)(u.affiliation).forEach(function(t) {
                            "none" !== t && "normal" !== t && (a[t] || (a[t] = []),
                            a[t].push(r[u.id]))
                        }),
                        l[u.id] && l[u.id].forEach(function(t) {
                            r[t.id] = new x.default({
                                origin: r[u.id],
                                movies: (0,
                                s.default)(t.movie_involved).reduce(function(t, e) {
                                    return i[e] && (t[e] = (0,
                                    o.default)({}, e, !0)),
                                    t
                                }, {}),
                                id: t.id,
                                name: t.name,
                                hasScreenshot: !t.screenshot
                            }),
                            r[u.id].alterEgos[t.id] = r[t.id],
                            (0,
                            s.default)(r[t.id].movies).forEach(function(e) {
                                i[e] && (i[e].characters[t.id] = r[t.id],
                                i[e].relationships.push({
                                    id: u.id,
                                    target_id: t.id,
                                    movie_id: e,
                                    relationship: 6,
                                    is_updated_relationship: "yes"
                                }))
                            })
                        }),
                        (0,
                        s.default)(r[u.id].movies).forEach(function(t) {
                            var e = t.trim();
                            i[e] && (i[e].characters[u.id] = r[u.id])
                        }),
                        r[u.id].init()
                    }),
                    t.newDataManager = new h.default({
                        relationships: (0,
                        s.default)(e.relationship).filter(function(t) {
                            return "yes" === e.relationship[t].is_updated_relationship
                        }).map(function(t) {
                            return e.relationship[t]
                        }).concat(c),
                        characters: r,
                        movies: i,
                        filterGroup: a
                    }),
                    t.setToFitScreen(),
                    t.dataReady = !0
                },
                error: function() {
                    console.warn("fail to load data"),
                    t.dataReady = !1
                }
            })
        },
        methods: {
            getNameNoneBreak: function(t) {
                return t.replace(/ /g, "&nbsp;")
            },
            hideAddToHome: function() {
                (0,
                f.default)(".add-to-home-container").fadeOut()
            },
            showAddToHomeBubble: function() {
                this.isAndroid() && !window.matchMedia("(display-mode: standalone)").matches ? (0,
                f.default)(".add-to-home.and").removeClass("none") : this.is_IOSmobile() && "standalone"in navigator && !navigator.standalone && /iphone|ipod|ipad/gi.test(navigator.platform) && /Safari/i.test(navigator.appVersion) && !navigator.userAgent.match("CriOS") && (0,
                f.default)(".add-to-home.ios").removeClass("none")
            },
            is_IOSmobile: function() {
                return /iPhone/i.test(navigator.userAgent || navigator.vendor || window.opera)
            },
            isAndroid: function() {
                return /Android/i.test(navigator.userAgent || navigator.vendor || window.opera)
            },
            onIEOverlayClick: function() {
                (0,
                f.default)(".box-info-ie").fadeOut()
            },
            is_ie: function() {
                return isIE
            },
            is_mobile: function() {
                return /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)
            },
            setToFitScreen: function() {
                (0,
                f.default)("body").css("height", "100%"),
                (0,
                f.default)("html").css("height", "100%");
                var t = (0,
                f.default)(window).height() - (0,
                f.default)(".st-content-menu").height();
                (0,
                f.default)(".marvel-graph-container").css({
                    height: t + "px"
                })
            },
            startExperience: function() {
                var t = this;
                this.hideAddToHome(),
                (0,
                f.default)(".marvel-intro-container .source").hide(),
                (0,
                f.default)(".marvel-intro-container .intro-content").fadeOut(function() {
                    t.start = !0,
                    setTimeout(function() {
                        (0,
                        f.default)(".instruction-overlay").fadeIn(),
                        (0,
                        f.default)(".marvel-navbar").css("opacity", 1)
                    }, 1e3)
                })
            },
            onOverlayClick: function() {
                (0,
                f.default)(".marvel-intro-container").fadeOut(),
                this.startScene = !0
            },
            fadeInElement: function(t, e, n, r) {
                var i = this
                  , o = (0,
                f.default)(t + e);
                o.length && (e >= r - 1 ? (o.fadeIn(n),
                (0,
                f.default)(".marvel-graph-container .overlay").fadeOut(),
                (0,
                f.default)(".marvel-intro-container .source").fadeIn(),
                this.showAddToHomeBubble()) : o.fadeIn(n).promise().done(function() {
                    i.fadeInElement(t, e + 1, n, r)
                }))
            }
        },
        mounted: function() {
            var t = this;
            (0,
            f.default)(window).on("resize", function() {
                return t.setToFitScreen()
            })
        }
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(1008)
      , s = r(a)
      , c = n(23);
    n(1011);
    var l = n(52)
      , u = function(t) {
        if (t && t.__esModule)
            return t;
        var e = {};
        if (null != t)
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        return e.default = t,
        e
    }(l)
      , h = n(1012)
      , d = r(h)
      , p = n(109)
      , f = r(p)
      , m = n(76)
      , v = r(m)
      , g = n(1144)
      , y = r(g);
    v.default.use(y.default),
    e.default = {
        props: ["dataManager", "dataReady", "start", "startScene"],
        computed: (0,
        c.mapState)([]),
        data: function() {
            return {
                graph: null,
                cameraData: {
                    prevPos: new u.Vector3(0,0,0),
                    currentPos: new u.Vector3(0,0,0),
                    isMoving: !1,
                    angle: 0,
                    initDistance: 80,
                    distRange: 20,
                    canRotate: !1
                },
                currentSelection: {
                    obj: null,
                    id: null,
                    currentTitle: null,
                    locked: !1
                },
                currentAlterList: [],
                currentProfileContent: {
                    id: null,
                    title: null,
                    alter: null
                },
                showedInfoPanel: !1,
                relationColor: {
                    friend: "#68A94D",
                    enemy: "#664B9A",
                    creation: "#29ABE2",
                    family: "#E08523",
                    work: "#d6cf7e",
                    romance: "#EF4123",
                    alterEgo: "white"
                },
                currentGraphData: {
                    nodes: [],
                    links: [],
                    type: null,
                    movie: null
                },
                currentFilterGraphData: {
                    nodes: [],
                    links: [],
                    type: null,
                    movie: null
                },
                splitState: {
                    split: !1,
                    graphSplitWidth: null,
                    infoSplitWidth: null
                },
                graphState: "character",
                canFilter: !0,
                profileRelation: {
                    type: null
                },
                animLoop: null,
                movieIconSrc: null,
                currentHover: null,
                vuescrollOpt: {
                    vuescroll: {
                        mode: "native"
                    },
                    hRail: {
                        height: "13px",
                        pos: "bottom",
                        background: "#a5d6a7"
                    },
                    hBar: {
                        height: "13px",
                        background: "#444",
                        opacity: .7
                    }
                }
            }
        },
        watch: {
            startScene: function() {
                var t = this;
                !0 === this.startScene && setTimeout(function() {
                    t.setFilterBarDimension()
                }, 250)
            },
            currentGraphData: function() {
                this.currentGraphData && this.applyData(this.currentGraphData)
            },
            currentSelection: function() {
                if (this.currentSelection.obj) {
                    var t = "movie" === this.currentSelection.obj.nodeType ? ".png" : ".svg";
                    this.movieIconSrc = "images_doc/marvel/nodeIcons/" + this.currentSelection.id + t
                } else
                    this.movieIconSrc = null
            },
            dataReady: function() {
                !1 !== this.dataReady && (u.Cache.enabled = !0,
                this.init3DForceGraph(),
                this.setToFitScreen(),
                this.graph.cooldownTicks(1),
                this.currentGraphData = this.dataManager.getAllCharactersGraphNodes(),
                this.loop(),
                this.initSearchMenu())
            },
            start: function() {
                !0 === this.start && (this.setToFitScreen(),
                this.resetCurrentSelection(),
                this.graph.cooldownTicks(1e3),
                this.currentGraphData = this.dataManager.getAllCharactersGraphData())
            }
        },
        mounted: function() {
            var t = this
              , e = this;
            this.setToFitScreen(),
            (0,
            f.default)(window).on("resize", function() {
                t.setToFitScreen()
            }),
            (0,
            f.default)(window).on("orientationchange", function() {
                e.setToFitScreen()
            });
            var n = (0,
            f.default)(".connection-graph-container audio")[0];
            n.volume = .3,
            (0,
            f.default)(".sound-button").on("click", function() {
                n.paused ? (n.play(),
                n.muted = !1) : n.muted = !n.muted,
                (0,
                f.default)(".sound-button .wrap").toggle()
            }),
            (0,
            f.default)(".marvel-info-panel .close").on("click", function() {
                t.is_mobile() && "movie" === t.graphState && t.currentGraphData.movie && t.setCurrentSelection(t.currentGraphData.movie),
                t.splitState.split && t.splitScreen(!1)
            })
        },
        methods: {
            onMovieTagClick: function() {
                this.profileRelation.type = null,
                (0,
                f.default)(".info-more-navbar .option").removeClass("current"),
                (0,
                f.default)(".info-more-navbar .option.movie").addClass("current")
            },
            updateProfileRelation: function(t) {
                this.profileRelation.type = t,
                (0,
                f.default)(".info-more-navbar .option").removeClass("current"),
                (0,
                f.default)(".info-more-navbar .option." + t).addClass("current")
            },
            formatText: function(t) {
                var e = t.replace(/([A-Z])/g, " $1").toLowerCase();
                return e.charAt(0).toUpperCase() + e.slice(1)
            },
            formatSlug: function(t) {
                return t.replace(/_|-/g, " ").toUpperCase()
            },
            updateProfileContent: function(t, e, n, r) {
                this.profileContent = {
                    title: t || this.profileContent.title,
                    name: e || this.profileContent.name,
                    imgStr: n || this.profileContent.imgStr,
                    description: r || this.profileContent.desc
                }
            },
            changeMovieLayout: function(t, e) {
                this.currentGraphData = this.dataManager.getAllMoviesGraphData(e),
                this.currentGraphData.movieFilter = e,
                this.setCameraPosition(300),
                (0,
                f.default)(".filter-option-content .option").removeClass("selected"),
                (0,
                f.default)(t.currentTarget).addClass("selected"),
                this.splitState.split && this.splitScreen(!1)
            },
            changeAllCharacterLayout: function(t, e) {
                "all" === e ? (this.graph.cooldownTicks(1e3),
                this.startBlockBuffer(),
                this.currentGraphData = this.dataManager.getAllCharactersGraphData()) : (this.graph.cooldownTicks(5),
                this.startBlockBuffer(),
                this.currentGraphData = this.dataManager.getAllCharactersGraphDataByFilter(e)),
                this.resetCurrentSelection(),
                this.setCameraPosition(500),
                (0,
                f.default)(".filter-option-content .option").removeClass("selected"),
                (0,
                f.default)(t.currentTarget).addClass("selected"),
                this.splitState.split && this.splitScreen(!1)
            },
            onMovieIconClick: function(t) {
                this.is_mobile() ? t ? this.currentSelection.obj ? (this.currentSelection.nodeType,
                this.splitState.split || this.splitScreen(!0)) : (this.setCurrentSelection(t),
                this.splitState.split || this.splitScreen(!0),
                this.applyData(this.currentGraphData)) : (this.graph.cooldownTicks(1e3),
                this.currentGraphData = this.dataManager.movies[this.currentSelection.id].getGraphDataByMovie(),
                this.setCameraPosition(500),
                this.startBlockBuffer()) : t ? (this.graph.cooldownTicks(1e3),
                this.applyData(this.currentGraphData),
                this.setCurrentSelection(t),
                this.setCameraPosition(500, 1e3),
                this.splitState.split || this.splitScreen(!0)) : (this.graph.cooldownTicks(1e3),
                this.currentGraphData = this.dataManager.movies[this.currentSelection.id].getGraphDataByMovie(),
                this.setCameraPosition(200),
                this.startBlockBuffer())
            },
            getMovieIconAppearance: function() {
                return this.currentGraphData.movie ? "images_doc/marvel/nodeIcons/" + this.currentGraphData.movie + ".png" : this.currentSelection.id ? "images_doc/marvel/nodeIcons/" + this.currentSelection.id + ".png" : "none"
            },
            onCharIconClick: function() {
                this.currentSelection.id && (this.splitState.split || this.splitScreen(!0))
            },
            toggleGraph: function(t) {
                var e = (0,
                f.default)(t.currentTarget).attr("class").split(" ")[1];
                this.setCurrentToggle(e),
                this.splitState.split && this.splitScreen(!1),
                this.resetCurrentSelection(),
                -1 !== e.indexOf("movie") ? (this.setCameraPosition(500),
                this.currentGraphData = this.dataManager.getAllMoviesGraphData(),
                (0,
                f.default)(".filter-option-content .option").removeClass("selected"),
                (0,
                f.default)(".filter-option-content .option.default").addClass("selected")) : e.indexOf(!0) && (this.setCameraPosition(300),
                this.currentGraphData = this.dataManager.getAllCharactersGraphData(),
                (0,
                f.default)(".filter-option-content .option").removeClass("selected"),
                (0,
                f.default)(".filter-option-content .option.default").addClass("selected")),
                this.graphState = e,
                this.startBlockBuffer(),
                this.setToFitScreen()
            },
            setCurrentToggle: function(t) {
                (0,
                f.default)(".option-graph .option").removeClass("selected"),
                (0,
                f.default)(".option-graph ." + t).addClass("selected")
            },
            setCameraPosition: function(t, e) {
                var n = t + this.cameraData.distRange * (1 + Math.sin(90) / 2);
                this.graph.cameraPosition({
                    x: n * Math.sin(90),
                    z: n * Math.cos(90)
                }, new u.Vector3(0,0,0), e || 0)
            },
            setCameraPositionToNode: function(t, e) {
                var n = 1 + 140 / (0,
                s.default)(t.x, t.y, t.z);
                this.graph.cameraPosition({
                    x: n * t.x,
                    y: n * t.y,
                    z: n * t.z
                }, t, e || 0)
            },
            setCurrentSelection: function(t) {
                "character" === this.dataManager.nodes[t].nodeType ? (this.currentSelection = {
                    obj: this.dataManager.nodes[t],
                    currentTitle: this.dataManager.nodes[t].currentTitle,
                    id: t,
                    locked: !0
                },
                this.profileRelation.type = this.currentSelection.obj.getFirstRelationGroup(),
                this.currentGraphData.movie ? (this.currentAlterList = this.currentSelection.obj.getAlterList(this.currentGraphData.movie),
                this.currentProfileContent = {
                    id: this.currentSelection.id,
                    title: this.currentSelection.obj.name
                }) : (this.currentAlterList = this.currentSelection.obj.getAlterList(),
                this.currentProfileContent = {
                    id: this.currentSelection.id,
                    title: this.currentSelection.obj.name
                })) : "movie" === this.dataManager.nodes[t].nodeType && (this.currentSelection = {
                    obj: this.dataManager.nodes[t],
                    id: t,
                    locked: !1
                }),
                this.movieIconSrc = this.updateProfileContent(this.currentSelection.obj.name, this.currentSelection.obj.name, this.currentSelection.id, this.currentSelection.obj.description),
                (0,
                f.default)(".info-more-navbar .option").removeClass("current"),
                (0,
                f.default)(".info-more-navbar .option." + this.profileRelation.type).addClass("current")
            },
            resetCurrentSelection: function() {
                this.graph.cooldownTicks(9e4),
                (0,
                f.default)("select.search-container").val(null).trigger("change.select2"),
                this.currentSelection = {
                    obj: null,
                    id: null,
                    locked: !1
                }
            },
            setToFitScreen: function() {
                var t = this;
                setTimeout(function() {
                    t.updateSplitWidth(),
                    t.setGraphDimension(),
                    t.setFilterBarDimension()
                }, 200)
            },
            updateSplitWidth: function() {
                var t = (0,
                f.default)(window).width() < 768;
                this.splitState.infoSplitWidth = t ? "100%" : "40%"
            },
            setGraphDimension: function() {
                var t = (0,
                f.default)(window).width() < 768;
                (0,
                f.default)(".marvel-info-panel").css("width", this.splitState.split ? this.splitState.infoSplitWidth : "0"),
                this.splitState.graphSplitWidth = t ? "100%" : "calc(100% - " + (0,
                f.default)(".marvel-info-panel").width() + "px",
                (0,
                f.default)(".graph-content").css("width", this.splitState.split ? this.splitState.graphSplitWidth : "100%"),
                (0,
                f.default)(".graph-content").css("height", (0,
                f.default)(".connection-graph-container").height() + "px"),
                this.graph && (this.graph.width((0,
                f.default)(".graph-content").width()),
                this.graph.height((0,
                f.default)(".graph-content").height()))
            },
            setFilterBarDimension: function() {
                var t = ((0,
                f.default)(".connection-graph-container").width() - (0,
                f.default)(".filter-option-limitWidth").width()) / 2
                  , e = (0,
                f.default)(".graph-content").width() - (t <= 0 ? 0 : t);
                (0,
                f.default)(".filter-option-container").css("width", e + "px")
            },
            initSearchMenu: function() {
                var t = this
                  , e = "";
                (0,
                o.default)(this.dataManager.nodes).forEach(function(n) {
                    var r = t.dataManager.nodes[n];
                    e += "<option value='" + r.id + "'>" + r.name + " (" + r.nodeType.toUpperCase() + ")</option>"
                }),
                (0,
                f.default)(".option-search select.search-container").html(e),
                (0,
                f.default)("select.search-container").select2({
                    sorter: function(t) {
                        return t.sort(function(t, e) {
                            return t.text > e.text ? 1 : t.text < e.text ? -1 : 0
                        })
                    }
                }),
                (0,
                f.default)("select.search-container").on("select2:select", function() {
                    var e = (0,
                    f.default)("select.search-container").select2("data")[0].id;
                    t.changeCurrentNode(e)
                })
            },
            onAlterListClick: function(t) {
                this.currentProfileContent = {
                    id: t.id,
                    title: t.name
                },
                this.currentAlterList = this.dataManager.characters[t.id].getAlterList(),
                this.changeCurrentNode(t.id)
            },
            changeCurrentNode: function(t) {
                for (var e = this, n = this.dataManager.nodes[t], r = !1, i = 0; i < this.currentGraphData.nodes.length; i++)
                    if (this.currentGraphData.nodes[i].id === t) {
                        r = !0;
                        break
                    }
                r ? ((0,
                f.default)("select.search-container").val(t).trigger("change.select2"),
                this.is_mobile() ? this.currentSelection.id !== t && (this.setCurrentSelection(t),
                "movie" !== this.graphState && this.applyFilterData(t),
                this.setCameraPositionToNode(n.nodeObject)) : (this.splitState.split || this.splitScreen(!0),
                this.setCurrentSelection(t),
                ("movie" !== this.graphState || "movie" === this.graphState && this.currentGraphData.movie) && this.applyFilterData(t),
                this.setCameraPositionToNode(n.nodeObject, 1e3))) : -1 !== n.nodeType.indexOf("movie") ? (this.setCurrentToggle("movie"),
                this.graphState = "movie",
                (0,
                f.default)("select.search-container").val(t).trigger("change.select2"),
                this.setCurrentSelection(t),
                this.splitState.split && this.splitScreen(!1),
                this.graph.cooldownTicks(1e3),
                this.currentGraphData = this.dataManager.movies[t].getGraphDataByMovie(),
                this.setCameraPosition(300),
                this.startBlockBuffer()) : -1 !== n.nodeType.indexOf("character") && (this.splitState.split && this.splitScreen(!1),
                this.setCurrentToggle("character"),
                this.graphState = "character",
                this.graph.cooldownTicks(1e3),
                this.currentGraphData = this.dataManager.getAllCharactersGraphData(),
                this.setCameraPosition(200),
                this.setCurrentSelection(t),
                (0,
                f.default)(".filter-option-content .option").removeClass("selected"),
                (0,
                f.default)(".filter-option-content .option.default").addClass("selected"),
                this.is_mobile() ? this.startBlockBufferCallback(function() {
                    e.applyFilterData(t),
                    e.setCameraPositionToNode(n.nodeObject)
                }) : this.startBlockBufferCallback(function() {
                    e.splitState.split || e.splitScreen(!0),
                    e.applyFilterData(t),
                    e.setCameraPositionToNode(n.nodeObject, 1e3)
                }))
            },
            splitScreen: function(t) {
                var e = this;
                this.splitState.split = t,
                this.cinemaModeOn ? (0,
                f.default)(".marvel-info-panel .close").attr("src", "images/close-light.svg") : (0,
                f.default)(".marvel-info-panel .close").attr("src", "images/close.svg"),
                this.updateSplitWidth();
                var n = t ? this.splitState.graphSplitWidth : "100%"
                  , r = t ? this.splitState.infoSplitWidth : "0px";
                t ? (0,
                f.default)(".graph-content").animate({
                    width: n
                }, 500, function() {
                    (0,
                    f.default)(".graph-content").css("width", n),
                    e.graph.width((0,
                    f.default)(".graph-content").width()),
                    e.graph.height((0,
                    f.default)(".graph-content").height())
                }) : ((0,
                f.default)(".graph-content").css("width", n),
                this.graph.width((0,
                f.default)(".graph-content").width()),
                this.graph.height((0,
                f.default)(".graph-content").height())),
                (0,
                f.default)(".marvel-info-panel").animate({
                    width: r
                }, 500, function() {
                    (0,
                    f.default)(".marvel-info-panel").css("width", r),
                    e.setToFitScreen()
                }),
                setTimeout(function() {
                    e.setFilterBarDimension()
                }, 700)
            },
            is_mobile: function() {
                return /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)
            },
            init3DForceGraph: function() {
                this.graph = new d.default,
                this.graph((0,
                f.default)(".graph-content")[0]),
                this.graph.backgroundColor("#111").showNavInfo(!1).nodeRelSize(3).nodeResolution(3).enableNodeDrag(!1).d3VelocityDecay(.2).d3AlphaDecay(.1),
                this.graph.scene().background = (new u.CubeTextureLoader).setPath("images_doc/marvel/skybox1/").load(["marvel_right1" + (this.is_mobile() ? "-mobile" : "") + ".png", "marvel_left2" + (this.is_mobile() ? "-mobile" : "") + ".png", "marvel_top3" + (this.is_mobile() ? "-mobile" : "") + ".png", "marvel_bottom4" + (this.is_mobile() ? "-mobile" : "") + ".png", "marvel_front5" + (this.is_mobile() ? "-mobile" : "") + ".png", "marvel_back6" + (this.is_mobile() ? "-mobile" : "") + ".png"])
            },
            loop: function() {
                var t = this
                  , e = this.cameraData.initDistance + this.cameraData.distRange * (1 + Math.sin(this.cameraData.angle) / 2);
                this.cameraData.currentPos = new u.Vector3(this.graph.cameraPosition().x,this.graph.cameraPosition().y,this.graph.cameraPosition().z),
                this.start || (this.graph.cameraPosition({
                    x: e * Math.sin(this.cameraData.angle),
                    z: e * Math.cos(this.cameraData.angle),
                    lookAt: new u.Vector3(0,0,0)
                }),
                this.cameraData.angle += Math.PI / 1200,
                this.cameraData.angle = this.cameraData.angle >= 6.28319 ? 0 : this.cameraData.angle),
                this.cameraData.isMoving = this.cameraData.prevPos.distanceTo(this.cameraData.currentPos) > .2,
                this.cameraData.prevPos = this.cameraData.currentPos,
                this.animLoop = requestAnimationFrame(function() {
                    return t.loop()
                })
            },
            startBlockBuffer: function() {
                var t = this;
                (0,
                f.default)(".connection-graph-container .click-block").show(),
                this.canFilter = !1,
                setTimeout(function() {
                    t.canFilter = !0,
                    (0,
                    f.default)(".connection-graph-container .click-block").fadeOut()
                }, 2e3)
            },
            startBlockBufferCallback: function(t) {
                var e = this;
                (0,
                f.default)(".connection-graph-container .click-block").show(),
                setTimeout(function() {
                    e.canFilter = !0,
                    (0,
                    f.default)(".connection-graph-container .click-block").fadeOut(),
                    t()
                }, 2e3)
            },
            onNodeDataSelect: function(t, e) {
                var n = this;
                if (this.is_mobile())
                    setTimeout(function() {
                        t && n.currentHover && t.id === n.currentHover.id && n.currentSelection.id !== t.id && (-1 !== n.dataManager.nodes[t.id].nodeType.indexOf("movie") ? (n.setCurrentSelection(t.id),
                        n.graph.cooldownTicks(1e3),
                        n.currentGraphData = n.dataManager.movies[t.id].getGraphDataByMovie(),
                        n.startBlockBuffer(),
                        n.startBlockBufferCallback(function() {
                            n.setCameraPosition(200)
                        })) : -1 !== n.dataManager.nodes[t.id].nodeType.indexOf("character") && (n.setCameraPositionToNode(t),
                        n.applyFilterData(t.id),
                        n.setCurrentSelection(t.id)))
                    }, 100);
                else {
                    if (this.cameraData.isMoving)
                        return;
                    -1 !== this.dataManager.nodes[t.id].nodeType.indexOf("movie") ? ((0,
                    f.default)("select.search-container").val(t.id).trigger("change.select2"),
                    this.setCurrentSelection(t.id),
                    this.graph.cooldownTicks(1e3),
                    this.currentGraphData = this.dataManager.movies[t.id].getGraphDataByMovie(),
                    this.startBlockBuffer(),
                    this.startBlockBufferCallback(function() {
                        n.setCameraPosition(200),
                        n.splitState.split || n.splitScreen(!0)
                    })) : -1 !== this.dataManager.nodes[t.id].nodeType.indexOf("character") && ((0,
                    f.default)("select.search-container").val(t.id).trigger("change.select2"),
                    this.setCurrentSelection(t.id),
                    this.applyFilterData(t.id),
                    this.setCameraPositionToNode(t, 1e3),
                    this.splitState.split || this.splitScreen(!0))
                }
            },
            onNodeDataHover: function(t, e) {
                if (this.start)
                    return this.is_mobile() ? void (this.currentHover = t || null) : this.cameraData.isMoving ? void (0,
                    f.default)(".graph-content").css("cursor", "default") : void (0,
                    f.default)(".graph-content").css("cursor", t ? "pointer" : "default")
            },
            onFilterClick: function(t, e) {
                var n = this;
                if (this.is_mobile())
                    setTimeout(function() {
                        t && n.currentHover && t.id === n.currentHover.id && n.currentSelection.id !== t.id && (-1 !== n.dataManager.nodes[t.id].nodeType.indexOf("movie") ? (n.setCameraPositionToNode(t),
                        n.setCurrentSelection(t.id)) : -1 !== n.dataManager.nodes[t.id].nodeType.indexOf("character") && (n.setCameraPositionToNode(t),
                        n.applyFilterData(t.id),
                        n.setCameraPositionToNode(t),
                        n.setCurrentSelection(t.id)))
                    }, 100);
                else {
                    if (this.cameraData.isMoving)
                        return;
                    t && (this.currentSelection.id !== t.id ? -1 !== this.dataManager.nodes[t.id].nodeType.indexOf("character") && (this.setCameraPositionToNode(t, 1e3),
                    this.applyFilterData(t.id),
                    this.setCurrentSelection(t.id),
                    this.splitState.split || this.splitScreen(!0)) : (this.setCameraPositionToNode(t),
                    this.splitState.split || this.splitScreen(!0)))
                }
            },
            onFilterHover: function(t, e) {
                if (this.start)
                    return this.is_mobile() ? void (this.currentHover = t || null) : this.cameraData.isMoving ? void (0,
                    f.default)(".graph-content").css("cursor", "default") : void (0,
                    f.default)(".graph-content").css("cursor", t ? "pointer" : "default")
            },
            applyData: function(t) {
                var e = this;
                this.graph.nodeThreeObject(function(t) {
                    return e.dataManager.nodes[t.id].createSpriteObject(t, null, null, e.currentGraphData.movie, e.currentGraphData.movieFilter)
                }).onNodeHover(function(t, n) {
                    return e.onNodeDataHover(t, n)
                }).onNodeClick(function(t, n) {
                    return e.onNodeDataSelect(t, n)
                }).linkColor(function(t) {
                    return e.relationColor[t.relation]
                }).nodeLabel("").linkOpacity(1).graphData(t)
            },
            applyFilterData: function(t, e) {
                var n = this;
                if (this.canFilter) {
                    var r = this.currentGraphData.nodes
                      , i = [];
                    if ("movie" === this.graphState) {
                        var o = this.dataManager.getMovieRelationships(this.currentGraphData.movie);
                        i = this.dataManager.nodes[t].getFilterLinksByMovieRelationships(o, this.currentGraphData.movie)
                    } else
                        i = this.dataManager.nodes[t].getFilterLinksByExistingNodes(r);
                    this.currentFilterGraphData = {
                        nodes: r,
                        links: i
                    },
                    this.graph.cooldownTicks(e || 0).nodeThreeObject(function(e) {
                        var r = !0 === n.dataManager.nodes[t].filterList[e.id] || e.id === t;
                        return n.dataManager.nodes[e.id].createSpriteObject(e, r, e.id === t, n.currentGraphData.movie)
                    }).onNodeHover(function(t, e) {
                        return n.onFilterHover(t, e)
                    }).onNodeClick(function(t, e) {
                        return n.onFilterClick(t, e)
                    }).nodeLabel("").graphData({
                        nodes: r,
                        links: i
                    })
                }
            }
        }
    }
}
, function(t, e, n) {
    var r;
    !function(i) {
        function o(t, e) {
            if (t = t || "",
            e = e || {},
            t instanceof o)
                return t;
            if (!(this instanceof o))
                return new o(t,e);
            var n = a(t);
            this._originalInput = t,
            this._r = n.r,
            this._g = n.g,
            this._b = n.b,
            this._a = n.a,
            this._roundA = V(100 * this._a) / 100,
            this._format = e.format || n.format,
            this._gradientType = e.gradientType,
            this._r < 1 && (this._r = V(this._r)),
            this._g < 1 && (this._g = V(this._g)),
            this._b < 1 && (this._b = V(this._b)),
            this._ok = n.ok,
            this._tc_id = G++
        }
        function a(t) {
            var e = {
                r: 0,
                g: 0,
                b: 0
            }
              , n = 1
              , r = null
              , i = null
              , o = null
              , a = !1
              , c = !1;
            return "string" == typeof t && (t = B(t)),
            "object" == typeof t && (z(t.r) && z(t.g) && z(t.b) ? (e = s(t.r, t.g, t.b),
            a = !0,
            c = "%" === String(t.r).substr(-1) ? "prgb" : "rgb") : z(t.h) && z(t.s) && z(t.v) ? (r = N(t.s),
            i = N(t.v),
            e = h(t.h, r, i),
            a = !0,
            c = "hsv") : z(t.h) && z(t.s) && z(t.l) && (r = N(t.s),
            o = N(t.l),
            e = l(t.h, r, o),
            a = !0,
            c = "hsl"),
            t.hasOwnProperty("a") && (n = t.a)),
            n = C(n),
            {
                ok: a,
                format: t.format || c,
                r: W(255, q(e.r, 0)),
                g: W(255, q(e.g, 0)),
                b: W(255, q(e.b, 0)),
                a: n
            }
        }
        function s(t, e, n) {
            return {
                r: 255 * P(t, 255),
                g: 255 * P(e, 255),
                b: 255 * P(n, 255)
            }
        }
        function c(t, e, n) {
            t = P(t, 255),
            e = P(e, 255),
            n = P(n, 255);
            var r, i, o = q(t, e, n), a = W(t, e, n), s = (o + a) / 2;
            if (o == a)
                r = i = 0;
            else {
                var c = o - a;
                switch (i = s > .5 ? c / (2 - o - a) : c / (o + a),
                o) {
                case t:
                    r = (e - n) / c + (e < n ? 6 : 0);
                    break;
                case e:
                    r = (n - t) / c + 2;
                    break;
                case n:
                    r = (t - e) / c + 4
                }
                r /= 6
            }
            return {
                h: r,
                s: i,
                l: s
            }
        }
        function l(t, e, n) {
            function r(t, e, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t
            }
            var i, o, a;
            if (t = P(t, 360),
            e = P(e, 100),
            n = P(n, 100),
            0 === e)
                i = o = a = n;
            else {
                var s = n < .5 ? n * (1 + e) : n + e - n * e
                  , c = 2 * n - s;
                i = r(c, s, t + 1 / 3),
                o = r(c, s, t),
                a = r(c, s, t - 1 / 3)
            }
            return {
                r: 255 * i,
                g: 255 * o,
                b: 255 * a
            }
        }
        function u(t, e, n) {
            t = P(t, 255),
            e = P(e, 255),
            n = P(n, 255);
            var r, i, o = q(t, e, n), a = W(t, e, n), s = o, c = o - a;
            if (i = 0 === o ? 0 : c / o,
            o == a)
                r = 0;
            else {
                switch (o) {
                case t:
                    r = (e - n) / c + (e < n ? 6 : 0);
                    break;
                case e:
                    r = (n - t) / c + 2;
                    break;
                case n:
                    r = (t - e) / c + 4
                }
                r /= 6
            }
            return {
                h: r,
                s: i,
                v: s
            }
        }
        function h(t, e, n) {
            t = 6 * P(t, 360),
            e = P(e, 100),
            n = P(n, 100);
            var r = i.floor(t)
              , o = t - r
              , a = n * (1 - e)
              , s = n * (1 - o * e)
              , c = n * (1 - (1 - o) * e)
              , l = r % 6;
            return {
                r: 255 * [n, s, a, a, c, n][l],
                g: 255 * [c, n, n, s, a, a][l],
                b: 255 * [a, a, c, n, n, s][l]
            }
        }
        function d(t, e, n, r) {
            var i = [D(V(t).toString(16)), D(V(e).toString(16)), D(V(n).toString(16))];
            return r && i[0].charAt(0) == i[0].charAt(1) && i[1].charAt(0) == i[1].charAt(1) && i[2].charAt(0) == i[2].charAt(1) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join("")
        }
        function p(t, e, n, r, i) {
            var o = [D(V(t).toString(16)), D(V(e).toString(16)), D(V(n).toString(16)), D(k(r))];
            return i && o[0].charAt(0) == o[0].charAt(1) && o[1].charAt(0) == o[1].charAt(1) && o[2].charAt(0) == o[2].charAt(1) && o[3].charAt(0) == o[3].charAt(1) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) + o[3].charAt(0) : o.join("")
        }
        function f(t, e, n, r) {
            return [D(k(r)), D(V(t).toString(16)), D(V(e).toString(16)), D(V(n).toString(16))].join("")
        }
        function m(t, e) {
            e = 0 === e ? 0 : e || 10;
            var n = o(t).toHsl();
            return n.s -= e / 100,
            n.s = L(n.s),
            o(n)
        }
        function v(t, e) {
            e = 0 === e ? 0 : e || 10;
            var n = o(t).toHsl();
            return n.s += e / 100,
            n.s = L(n.s),
            o(n)
        }
        function g(t) {
            return o(t).desaturate(100)
        }
        function y(t, e) {
            e = 0 === e ? 0 : e || 10;
            var n = o(t).toHsl();
            return n.l += e / 100,
            n.l = L(n.l),
            o(n)
        }
        function _(t, e) {
            e = 0 === e ? 0 : e || 10;
            var n = o(t).toRgb();
            return n.r = q(0, W(255, n.r - V(-e / 100 * 255))),
            n.g = q(0, W(255, n.g - V(-e / 100 * 255))),
            n.b = q(0, W(255, n.b - V(-e / 100 * 255))),
            o(n)
        }
        function x(t, e) {
            e = 0 === e ? 0 : e || 10;
            var n = o(t).toHsl();
            return n.l -= e / 100,
            n.l = L(n.l),
            o(n)
        }
        function b(t, e) {
            var n = o(t).toHsl()
              , r = (n.h + e) % 360;
            return n.h = r < 0 ? 360 + r : r,
            o(n)
        }
        function w(t) {
            var e = o(t).toHsl();
            return e.h = (e.h + 180) % 360,
            o(e)
        }
        function M(t) {
            var e = o(t).toHsl()
              , n = e.h;
            return [o(t), o({
                h: (n + 120) % 360,
                s: e.s,
                l: e.l
            }), o({
                h: (n + 240) % 360,
                s: e.s,
                l: e.l
            })]
        }
        function E(t) {
            var e = o(t).toHsl()
              , n = e.h;
            return [o(t), o({
                h: (n + 90) % 360,
                s: e.s,
                l: e.l
            }), o({
                h: (n + 180) % 360,
                s: e.s,
                l: e.l
            }), o({
                h: (n + 270) % 360,
                s: e.s,
                l: e.l
            })]
        }
        function T(t) {
            var e = o(t).toHsl()
              , n = e.h;
            return [o(t), o({
                h: (n + 72) % 360,
                s: e.s,
                l: e.l
            }), o({
                h: (n + 216) % 360,
                s: e.s,
                l: e.l
            })]
        }
        function S(t, e, n) {
            e = e || 6,
            n = n || 30;
            var r = o(t).toHsl()
              , i = 360 / n
              , a = [o(t)];
            for (r.h = (r.h - (i * e >> 1) + 720) % 360; --e; )
                r.h = (r.h + i) % 360,
                a.push(o(r));
            return a
        }
        function A(t, e) {
            e = e || 6;
            for (var n = o(t).toHsv(), r = n.h, i = n.s, a = n.v, s = [], c = 1 / e; e--; )
                s.push(o({
                    h: r,
                    s: i,
                    v: a
                })),
                a = (a + c) % 1;
            return s
        }
        function C(t) {
            return t = parseFloat(t),
            (isNaN(t) || t < 0 || t > 1) && (t = 1),
            t
        }
        function P(t, e) {
            O(t) && (t = "100%");
            var n = I(t);
            return t = W(e, q(0, parseFloat(t))),
            n && (t = parseInt(t * e, 10) / 100),
            i.abs(t - e) < 1e-6 ? 1 : t % e / parseFloat(e)
        }
        function L(t) {
            return W(1, q(0, t))
        }
        function R(t) {
            return parseInt(t, 16)
        }
        function O(t) {
            return "string" == typeof t && -1 != t.indexOf(".") && 1 === parseFloat(t)
        }
        function I(t) {
            return "string" == typeof t && -1 != t.indexOf("%")
        }
        function D(t) {
            return 1 == t.length ? "0" + t : "" + t
        }
        function N(t) {
            return t <= 1 && (t = 100 * t + "%"),
            t
        }
        function k(t) {
            return i.round(255 * parseFloat(t)).toString(16)
        }
        function j(t) {
            return R(t) / 255
        }
        function z(t) {
            return !!Z.CSS_UNIT.exec(t)
        }
        function B(t) {
            t = t.replace(F, "").replace(H, "").toLowerCase();
            var e = !1;
            if (Y[t])
                t = Y[t],
                e = !0;
            else if ("transparent" == t)
                return {
                    r: 0,
                    g: 0,
                    b: 0,
                    a: 0,
                    format: "name"
                };
            var n;
            return (n = Z.rgb.exec(t)) ? {
                r: n[1],
                g: n[2],
                b: n[3]
            } : (n = Z.rgba.exec(t)) ? {
                r: n[1],
                g: n[2],
                b: n[3],
                a: n[4]
            } : (n = Z.hsl.exec(t)) ? {
                h: n[1],
                s: n[2],
                l: n[3]
            } : (n = Z.hsla.exec(t)) ? {
                h: n[1],
                s: n[2],
                l: n[3],
                a: n[4]
            } : (n = Z.hsv.exec(t)) ? {
                h: n[1],
                s: n[2],
                v: n[3]
            } : (n = Z.hsva.exec(t)) ? {
                h: n[1],
                s: n[2],
                v: n[3],
                a: n[4]
            } : (n = Z.hex8.exec(t)) ? {
                r: R(n[1]),
                g: R(n[2]),
                b: R(n[3]),
                a: j(n[4]),
                format: e ? "name" : "hex8"
            } : (n = Z.hex6.exec(t)) ? {
                r: R(n[1]),
                g: R(n[2]),
                b: R(n[3]),
                format: e ? "name" : "hex"
            } : (n = Z.hex4.exec(t)) ? {
                r: R(n[1] + "" + n[1]),
                g: R(n[2] + "" + n[2]),
                b: R(n[3] + "" + n[3]),
                a: j(n[4] + "" + n[4]),
                format: e ? "name" : "hex8"
            } : !!(n = Z.hex3.exec(t)) && {
                r: R(n[1] + "" + n[1]),
                g: R(n[2] + "" + n[2]),
                b: R(n[3] + "" + n[3]),
                format: e ? "name" : "hex"
            }
        }
        function U(t) {
            var e, n;
            return t = t || {
                level: "AA",
                size: "small"
            },
            e = (t.level || "AA").toUpperCase(),
            n = (t.size || "small").toLowerCase(),
            "AA" !== e && "AAA" !== e && (e = "AA"),
            "small" !== n && "large" !== n && (n = "small"),
            {
                level: e,
                size: n
            }
        }
        var F = /^\s+/
          , H = /\s+$/
          , G = 0
          , V = i.round
          , W = i.min
          , q = i.max
          , X = i.random;
        o.prototype = {
            isDark: function() {
                return this.getBrightness() < 128
            },
            isLight: function() {
                return !this.isDark()
            },
            isValid: function() {
                return this._ok
            },
            getOriginalInput: function() {
                return this._originalInput
            },
            getFormat: function() {
                return this._format
            },
            getAlpha: function() {
                return this._a
            },
            getBrightness: function() {
                var t = this.toRgb();
                return (299 * t.r + 587 * t.g + 114 * t.b) / 1e3
            },
            getLuminance: function() {
                var t, e, n, r, o, a, s = this.toRgb();
                return t = s.r / 255,
                e = s.g / 255,
                n = s.b / 255,
                r = t <= .03928 ? t / 12.92 : i.pow((t + .055) / 1.055, 2.4),
                o = e <= .03928 ? e / 12.92 : i.pow((e + .055) / 1.055, 2.4),
                a = n <= .03928 ? n / 12.92 : i.pow((n + .055) / 1.055, 2.4),
                .2126 * r + .7152 * o + .0722 * a
            },
            setAlpha: function(t) {
                return this._a = C(t),
                this._roundA = V(100 * this._a) / 100,
                this
            },
            toHsv: function() {
                var t = u(this._r, this._g, this._b);
                return {
                    h: 360 * t.h,
                    s: t.s,
                    v: t.v,
                    a: this._a
                }
            },
            toHsvString: function() {
                var t = u(this._r, this._g, this._b)
                  , e = V(360 * t.h)
                  , n = V(100 * t.s)
                  , r = V(100 * t.v);
                return 1 == this._a ? "hsv(" + e + ", " + n + "%, " + r + "%)" : "hsva(" + e + ", " + n + "%, " + r + "%, " + this._roundA + ")"
            },
            toHsl: function() {
                var t = c(this._r, this._g, this._b);
                return {
                    h: 360 * t.h,
                    s: t.s,
                    l: t.l,
                    a: this._a
                }
            },
            toHslString: function() {
                var t = c(this._r, this._g, this._b)
                  , e = V(360 * t.h)
                  , n = V(100 * t.s)
                  , r = V(100 * t.l);
                return 1 == this._a ? "hsl(" + e + ", " + n + "%, " + r + "%)" : "hsla(" + e + ", " + n + "%, " + r + "%, " + this._roundA + ")"
            },
            toHex: function(t) {
                return d(this._r, this._g, this._b, t)
            },
            toHexString: function(t) {
                return "#" + this.toHex(t)
            },
            toHex8: function(t) {
                return p(this._r, this._g, this._b, this._a, t)
            },
            toHex8String: function(t) {
                return "#" + this.toHex8(t)
            },
            toRgb: function() {
                return {
                    r: V(this._r),
                    g: V(this._g),
                    b: V(this._b),
                    a: this._a
                }
            },
            toRgbString: function() {
                return 1 == this._a ? "rgb(" + V(this._r) + ", " + V(this._g) + ", " + V(this._b) + ")" : "rgba(" + V(this._r) + ", " + V(this._g) + ", " + V(this._b) + ", " + this._roundA + ")"
            },
            toPercentageRgb: function() {
                return {
                    r: V(100 * P(this._r, 255)) + "%",
                    g: V(100 * P(this._g, 255)) + "%",
                    b: V(100 * P(this._b, 255)) + "%",
                    a: this._a
                }
            },
            toPercentageRgbString: function() {
                return 1 == this._a ? "rgb(" + V(100 * P(this._r, 255)) + "%, " + V(100 * P(this._g, 255)) + "%, " + V(100 * P(this._b, 255)) + "%)" : "rgba(" + V(100 * P(this._r, 255)) + "%, " + V(100 * P(this._g, 255)) + "%, " + V(100 * P(this._b, 255)) + "%, " + this._roundA + ")"
            },
            toName: function() {
                return 0 === this._a ? "transparent" : !(this._a < 1) && ($[d(this._r, this._g, this._b, !0)] || !1)
            },
            toFilter: function(t) {
                var e = "#" + f(this._r, this._g, this._b, this._a)
                  , n = e
                  , r = this._gradientType ? "GradientType = 1, " : "";
                if (t) {
                    var i = o(t);
                    n = "#" + f(i._r, i._g, i._b, i._a)
                }
                return "progid:DXImageTransform.Microsoft.gradient(" + r + "startColorstr=" + e + ",endColorstr=" + n + ")"
            },
            toString: function(t) {
                var e = !!t;
                t = t || this._format;
                var n = !1
                  , r = this._a < 1 && this._a >= 0;
                return e || !r || "hex" !== t && "hex6" !== t && "hex3" !== t && "hex4" !== t && "hex8" !== t && "name" !== t ? ("rgb" === t && (n = this.toRgbString()),
                "prgb" === t && (n = this.toPercentageRgbString()),
                "hex" !== t && "hex6" !== t || (n = this.toHexString()),
                "hex3" === t && (n = this.toHexString(!0)),
                "hex4" === t && (n = this.toHex8String(!0)),
                "hex8" === t && (n = this.toHex8String()),
                "name" === t && (n = this.toName()),
                "hsl" === t && (n = this.toHslString()),
                "hsv" === t && (n = this.toHsvString()),
                n || this.toHexString()) : "name" === t && 0 === this._a ? this.toName() : this.toRgbString()
            },
            clone: function() {
                return o(this.toString())
            },
            _applyModification: function(t, e) {
                var n = t.apply(null, [this].concat([].slice.call(e)));
                return this._r = n._r,
                this._g = n._g,
                this._b = n._b,
                this.setAlpha(n._a),
                this
            },
            lighten: function() {
                return this._applyModification(y, arguments)
            },
            brighten: function() {
                return this._applyModification(_, arguments)
            },
            darken: function() {
                return this._applyModification(x, arguments)
            },
            desaturate: function() {
                return this._applyModification(m, arguments)
            },
            saturate: function() {
                return this._applyModification(v, arguments)
            },
            greyscale: function() {
                return this._applyModification(g, arguments)
            },
            spin: function() {
                return this._applyModification(b, arguments)
            },
            _applyCombination: function(t, e) {
                return t.apply(null, [this].concat([].slice.call(e)))
            },
            analogous: function() {
                return this._applyCombination(S, arguments)
            },
            complement: function() {
                return this._applyCombination(w, arguments)
            },
            monochromatic: function() {
                return this._applyCombination(A, arguments)
            },
            splitcomplement: function() {
                return this._applyCombination(T, arguments)
            },
            triad: function() {
                return this._applyCombination(M, arguments)
            },
            tetrad: function() {
                return this._applyCombination(E, arguments)
            }
        },
        o.fromRatio = function(t, e) {
            if ("object" == typeof t) {
                var n = {};
                for (var r in t)
                    t.hasOwnProperty(r) && (n[r] = "a" === r ? t[r] : N(t[r]));
                t = n
            }
            return o(t, e)
        }
        ,
        o.equals = function(t, e) {
            return !(!t || !e) && o(t).toRgbString() == o(e).toRgbString()
        }
        ,
        o.random = function() {
            return o.fromRatio({
                r: X(),
                g: X(),
                b: X()
            })
        }
        ,
        o.mix = function(t, e, n) {
            n = 0 === n ? 0 : n || 50;
            var r = o(t).toRgb()
              , i = o(e).toRgb()
              , a = n / 100;
            return o({
                r: (i.r - r.r) * a + r.r,
                g: (i.g - r.g) * a + r.g,
                b: (i.b - r.b) * a + r.b,
                a: (i.a - r.a) * a + r.a
            })
        }
        ,
        o.readability = function(t, e) {
            var n = o(t)
              , r = o(e);
            return (i.max(n.getLuminance(), r.getLuminance()) + .05) / (i.min(n.getLuminance(), r.getLuminance()) + .05)
        }
        ,
        o.isReadable = function(t, e, n) {
            var r, i, a = o.readability(t, e);
            switch (i = !1,
            r = U(n),
            r.level + r.size) {
            case "AAsmall":
            case "AAAlarge":
                i = a >= 4.5;
                break;
            case "AAlarge":
                i = a >= 3;
                break;
            case "AAAsmall":
                i = a >= 7
            }
            return i
        }
        ,
        o.mostReadable = function(t, e, n) {
            var r, i, a, s, c = null, l = 0;
            n = n || {},
            i = n.includeFallbackColors,
            a = n.level,
            s = n.size;
            for (var u = 0; u < e.length; u++)
                (r = o.readability(t, e[u])) > l && (l = r,
                c = o(e[u]));
            return o.isReadable(t, c, {
                level: a,
                size: s
            }) || !i ? c : (n.includeFallbackColors = !1,
            o.mostReadable(t, ["#fff", "#000"], n))
        }
        ;
        var Y = o.names = {
            aliceblue: "f0f8ff",
            antiquewhite: "faebd7",
            aqua: "0ff",
            aquamarine: "7fffd4",
            azure: "f0ffff",
            beige: "f5f5dc",
            bisque: "ffe4c4",
            black: "000",
            blanchedalmond: "ffebcd",
            blue: "00f",
            blueviolet: "8a2be2",
            brown: "a52a2a",
            burlywood: "deb887",
            burntsienna: "ea7e5d",
            cadetblue: "5f9ea0",
            chartreuse: "7fff00",
            chocolate: "d2691e",
            coral: "ff7f50",
            cornflowerblue: "6495ed",
            cornsilk: "fff8dc",
            crimson: "dc143c",
            cyan: "0ff",
            darkblue: "00008b",
            darkcyan: "008b8b",
            darkgoldenrod: "b8860b",
            darkgray: "a9a9a9",
            darkgreen: "006400",
            darkgrey: "a9a9a9",
            darkkhaki: "bdb76b",
            darkmagenta: "8b008b",
            darkolivegreen: "556b2f",
            darkorange: "ff8c00",
            darkorchid: "9932cc",
            darkred: "8b0000",
            darksalmon: "e9967a",
            darkseagreen: "8fbc8f",
            darkslateblue: "483d8b",
            darkslategray: "2f4f4f",
            darkslategrey: "2f4f4f",
            darkturquoise: "00ced1",
            darkviolet: "9400d3",
            deeppink: "ff1493",
            deepskyblue: "00bfff",
            dimgray: "696969",
            dimgrey: "696969",
            dodgerblue: "1e90ff",
            firebrick: "b22222",
            floralwhite: "fffaf0",
            forestgreen: "228b22",
            fuchsia: "f0f",
            gainsboro: "dcdcdc",
            ghostwhite: "f8f8ff",
            gold: "ffd700",
            goldenrod: "daa520",
            gray: "808080",
            green: "008000",
            greenyellow: "adff2f",
            grey: "808080",
            honeydew: "f0fff0",
            hotpink: "ff69b4",
            indianred: "cd5c5c",
            indigo: "4b0082",
            ivory: "fffff0",
            khaki: "f0e68c",
            lavender: "e6e6fa",
            lavenderblush: "fff0f5",
            lawngreen: "7cfc00",
            lemonchiffon: "fffacd",
            lightblue: "add8e6",
            lightcoral: "f08080",
            lightcyan: "e0ffff",
            lightgoldenrodyellow: "fafad2",
            lightgray: "d3d3d3",
            lightgreen: "90ee90",
            lightgrey: "d3d3d3",
            lightpink: "ffb6c1",
            lightsalmon: "ffa07a",
            lightseagreen: "20b2aa",
            lightskyblue: "87cefa",
            lightslategray: "789",
            lightslategrey: "789",
            lightsteelblue: "b0c4de",
            lightyellow: "ffffe0",
            lime: "0f0",
            limegreen: "32cd32",
            linen: "faf0e6",
            magenta: "f0f",
            maroon: "800000",
            mediumaquamarine: "66cdaa",
            mediumblue: "0000cd",
            mediumorchid: "ba55d3",
            mediumpurple: "9370db",
            mediumseagreen: "3cb371",
            mediumslateblue: "7b68ee",
            mediumspringgreen: "00fa9a",
            mediumturquoise: "48d1cc",
            mediumvioletred: "c71585",
            midnightblue: "191970",
            mintcream: "f5fffa",
            mistyrose: "ffe4e1",
            moccasin: "ffe4b5",
            navajowhite: "ffdead",
            navy: "000080",
            oldlace: "fdf5e6",
            olive: "808000",
            olivedrab: "6b8e23",
            orange: "ffa500",
            orangered: "ff4500",
            orchid: "da70d6",
            palegoldenrod: "eee8aa",
            palegreen: "98fb98",
            paleturquoise: "afeeee",
            palevioletred: "db7093",
            papayawhip: "ffefd5",
            peachpuff: "ffdab9",
            peru: "cd853f",
            pink: "ffc0cb",
            plum: "dda0dd",
            powderblue: "b0e0e6",
            purple: "800080",
            rebeccapurple: "663399",
            red: "f00",
            rosybrown: "bc8f8f",
            royalblue: "4169e1",
            saddlebrown: "8b4513",
            salmon: "fa8072",
            sandybrown: "f4a460",
            seagreen: "2e8b57",
            seashell: "fff5ee",
            sienna: "a0522d",
            silver: "c0c0c0",
            skyblue: "87ceeb",
            slateblue: "6a5acd",
            slategray: "708090",
            slategrey: "708090",
            snow: "fffafa",
            springgreen: "00ff7f",
            steelblue: "4682b4",
            tan: "d2b48c",
            teal: "008080",
            thistle: "d8bfd8",
            tomato: "ff6347",
            turquoise: "40e0d0",
            violet: "ee82ee",
            wheat: "f5deb3",
            white: "fff",
            whitesmoke: "f5f5f5",
            yellow: "ff0",
            yellowgreen: "9acd32"
        }
          , $ = o.hexNames = function(t) {
            var e = {};
            for (var n in t)
                t.hasOwnProperty(n) && (e[t[n]] = n);
            return e
        }(Y)
          , Z = function() {
            var t = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)"
              , e = "[\\s|\\(]+(" + t + ")[,|\\s]+(" + t + ")[,|\\s]+(" + t + ")\\s*\\)?"
              , n = "[\\s|\\(]+(" + t + ")[,|\\s]+(" + t + ")[,|\\s]+(" + t + ")[,|\\s]+(" + t + ")\\s*\\)?";
            return {
                CSS_UNIT: new RegExp(t),
                rgb: new RegExp("rgb" + e),
                rgba: new RegExp("rgba" + n),
                hsl: new RegExp("hsl" + e),
                hsla: new RegExp("hsla" + n),
                hsv: new RegExp("hsv" + e),
                hsva: new RegExp("hsva" + n),
                hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
                hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
            }
        }();
        void 0 !== t && t.exports ? t.exports = o : void 0 !== (r = function() {
            return o
        }
        .call(e, n, e, t)) && (t.exports = r)
    }(Math)
}
, function(t, e, n) {
    "use strict";
    var r = n(1059);
    n.d(e, "a", function() {
        return r.a
    })
}
, function(t, e, n) {
    "use strict";
    var r = n(1071);
    n.d(e, "a", function() {
        return r.a
    })
}
, function(t, e, n) {
    "use strict";
    var r = n(1084);
    n.d(e, "a", function() {
        return r.a
    })
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t.x
    }
    function i(t) {
        return t.y
    }
    function o(t) {
        return t.z
    }
    e.b = r,
    e.c = i,
    e.d = o;
    var a = n(74)
      , s = n(107)
      , c = n(89)
      , l = Math.PI * (3 - Math.sqrt(5))
      , u = Math.PI / 24;
    e.a = function(t, e) {
        function n() {
            r(),
            x.call("tick", h),
            p < f && (_.stop(),
            x.call("end", h))
        }
        function r() {
            var e, n, r = t.length;
            for (p += (v - p) * m,
            y.each(function(t) {
                t(p)
            }),
            e = 0; e < r; ++e)
                n = t[e],
                null == n.fx ? n.x += n.vx *= g : (n.x = n.fx,
                n.vx = 0),
                d > 1 && (null == n.fy ? n.y += n.vy *= g : (n.y = n.fy,
                n.vy = 0)),
                d > 2 && (null == n.fz ? n.z += n.vz *= g : (n.z = n.fz,
                n.vz = 0))
        }
        function i() {
            for (var e, n = 0, r = t.length; n < r; ++n) {
                if (e = t[n],
                e.index = n,
                isNaN(e.x) || d > 1 && isNaN(e.y) || d > 2 && isNaN(e.z)) {
                    var i = 10 * (d > 2 ? Math.cbrt(n) : d > 1 ? Math.sqrt(n) : n)
                      , o = n * l
                      , a = n * u;
                    e.x = i * (d > 1 ? Math.cos(o) : 1),
                    d > 1 && (e.y = i * Math.sin(o)),
                    d > 2 && (e.z = i * Math.sin(a))
                }
                (isNaN(e.vx) || d > 1 && isNaN(e.vy) || d > 2 && isNaN(e.vz)) && (e.vx = 0,
                d > 1 && (e.vy = 0),
                d > 2 && (e.vz = 0))
            }
        }
        function o(e) {
            return e.initialize && e.initialize(t, d),
            e
        }
        e = e || 2;
        var h, d = Math.min(3, Math.max(1, Math.round(e))), p = 1, f = .001, m = 1 - Math.pow(f, 1 / 300), v = 0, g = .6, y = Object(s.map)(), _ = Object(c.timer)(n), x = Object(a.dispatch)("tick", "end");
        return null == t && (t = []),
        i(),
        h = {
            tick: r,
            restart: function() {
                return _.restart(n),
                h
            },
            stop: function() {
                return _.stop(),
                h
            },
            numDimensions: function(t) {
                return arguments.length ? (d = Math.min(3, Math.max(1, Math.round(t))),
                y.each(o),
                h) : d
            },
            nodes: function(e) {
                return arguments.length ? (t = e,
                i(),
                y.each(o),
                h) : t
            },
            alpha: function(t) {
                return arguments.length ? (p = +t,
                h) : p
            },
            alphaMin: function(t) {
                return arguments.length ? (f = +t,
                h) : f
            },
            alphaDecay: function(t) {
                return arguments.length ? (m = +t,
                h) : +m
            },
            alphaTarget: function(t) {
                return arguments.length ? (v = +t,
                h) : v
            },
            velocityDecay: function(t) {
                return arguments.length ? (g = 1 - t,
                h) : 1 - g
            },
            force: function(t, e) {
                return arguments.length > 1 ? (null == e ? y.remove(t) : y.set(t, o(e)),
                h) : y.get(t)
            },
            find: function() {
                var e, n, r, i, o, a, s = Array.prototype.slice.call(arguments), c = s.shift() || 0, l = (d > 1 ? s.shift() : null) || 0, u = (d > 2 ? s.shift() : null) || 0, h = s.shift() || 1 / 0, p = 0, f = t.length;
                for (h *= h,
                p = 0; p < f; ++p)
                    o = t[p],
                    e = c - o.x,
                    n = l - (o.y || 0),
                    r = u - (o.z || 0),
                    (i = e * e + n * n + r * r) < h && (a = o,
                    h = i);
                return a
            },
            on: function(t, e) {
                return arguments.length > 1 ? (x.on(t, e),
                h) : x.on(t)
            }
        }
    }
}
, function(t, e, n) {
    function r(t) {
        function e() {
            var t, e = p.length;
            if (e)
                for (m.insertBodies(p); e--; )
                    t = p[e],
                    t.isPinned || (t.force.reset(),
                    m.updateBodyForce(t),
                    y.update(t));
            for (e = f.length; e--; )
                g.update(f[e])
        }
        var r = n(1107)
          , i = n(53)
          , o = n(43)
          , a = n(1108);
        t = o(t, {
            springLength: 30,
            springCoeff: 8e-4,
            gravity: -1.2,
            theta: .8,
            dragCoeff: .02,
            timeStep: 20
        });
        var s = t.createQuadTree || n(1109)
          , c = t.createBounds || n(1113)
          , l = t.createDragForce || n(1114)
          , u = t.createSpringForce || n(1115)
          , h = t.integrator || n(1116)
          , d = t.createBody || n(1117)
          , p = []
          , f = []
          , m = s(t)
          , v = c(p, t)
          , g = u(t)
          , y = l(t)
          , _ = !0
          , x = {
            bodies: p,
            quadTree: m,
            springs: f,
            settings: t,
            step: function() {
                e();
                var n = h(p, t.timeStep);
                return v.update(),
                n
            },
            addBody: function(t) {
                if (!t)
                    throw new Error("Body is required");
                return p.push(t),
                t
            },
            addBodyAt: function(t) {
                if (!t)
                    throw new Error("Body position is required");
                var e = d(t);
                return p.push(e),
                e
            },
            removeBody: function(t) {
                if (t) {
                    var e = p.indexOf(t);
                    if (!(e < 0))
                        return p.splice(e, 1),
                        0 === p.length && v.reset(),
                        !0
                }
            },
            addSpring: function(t, e, n, i, o) {
                if (!t || !e)
                    throw new Error("Cannot add null spring to force simulator");
                "number" != typeof n && (n = -1);
                var a = new r(t,e,n,o >= 0 ? o : -1,i);
                return f.push(a),
                a
            },
            getTotalMovement: function() {
                return 0
            },
            removeSpring: function(t) {
                if (t) {
                    var e = f.indexOf(t);
                    return e > -1 ? (f.splice(e, 1),
                    !0) : void 0
                }
            },
            getBestNewBodyPosition: function(t) {
                return v.getBestNewPosition(t)
            },
            getBBox: function() {
                return _ && (v.update(),
                _ = !1),
                v.box
            },
            invalidateBBox: function() {
                _ = !0
            },
            gravity: function(e) {
                return void 0 !== e ? (t.gravity = e,
                m.options({
                    gravity: e
                }),
                this) : t.gravity
            },
            theta: function(e) {
                return void 0 !== e ? (t.theta = e,
                m.options({
                    theta: e
                }),
                this) : t.theta
            }
        };
        return i(t, x),
        a(x),
        x
    }
    t.exports = r
}
, function(t, e, n) {
    function r(t) {
        function e() {
            var t, e = p.length;
            if (e)
                for (m.insertBodies(p); e--; )
                    t = p[e],
                    t.isPinned || (t.force.reset(),
                    m.updateBodyForce(t),
                    y.update(t));
            for (e = f.length; e--; )
                g.update(f[e])
        }
        var r = n(1121)
          , i = n(53)
          , o = n(43)
          , a = n(501);
        t = o(t, {
            springLength: 30,
            springCoeff: 8e-4,
            gravity: -1.2,
            theta: .8,
            dragCoeff: .02,
            timeStep: 20,
            stableThreshold: .009
        });
        var s = t.createQuadTree || n(1122)
          , c = t.createBounds || n(1126)
          , l = t.createDragForce || n(1127)
          , u = t.createSpringForce || n(1128)
          , h = t.integrator || n(1129)
          , d = t.createBody || n(1130)
          , p = []
          , f = []
          , m = s(t)
          , v = c(p, t)
          , g = u(t)
          , y = l(t)
          , _ = 0
          , x = !1
          , b = {
            bodies: p,
            springs: f,
            settings: t,
            step: function() {
                e(),
                _ = h(p, t.timeStep),
                v.update();
                var n = _ < t.stableThreshold;
                return x !== n && b.fire("stable", n),
                x = n,
                n
            },
            addBody: function(t) {
                if (!t)
                    throw new Error("Body is required");
                return p.push(t),
                t
            },
            addBodyAt: function(t) {
                if (!t)
                    throw new Error("Body position is required");
                var e = d(t);
                return p.push(e),
                e
            },
            removeBody: function(t) {
                if (t) {
                    var e = p.indexOf(t);
                    if (!(e < 0))
                        return p.splice(e, 1),
                        0 === p.length && v.reset(),
                        !0
                }
            },
            addSpring: function(t, e, n, i, o) {
                if (!t || !e)
                    throw new Error("Cannot add null spring to force simulator");
                "number" != typeof n && (n = -1);
                var a = new r(t,e,n,o >= 0 ? o : -1,i);
                return f.push(a),
                a
            },
            getTotalMovement: function() {
                return _
            },
            removeSpring: function(t) {
                if (t) {
                    var e = f.indexOf(t);
                    return e > -1 ? (f.splice(e, 1),
                    !0) : void 0
                }
            },
            getBestNewBodyPosition: function(t) {
                return v.getBestNewPosition(t)
            },
            getBBox: function() {
                return v.box
            },
            gravity: function(e) {
                return void 0 !== e ? (t.gravity = e,
                m.options({
                    gravity: e
                }),
                this) : t.gravity
            },
            theta: function(e) {
                return void 0 !== e ? (t.theta = e,
                m.options({
                    theta: e
                }),
                this) : t.theta
            }
        };
        return i(t, b),
        a(b),
        b
    }
    t.exports = r
}
, function(t, e) {
    function n(t) {
        var e = Object.create(null);
        return {
            on: function(n, r, i) {
                if ("function" != typeof r)
                    throw new Error("callback is expected to be a function");
                var o = e[n];
                return o || (o = e[n] = []),
                o.push({
                    callback: r,
                    ctx: i
                }),
                t
            },
            off: function(n, r) {
                if (void 0 === n)
                    return e = Object.create(null),
                    t;
                if (e[n]) {
                    if ("function" != typeof r)
                        delete e[n];
                    else
                        for (var i = e[n], o = 0; o < i.length; ++o)
                            i[o].callback === r && i.splice(o, 1)
                }
                return t
            },
            fire: function(n) {
                var r = e[n];
                if (!r)
                    return t;
                var i;
                arguments.length > 1 && (i = Array.prototype.splice.call(arguments, 1));
                for (var o = 0; o < r.length; ++o) {
                    var a = r[o];
                    a.callback.apply(a.ctx, i)
                }
                return t
            }
        }
    }
    function r(t) {
        if (!t)
            throw new Error("Eventify cannot use falsy object as events subject");
        for (var e = ["on", "fire", "off"], n = 0; n < e.length; ++n)
            if (t.hasOwnProperty(e[n]))
                throw new Error("Subject cannot be eventified, since it already has property '" + e[n] + "'")
    }
    t.exports = function(t) {
        r(t);
        var e = n(t);
        return t.on = e.on,
        t.off = e.off,
        t.fire = e.fire,
        t
    }
}
, function(t, e, n) {
    t.exports = {
        default: n(1150),
        __esModule: !0
    }
}
, function(t, e, n) {
    t.exports = {
        default: n(1153),
        __esModule: !0
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(33)
      , o = r(i)
      , a = n(42)
      , s = r(a)
      , c = n(52)
      , l = function(t) {
        if (t && t.__esModule)
            return t;
        var e = {};
        if (null != t)
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        return e.default = t,
        e
    }(c)
      , u = n(505)
      , h = r(u)
      , d = function() {
        function t(e) {
            (0,
            o.default)(this, t),
            this.id = "",
            this.name = "",
            this.description = "",
            this.nodeObject = null,
            this.nodeType = "",
            this.relStr = ["friend", "enemy", "creation", "family", "work", "romance", "alterEgo"],
            this.currentTitle = "",
            this.size = {
                x: 10,
                y: 10,
                z: 10
            },
            e && (this.id = e.id,
            this.name = e.name,
            this.currentTitle = e.name,
            this.description = e.description),
            this.nodeInst = null
        }
        return (0,
        s.default)(t, [{
            key: "createSpriteObject",
            value: function(t, e, n, r) {
                var i = null
                  , o = l.NormalBlending;
                return this.nodeInst ? isIE ? this.nodeInst.color = void 0 !== e && !1 === e ? "#444" : "#ddd" : this.nodeInst.material.color.set(void 0 !== e && !1 === e ? "#444" : "#ffffff") : isIE ? (this.nodeInst = new h.default(t.name),
                this.nodeInst.color = void 0 !== e && !1 === e ? "#444" : "#ddd",
                this.nodeInst.scale.set(30, this.nodeInst.scale.y / this.nodeInst.scale.x * 30, 30),
                this.nodeInst.renderOrder = 3,
                this.nodeInst.onBeforeRender = function(t) {
                    return t.clearDepth()
                }
                ) : (i = new l.SpriteMaterial({
                    map: (new l.TextureLoader).load("images_doc/marvel/nodeIcons/" + this.id + ".svg"),
                    color: void 0 !== e && !1 === e ? "#444" : "#ffffff",
                    blending: "undefined" !== e && !1 === e ? o : l.NormalBlending
                }),
                this.nodeInst = new l.Sprite(i),
                this.nodeInst.scale.set(this.size.x, this.size.y, this.size.z),
                this.nodeInst.renderOrder = 1,
                this.nodeInst.onBeforeRender = function(t) {
                    return t.clearDepth()
                }
                ),
                this.nodeObject = t,
                this.nodeInst
            }
        }]),
        t
    }();
    e.default = d
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    var i, o, a = n(110), s = r(a), c = n(502), l = r(c), u = n(503), h = r(u), d = n(106), p = r(d), f = n(72), m = r(f), v = n(52);
    !function(r, a) {
        "object" === (0,
        m.default)(e) && void 0 !== t ? t.exports = a() : (i = a,
        void 0 !== (o = "function" == typeof i ? i.call(e, n, e, t) : i) && (t.exports = o))
    }(0, function() {
        var t = function(t, e) {
            if (!(t instanceof e))
                throw new TypeError("Cannot call a class as a function")
        }
          , e = function() {
            function t(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1,
                    r.configurable = !0,
                    "value"in r && (r.writable = !0),
                    (0,
                    p.default)(t, r.key, r)
                }
            }
            return function(e, n, r) {
                return n && t(e.prototype, n),
                r && t(e, r),
                e
            }
        }()
          , n = function(t, e) {
            if ("function" != typeof e && null !== e)
                throw new TypeError("Super expression must either be null or a function, not " + (void 0 === e ? "undefined" : (0,
                m.default)(e)));
            t.prototype = (0,
            h.default)(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            e && (l.default ? (0,
            l.default)(t, e) : t.__proto__ = e)
        }
          , r = function(t, e) {
            if (!t)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" !== (void 0 === e ? "undefined" : (0,
            m.default)(e)) && "function" != typeof e ? t : e
        };
        return function(i) {
            function o() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ""
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10
                  , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "rgba(255, 255, 255, 1)";
                t(this, o);
                var a = r(this, (o.__proto__ || (0,
                s.default)(o)).call(this, new v.SpriteMaterial({
                    map: new v.Texture
                })));
                return a._text = e,
                a._textHeight = n,
                a._color = i,
                a._fontFace = "Arial",
                a._fontSize = 90,
                a._canvas = document.createElement("canvas"),
                a._texture = a.material.map,
                a._texture.minFilter = v.LinearFilter,
                a._genCanvas(),
                a
            }
            return n(o, i),
            e(o, [{
                key: "_genCanvas",
                value: function() {
                    var t = this._canvas
                      , e = t.getContext("2d")
                      , n = "normal " + this.fontSize + "px " + this.fontFace;
                    e.font = n;
                    var r = e.measureText(this.text).width;
                    t.width = r,
                    t.height = this.fontSize,
                    e.font = n,
                    e.fillStyle = this.color,
                    e.textBaseline = "bottom",
                    e.fillText(this.text, 0, t.height),
                    this._texture.image = t,
                    this._texture.needsUpdate = !0,
                    this.scale.set(this.textHeight * t.width / t.height, this.textHeight)
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.text,this.textHeight,this.color).copy(this)
                }
            }, {
                key: "copy",
                value: function(t) {
                    return v.Sprite.prototype.copy.call(this, t),
                    this.color = t.color,
                    this.fontFace = t.fontFace,
                    this.fontSize = t.fontSize,
                    this
                }
            }, {
                key: "text",
                get: function() {
                    return this._text
                },
                set: function(t) {
                    this._text = t,
                    this._genCanvas()
                }
            }, {
                key: "textHeight",
                get: function() {
                    return this._textHeight
                },
                set: function(t) {
                    this._textHeight = t,
                    this._genCanvas()
                }
            }, {
                key: "color",
                get: function() {
                    return this._color
                },
                set: function(t) {
                    this._color = t,
                    this._genCanvas()
                }
            }, {
                key: "fontFace",
                get: function() {
                    return this._fontFace
                },
                set: function(t) {
                    this._fontFace = t,
                    this._genCanvas()
                }
            }, {
                key: "fontSize",
                get: function() {
                    return this._fontSize
                },
                set: function(t) {
                    this._fontSize = t,
                    this._genCanvas()
                }
            }]),
            o
        }(v.Sprite)
    })
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(110)
      , s = r(a)
      , c = n(33)
      , l = r(c)
      , u = n(42)
      , h = r(u)
      , d = n(160)
      , p = r(d)
      , f = n(161)
      , m = r(f)
      , v = n(504)
      , g = r(v)
      , y = function(t) {
        function e(t) {
            (0,
            l.default)(this, e);
            var n = (0,
            p.default)(this, (e.__proto__ || (0,
            s.default)(e)).call(this, t));
            return n.alias = null,
            n.fullName = null,
            n.playedBy = null,
            n.hasScreenshot = null,
            n.nodeType = "character",
            n.alterEgos = {},
            n.relGroup = {},
            n.relationships = [],
            n.relationKeys = {},
            n.species = "",
            n.status = "",
            n.type = "",
            n.affiliation = {},
            n.movies = {},
            n.filterList = {},
            t && (n.alias = t.alias,
            n.fullName = t.fullName,
            n.playedBy = t.playedBy,
            n.hasScreenshot = t.hasScreenshot,
            n.mode = t.mode,
            n.relationships = t.relationships,
            n.species = t.species,
            n.status = t.status,
            n.type = t.type,
            n.affiliation = t.affiliation,
            n.movies = t.movies),
            n.currentForm = n.id,
            n.alterList = [],
            n
        }
        return (0,
        m.default)(e, t),
        (0,
        h.default)(e, [{
            key: "init",
            value: function() {
                this.sortRelationshipGroup()
            }
        }, {
            key: "sortRelationshipGroup",
            value: function() {
                var t = this;
                this.relationships.forEach(function(e) {
                    var n = e.id === t.id ? e.target_id : e.id;
                    t.relationKeys[n] = t.relStr[e.relationship];
                    var r = t.relStr[e.relationship];
                    r && (t.relGroup[r] || (t.relGroup[r] = []),
                    t.relGroup[r].push(n)),
                    t.filterList[n] = !0
                }),
                (0,
                o.default)(this.alterEgos).forEach(function(e) {
                    t.filterList[e] = !0,
                    t.alterEgos[e].init()
                })
            }
        }, {
            key: "getAlterListObj",
            value: function() {
                var t = this
                  , e = {};
                if (this.alterEgos)
                    return (0,
                    o.default)(this.alterEgos).forEach(function(n) {
                        var r = t.alterEgos[n];
                        e[n] = {
                            id: r.id,
                            name: r.name,
                            type: "ego"
                        }
                    }),
                    e
            }
        }, {
            key: "getAlterList",
            value: function() {
                var t = this.getAlterListObj();
                return (0,
                o.default)(t).map(function(e) {
                    return t[e]
                })
            }
        }, {
            key: "getAvatarImgStr",
            value: function() {
                return "origin" === this.currentForm.state ? this.name : this.currentForm.id
            }
        }, {
            key: "getGraphDataByMovie",
            value: function(t) {
                var e = this
                  , n = []
                  , r = [];
                return (0,
                o.default)(t.characters).forEach(function(e) {
                    var i = t.characters[e];
                    n.push({
                        id: i.id,
                        name: i.name,
                        group: 0
                    }),
                    i.alterEgos && (0,
                    o.default)(i.alterEgos).filter(function(e) {
                        return i.alterEgos[e].movies[t.id]
                    }).forEach(function(t) {
                        var e = i.alterEgos[t];
                        n.push({
                            id: e.id,
                            name: e.name,
                            group: 0
                        }),
                        r.push({
                            source: e.id,
                            target: i.id,
                            relation: "alterEgo"
                        })
                    })
                }),
                r = r.concat(t.relationships.filter(function(e) {
                    return e.movie_id === t.id
                }).map(function(t) {
                    return {
                        source: rel.id,
                        target: rel.target_id,
                        relation: e.relStr[rel.relationship]
                    }
                })),
                {
                    nodes: n,
                    links: r
                }
            }
        }, {
            key: "getFilterLinksByMovieRelationships",
            value: function(t, e) {
                var n = this
                  , r = [];
                if (this.alterEgos)
                    return (0,
                    o.default)(this.alterEgos).filter(function(t) {
                        return n.alterEgos[t].movies[e]
                    }).forEach(function(t) {
                        var e = n.alterEgos[t];
                        r.push({
                            source: e.id,
                            target: n.id,
                            relation: "alterEgo"
                        })
                    }),
                    r = r.concat(t.filter(function(t) {
                        return n.id === t.id || n.id === t.target_id
                    }).map(function(t) {
                        return {
                            source: t.id,
                            target: t.target_id,
                            relation: n.relStr[t.relationship]
                        }
                    }))
            }
        }, {
            key: "getFilterLinksByExistingNodes",
            value: function(t) {
                var e = this
                  , n = [];
                return t.forEach(function(t) {
                    e.filterList[t.id] ? n.push({
                        source: e.id,
                        target: t.id,
                        relation: e.relationKeys[t.id]
                    }) : e.alterEgos[t.id] && n.push({
                        source: e.id,
                        target: t.id,
                        relation: e.relationKeys[t.id]
                    })
                }),
                n
            }
        }, {
            key: "getProfileRelation",
            value: function(t) {
                return this.relGroup[t]
            }
        }, {
            key: "getFirstRelationGroup",
            value: function() {
                return (0,
                o.default)(this.relGroup)[0]
            }
        }, {
            key: "hasRelationship",
            value: function() {
                var t = this
                  , e = [];
                return (0,
                o.default)(this.relGroup).forEach(function(n) {
                    var r = t.relGroup[n];
                    "alterEgo" !== n && (e = e.concat(r))
                }),
                e.length > 0
            }
        }, {
            key: "involvedInMovie",
            value: function(t) {
                return this.movies[t]
            }
        }, {
            key: "getProfileRelationKeys",
            value: function() {
                return this.relGroup
            }
        }]),
        e
    }(g.default);
    e.default = y
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(23);
    e.default = {
        computed: (0,
        r.mapState)(["credits", "lang"])
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(23);
    e.default = {
        computed: (0,
        r.mapState)(["nextChapter"])
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(510)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1164)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/st-column-right.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(77)
      , s = r(a)
      , c = {};
    for (var l in s.default.artefacs)
        c[l] = s.default.artefacs[l].default;
    e.default = {
        props: ["attributes"],
        components: c,
        methods: {
            existComponent: function(t) {
                var e = !1;
                return (0,
                o.default)(c).forEach(function(n) {
                    n === t && (e = !0)
                }),
                e
            }
        }
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(512)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1165)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/st-column-unique.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(77)
      , s = r(a)
      , c = {};
    for (var l in s.default.artefacs)
        c[l] = s.default.artefacs[l].default;
    e.default = {
        props: ["attributes"],
        components: c,
        methods: {
            existComponent: function(t) {
                var e = !1;
                return (0,
                o.default)(c).forEach(function(n) {
                    n === t && (e = !0)
                }),
                e
            }
        }
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(478)
      , s = r(a)
      , c = n(509)
      , l = r(c)
      , u = n(511)
      , h = r(u)
      , d = n(77)
      , p = r(d)
      , f = {
        unique: h.default,
        left: s.default,
        right: l.default
    };
    for (var m in p.default.artefacs)
        f[m] = p.default.artefacs[m].default;
    e.default = {
        props: ["attributes", "division"],
        computed: {
            a_newComponents: function() {
                return (0,
                o.default)(this.attributes[0])
            }
        },
        components: f,
        methods: {
            existComponent: function(t) {
                var e = !1;
                return (0,
                o.default)(f).forEach(function(n) {
                    n === t && (e = !0)
                }),
                e
            }
        }
    }
}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
    n(561),
    t.exports = n(665)
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    function i(t) {
        t ? (h.select(".first_line").transition().duration(500).attr("x1", 12.8).attr("y1", 12.2).attr("x2", 23.5).attr("y2", 22.8),
        h.select(".menu_mobile_line_center").transition().duration(500).attr("opacity", 0).attr("x2", 0),
        h.select(".second_line").transition().duration(500).attr("x1", 12.9).attr("y1", 22.9).attr("x2", 23.4).attr("y2", 12.1),
        (0,
        u.default)("body").css({
            overflow: "hidden"
        })) : ((0,
        u.default)(".st-menu-mobile").css("right", "0"),
        h.select(".first_line").transition().duration(500).attr("x1", 10.5).attr("y1", 13.2).attr("x2", 26.1).attr("y2", 13.2),
        h.select(".menu_mobile_line_center").transition().duration(500).attr("opacity", 1).attr("x2", 26.1),
        h.select(".second_line").transition().duration(500).attr("x1", 10.5).attr("y1", 21.9).attr("x2", 26.1).attr("y2", 21.9),
        (0,
        u.default)("body").removeAttr("style"))
    }
    var o = n(83)
      , a = r(o)
      , s = n(72)
      , c = r(s)
      , l = n(73)
      , u = r(l);
    !function(t) {
        t.expr = {
            ":": {}
        },
        t.support = {},
        t.fn.clone = function() {
            var e = t();
            return this.each(function() {
                e.push(this.cloneNode(!0))
            }),
            e
        }
        ,
        ["Left", "Top"].forEach(function(e, n) {
            function r(t) {
                return t && "object" === (void 0 === t ? "undefined" : (0,
                c.default)(t)) && "setInterval"in t
            }
            function i(t) {
                return r(t) ? t : 9 === t.nodeType && (t.defaultView || t.parentWindow)
            }
            var o = "scroll" + e;
            t.fn[o] = function(e) {
                var r, a;
                if (void 0 === e)
                    return (r = this[0]) ? (a = i(r),
                    a ? "pageXOffset"in a ? a[n ? "pageYOffset" : "pageXOffset"] : a.document.documentElement[o] || a.document.body[o] : r[o]) : null;
                this.each(function() {
                    if (a = i(this)) {
                        var r = n ? t(a).scrollLeft() : e
                          , s = n ? e : t(a).scrollTop();
                        a.scrollTo(r, s)
                    } else
                        this[o] = e
                })
            }
        }),
        ["width", "height"].forEach(function(e) {
            var n = e.replace(/./, function(t) {
                return t[0].toUpperCase()
            });
            t.fn["outer" + n] = function(t) {
                var n = this;
                if (n) {
                    var r = n[e]();
                    return {
                        width: ["left", "right"],
                        height: ["top", "bottom"]
                    }[e].forEach(function(e) {
                        t && (r += parseInt(n.css("margin-" + e), 10))
                    }),
                    r
                }
                return null
            }
        }),
        t.proxy = function(e, n) {
            if ("string" == typeof n) {
                var r = e[n];
                n = e,
                e = r
            }
            if (t.isFunction(e)) {
                var i = Array.prototype.slice.call(arguments, 2)
                  , o = function() {
                    return e.apply(n, i.concat(Array.prototype.slice.call(arguments)))
                };
                return o.guid = e.guid = e.guid || o.guid || t.guid++,
                o
            }
        }
        ;
        var e = String.prototype.trim;
        t.trim = function(t, n) {
            return !n && e ? e.call(t) : (n = defaultToWhiteSpace(n),
            t.replace(new RegExp("^[" + n + "]+|[" + n + "]+$","g"), ""))
        }
        ;
        var n = /^(?:body|html)$/i;
        t.fn.position = function() {
            if (!this[0])
                return null;
            var e = this[0]
              , r = this.offsetParent()
              , i = this.offset()
              , o = n.test(r[0].nodeName) ? {
                top: 0,
                left: 0
            } : r.offset();
            return i.top -= parseFloat(t(e).css("margin-top")) || 0,
            i.left -= parseFloat(t(e).css("margin-left")) || 0,
            o.top += parseFloat(t(r[0]).css("border-top-width")) || 0,
            o.left += parseFloat(t(r[0]).css("border-left-width")) || 0,
            {
                top: i.top - o.top,
                left: i.left - o.left
            }
        }
        ,
        t.fn.offsetParent = function() {
            var e = t();
            return this.each(function() {
                for (var r = this.offsetParent || document.body; r && !n.test(r.nodeName) && "static" === t(r).css("position"); )
                    r = r.offsetParent;
                e.push(r)
            }),
            e
        }
    }(Zepto);
    var h = (0,
    a.default)({}, n(15), n(88), n(89));
    window.fbAsyncInit = function() {
        FB.init({
            appId: 748050775275737,
            status: !0,
            cookie: !0,
            xfbml: !0,
            version: "v2.0"
        })
    }
    ,
    function(t, e, n) {
        var r, i = t.getElementsByTagName(e)[0];
        t.getElementById(n) || (r = t.createElement(e),
        r.id = n,
        r.src = "//connect.facebook.net/en_US/sdk.js",
        i.parentNode.insertBefore(r, i))
    }(document, "script", "facebook-jssdk"),
    (0,
    u.default)(function() {
        (0,
        u.default)(".st-button-menu-mobile").length > 0 && (0,
        u.default)(".st-button-menu-mobile").on("click", function() {
            (0,
            u.default)(".modal-menu-mobile").toggleClass("st_dialogIsOpen"),
            (0,
            u.default)(".st-content-menu-fixed").toggleClass("st_dialogIsOpen"),
            i((0,
            u.default)(".modal-menu-mobile").hasClass("st_dialogIsOpen"))
        });
        var t = 0;
        (0,
        u.default)(".modal-menu-mobile").length > 0 && ((0,
        u.default)(window).on("mousewheel DOMMouseScroll touchmove touchstart touchend touchcancel touchleave", function(e) {
            0 !== t && (e.preventDefault(),
            e.stopPropagation())
        }),
        (0,
        u.default)(".st-mb .st-content-shared-social,.st-content-menu-fixed").on("touchstart", function() {
            ((0,
            u.default)(this).parents(".st_dialogIsOpen").length > 0 || (0,
            u.default)(this).hasClass("st_dialogIsOpen")) && (t = 1)
        }),
        (0,
        u.default)(".st-mb .st-content-shared-social,.st-content-menu-fixed").on("touchmove", function() {
            ((0,
            u.default)(this).parents(".st_dialogIsOpen").length > 0 || (0,
            u.default)(this).hasClass("st_dialogIsOpen")) && (t = 1)
        }),
        (0,
        u.default)(".st-mb .st-content-shared-social,.st-content-menu-fixed").on("touchend", function() {
            ((0,
            u.default)(this).parents(".st_dialogIsOpen").length > 0 || (0,
            u.default)(this).hasClass("st_dialogIsOpen")) && (t = 0)
        }))
    }),
    function(t) {
        t.extend(t.fn, {
            animateCss: function(t, e) {
                var n = this;
                void 0 !== e && "in" === e && h.timeout(function() {
                    n.removeClass("none")
                }, 100),
                this.addClass("animated " + t).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                    n.off(),
                    void 0 !== e && "out" === e && n.addClass("none"),
                    n.removeClass("animated " + t)
                })
            }
        })
    }(Zepto)
}
, function(t, e, n) {
    t.exports = {
        default: n(563),
        __esModule: !0
    }
}
, function(t, e, n) {
    n(564),
    t.exports = n(13).Object.assign
}
, function(t, e, n) {
    var r = n(27);
    r(r.S + r.F, "Object", {
        assign: n(565)
    })
}
, function(t, e, n) {
    "use strict";
    var r = n(85)
      , i = n(132)
      , o = n(98)
      , a = n(99)
      , s = n(192)
      , c = Object.assign;
    t.exports = !c || n(70)(function() {
        var t = {}
          , e = {}
          , n = Symbol()
          , r = "abcdefghijklmnopqrst";
        return t[n] = 7,
        r.split("").forEach(function(t) {
            e[t] = t
        }),
        7 != c({}, t)[n] || Object.keys(c({}, e)).join("") != r
    }) ? function(t, e) {
        for (var n = a(t), c = arguments.length, l = 1, u = i.f, h = o.f; c > l; )
            for (var d, p = s(arguments[l++]), f = u ? r(p).concat(u(p)) : r(p), m = f.length, v = 0; m > v; )
                h.call(p, d = f[v++]) && (n[d] = p[d]);
        return n
    }
    : c
}
, function(t, e, n) {
    var r = n(71)
      , i = n(193)
      , o = n(567);
    t.exports = function(t) {
        return function(e, n, a) {
            var s, c = r(e), l = i(c.length), u = o(a, l);
            if (t && n != n) {
                for (; l > u; )
                    if ((s = c[u++]) != s)
                        return !0
            } else
                for (; l > u; u++)
                    if ((t || u in c) && c[u] === n)
                        return t || u || 0;
            return !t && -1
        }
    }
}
, function(t, e, n) {
    var r = n(128)
      , i = Math.max
      , o = Math.min;
    t.exports = function(t, e) {
        return t = r(t),
        t < 0 ? i(t + e, 0) : o(t, e)
    }
}
, function(t, e, n) {
    t.exports = {
        default: n(569),
        __esModule: !0
    }
}
, function(t, e, n) {
    n(194),
    n(199),
    t.exports = n(134).f("iterator")
}
, function(t, e, n) {
    var r = n(128)
      , i = n(127);
    t.exports = function(t) {
        return function(e, n) {
            var o, a, s = String(i(e)), c = r(n), l = s.length;
            return c < 0 || c >= l ? t ? "" : void 0 : (o = s.charCodeAt(c),
            o < 55296 || o > 56319 || c + 1 === l || (a = s.charCodeAt(c + 1)) < 56320 || a > 57343 ? t ? s.charAt(c) : o : t ? s.slice(c, c + 2) : a - 56320 + (o - 55296 << 10) + 65536)
        }
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(133)
      , i = n(96)
      , o = n(101)
      , a = {};
    n(56)(a, n(17)("iterator"), function() {
        return this
    }),
    t.exports = function(t, e, n) {
        t.prototype = r(a, {
            next: i(1, n)
        }),
        o(t, e + " Iterator")
    }
}
, function(t, e, n) {
    var r = n(47)
      , i = n(40)
      , o = n(85);
    t.exports = n(49) ? Object.defineProperties : function(t, e) {
        i(t);
        for (var n, a = o(e), s = a.length, c = 0; s > c; )
            r.f(t, n = a[c++], e[n]);
        return t
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(574)
      , i = n(575)
      , o = n(87)
      , a = n(71);
    t.exports = n(195)(Array, "Array", function(t, e) {
        this._t = a(t),
        this._i = 0,
        this._k = e
    }, function() {
        var t = this._t
          , e = this._k
          , n = this._i++;
        return !t || n >= t.length ? (this._t = void 0,
        i(1)) : "keys" == e ? i(0, n) : "values" == e ? i(0, t[n]) : i(0, [n, t[n]])
    }, "values"),
    o.Arguments = o.Array,
    r("keys"),
    r("values"),
    r("entries")
}
, function(t, e) {
    t.exports = function() {}
}
, function(t, e) {
    t.exports = function(t, e) {
        return {
            value: e,
            done: !!t
        }
    }
}
, function(t, e, n) {
    t.exports = {
        default: n(577),
        __esModule: !0
    }
}
, function(t, e, n) {
    n(578),
    n(202),
    n(583),
    n(584),
    t.exports = n(13).Symbol
}
, function(t, e, n) {
    "use strict";
    var r = n(16)
      , i = n(57)
      , o = n(49)
      , a = n(27)
      , s = n(196)
      , c = n(579).KEY
      , l = n(70)
      , u = n(130)
      , h = n(101)
      , d = n(97)
      , p = n(17)
      , f = n(134)
      , m = n(135)
      , v = n(580)
      , g = n(581)
      , y = n(40)
      , _ = n(48)
      , x = n(71)
      , b = n(126)
      , w = n(96)
      , M = n(133)
      , E = n(582)
      , T = n(201)
      , S = n(47)
      , A = n(85)
      , C = T.f
      , P = S.f
      , L = E.f
      , R = r.Symbol
      , O = r.JSON
      , I = O && O.stringify
      , D = p("_hidden")
      , N = p("toPrimitive")
      , k = {}.propertyIsEnumerable
      , j = u("symbol-registry")
      , z = u("symbols")
      , B = u("op-symbols")
      , U = Object.prototype
      , F = "function" == typeof R
      , H = r.QObject
      , G = !H || !H.prototype || !H.prototype.findChild
      , V = o && l(function() {
        return 7 != M(P({}, "a", {
            get: function() {
                return P(this, "a", {
                    value: 7
                }).a
            }
        })).a
    }) ? function(t, e, n) {
        var r = C(U, e);
        r && delete U[e],
        P(t, e, n),
        r && t !== U && P(U, e, r)
    }
    : P
      , W = function(t) {
        var e = z[t] = M(R.prototype);
        return e._k = t,
        e
    }
      , q = F && "symbol" == typeof R.iterator ? function(t) {
        return "symbol" == typeof t
    }
    : function(t) {
        return t instanceof R
    }
      , X = function(t, e, n) {
        return t === U && X(B, e, n),
        y(t),
        e = b(e, !0),
        y(n),
        i(z, e) ? (n.enumerable ? (i(t, D) && t[D][e] && (t[D][e] = !1),
        n = M(n, {
            enumerable: w(0, !1)
        })) : (i(t, D) || P(t, D, w(1, {})),
        t[D][e] = !0),
        V(t, e, n)) : P(t, e, n)
    }
      , Y = function(t, e) {
        y(t);
        for (var n, r = v(e = x(e)), i = 0, o = r.length; o > i; )
            X(t, n = r[i++], e[n]);
        return t
    }
      , $ = function(t, e) {
        return void 0 === e ? M(t) : Y(M(t), e)
    }
      , Z = function(t) {
        var e = k.call(this, t = b(t, !0));
        return !(this === U && i(z, t) && !i(B, t)) && (!(e || !i(this, t) || !i(z, t) || i(this, D) && this[D][t]) || e)
    }
      , J = function(t, e) {
        if (t = x(t),
        e = b(e, !0),
        t !== U || !i(z, e) || i(B, e)) {
            var n = C(t, e);
            return !n || !i(z, e) || i(t, D) && t[D][e] || (n.enumerable = !0),
            n
        }
    }
      , Q = function(t) {
        for (var e, n = L(x(t)), r = [], o = 0; n.length > o; )
            i(z, e = n[o++]) || e == D || e == c || r.push(e);
        return r
    }
      , K = function(t) {
        for (var e, n = t === U, r = L(n ? B : x(t)), o = [], a = 0; r.length > a; )
            !i(z, e = r[a++]) || n && !i(U, e) || o.push(z[e]);
        return o
    };
    F || (R = function() {
        if (this instanceof R)
            throw TypeError("Symbol is not a constructor!");
        var t = d(arguments.length > 0 ? arguments[0] : void 0)
          , e = function(n) {
            this === U && e.call(B, n),
            i(this, D) && i(this[D], t) && (this[D][t] = !1),
            V(this, t, w(1, n))
        };
        return o && G && V(U, t, {
            configurable: !0,
            set: e
        }),
        W(t)
    }
    ,
    s(R.prototype, "toString", function() {
        return this._k
    }),
    T.f = J,
    S.f = X,
    n(200).f = E.f = Q,
    n(98).f = Z,
    n(132).f = K,
    o && !n(100) && s(U, "propertyIsEnumerable", Z, !0),
    f.f = function(t) {
        return W(p(t))
    }
    ),
    a(a.G + a.W + a.F * !F, {
        Symbol: R
    });
    for (var tt = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), et = 0; tt.length > et; )
        p(tt[et++]);
    for (var nt = A(p.store), rt = 0; nt.length > rt; )
        m(nt[rt++]);
    a(a.S + a.F * !F, "Symbol", {
        for: function(t) {
            return i(j, t += "") ? j[t] : j[t] = R(t)
        },
        keyFor: function(t) {
            if (!q(t))
                throw TypeError(t + " is not a symbol!");
            for (var e in j)
                if (j[e] === t)
                    return e
        },
        useSetter: function() {
            G = !0
        },
        useSimple: function() {
            G = !1
        }
    }),
    a(a.S + a.F * !F, "Object", {
        create: $,
        defineProperty: X,
        defineProperties: Y,
        getOwnPropertyDescriptor: J,
        getOwnPropertyNames: Q,
        getOwnPropertySymbols: K
    }),
    O && a(a.S + a.F * (!F || l(function() {
        var t = R();
        return "[null]" != I([t]) || "{}" != I({
            a: t
        }) || "{}" != I(Object(t))
    })), "JSON", {
        stringify: function(t) {
            for (var e, n, r = [t], i = 1; arguments.length > i; )
                r.push(arguments[i++]);
            if (n = e = r[1],
            (_(e) || void 0 !== t) && !q(t))
                return g(e) || (e = function(t, e) {
                    if ("function" == typeof n && (e = n.call(this, t, e)),
                    !q(e))
                        return e
                }
                ),
                r[1] = e,
                I.apply(O, r)
        }
    }),
    R.prototype[N] || n(56)(R.prototype, N, R.prototype.valueOf),
    h(R, "Symbol"),
    h(Math, "Math", !0),
    h(r.JSON, "JSON", !0)
}
, function(t, e, n) {
    var r = n(97)("meta")
      , i = n(48)
      , o = n(57)
      , a = n(47).f
      , s = 0
      , c = Object.isExtensible || function() {
        return !0
    }
      , l = !n(70)(function() {
        return c(Object.preventExtensions({}))
    })
      , u = function(t) {
        a(t, r, {
            value: {
                i: "O" + ++s,
                w: {}
            }
        })
    }
      , h = function(t, e) {
        if (!i(t))
            return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
        if (!o(t, r)) {
            if (!c(t))
                return "F";
            if (!e)
                return "E";
            u(t)
        }
        return t[r].i
    }
      , d = function(t, e) {
        if (!o(t, r)) {
            if (!c(t))
                return !0;
            if (!e)
                return !1;
            u(t)
        }
        return t[r].w
    }
      , p = function(t) {
        return l && f.NEED && c(t) && !o(t, r) && u(t),
        t
    }
      , f = t.exports = {
        KEY: r,
        NEED: !1,
        fastKey: h,
        getWeak: d,
        onFreeze: p
    }
}
, function(t, e, n) {
    var r = n(85)
      , i = n(132)
      , o = n(98);
    t.exports = function(t) {
        var e = r(t)
          , n = i.f;
        if (n)
            for (var a, s = n(t), c = o.f, l = 0; s.length > l; )
                c.call(t, a = s[l++]) && e.push(a);
        return e
    }
}
, function(t, e, n) {
    var r = n(86);
    t.exports = Array.isArray || function(t) {
        return "Array" == r(t)
    }
}
, function(t, e, n) {
    var r = n(71)
      , i = n(200).f
      , o = {}.toString
      , a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : []
      , s = function(t) {
        try {
            return i(t)
        } catch (t) {
            return a.slice()
        }
    };
    t.exports.f = function(t) {
        return a && "[object Window]" == o.call(t) ? s(t) : i(r(t))
    }
}
, function(t, e, n) {
    n(135)("asyncIterator")
}
, function(t, e, n) {
    n(135)("observable")
}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(t, e, n) {
    "use strict";
    (function(t) {
        function e(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var r = n(73)
          , i = e(r)
          , o = n(76)
          , a = e(o)
          , s = n(220)
          , c = e(s)
          , l = n(669)
          , u = e(l)
          , h = n(676)
          , d = e(h)
          , p = n(677)
          , f = e(p)
          , m = n(690)
          , v = e(m);
        a.default.use(c.default, {
            name: "v-touch"
        });
        t.isMobile = function(t) {
            return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))
        }(navigator.userAgent || navigator.vendor || window.opera),
        t.isIE = function() {
            var t = window.navigator.userAgent
              , e = t.indexOf("MSIE ");
            if (e > 0)
                return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
            if (t.indexOf("Trident/") > 0) {
                var n = t.indexOf("rv:");
                return parseInt(t.substring(n + 3, t.indexOf(".", n)), 10)
            }
            return !1
        }(),
        t.cinemaModeOn = !1;
        var g = new u.default(a.default,{
            path: window.location.pathname,
            json_pages: {
                "marvel-graph": {
                    key: "/data/st-get-file-json.json",
                    page: "index"
                }
            },
            Main: v.default
        })
          , y = g.router
          , _ = g.getCurrentPage.key
          , x = new d.default(a.default,{
            debug: !1
        })
          , b = x.store;
        y.beforeEach(function(t, e, n) {
            g.path = t.path,
            _ = g.getCurrentPage.key,
            b.commit("identifier", g.getCurrentPage.identifier),
            (0,
            i.default)(".st-button-menu-mobile").length > 0 && (0,
            i.default)(".modal-menu-mobile").hasClass("st_dialogIsOpen") && (0,
            i.default)(".st-button-menu-mobile").trigger("touchend"),
            n()
        }),
        new a.default({
            router: y,
            store: b,
            render: function(t) {
                return t(f.default, {
                    props: {}
                })
            },
            data: {
                nroCalls: 0,
                title: !1,
                meta: []
            },
            metaInfo: function() {
                return {
                    title: this.title,
                    meta: this.meta
                }
            },
            watch: {
                $route: "fetchData"
            },
            methods: {
                fetchData: function() {
                    var t = this;
                    b.commit("loading", !0),
                    i.default.ajax({
                        url: _,
                        type: "get",
                        cache: !1,
                        dataType: "json",
                        success: function(e) {
                            t.nroCalls > 0 && void 0 !== e.title && void 0 !== e.meta && (t.title = e.title,
                            t.meta = e.meta),
                            e && b.commit("pushResponse", e),
                            b.commit("loading", !1),
                            t.nroCalls++
                        }
                    })
                },
                handleResize: function(t) {
                    var e = window.innerHeight - document.getElementsByClassName("st-content-menu")[0].clientHeight
                      , n = window.innerWidth;
                    b.commit("fullHeight", e),
                    b.commit("fullWidth", n),
                    this.setValuesFooter()
                },
                handleOrientation: function() {
                    this.setValuesFooter()
                },
                setValuesFooter: function() {
                    var t = (0,
                    i.default)("footer.st-content-footer").outerHeight();
                    (0,
                    i.default)(".scrollContent").css("padding-bottom", t + "px")
                },
                is_mobile: function() {
                    return /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)
                }
            },
            created: function() {
                this.fetchData()
            },
            beforeDestroy: function() {
                window.removeEventListener("resize", this.handleResize),
                window.removeEventListener("orientationchange", this.handleOrientation)
            },
            mounted: function() {
                this.handleResize(),
                window.addEventListener("resize", this.handleResize),
                window.addEventListener("orientationchange", this.handleOrientation)
            }
        }).$mount("#st-content-graphic")
    }
    ).call(e, n(51))
}
, , , , function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(33)
      , s = r(a)
      , c = n(42)
      , l = r(c)
      , u = n(222)
      , h = r(u)
      , d = n(223)
      , p = r(d)
      , f = n(674)
      , m = r(f)
      , v = function() {
        function t(e, n) {
            if ((0,
            s.default)(this, t),
            e.use(h.default),
            e.use(p.default),
            n) {
                var r = n.Main
                  , i = [{
                    path: "/",
                    component: r
                }];
                this._path = n.path,
                this._json_pages = n.json_pages;
                var a = this._json_pages;
                this.getObjectPages = (0,
                o.default)(a).map(function(t) {
                    var e = a[t].page ? a[t].page : t;
                    return {
                        page_html: e + ".html",
                        page: e,
                        key: a[t].key,
                        component: "undefined" === a[t].component || void 0 === a[t].component || "" === a[t].component ? r : a[t].component,
                        identifier: t
                    }
                }),
                this.router = new h.default({
                    base: this.getBasePath,
                    mode: "history",
                    linkActiveClass: "current",
                    routes: i.concat(this.getRoutes),
                    fallback: "ie" !== m.default.name || "9.0.0" != m.default.version
                })
            }
        }
        return (0,
        l.default)(t, [{
            key: "getRoutes",
            get: function() {
                return this.getObjectPages.map(function(t) {
                    return {
                        path: "/" + t.page_html,
                        component: t.component
                    }
                })
            }
        }, {
            key: "getCurrentPage",
            get: function() {
                var t = this
                  , e = {};
                return this.getObjectPages.forEach(function(n) {
                    n.page_html === t.getFileRoute && (e = n)
                }),
                e
            }
        }, {
            key: "path",
            get: function() {
                return this._path
            },
            set: function(t) {
                this._path = t
            }
        }, {
            key: "getFileRoute",
            get: function() {
                var t = this.path.split("/")
                  , e = t[t.length - 1];
                return e = e.split("?")[0].split("#")[0].trim(),
                "" === e && (e = "index.html"),
                e
            }
        }, {
            key: "getBasePath",
            get: function() {
                var t = this.path.split("/");
                return t[t.length - 1] = "",
                t.join("/")
            }
        }]),
        t
    }();
    e.default = v
}
, function(t, e, n) {
    n(671),
    t.exports = n(13).Object.keys
}
, function(t, e, n) {
    var r = n(99)
      , i = n(85);
    n(221)("keys", function() {
        return function(t) {
            return i(r(t))
        }
    })
}
, function(t, e, n) {
    n(673);
    var r = n(13).Object;
    t.exports = function(t, e, n) {
        return r.defineProperty(t, e, n)
    }
}
, function(t, e, n) {
    var r = n(27);
    r(r.S + r.F * !n(49), "Object", {
        defineProperty: n(47).f
    })
}
, function(t, e, n) {
    (function(e) {
        function r() {
            var t = o();
            return t || ("undefined" != typeof navigator ? a(navigator.userAgent) : null)
        }
        function i(t) {
            var e = c()
              , n = e.filter(function(e) {
                return e.rule && e.rule.test(t)
            })[0];
            return n ? n.name : null
        }
        function o() {
            return "undefined" == typeof navigator && void 0 !== e ? {
                name: "node",
                version: e.version.slice(1),
                os: n(675).type().toLowerCase()
            } : null
        }
        function a(t) {
            var e = s();
            if (!t)
                return null;
            var n = e.map(function(e) {
                var n = e.rule.exec(t)
                  , r = n && n[1].split(/[._]/).slice(0, 3);
                return r && r.length < 3 && (r = r.concat(1 == r.length ? [0, 0] : [0])),
                n && {
                    name: e.name,
                    version: r.join(".")
                }
            }).filter(Boolean)[0] || null;
            return n && (n.os = i(t)),
            n
        }
        function s() {
            return l([["aol", /AOLShield\/([0-9\._]+)/], ["edge", /Edge\/([0-9\._]+)/], ["yandexbrowser", /YaBrowser\/([0-9\._]+)/], ["vivaldi", /Vivaldi\/([0-9\.]+)/], ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/], ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/], ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/], ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/], ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/], ["fxios", /FxiOS\/([0-9\.]+)/], ["opera", /Opera\/([0-9\.]+)(?:\s|$)/], ["opera", /OPR\/([0-9\.]+)(:?\s|$)$/], ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/], ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/], ["ie", /MSIE\s(7\.0)/], ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/], ["android", /Android\s([0-9\.]+)/], ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/], ["safari", /Version\/([0-9\._]+).*Safari/]])
        }
        function c() {
            return l([["iOS", /iP(hone|od|ad)/], ["Android OS", /Android/], ["BlackBerry OS", /BlackBerry|BB10/], ["Windows Mobile", /IEMobile/], ["Amazon OS", /Kindle/], ["Windows 3.11", /Win16/], ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/], ["Windows 98", /(Windows 98)|(Win98)/], ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/], ["Windows XP", /(Windows NT 5.1)|(Windows XP)/], ["Windows Server 2003", /(Windows NT 5.2)/], ["Windows Vista", /(Windows NT 6.0)/], ["Windows 7", /(Windows NT 6.1)/], ["Windows 8", /(Windows NT 6.2)/], ["Windows 8.1", /(Windows NT 6.3)/], ["Windows 10", /(Windows NT 10.0)/], ["Windows ME", /Windows ME/], ["Open BSD", /OpenBSD/], ["Sun OS", /SunOS/], ["Linux", /(Linux)|(X11)/], ["Mac OS", /(Mac_PowerPC)|(Macintosh)/], ["QNX", /QNX/], ["BeOS", /BeOS/], ["OS/2", /OS\/2/], ["Search Bot", /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\/Teoma)|(ia_archiver)/]])
        }
        function l(t) {
            return t.map(function(t) {
                return {
                    name: t[0],
                    rule: t[1]
                }
            })
        }
        t.exports = {
            detect: r,
            detectOS: i,
            getNodeVersion: o,
            parseUserAgent: a
        }
    }
    ).call(e, n(219))
}
, function(t, e) {
    e.endianness = function() {
        return "LE"
    }
    ,
    e.hostname = function() {
        return "undefined" != typeof location ? location.hostname : ""
    }
    ,
    e.loadavg = function() {
        return []
    }
    ,
    e.uptime = function() {
        return 0
    }
    ,
    e.freemem = function() {
        return Number.MAX_VALUE
    }
    ,
    e.totalmem = function() {
        return Number.MAX_VALUE
    }
    ,
    e.cpus = function() {
        return []
    }
    ,
    e.type = function() {
        return "Browser"
    }
    ,
    e.release = function() {
        return "undefined" != typeof navigator ? navigator.appVersion : ""
    }
    ,
    e.networkInterfaces = e.getNetworkInterfaces = function() {
        return {}
    }
    ,
    e.arch = function() {
        return "javascript"
    }
    ,
    e.platform = function() {
        return "browser"
    }
    ,
    e.tmpdir = e.tmpDir = function() {
        return "/tmp"
    }
    ,
    e.EOL = "\n",
    e.homedir = function() {
        return "/"
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(33)
      , o = r(i)
      , a = n(23)
      , s = r(a)
      , c = function t(e, n) {
        (0,
        o.default)(this, t),
        e.use(s.default),
        this.store = new s.default.Store({
            state: {
                loading: !1,
                fullHeight: window.innerHeight,
                fullWidth: window.innerWidth,
                identifier: null,
                menu: [],
                date: !1,
                header: !1,
                article: !1,
                credits: !1,
                meta: [],
                nextChapter: !1,
                lang: "en"
            },
            getters: {},
            mutations: {
                loading: function(t, e) {
                    t.loading = e
                },
                fullHeight: function(t, e) {
                    t.fullHeight = e
                },
                fullWidth: function(t, e) {
                    t.fullWidth = e
                },
                identifier: function(t, e) {
                    t.identifier = e
                },
                pushResponse: function(t, e) {
                    void 0 !== e.lang && (t.lang = e.lang),
                    void 0 !== e.menu && (t.menu = e.menu),
                    void 0 !== e.date && (t.date = e.date),
                    void 0 !== e.header && (t.header = e.header),
                    void 0 !== e.article && (t.article = e.article),
                    void 0 !== e.credits && (t.credits = e.credits),
                    void 0 !== e.meta && (t.meta = e.meta),
                    void 0 !== e.next_chapter && (t.nextChapter = e.next_chapter)
                }
            },
            strict: n.debug
        })
    };
    e.default = c
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(678)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(224)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(689)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-68175b34", null);
    h.options.__file = "template/page.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(680)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(225)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(684)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, null, null);
    h.options.__file = "template/menu/st-menu-v1.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    !function(e, r) {
        t.exports = r(n(76))
    }(0, function(t) {
        return function(t) {
            function e(r) {
                if (n[r])
                    return n[r].exports;
                var i = n[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return t[r].call(i.exports, i, i.exports, e),
                i.l = !0,
                i.exports
            }
            var n = {};
            return e.m = t,
            e.c = n,
            e.i = function(t) {
                return t
            }
            ,
            e.d = function(t, n, r) {
                e.o(t, n) || Object.defineProperty(t, n, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }
            ,
            e.n = function(t) {
                var n = t && t.__esModule ? function() {
                    return t.default
                }
                : function() {
                    return t
                }
                ;
                return e.d(n, "a", n),
                n
            }
            ,
            e.o = function(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }
            ,
            e.p = "/dist/",
            e(e.s = 3)
        }([function(t, e, n) {
            n(8);
            var r = n(6)(n(2), n(7), "data-v-25adc6c0", null);
            t.exports = r.exports
        }
        , function(e, n) {
            e.exports = t
        }
        , function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
              , i = {
                colorChecked: "#75C791",
                colorUnchecked: "#bfcbd9",
                cssColors: !1,
                labelChecked: "on",
                labelUnchecked: "off",
                width: 50,
                height: 22,
                margin: 3
            }
              , o = function(t, e) {
                return "object" === (void 0 === t ? "undefined" : r(t)) && t.hasOwnProperty(e)
            }
              , a = function(t) {
                return t + "px"
            };
            e.default = {
                name: "ToggleButton",
                props: {
                    value: {
                        type: Boolean,
                        default: !1
                    },
                    disabled: {
                        type: Boolean,
                        default: !1
                    },
                    sync: {
                        type: Boolean,
                        default: !1
                    },
                    speed: {
                        type: Number,
                        default: 300
                    },
                    color: {
                        type: [String, Object],
                        validator: function(t) {
                            return "object" === (void 0 === t ? "undefined" : r(t)) ? t.checked || t.unchecked : "string" == typeof t
                        }
                    },
                    cssColors: {
                        type: Boolean,
                        default: !1
                    },
                    labels: {
                        type: [Boolean, Object],
                        default: !1,
                        validator: function(t) {
                            return "object" === (void 0 === t ? "undefined" : r(t)) ? t.checked || t.unchecked : "boolean" == typeof t
                        }
                    },
                    height: {
                        type: Number,
                        default: i.height
                    },
                    width: {
                        type: Number,
                        default: i.width
                    }
                },
                computed: {
                    className: function() {
                        return ["vue-js-switch", {
                            toggled: this.toggled,
                            disabled: this.disabled
                        }]
                    },
                    ariaChecked: function() {
                        return this.toggled.toString()
                    },
                    coreStyle: function() {
                        return {
                            width: a(this.width),
                            height: a(this.height),
                            backgroundColor: this.cssColors ? null : this.colorCurrent,
                            borderRadius: a(Math.round(this.height / 2))
                        }
                    },
                    buttonRadius: function() {
                        return this.height - 2 * i.margin
                    },
                    distance: function() {
                        return a(this.width - this.height + i.margin)
                    },
                    buttonStyle: function() {
                        return {
                            width: a(this.buttonRadius),
                            height: a(this.buttonRadius),
                            transition: "transform " + this.speed + "ms",
                            transform: this.toggled ? "translate3d(" + this.distance + ", 3px, 0px)" : null
                        }
                    },
                    labelStyle: function() {
                        return {
                            lineHeight: a(this.height)
                        }
                    },
                    colorChecked: function() {
                        var t = this.color;
                        return "object" !== (void 0 === t ? "undefined" : r(t)) ? t || i.colorChecked : o(t, "checked") ? t.checked : i.colorChecked
                    },
                    colorUnchecked: function() {
                        var t = this.color;
                        return o(t, "unchecked") ? t.unchecked : i.colorUnchecked
                    },
                    colorCurrent: function() {
                        return this.toggled ? this.colorChecked : this.colorUnchecked
                    },
                    labelChecked: function() {
                        return o(this.labels, "checked") ? this.labels.checked : i.labelChecked
                    },
                    labelUnchecked: function() {
                        return o(this.labels, "unchecked") ? this.labels.unchecked : i.labelUnchecked
                    }
                },
                watch: {
                    value: function(t) {
                        this.sync && (this.toggled = !!t)
                    }
                },
                data: function() {
                    return {
                        toggled: !!this.value
                    }
                },
                methods: {
                    toggle: function(t) {
                        this.toggled = !this.toggled,
                        this.$emit("input", this.toggled),
                        this.$emit("change", {
                            value: this.toggled,
                            srcEvent: t
                        })
                    }
                }
            }
        }
        , function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(1)
              , i = (n.n(r),
            n(0))
              , o = n.n(i)
              , a = {
                install: function(t, e) {
                    t.component("ToggleButton", o.a)
                }
            };
            e.default = a
        }
        , function(t, e, n) {
            e = t.exports = n(5)(),
            e.push([t.i, ".vue-js-switch[data-v-25adc6c0]{display:inline-block;position:relative;overflow:hidden;vertical-align:middle;user-select:none;font-size:10px;cursor:pointer}.vue-js-switch .v-switch-input[data-v-25adc6c0]{display:none}.vue-js-switch .v-switch-label[data-v-25adc6c0]{position:absolute;top:0;font-weight:600;color:#fff;z-index:2}.vue-js-switch .v-switch-label.v-left[data-v-25adc6c0]{left:10px}.vue-js-switch .v-switch-label.v-right[data-v-25adc6c0]{right:10px}.vue-js-switch .v-switch-core[data-v-25adc6c0]{display:block;position:relative;box-sizing:border-box;outline:0;margin:0;transition:border-color .3s,background-color .3s;user-select:none}.vue-js-switch .v-switch-core .v-switch-button[data-v-25adc6c0]{display:block;position:absolute;overflow:hidden;top:0;left:0;z-index:3;transform:translate3d(3px,3px,0);border-radius:100%;background-color:#fff}.vue-js-switch.disabled[data-v-25adc6c0]{pointer-events:none;opacity:.6}", ""])
        }
        , function(t, e) {
            t.exports = function() {
                var t = [];
                return t.toString = function() {
                    for (var t = [], e = 0; e < this.length; e++) {
                        var n = this[e];
                        n[2] ? t.push("@media " + n[2] + "{" + n[1] + "}") : t.push(n[1])
                    }
                    return t.join("")
                }
                ,
                t.i = function(e, n) {
                    "string" == typeof e && (e = [[null, e, ""]]);
                    for (var r = {}, i = 0; i < this.length; i++) {
                        var o = this[i][0];
                        "number" == typeof o && (r[o] = !0)
                    }
                    for (i = 0; i < e.length; i++) {
                        var a = e[i];
                        "number" == typeof a[0] && r[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"),
                        t.push(a))
                    }
                }
                ,
                t
            }
        }
        , function(t, e) {
            t.exports = function(t, e, n, r) {
                var i, o = t = t || {}, a = typeof t.default;
                "object" !== a && "function" !== a || (i = t,
                o = t.default);
                var s = "function" == typeof o ? o.options : o;
                if (e && (s.render = e.render,
                s.staticRenderFns = e.staticRenderFns),
                n && (s._scopeId = n),
                r) {
                    var c = Object.create(s.computed || null);
                    Object.keys(r).forEach(function(t) {
                        var e = r[t];
                        c[t] = function() {
                            return e
                        }
                    }),
                    s.computed = c
                }
                return {
                    esModule: i,
                    exports: o,
                    options: s
                }
            }
        }
        , function(t, e) {
            t.exports = {
                render: function() {
                    var t = this
                      , e = t.$createElement
                      , n = t._self._c || e;
                    return n("label", {
                        class: t.className,
                        attrs: {
                            role: "checkbox",
                            "aria-checked": t.ariaChecked
                        }
                    }, [n("input", {
                        staticClass: "v-switch-input",
                        attrs: {
                            type: "checkbox"
                        },
                        on: {
                            change: function(e) {
                                e.stopPropagation(),
                                t.toggle(e)
                            }
                        }
                    }), t._v(" "), n("div", {
                        staticClass: "v-switch-core",
                        style: t.coreStyle
                    }, [n("div", {
                        staticClass: "v-switch-button",
                        style: t.buttonStyle
                    })]), t._v(" "), t.labels ? [t.toggled ? n("span", {
                        staticClass: "v-switch-label v-left",
                        style: t.labelStyle,
                        domProps: {
                            innerHTML: t._s(t.labelChecked)
                        }
                    }) : n("span", {
                        staticClass: "v-switch-label v-right",
                        style: t.labelStyle,
                        domProps: {
                            innerHTML: t._s(t.labelUnchecked)
                        }
                    })] : t._e()], 2)
                },
                staticRenderFns: []
            }
        }
        , function(t, e, n) {
            var r = n(4);
            "string" == typeof r && (r = [[t.i, r, ""]]),
            r.locals && (t.exports = r.locals);
            n(9)("2283861f", r, !0)
        }
        , function(t, e, n) {
            function r(t) {
                for (var e = 0; e < t.length; e++) {
                    var n = t[e]
                      , r = u[n.id];
                    if (r) {
                        r.refs++;
                        for (var i = 0; i < r.parts.length; i++)
                            r.parts[i](n.parts[i]);
                        for (; i < n.parts.length; i++)
                            r.parts.push(o(n.parts[i]));
                        r.parts.length > n.parts.length && (r.parts.length = n.parts.length)
                    } else {
                        for (var a = [], i = 0; i < n.parts.length; i++)
                            a.push(o(n.parts[i]));
                        u[n.id] = {
                            id: n.id,
                            refs: 1,
                            parts: a
                        }
                    }
                }
            }
            function i() {
                var t = document.createElement("style");
                return t.type = "text/css",
                h.appendChild(t),
                t
            }
            function o(t) {
                var e, n, r = document.querySelector('style[data-vue-ssr-id~="' + t.id + '"]');
                if (r) {
                    if (f)
                        return m;
                    r.parentNode.removeChild(r)
                }
                if (v) {
                    var o = p++;
                    r = d || (d = i()),
                    e = a.bind(null, r, o, !1),
                    n = a.bind(null, r, o, !0)
                } else
                    r = i(),
                    e = s.bind(null, r),
                    n = function() {
                        r.parentNode.removeChild(r)
                    }
                    ;
                return e(t),
                function(r) {
                    if (r) {
                        if (r.css === t.css && r.media === t.media && r.sourceMap === t.sourceMap)
                            return;
                        e(t = r)
                    } else
                        n()
                }
            }
            function a(t, e, n, r) {
                var i = n ? "" : r.css;
                if (t.styleSheet)
                    t.styleSheet.cssText = g(e, i);
                else {
                    var o = document.createTextNode(i)
                      , a = t.childNodes;
                    a[e] && t.removeChild(a[e]),
                    a.length ? t.insertBefore(o, a[e]) : t.appendChild(o)
                }
            }
            function s(t, e) {
                var n = e.css
                  , r = e.media
                  , i = e.sourceMap;
                if (r && t.setAttribute("media", r),
                i && (n += "\n/*# sourceURL=" + i.sources[0] + " */",
                n += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(i)))) + " */"),
                t.styleSheet)
                    t.styleSheet.cssText = n;
                else {
                    for (; t.firstChild; )
                        t.removeChild(t.firstChild);
                    t.appendChild(document.createTextNode(n))
                }
            }
            var c = "undefined" != typeof document;
            if ("undefined" != typeof DEBUG && DEBUG && !c)
                throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
            var l = n(10)
              , u = {}
              , h = c && (document.head || document.getElementsByTagName("head")[0])
              , d = null
              , p = 0
              , f = !1
              , m = function() {}
              , v = "undefined" != typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
            t.exports = function(t, e, n) {
                f = n;
                var i = l(t, e);
                return r(i),
                function(e) {
                    for (var n = [], o = 0; o < i.length; o++) {
                        var a = i[o]
                          , s = u[a.id];
                        s.refs--,
                        n.push(s)
                    }
                    e ? (i = l(t, e),
                    r(i)) : i = [];
                    for (var o = 0; o < n.length; o++) {
                        var s = n[o];
                        if (0 === s.refs) {
                            for (var c = 0; c < s.parts.length; c++)
                                s.parts[c]();
                            delete u[s.id]
                        }
                    }
                }
            }
            ;
            var g = function() {
                var t = [];
                return function(e, n) {
                    return t[e] = n,
                    t.filter(Boolean).join("\n")
                }
            }()
        }
        , function(t, e) {
            t.exports = function(t, e) {
                for (var n = [], r = {}, i = 0; i < e.length; i++) {
                    var o = e[i]
                      , a = o[0]
                      , s = o[1]
                      , c = o[2]
                      , l = o[3]
                      , u = {
                        id: t + ":" + i,
                        css: s,
                        media: c,
                        sourceMap: l
                    };
                    r[a] ? r[a].parts.push(u) : n.push(r[a] = {
                        id: a,
                        parts: [u]
                    })
                }
                return n
            }
        }
        ])
    })
}
, function(t, e, n) {
    t.exports = n.p + "images/st-button-facebook.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images/st-button-twitter.svg"
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("header", {
            staticClass: "st-content-menu",
            attrs: {
                role: "banner"
            }
        }, [n("nav", {
            staticClass: "st-content-menu-fixed"
        }, [n("div", {
            staticClass: "navbar"
        }, [t.is_mobile() && t.menu ? n("div", {
            staticClass: "toggle-display-mode"
        }, [n("span", [t._v("Cinema Mode")]), t._v(" "), n("toggle-button", {
            attrs: {
                value: !1,
                color: (t.cinemaModeOn,
                "#666"),
                labels: !0
            },
            on: {
                change: function(e) {
                    t.toggleDisplayMode()
                }
            }
        })], 1) : t._e(), t._v(" "), t._m(0), t._v(" "), n("ul", t._l(t.menu, function(e) {
            return n("li", ["no" === e.module ? n("a", {
                attrs: {
                    href: e.href,
                    title: e.title,
                    alt: e.title
                }
            }, [t._v(t._s(e.name))]) : t._e(), t._v(" "), "no" !== e.module ? n("router-link", {
                attrs: {
                    title: e.title,
                    to: e.href
                }
            }, [t._v(t._s(e.name))]) : t._e()], 1)
        })), t._v(" "), n("figure", {
            staticClass: "st-social-desktop",
            attrs: {
                itemprop: "associatedMedia image",
                itemscope: "",
                itemtype: "http://schema.org/ImageObject",
                "data-component": "image"
            }
        }, [n("v-touch", {
            staticClass: "st-image-responsive",
            attrs: {
                tag: "img",
                src: t.getImageFacebook(),
                alt: "st button facebook",
                title: "st button facebook"
            },
            on: {
                tap: t.shareFacebook
            }
        }), t._v(" "), n("v-touch", {
            staticClass: "st-image-responsive",
            attrs: {
                tag: "img",
                src: t.getImageTwitter(),
                alt: "st button twitter",
                title: "st button twitter"
            },
            on: {
                tap: t.shareTwitter
            }
        })], 1)])]), t._v(" "), n("div", {
            staticClass: "st-mb"
        }, [n("div", {
            staticClass: "st-button-menu-mobile"
        }, [n("svg", {
            attrs: {
                version: "1.1",
                xmlns: "http://www.w3.org/2000/svg",
                "xmlns:xlink": "http://www.w3.org/1999/xlink",
                x: "0px",
                y: "0px",
                width: "32px",
                height: "32px",
                viewBox: "0 0 35 35",
                "enable-background": "new 0 0 35 35",
                "xml:space": "preserve"
            }
        }, [n("circle", {
            attrs: {
                fill: "#363636",
                stroke: "#FFFFFF",
                "stroke-miterlimit": "10",
                cx: "18.2",
                cy: "17.6",
                r: "15.5"
            }
        }), t._v(" "), n("line", {
            staticClass: "first_line",
            attrs: {
                fill: "none",
                stroke: "#FFFFFF",
                "stroke-width": "1.7",
                "stroke-miterlimit": "10",
                x1: "10.5",
                y1: "13.2",
                x2: "26.1",
                y2: "13.2"
            }
        }), t._v(" "), n("line", {
            staticClass: "menu_mobile_line_center",
            attrs: {
                fill: "none",
                stroke: "#FFFFFF",
                "stroke-width": "1.7",
                "stroke-miterlimit": "10",
                x1: "10.5",
                y1: "17.6",
                x2: "26.1",
                y2: "17.6"
            }
        }), t._v(" "), n("line", {
            staticClass: "second_line",
            attrs: {
                fill: "none",
                stroke: "#FFFFFF",
                "stroke-width": "1.7",
                "stroke-miterlimit": "10",
                x1: "10.5",
                y1: "21.9",
                x2: "26.1",
                y2: "21.9"
            }
        })])]), t._v(" "), n("div", {
            staticClass: "modal-menu-mobile"
        }, [n("div", {
            staticClass: "st-content-detail-menu-mobile"
        }, [n("div", {
            attrs: {
                id: "wrapper-detail-menu-mobile"
            }
        }, [n("div", {
            staticClass: "body-detail-menu-mobile"
        }, t._l(t.menu, function(e) {
            return n("div", {
                staticClass: "detail-menu-mobile"
            }, [n("div", {
                staticClass: "title-menu-mobile"
            }, ["no" === e.module ? n("a", {
                attrs: {
                    href: e.href,
                    title: e.title,
                    alt: e.title
                }
            }, [t._v(t._s(e.name))]) : t._e(), t._v(" "), "no" !== e.module ? n("router-link", {
                attrs: {
                    title: e.title,
                    to: e.href
                }
            }, [t._v(t._s(e.name))]) : t._e()], 1), t._v(" "), n("div", {
                staticClass: "transform-border-hairline"
            })])
        }))])]), t._v(" "), n("div", {
            staticClass: "st-content-shared-social"
        }, [n("figure", {
            staticClass: "st-social-mobile",
            attrs: {
                itemprop: "associatedMedia image",
                itemscope: "",
                itemtype: "http://schema.org/ImageObject",
                "data-component": "image"
            }
        }, [n("v-touch", {
            staticClass: "st-image-responsive",
            attrs: {
                tag: "img",
                src: t.getImageFacebook(),
                alt: "st button facebook",
                title: "st button facebook"
            },
            on: {
                tap: t.shareFacebook
            }
        }), t._v(" "), n("v-touch", {
            staticClass: "st-image-responsive",
            attrs: {
                tag: "img",
                src: t.getImageTwitter(),
                alt: "st button twitter",
                title: "st button twitter"
            },
            on: {
                tap: t.shareTwitter
            }
        })], 1)])])])])
    }
      , i = [function() {
        var t = this
          , e = t.$createElement
          , r = t._self._c || e;
        return r("figure", {
            staticClass: "st-logo",
            attrs: {
                itemprop: "associatedMedia image",
                itemscope: "",
                itemtype: "http://schema.org/ImageObject",
                "data-component": "image"
            }
        }, [r("a", {
            attrs: {
                href: "http://www.straitstimes.com/",
                target: "_blank"
            }
        }, [r("img", {
            staticClass: "st-image-responsive",
            attrs: {
                id: "short_logo",
                src: n(685),
                alt: "Straitstimes logo",
                title: "Straitstimes logo"
            }
        }), t._v(" "), r("img", {
            staticClass: "st-image-responsive",
            attrs: {
                id: "long_logo",
                src: n(686),
                alt: "Straitstimes logo",
                title: "Straitstimes logo"
            }
        })])])
    }
    ];
    r._withStripped = !0
}
, function(t, e, n) {
    t.exports = n.p + "images/st-logo.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images/straits-times-logo.svg"
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(688)
      , i = n(8)
      , o = Object(i.a)(null, r.a, r.b, !1, null, null, null);
    o.options.__file = "template/footer/st-footer-v1.vue",
    e.default = o.exports
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement;
        t._self._c;
        return t._m(0)
    }
      , i = [function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("footer", {
            staticClass: "st-content-footer"
        }, [n("p", {
            staticClass: "st-footer"
        }, [t._v("\n\t\tSPH Digital News / Copyright © 2018 Singapore Press Holdings Ltd. Co. Regn No. 198402868E. All rights reserved.\n\t")])])
    }
    ];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "st-content-graphic scrollContent",
            attrs: {
                id: "st-content-graphic",
                itemscope: "",
                itemtype: "http://schema.org/NewsArticle"
            }
        }, [t.date ? n("meta", {
            attrs: {
                itemprop: "datePublished",
                content: t.date
            }
        }) : t._e(), t._v(" "), n("st-menu"), t._v(" "), n("transition", [n("keep-alive", [n("router-view")], 1)], 1), t._v(" "), n("transition", {
            attrs: {
                name: "fade"
            }
        }, [t.loading ? n("div", {
            staticClass: "loading-page"
        }) : t._e()])], 1)
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(227)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1170)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/st-main.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(692)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(228)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(960)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-c3bc4574", null);
    h.options.__file = "template/main/header/st-header.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    (function(t) {
        function e(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var r = n(72)
          , i = e(r)
          , o = n(694)
          , a = e(o)
          , s = n(106)
          , c = e(s);
        /*! npm.im/iphone-inline-video 2.2.2 */
        t.enableInlineVideo = function() {
            /*! npm.im/intervalometer */
            function t(t, e, n, r) {
                function i(n) {
                    o = e(i, r),
                    t(n - (a || n)),
                    a = n
                }
                var o, a;
                return {
                    start: function() {
                        o || i(0)
                    },
                    stop: function() {
                        n(o),
                        o = null,
                        a = 0
                    }
                }
            }
            function e(e) {
                return t(e, requestAnimationFrame, cancelAnimationFrame)
            }
            function n(t, e, n) {
                function r(r) {
                    n && !n(t, e) || r.stopImmediatePropagation()
                }
                return t.addEventListener(e, r),
                r
            }
            function r(t, e, n, r) {
                function i() {
                    return n[e]
                }
                function o(t) {
                    n[e] = t
                }
                r && o(t[e]),
                (0,
                c.default)(t, e, {
                    get: i,
                    set: o
                })
            }
            function o(t, e, n) {
                n.addEventListener(e, function() {
                    return t.dispatchEvent(new Event(e))
                })
            }
            function s(t, e) {
                a.default.resolve().then(function() {
                    t.dispatchEvent(new Event(e))
                })
            }
            function l(t) {
                var e = new Audio;
                return o(t, "play", e),
                o(t, "playing", e),
                o(t, "pause", e),
                e.crossOrigin = t.crossOrigin,
                e.src = t.src || t.currentSrc || "data:",
                e
            }
            function u(t, e, n) {
                (_ || 0) + 200 < Date.now() && (t[w] = !0,
                _ = Date.now()),
                n || (t.currentTime = e),
                T[++S % 3] = 100 * e | 0
            }
            function h(t) {
                return t.driver.currentTime >= t.video.duration
            }
            function d(t) {
                var e = this;
                e.video.readyState >= e.video.HAVE_FUTURE_DATA ? (e.hasAudio || (e.driver.currentTime = e.video.currentTime + t * e.video.playbackRate / 1e3,
                e.video.loop && h(e) && (e.driver.currentTime = 0)),
                u(e.video, e.driver.currentTime)) : e.video.networkState === e.video.NETWORK_IDLE && 0 === e.video.buffered.length && e.video.load(),
                e.video.ended && (delete e.video[w],
                e.video.pause(!0))
            }
            function p() {
                var t = this
                  , e = t[b];
                if (t.webkitDisplayingFullscreen)
                    return void t[M]();
                "data:" !== e.driver.src && e.driver.src !== t.src && (u(t, 0, !0),
                e.driver.src = t.src),
                t.paused && (e.paused = !1,
                0 === t.buffered.length && t.load(),
                e.driver.play(),
                e.updater.start(),
                e.hasAudio || (s(t, "play"),
                e.video.readyState >= e.video.HAVE_ENOUGH_DATA && s(t, "playing")))
            }
            function f(t) {
                var e = this
                  , n = e[b];
                n.driver.pause(),
                n.updater.stop(),
                e.webkitDisplayingFullscreen && e[E](),
                n.paused && !t || (n.paused = !0,
                n.hasAudio || s(e, "pause"),
                e.ended && !e.webkitDisplayingFullscreen && (e[w] = !0,
                s(e, "ended")))
            }
            function m(t, n) {
                var r = {};
                t[b] = r,
                r.paused = !0,
                r.hasAudio = n,
                r.video = t,
                r.updater = e(d.bind(r)),
                n ? r.driver = l(t) : (t.addEventListener("canplay", function() {
                    t.paused || s(t, "playing")
                }),
                r.driver = {
                    src: t.src || t.currentSrc || "data:",
                    muted: !0,
                    paused: !0,
                    pause: function() {
                        r.driver.paused = !0
                    },
                    play: function() {
                        r.driver.paused = !1,
                        h(r) && u(t, 0)
                    },
                    get ended() {
                        return h(r)
                    }
                }),
                t.addEventListener("emptied", function() {
                    var e = !r.driver.src || "data:" === r.driver.src;
                    r.driver.src && r.driver.src !== t.src && (u(t, 0, !0),
                    r.driver.src = t.src,
                    e || !n && t.autoplay ? r.driver.play() : r.updater.stop())
                }, !1),
                t.addEventListener("webkitbeginfullscreen", function() {
                    t.paused ? n && 0 === r.driver.buffered.length && r.driver.load() : (t.pause(),
                    t[M]())
                }),
                n && (t.addEventListener("webkitendfullscreen", function() {
                    r.driver.currentTime = t.currentTime
                }),
                t.addEventListener("seeking", function() {
                    T.indexOf(100 * t.currentTime | 0) < 0 && (r.driver.currentTime = t.currentTime)
                }))
            }
            function v(t) {
                var e = t[w];
                return delete t[w],
                !t.webkitDisplayingFullscreen && !e
            }
            function g(t) {
                var e = t[b];
                t[M] = t.play,
                t[E] = t.pause,
                t.play = p,
                t.pause = f,
                r(t, "paused", e.driver),
                r(t, "muted", e.driver, !0),
                r(t, "playbackRate", e.driver, !0),
                r(t, "ended", e.driver),
                r(t, "loop", e.driver, !0),
                n(t, "seeking", function(t) {
                    return !t.webkitDisplayingFullscreen
                }),
                n(t, "seeked", function(t) {
                    return !t.webkitDisplayingFullscreen
                }),
                n(t, "timeupdate", v),
                n(t, "ended", v)
            }
            function y(t, e) {
                if (void 0 === e && (e = {}),
                !t[b]) {
                    if (!e.everywhere) {
                        if (!x)
                            return;
                        if (!(e.iPad || e.ipad ? /iPhone|iPod|iPad/ : /iPhone|iPod/).test(navigator.userAgent))
                            return
                    }
                    t.pause();
                    var n = t.autoplay;
                    t.autoplay = !1,
                    m(t, !t.muted),
                    g(t),
                    t.classList.add("IIV"),
                    t.muted && n && (t.play(),
                    t.addEventListener("playing", function e() {
                        t.autoplay = !0,
                        t.removeEventListener("playing", e)
                    })),
                    /iPhone|iPod|iPad/.test(navigator.platform) || console.warn("iphone-inline-video is not guaranteed to work in emulated environments")
                }
            }
            var _, x = "object" === ("undefined" == typeof document ? "undefined" : (0,
            i.default)(document)) && "object-fit"in document.head.style && !matchMedia("(-webkit-video-playable-inline)").matches, b = "bfred-it:iphone-inline-video", w = "bfred-it:iphone-inline-video:event", M = "bfred-it:iphone-inline-video:nativeplay", E = "bfred-it:iphone-inline-video:nativepause", T = [], S = 0;
            return y
        }()
    }
    ).call(e, n(51))
}
, function(t, e, n) {
    t.exports = {
        default: n(695),
        __esModule: !0
    }
}
, function(t, e, n) {
    n(202),
    n(194),
    n(199),
    n(696),
    n(707),
    n(708),
    t.exports = n(13).Promise
}
, function(t, e, n) {
    "use strict";
    var r, i, o, a, s = n(100), c = n(16), l = n(84), u = n(229), h = n(27), d = n(48), p = n(95), f = n(697), m = n(698), v = n(230), g = n(231).set, y = n(703)(), _ = n(147), x = n(232), b = n(233), w = c.TypeError, M = c.process, E = c.Promise, T = "process" == u(M), S = function() {}, A = i = _.f, C = !!function() {
        try {
            var t = E.resolve(1)
              , e = (t.constructor = {})[n(17)("species")] = function(t) {
                t(S, S)
            }
            ;
            return (T || "function" == typeof PromiseRejectionEvent) && t.then(S)instanceof e
        } catch (t) {}
    }(), P = function(t) {
        var e;
        return !(!d(t) || "function" != typeof (e = t.then)) && e
    }, L = function(t, e) {
        if (!t._n) {
            t._n = !0;
            var n = t._c;
            y(function() {
                for (var r = t._v, i = 1 == t._s, o = 0; n.length > o; )
                    !function(e) {
                        var n, o, a = i ? e.ok : e.fail, s = e.resolve, c = e.reject, l = e.domain;
                        try {
                            a ? (i || (2 == t._h && I(t),
                            t._h = 1),
                            !0 === a ? n = r : (l && l.enter(),
                            n = a(r),
                            l && l.exit()),
                            n === e.promise ? c(w("Promise-chain cycle")) : (o = P(n)) ? o.call(n, s, c) : s(n)) : c(r)
                        } catch (t) {
                            c(t)
                        }
                    }(n[o++]);
                t._c = [],
                t._n = !1,
                e && !t._h && R(t)
            })
        }
    }, R = function(t) {
        g.call(c, function() {
            var e, n, r, i = t._v, o = O(t);
            if (o && (e = x(function() {
                T ? M.emit("unhandledRejection", i, t) : (n = c.onunhandledrejection) ? n({
                    promise: t,
                    reason: i
                }) : (r = c.console) && r.error && r.error("Unhandled promise rejection", i)
            }),
            t._h = T || O(t) ? 2 : 1),
            t._a = void 0,
            o && e.e)
                throw e.v
        })
    }, O = function(t) {
        return 1 !== t._h && 0 === (t._a || t._c).length
    }, I = function(t) {
        g.call(c, function() {
            var e;
            T ? M.emit("rejectionHandled", t) : (e = c.onrejectionhandled) && e({
                promise: t,
                reason: t._v
            })
        })
    }, D = function(t) {
        var e = this;
        e._d || (e._d = !0,
        e = e._w || e,
        e._v = t,
        e._s = 2,
        e._a || (e._a = e._c.slice()),
        L(e, !0))
    }, N = function(t) {
        var e, n = this;
        if (!n._d) {
            n._d = !0,
            n = n._w || n;
            try {
                if (n === t)
                    throw w("Promise can't be resolved itself");
                (e = P(t)) ? y(function() {
                    var r = {
                        _w: n,
                        _d: !1
                    };
                    try {
                        e.call(t, l(N, r, 1), l(D, r, 1))
                    } catch (t) {
                        D.call(r, t)
                    }
                }) : (n._v = t,
                n._s = 1,
                L(n, !1))
            } catch (t) {
                D.call({
                    _w: n,
                    _d: !1
                }, t)
            }
        }
    };
    C || (E = function(t) {
        f(this, E, "Promise", "_h"),
        p(t),
        r.call(this);
        try {
            t(l(N, this, 1), l(D, this, 1))
        } catch (t) {
            D.call(this, t)
        }
    }
    ,
    r = function(t) {
        this._c = [],
        this._a = void 0,
        this._s = 0,
        this._d = !1,
        this._v = void 0,
        this._h = 0,
        this._n = !1
    }
    ,
    r.prototype = n(704)(E.prototype, {
        then: function(t, e) {
            var n = A(v(this, E));
            return n.ok = "function" != typeof t || t,
            n.fail = "function" == typeof e && e,
            n.domain = T ? M.domain : void 0,
            this._c.push(n),
            this._a && this._a.push(n),
            this._s && L(this, !1),
            n.promise
        },
        catch: function(t) {
            return this.then(void 0, t)
        }
    }),
    o = function() {
        var t = new r;
        this.promise = t,
        this.resolve = l(N, t, 1),
        this.reject = l(D, t, 1)
    }
    ,
    _.f = A = function(t) {
        return t === E || t === a ? new o(t) : i(t)
    }
    ),
    h(h.G + h.W + h.F * !C, {
        Promise: E
    }),
    n(101)(E, "Promise"),
    n(705)("Promise"),
    a = n(13).Promise,
    h(h.S + h.F * !C, "Promise", {
        reject: function(t) {
            var e = A(this);
            return (0,
            e.reject)(t),
            e.promise
        }
    }),
    h(h.S + h.F * (s || !C), "Promise", {
        resolve: function(t) {
            return b(s && this === a ? E : this, t)
        }
    }),
    h(h.S + h.F * !(C && n(706)(function(t) {
        E.all(t).catch(S)
    })), "Promise", {
        all: function(t) {
            var e = this
              , n = A(e)
              , r = n.resolve
              , i = n.reject
              , o = x(function() {
                var n = []
                  , o = 0
                  , a = 1;
                m(t, !1, function(t) {
                    var s = o++
                      , c = !1;
                    n.push(void 0),
                    a++,
                    e.resolve(t).then(function(t) {
                        c || (c = !0,
                        n[s] = t,
                        --a || r(n))
                    }, i)
                }),
                --a || r(n)
            });
            return o.e && i(o.v),
            n.promise
        },
        race: function(t) {
            var e = this
              , n = A(e)
              , r = n.reject
              , i = x(function() {
                m(t, !1, function(t) {
                    e.resolve(t).then(n.resolve, r)
                })
            });
            return i.e && r(i.v),
            n.promise
        }
    })
}
, function(t, e) {
    t.exports = function(t, e, n, r) {
        if (!(t instanceof e) || void 0 !== r && r in t)
            throw TypeError(n + ": incorrect invocation!");
        return t
    }
}
, function(t, e, n) {
    var r = n(84)
      , i = n(699)
      , o = n(700)
      , a = n(40)
      , s = n(193)
      , c = n(701)
      , l = {}
      , u = {}
      , e = t.exports = function(t, e, n, h, d) {
        var p, f, m, v, g = d ? function() {
            return t
        }
        : c(t), y = r(n, h, e ? 2 : 1), _ = 0;
        if ("function" != typeof g)
            throw TypeError(t + " is not iterable!");
        if (o(g)) {
            for (p = s(t.length); p > _; _++)
                if ((v = e ? y(a(f = t[_])[0], f[1]) : y(t[_])) === l || v === u)
                    return v
        } else
            for (m = g.call(t); !(f = m.next()).done; )
                if ((v = i(m, y, f.value, e)) === l || v === u)
                    return v
    }
    ;
    e.BREAK = l,
    e.RETURN = u
}
, function(t, e, n) {
    var r = n(40);
    t.exports = function(t, e, n, i) {
        try {
            return i ? e(r(n)[0], n[1]) : e(n)
        } catch (e) {
            var o = t.return;
            throw void 0 !== o && r(o.call(t)),
            e
        }
    }
}
, function(t, e, n) {
    var r = n(87)
      , i = n(17)("iterator")
      , o = Array.prototype;
    t.exports = function(t) {
        return void 0 !== t && (r.Array === t || o[i] === t)
    }
}
, function(t, e, n) {
    var r = n(229)
      , i = n(17)("iterator")
      , o = n(87);
    t.exports = n(13).getIteratorMethod = function(t) {
        if (void 0 != t)
            return t[i] || t["@@iterator"] || o[r(t)]
    }
}
, function(t, e) {
    t.exports = function(t, e, n) {
        var r = void 0 === n;
        switch (e.length) {
        case 0:
            return r ? t() : t.call(n);
        case 1:
            return r ? t(e[0]) : t.call(n, e[0]);
        case 2:
            return r ? t(e[0], e[1]) : t.call(n, e[0], e[1]);
        case 3:
            return r ? t(e[0], e[1], e[2]) : t.call(n, e[0], e[1], e[2]);
        case 4:
            return r ? t(e[0], e[1], e[2], e[3]) : t.call(n, e[0], e[1], e[2], e[3])
        }
        return t.apply(n, e)
    }
}
, function(t, e, n) {
    var r = n(16)
      , i = n(231).set
      , o = r.MutationObserver || r.WebKitMutationObserver
      , a = r.process
      , s = r.Promise
      , c = "process" == n(86)(a);
    t.exports = function() {
        var t, e, n, l = function() {
            var r, i;
            for (c && (r = a.domain) && r.exit(); t; ) {
                i = t.fn,
                t = t.next;
                try {
                    i()
                } catch (r) {
                    throw t ? n() : e = void 0,
                    r
                }
            }
            e = void 0,
            r && r.enter()
        };
        if (c)
            n = function() {
                a.nextTick(l)
            }
            ;
        else if (!o || r.navigator && r.navigator.standalone)
            if (s && s.resolve) {
                var u = s.resolve();
                n = function() {
                    u.then(l)
                }
            } else
                n = function() {
                    i.call(r, l)
                }
                ;
        else {
            var h = !0
              , d = document.createTextNode("");
            new o(l).observe(d, {
                characterData: !0
            }),
            n = function() {
                d.data = h = !h
            }
        }
        return function(r) {
            var i = {
                fn: r,
                next: void 0
            };
            e && (e.next = i),
            t || (t = i,
            n()),
            e = i
        }
    }
}
, function(t, e, n) {
    var r = n(56);
    t.exports = function(t, e, n) {
        for (var i in e)
            n && t[i] ? t[i] = e[i] : r(t, i, e[i]);
        return t
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(16)
      , i = n(13)
      , o = n(47)
      , a = n(49)
      , s = n(17)("species");
    t.exports = function(t) {
        var e = "function" == typeof i[t] ? i[t] : r[t];
        a && e && !e[s] && o.f(e, s, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
}
, function(t, e, n) {
    var r = n(17)("iterator")
      , i = !1;
    try {
        var o = [7][r]();
        o.return = function() {
            i = !0
        }
        ,
        Array.from(o, function() {
            throw 2
        })
    } catch (t) {}
    t.exports = function(t, e) {
        if (!e && !i)
            return !1;
        var n = !1;
        try {
            var o = [7]
              , a = o[r]();
            a.next = function() {
                return {
                    done: n = !0
                }
            }
            ,
            o[r] = function() {
                return a
            }
            ,
            t(o)
        } catch (t) {}
        return n
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(27)
      , i = n(13)
      , o = n(16)
      , a = n(230)
      , s = n(233);
    r(r.P + r.R, "Promise", {
        finally: function(t) {
            var e = a(this, i.Promise || o.Promise)
              , n = "function" == typeof t;
            return this.then(n ? function(n) {
                return s(e, t()).then(function() {
                    return n
                })
            }
            : t, n ? function(n) {
                return s(e, t()).then(function() {
                    throw n
                })
            }
            : t)
        }
    })
}
, function(t, e, n) {
    "use strict";
    var r = n(27)
      , i = n(147)
      , o = n(232);
    r(r.S, "Promise", {
        try: function(t) {
            var e = i.f(this)
              , n = o(t);
            return (n.e ? e.reject : e.resolve)(n.v),
            e.promise
        }
    })
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/creation.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/enemy.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/family.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/friend.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/movies.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/romance.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/icons/work.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/doubleTap.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/mouseL.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/mouseM.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/mouseR.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/oneFinger.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/instructions/twoFinger.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/marvelLogo.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/aarond.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/abomination.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/abrahame.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/abub.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/adriant.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/aldrichk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/aletao.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/alexanderp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/algrim.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/anciento.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/annem.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/antman.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/antonvo.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/antonvy.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/arnimz.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/asgardian.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ayesha.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bettyb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bettyr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/blackp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/blackpk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/blackw.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/blackwca3.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bor.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bordert.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/brockr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bruceb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/bucky.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/capta.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/carina.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/cassiel.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/charlie.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/chesterp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/chitauri.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/christinee.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/christinep.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/collector.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/corviusg.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/cosmo.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/crossb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/darcyl.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/darkelf.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/darrenc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/dave.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/destroyer.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/dormammu.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/drax.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/dumdum.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ebonym.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ego.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ellenb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/emilb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/erics.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/erikk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/eriks.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/eugenet.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/everettr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/falcon.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/fandral.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/fenris.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/frigga.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/gabej.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/gamora.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/garthans.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/georgesb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/grandm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/groota.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/grootb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/grootp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/groott.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hamir.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hankp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/happyh.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/harleyk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hawke.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/heimdall.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/heimdallh.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hela.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/helenc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/helmutz.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hermans.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hogun.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hopev.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/howardd.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/howards-trim.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/howardso.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/howardsy.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hulk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/hulkg.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/iranir.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ironl.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ironm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ironmo.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jackr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jacksonb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jacksonn.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jackt.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jamesm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/janef.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jarvis.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jaspers.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jimm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/johanns.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/jonathanp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/justinh.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/kaecilius.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/karlm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/korath.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/korg.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/kraglino.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/krugarr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/kurse.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/kurt.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/laufey.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/laurab.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/leonards.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/list.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/lizt.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/loki.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/luis.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/macg.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/madameb.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/maggiel.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mainf.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/malekith.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mandarin.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mantis.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mariah.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/marias.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/martinex.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/matthewe.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mayah.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mayp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/mbaku.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/merchantt.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/meredithq.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/meredithqy.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/michellej.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/midnightp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/miek.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/miningt.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/nakia.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/nebula.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/nedl.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/nickf.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/njobu.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/novac.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/obadiahs.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/obsidianc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/odin.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/okoye.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/other.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/outrider.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/peggyc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/pepperp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/peterp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/peterq.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/philc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/phineasm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/pietrom.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/principalm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ramonda.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/raza.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/reds.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/rhody.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/rhomannd.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/rivert.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/rocket.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ronan.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/samuels.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/scottl.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/scrapper.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/sharonc.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/shuri.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/sif.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/skurge.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/spiderman.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stakaro.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanlee.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeam1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeav1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeav2.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleebp1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeca1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeca2.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeca3.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeds1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleegotg1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleegotg2.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleehk1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeim1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeim2.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeim3.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleesm1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeth1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeth2.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stanleeth3.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/starlord.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stephens.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stern.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/stever.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/surtur.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/taserf.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/tchaka.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/tchakay.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/tchalla.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/thanos.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/thanosa.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/thor.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/thorlh.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/thunderboltr.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/tonys-trim.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/tonys.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/topaz.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/trevors.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ultron1.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ultronp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ultrons.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ultronu.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/ulyssesk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/valk.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/vision.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/volstagg.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/vulture.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/wandam.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/warm.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/wasp.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/whiplash.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/winters.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/wkabi.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/wolfgangv.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/wong.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/yellowj.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/yinsen.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/yonduu.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/zuri.svg"
}
, function(t, e, n) {
    t.exports = n.p + "images_doc/marvel/nodeIcons/zuriy.svg"
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("header", {
            staticClass: "st-header-page",
            style: {
                backgroundColor: t.header.bg_image || t.header.video ? "#fff" : t.header.backgroundColor
            }
        }, [t.header.bg_image || t.header.video ? n("div", {
            staticClass: "st-header-hero",
            style: {
                width: "100%",
                backgroundColor: t.header.backgroundColor,
                height: (t.header.height && t.fullWidth >= 768 ? t.header.height : 450) + "px"
            }
        }, [t._m(0), t._v(" "), t.header.bg_image ? n("div", {
            staticClass: "st-content-banner"
        }, [n("img", {
            staticClass: "st-image-responsive",
            attrs: {
                src: t.path_image(t.header.bg_image),
                alt: ""
            }
        })]) : t._e(), t._v(" "), t.header.video && !t.header.bg_image ? n("div", {
            staticClass: "st-content-banner-video"
        }, [n("video", {
            attrs: {
                loop: "",
                muted: "",
                playsinline: "",
                src: t.header.video
            },
            domProps: {
                muted: !0
            }
        })]) : t._e()]) : t._e(), t._v(" "), n("div", {
            staticClass: "main-headline-container",
            style: t.position_header(t.header.position_headline)
        }, [n("div", {
            staticClass: "main-headline"
        }, [n("div", {
            staticClass: "st-title"
        }, [n("h1", {
            attrs: {
                itemprop: "headline"
            },
            domProps: {
                innerHTML: t._s(t.header.headline)
            }
        })]), t._v(" "), n("div", {
            staticClass: "st-deck",
            attrs: {
                itemprop: "description"
            }
        }, t._l(t.header.deck, function(e) {
            return n("p", {
                domProps: {
                    innerHTML: t._s(e)
                }
            })
        })), t._v(" "), n("div", {
            staticClass: "st-byline"
        }, [n("time", {
            attrs: {
                itemprop: "datePublished",
                datetime: t.header.datetime,
                "data-timestamp": t.header.timestamp
            }
        }, [t._v("\n            " + t._s(t.header.byline) + "\n        ")])])])])])
    }
      , i = [function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "content-fake-bg"
        }, [n("div", {
            staticClass: "fake-bg-l"
        }), t._v(" "), n("div", {
            staticClass: "fake-bg-r"
        })])
    }
    ];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(476)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1169)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/st-article.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(963)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(477)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(1166)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, null, null);
    h.options.__file = "template/main/article/st-column-content-fullwidth.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(965)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(480)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(966)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-2e494099", null);
    h.options.__file = "template/artefacts/subtitle.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement;
        return (t._self._c || e)("h2", {
            domProps: {
                innerHTML: t._s(t.attributes)
            }
        })
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(481)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(968)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/artefacts/paragraph.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {}, t._l(t.attributes, function(e, r, i) {
            return n("p", {
                domProps: {
                    innerHTML: t._s(e)
                }
            })
        }))
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(970)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(482)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(971)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-a54e8280", null);
    h.options.__file = "template/artefacts/bullets.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("ul", {
            style: {
                listStyleType: t.attributes.type
            }
        }, t._l(t.attributes.list, function(e) {
            return n("li", {
                domProps: {
                    innerHTML: t._s(e)
                }
            })
        }))
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(973)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(483)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(992)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, null, null);
    h.options.__file = "template/artefacts/st-get-svg.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(33)
      , o = r(i)
      , a = n(42)
      , s = r(a)
      , c = n(83)
      , l = r(c)
      , u = n(73)
      , h = r(u)
      , d = n(484)
      , p = function(t) {
        if (t && t.__esModule)
            return t;
        var e = {};
        if (null != t)
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        return e.default = t,
        e
    }(d)
      , f = n(977)
      , m = r(f)
      , v = (0,
    l.default)({}, n(15), n(88), n(74), n(150))
      , g = function() {
        function t(e) {
            if ((0,
            o.default)(this, t),
            this.tags,
            this.todo,
            this.a_tags = [],
            this.url_folder = [],
            e) {
                var n = this
                  , r = p.queue();
                if (e.todo && "function" == typeof e.todo && (this.todo = e.todo),
                !e.tags)
                    return;
                h.default.isArray(e.tags) && (this.tags = e.tags),
                e.folders && h.default.isArray(e.folders) && (e.folders.forEach(function(t, e) {
                    var i = n.path_images(t + "/desktop-image.svg");
                    r.defer(v.xml, i);
                    var o = v.select(n.tags[e]).append("div").attr("class", "st-desktop-svg");
                    n.url_folder.push("images_doc/" + t),
                    n.a_tags.push(o);
                    var a = n.path_images(t + "/tablet-image.svg");
                    r.defer(v.xml, a);
                    var s = v.select(n.tags[e]).append("div").attr("class", "st-tablet-svg");
                    n.url_folder.push("images_doc/" + t),
                    n.a_tags.push(s);
                    var c = n.path_images(t + "/mobile-image.svg");
                    r.defer(v.xml, c);
                    var l = v.select(n.tags[e]).append("div").attr("class", "st-mobile-svg");
                    n.url_folder.push("images_doc/" + t),
                    n.a_tags.push(l)
                }),
                r.awaitAll(function(t, e) {
                    return n.get_xml(t, e)
                }))
            }
        }
        return (0,
        s.default)(t, [{
            key: "path_images",
            value: function(t) {
                return n(148)("./" + t)
            }
        }, {
            key: "get_xml",
            value: function(t, e) {
                var n = this;
                if (t)
                    throw t;
                e.forEach(function(t, e) {
                    var r;
                    if (r = "Microsoft Internet Explorer" === navigator.appName ? n.cloneToDoc(t.documentElement) : document.importNode(t.documentElement, !0),
                    v.select(r).selectAll("image").each(function() {
                        var t = v.select(this).attr("xlink:href");
                        v.select(this).attr("xlink:href", n.url_folder[e] + "/" + t)
                    }),
                    void 0 !== n.a_tags[e]) {
                        var i = n.a_tags[e].node();
                        i.appendChild(r),
                        new m.default({
                            tag: i
                        })
                    }
                }),
                "function" == typeof this.todo && this.todo(e)
            }
        }, {
            key: "cloneToDoc",
            value: function(t, e) {
                var n = this;
                e || (e = document);
                for (var r = e.createElementNS(t.namespaceURI, t.nodeName), i = 0, o = t.attributes.length; i < o; ++i) {
                    var a = t.attributes[i];
                    /^xmlns\b/.test(a.nodeName) || r.setAttributeNS(a.namespaceURI, a.nodeName, a.nodeValue)
                }
                for (var s = 0, c = t.childNodes.length; s < c; ++s) {
                    var l = t.childNodes[s];
                    r.insertBefore(1 == l.nodeType ? n.cloneToDoc(l, e) : e.createTextNode(l.nodeValue), null)
                }
                return r
            }
        }]),
        t
    }();
    e.default = g
}
, , , function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(33)
      , o = r(i)
      , a = n(42)
      , s = r(a)
      , c = n(73)
      , l = r(c)
      , u = n(485)
      , h = r(u)
      , d = function() {
        function t(e) {
            if ((0,
            o.default)(this, t),
            e && void 0 !== e.tag) {
                var n = this;
                this.tag = e.tag;
                var r = (0,
                l.default)(this.tag).find("svg");
                new h.default({
                    tag: this.tag
                }),
                this.original_height_svg = r[0].viewBox.baseVal.height,
                this.original_width_svg = r[0].viewBox.baseVal.width,
                this.get_size_svg(this.tag, this.original_width_svg, this.original_height_svg),
                (0,
                l.default)(window).on("resize", function() {
                    var t = setTimeout(function() {
                        n.is_mobile() || (n.get_size_svg(n.tag, n.original_width_svg, n.original_height_svg),
                        clearTimeout(t))
                    }, 300)
                }),
                (0,
                l.default)(window).on("orientationchange", function() {
                    if (n.is_mobile())
                        var t = setTimeout(function() {
                            n.get_size_svg(n.tag, n.original_width_svg, n.original_height_svg),
                            clearTimeout(t)
                        }, 300)
                })
            }
        }
        return (0,
        s.default)(t, [{
            key: "get_size_svg",
            value: function(t, e, n) {
                var r = (0,
                l.default)(t).width()
                  , i = r * n / e;
                (0,
                l.default)(t).find("svg").height(i),
                (0,
                l.default)(t).find("svg").width(r)
            }
        }, {
            key: "is_mobile",
            value: function() {
                return /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)
            }
        }]),
        t
    }();
    e.default = d
}
, , , , , , function(t, e, n) {
    "use strict";
    var r = n(73)
      , i = function(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }(r);
    window.jQuery = i.default,
    /*!
Waypoints - 4.0.0
Copyright © 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
    function() {
        function t(r) {
            if (!r)
                throw new Error("No options passed to Waypoint constructor");
            if (!r.element)
                throw new Error("No element option passed to Waypoint constructor");
            if (!r.handler)
                throw new Error("No handler option passed to Waypoint constructor");
            this.key = "waypoint-" + e,
            this.options = t.Adapter.extend({}, t.defaults, r),
            this.element = this.options.element,
            this.adapter = new t.Adapter(this.element),
            this.callback = r.handler,
            this.axis = this.options.horizontal ? "horizontal" : "vertical",
            this.enabled = this.options.enabled,
            this.triggerPoint = null,
            this.group = t.Group.findOrCreate({
                name: this.options.group,
                axis: this.axis
            }),
            this.context = t.Context.findOrCreateByElement(this.options.context),
            t.offsetAliases[this.options.offset] && (this.options.offset = t.offsetAliases[this.options.offset]),
            this.group.add(this),
            this.context.add(this),
            n[this.key] = this,
            e += 1
        }
        var e = 0
          , n = {};
        t.prototype.queueTrigger = function(t) {
            this.group.queueTrigger(this, t)
        }
        ,
        t.prototype.trigger = function(t) {
            this.enabled && this.callback && this.callback.apply(this, t)
        }
        ,
        t.prototype.destroy = function() {
            this.context.remove(this),
            this.group.remove(this),
            delete n[this.key]
        }
        ,
        t.prototype.disable = function() {
            return this.enabled = !1,
            this
        }
        ,
        t.prototype.enable = function() {
            return this.context.refresh(),
            this.enabled = !0,
            this
        }
        ,
        t.prototype.next = function() {
            return this.group.next(this)
        }
        ,
        t.prototype.previous = function() {
            return this.group.previous(this)
        }
        ,
        t.invokeAll = function(t) {
            var e = [];
            for (var r in n)
                e.push(n[r]);
            for (var i = 0, o = e.length; i < o; i++)
                e[i][t]()
        }
        ,
        t.destroyAll = function() {
            t.invokeAll("destroy")
        }
        ,
        t.disableAll = function() {
            t.invokeAll("disable")
        }
        ,
        t.enableAll = function() {
            t.invokeAll("enable")
        }
        ,
        t.refreshAll = function() {
            t.Context.refreshAll()
        }
        ,
        t.viewportHeight = function() {
            return window.innerHeight || document.documentElement.clientHeight
        }
        ,
        t.viewportWidth = function() {
            return document.documentElement.clientWidth
        }
        ,
        t.adapters = [],
        t.defaults = {
            context: window,
            continuous: !0,
            enabled: !0,
            group: "default",
            horizontal: !1,
            offset: 0
        },
        t.offsetAliases = {
            "bottom-in-view": function() {
                return this.context.innerHeight() - this.adapter.outerHeight()
            },
            "right-in-view": function() {
                return this.context.innerWidth() - this.adapter.outerWidth()
            }
        },
        window.Waypoint = t
    }(),
    function() {
        function t(t) {
            window.setTimeout(t, 1e3 / 60)
        }
        function e(t) {
            this.element = t,
            this.Adapter = i.Adapter,
            this.adapter = new this.Adapter(t),
            this.key = "waypoint-context-" + n,
            this.didScroll = !1,
            this.didResize = !1,
            this.oldScroll = {
                x: this.adapter.scrollLeft(),
                y: this.adapter.scrollTop()
            },
            this.waypoints = {
                vertical: {},
                horizontal: {}
            },
            t.waypointContextKey = this.key,
            r[t.waypointContextKey] = this,
            n += 1,
            this.createThrottledScrollHandler(),
            this.createThrottledResizeHandler()
        }
        var n = 0
          , r = {}
          , i = window.Waypoint
          , o = window.onload;
        e.prototype.add = function(t) {
            var e = t.options.horizontal ? "horizontal" : "vertical";
            this.waypoints[e][t.key] = t,
            this.refresh()
        }
        ,
        e.prototype.checkEmpty = function() {
            var t = this.Adapter.isEmptyObject(this.waypoints.horizontal)
              , e = this.Adapter.isEmptyObject(this.waypoints.vertical);
            t && e && (this.adapter.off(".waypoints"),
            delete r[this.key])
        }
        ,
        e.prototype.createThrottledResizeHandler = function() {
            function t() {
                e.handleResize(),
                e.didResize = !1
            }
            var e = this;
            this.adapter.on("resize.waypoints", function() {
                e.didResize || (e.didResize = !0,
                i.requestAnimationFrame(t))
            })
        }
        ,
        e.prototype.createThrottledScrollHandler = function() {
            function t() {
                e.handleScroll(),
                e.didScroll = !1
            }
            var e = this;
            this.adapter.on("scroll.waypoints", function() {
                e.didScroll && !i.isTouch || (e.didScroll = !0,
                i.requestAnimationFrame(t))
            })
        }
        ,
        e.prototype.handleResize = function() {
            i.Context.refreshAll()
        }
        ,
        e.prototype.handleScroll = function() {
            var t = {}
              , e = {
                horizontal: {
                    newScroll: this.adapter.scrollLeft(),
                    oldScroll: this.oldScroll.x,
                    forward: "right",
                    backward: "left"
                },
                vertical: {
                    newScroll: this.adapter.scrollTop(),
                    oldScroll: this.oldScroll.y,
                    forward: "down",
                    backward: "up"
                }
            };
            for (var n in e) {
                var r = e[n]
                  , i = r.newScroll > r.oldScroll
                  , o = i ? r.forward : r.backward;
                for (var a in this.waypoints[n]) {
                    var s = this.waypoints[n][a]
                      , c = r.oldScroll < s.triggerPoint
                      , l = r.newScroll >= s.triggerPoint
                      , u = c && l
                      , h = !c && !l;
                    (u || h) && (s.queueTrigger(o),
                    t[s.group.id] = s.group)
                }
            }
            for (var d in t)
                t[d].flushTriggers();
            this.oldScroll = {
                x: e.horizontal.newScroll,
                y: e.vertical.newScroll
            }
        }
        ,
        e.prototype.innerHeight = function() {
            return this.element == this.element.window ? i.viewportHeight() : this.adapter.innerHeight()
        }
        ,
        e.prototype.remove = function(t) {
            delete this.waypoints[t.axis][t.key],
            this.checkEmpty()
        }
        ,
        e.prototype.innerWidth = function() {
            return this.element == this.element.window ? i.viewportWidth() : this.adapter.innerWidth()
        }
        ,
        e.prototype.destroy = function() {
            var t = [];
            for (var e in this.waypoints)
                for (var n in this.waypoints[e])
                    t.push(this.waypoints[e][n]);
            for (var r = 0, i = t.length; r < i; r++)
                t[r].destroy()
        }
        ,
        e.prototype.refresh = function() {
            var t, e = this.element == this.element.window, n = e ? void 0 : this.adapter.offset(), r = {};
            this.handleScroll(),
            t = {
                horizontal: {
                    contextOffset: e ? 0 : n.left,
                    contextScroll: e ? 0 : this.oldScroll.x,
                    contextDimension: this.innerWidth(),
                    oldScroll: this.oldScroll.x,
                    forward: "right",
                    backward: "left",
                    offsetProp: "left"
                },
                vertical: {
                    contextOffset: e ? 0 : n.top,
                    contextScroll: e ? 0 : this.oldScroll.y,
                    contextDimension: this.innerHeight(),
                    oldScroll: this.oldScroll.y,
                    forward: "down",
                    backward: "up",
                    offsetProp: "top"
                }
            };
            for (var o in t) {
                var a = t[o];
                for (var s in this.waypoints[o]) {
                    var c, l, u, h, d, p = this.waypoints[o][s], f = p.options.offset, m = p.triggerPoint, v = 0, g = null == m;
                    p.element !== p.element.window && (v = p.adapter.offset()[a.offsetProp]),
                    "function" == typeof f ? f = f.apply(p) : "string" == typeof f && (f = parseFloat(f),
                    p.options.offset.indexOf("%") > -1 && (f = Math.ceil(a.contextDimension * f / 100))),
                    c = a.contextScroll - a.contextOffset,
                    p.triggerPoint = v + c - f,
                    l = m < a.oldScroll,
                    u = p.triggerPoint >= a.oldScroll,
                    h = l && u,
                    d = !l && !u,
                    !g && h ? (p.queueTrigger(a.backward),
                    r[p.group.id] = p.group) : !g && d ? (p.queueTrigger(a.forward),
                    r[p.group.id] = p.group) : g && a.oldScroll >= p.triggerPoint && (p.queueTrigger(a.forward),
                    r[p.group.id] = p.group)
                }
            }
            return i.requestAnimationFrame(function() {
                for (var t in r)
                    r[t].flushTriggers()
            }),
            this
        }
        ,
        e.findOrCreateByElement = function(t) {
            return e.findByElement(t) || new e(t)
        }
        ,
        e.refreshAll = function() {
            for (var t in r)
                r[t].refresh()
        }
        ,
        e.findByElement = function(t) {
            return r[t.waypointContextKey]
        }
        ,
        window.onload = function() {
            o && o(),
            e.refreshAll()
        }
        ,
        i.requestAnimationFrame = function(e) {
            (window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || t).call(window, e)
        }
        ,
        i.Context = e
    }(),
    function() {
        function t(t, e) {
            return t.triggerPoint - e.triggerPoint
        }
        function e(t, e) {
            return e.triggerPoint - t.triggerPoint
        }
        function n(t) {
            this.name = t.name,
            this.axis = t.axis,
            this.id = this.name + "-" + this.axis,
            this.waypoints = [],
            this.clearTriggerQueues(),
            r[this.axis][this.name] = this
        }
        var r = {
            vertical: {},
            horizontal: {}
        }
          , i = window.Waypoint;
        n.prototype.add = function(t) {
            this.waypoints.push(t)
        }
        ,
        n.prototype.clearTriggerQueues = function() {
            this.triggerQueues = {
                up: [],
                down: [],
                left: [],
                right: []
            }
        }
        ,
        n.prototype.flushTriggers = function() {
            for (var n in this.triggerQueues) {
                var r = this.triggerQueues[n]
                  , i = "up" === n || "left" === n;
                r.sort(i ? e : t);
                for (var o = 0, a = r.length; o < a; o += 1) {
                    var s = r[o];
                    (s.options.continuous || o === r.length - 1) && s.trigger([n])
                }
            }
            this.clearTriggerQueues()
        }
        ,
        n.prototype.next = function(e) {
            this.waypoints.sort(t);
            var n = i.Adapter.inArray(e, this.waypoints);
            return n === this.waypoints.length - 1 ? null : this.waypoints[n + 1]
        }
        ,
        n.prototype.previous = function(e) {
            this.waypoints.sort(t);
            var n = i.Adapter.inArray(e, this.waypoints);
            return n ? this.waypoints[n - 1] : null
        }
        ,
        n.prototype.queueTrigger = function(t, e) {
            this.triggerQueues[e].push(t)
        }
        ,
        n.prototype.remove = function(t) {
            var e = i.Adapter.inArray(t, this.waypoints);
            e > -1 && this.waypoints.splice(e, 1)
        }
        ,
        n.prototype.first = function() {
            return this.waypoints[0]
        }
        ,
        n.prototype.last = function() {
            return this.waypoints[this.waypoints.length - 1]
        }
        ,
        n.findOrCreate = function(t) {
            return r[t.axis][t.name] || new n(t)
        }
        ,
        i.Group = n
    }(),
    function() {
        function t(t) {
            this.$element = e(t)
        }
        var e = window.jQuery
          , n = window.Waypoint;
        e.each(["innerHeight", "innerWidth", "off", "offset", "on", "outerHeight", "outerWidth", "scrollLeft", "scrollTop"], function(e, n) {
            t.prototype[n] = function() {
                var t = Array.prototype.slice.call(arguments);
                return this.$element[n].apply(this.$element, t)
            }
        }),
        e.each(["extend", "inArray", "isEmptyObject"], function(n, r) {
            t[r] = e[r]
        }),
        n.adapters.push({
            name: "jquery",
            Adapter: t
        }),
        n.Adapter = t
    }(),
    function() {
        function t(t) {
            return function() {
                var n = []
                  , r = arguments[0];
                return t.isFunction(arguments[0]) && (r = t.extend({}, arguments[1]),
                r.handler = arguments[0]),
                this.each(function() {
                    var i = t.extend({}, r, {
                        element: this
                    });
                    "string" == typeof i.context && (i.context = t(this).closest(i.context)[0]),
                    n.push(new e(i))
                }),
                n
            }
        }
        var e = window.Waypoint;
        window.jQuery && (window.jQuery.fn.waypoint = t(window.jQuery)),
        window.Zepto && (window.Zepto.fn.waypoint = t(window.Zepto))
    }()
}
, , , , , , , , , function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement;
        return (t._self._c || e)("div", {
            class: t.defineClassFromPath(t.attributes)
        })
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(994)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(488)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(995)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-3fe256c2", null);
    h.options.__file = "template/artefacts/videocontent.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            class: t.attributes.class,
            style: t.attributes.background ? "background:" + t.attributes.background : "background:#EFF3F4;"
        }, [n("div", {
            staticClass: "video-container"
        }, [n("div", {
            staticClass: "column-left"
        }, [n("div", {
            staticClass: "video-wrapper"
        }, [n("iframe", {
            attrs: {
                src: t.attributes.embedurl,
                frameborder: "0",
                allow: "autoplay; encrypted-media",
                allowfullscreen: ""
            }
        })])]), t._v(" "), n("div", {
            staticClass: "column-right"
        }, [n("div", {
            staticClass: "video-caption"
        }, [t._v(t._s(t.attributes.caption))])])])])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(997)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(489)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(998)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-a3c0adaa", null);
    h.options.__file = "template/artefacts/videoplayer.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "youtube_container"
        }, [n("div", {
            staticClass: "video-wrapper"
        }, [n("iframe", {
            attrs: {
                src: t.attributes.embedurl,
                frameborder: "0",
                allow: "autoplay; encrypted-media",
                allowfullscreen: ""
            }
        })]), t._v(" "), t.attributes.caption ? n("p", {
            domProps: {
                innerHTML: t._s(t.attributes.caption)
            }
        }) : t._e()])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(1e3)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(490)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(1001)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-5d3c6a81", null);
    h.options.__file = "template/artefacts/photo.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("figure", [n("img", {
            staticClass: "st-image-responsive",
            attrs: {
                src: t.path_image(t.attributes.src),
                alt: t.attributes.alt
            }
        }), t._v(" "), t.attributes.caption ? n("figcaption", {
            domProps: {
                innerHTML: t._s(t.attributes.caption)
            }
        }, [t._v("Fig1. - A view of the pulpit rock in Norway.")]) : t._e()])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(491)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1003)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/artefacts/quote.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("blockquote", {
            staticClass: "blockquote",
            attrs: {
                itemscope: "",
                itemtype: "http://schema.org/CreativeWork"
            }
        }, [n("div", {
            staticClass: "content-blockquote"
        }, [n("div", {
            staticClass: "line-quote"
        }), t._v(" "), n("q", [t._v(t._s(t.attributes.line_quote_text))]), t._v(" "), n("cite", [n("div", [n("span", {
            attrs: {
                itemprop: "author"
            },
            domProps: {
                innerHTML: t._s(t.attributes.author)
            }
        })])])])])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(1005)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(492)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(1156)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, null, null);
    h.options.__file = "template/artefacts/marvel/marvel-graph.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    e.__esModule = !0;
    var r = n(106)
      , i = function(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }(r);
    e.default = function(t, e, n) {
        return e in t ? (0,
        i.default)(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n,
        t
    }
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(493)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1145)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/artefacts/marvel/marvel-graph-3d.vue",
    e.default = c.exports
}
, function(t, e, n) {
    t.exports = {
        default: n(1009),
        __esModule: !0
    }
}
, function(t, e, n) {
    n(1010),
    t.exports = n(13).Math.hypot
}
, function(t, e, n) {
    var r = n(27)
      , i = Math.abs;
    r(r.S, "Math", {
        hypot: function(t, e) {
            for (var n, r, o = 0, a = 0, s = arguments.length, c = 0; a < s; )
                n = i(arguments[a++]),
                c < n ? (r = c / n,
                o = o * r * r + 1,
                c = n) : n > 0 ? (r = n / c,
                o += r * r) : o += n;
            return c === 1 / 0 ? 1 / 0 : c * Math.sqrt(o)
        }
    })
}
, function(t, e, n) {
    var r, i, o;
    !function(a) {
        i = [n(109)],
        r = a,
        void 0 !== (o = "function" == typeof r ? r.apply(e, i) : r) && (t.exports = o)
    }(function(t) {
        var e = function() {
            if (t && t.fn && t.fn.select2 && t.fn.select2.amd)
                var e = t.fn.select2.amd;
            var e;
            return function() {
                if (!e || !e.requirejs) {
                    e ? n = e : e = {};
                    /**
 * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */
                    var t, n, r;
                    !function(e) {
                        function i(t, e) {
                            return b.call(t, e)
                        }
                        function o(t, e) {
                            var n, r, i, o, a, s, c, l, u, h, d, p, f = e && e.split("/"), m = _.map, v = m && m["*"] || {};
                            if (t) {
                                for (t = t.split("/"),
                                a = t.length - 1,
                                _.nodeIdCompat && M.test(t[a]) && (t[a] = t[a].replace(M, "")),
                                "." === t[0].charAt(0) && f && (p = f.slice(0, f.length - 1),
                                t = p.concat(t)),
                                u = 0; u < t.length; u++)
                                    if ("." === (d = t[u]))
                                        t.splice(u, 1),
                                        u -= 1;
                                    else if (".." === d) {
                                        if (0 === u || 1 === u && ".." === t[2] || ".." === t[u - 1])
                                            continue;
                                        u > 0 && (t.splice(u - 1, 2),
                                        u -= 2)
                                    }
                                t = t.join("/")
                            }
                            if ((f || v) && m) {
                                for (n = t.split("/"),
                                u = n.length; u > 0; u -= 1) {
                                    if (r = n.slice(0, u).join("/"),
                                    f)
                                        for (h = f.length; h > 0; h -= 1)
                                            if ((i = m[f.slice(0, h).join("/")]) && (i = i[r])) {
                                                o = i,
                                                s = u;
                                                break
                                            }
                                    if (o)
                                        break;
                                    !c && v && v[r] && (c = v[r],
                                    l = u)
                                }
                                !o && c && (o = c,
                                s = l),
                                o && (n.splice(0, s, o),
                                t = n.join("/"))
                            }
                            return t
                        }
                        function a(t, n) {
                            return function() {
                                var r = w.call(arguments, 0);
                                return "string" != typeof r[0] && 1 === r.length && r.push(null),
                                f.apply(e, r.concat([t, n]))
                            }
                        }
                        function s(t) {
                            return function(e) {
                                return o(e, t)
                            }
                        }
                        function c(t) {
                            return function(e) {
                                g[t] = e
                            }
                        }
                        function l(t) {
                            if (i(y, t)) {
                                var n = y[t];
                                delete y[t],
                                x[t] = !0,
                                p.apply(e, n)
                            }
                            if (!i(g, t) && !i(x, t))
                                throw new Error("No " + t);
                            return g[t]
                        }
                        function u(t) {
                            var e, n = t ? t.indexOf("!") : -1;
                            return n > -1 && (e = t.substring(0, n),
                            t = t.substring(n + 1, t.length)),
                            [e, t]
                        }
                        function h(t) {
                            return t ? u(t) : []
                        }
                        function d(t) {
                            return function() {
                                return _ && _.config && _.config[t] || {}
                            }
                        }
                        var p, f, m, v, g = {}, y = {}, _ = {}, x = {}, b = Object.prototype.hasOwnProperty, w = [].slice, M = /\.js$/;
                        m = function(t, e) {
                            var n, r = u(t), i = r[0], a = e[1];
                            return t = r[1],
                            i && (i = o(i, a),
                            n = l(i)),
                            i ? t = n && n.normalize ? n.normalize(t, s(a)) : o(t, a) : (t = o(t, a),
                            r = u(t),
                            i = r[0],
                            t = r[1],
                            i && (n = l(i))),
                            {
                                f: i ? i + "!" + t : t,
                                n: t,
                                pr: i,
                                p: n
                            }
                        }
                        ,
                        v = {
                            require: function(t) {
                                return a(t)
                            },
                            exports: function(t) {
                                var e = g[t];
                                return void 0 !== e ? e : g[t] = {}
                            },
                            module: function(t) {
                                return {
                                    id: t,
                                    uri: "",
                                    exports: g[t],
                                    config: d(t)
                                }
                            }
                        },
                        p = function(t, n, r, o) {
                            var s, u, d, p, f, _, b, w = [], M = typeof r;
                            if (o = o || t,
                            _ = h(o),
                            "undefined" === M || "function" === M) {
                                for (n = !n.length && r.length ? ["require", "exports", "module"] : n,
                                f = 0; f < n.length; f += 1)
                                    if (p = m(n[f], _),
                                    "require" === (u = p.f))
                                        w[f] = v.require(t);
                                    else if ("exports" === u)
                                        w[f] = v.exports(t),
                                        b = !0;
                                    else if ("module" === u)
                                        s = w[f] = v.module(t);
                                    else if (i(g, u) || i(y, u) || i(x, u))
                                        w[f] = l(u);
                                    else {
                                        if (!p.p)
                                            throw new Error(t + " missing " + u);
                                        p.p.load(p.n, a(o, !0), c(u), {}),
                                        w[f] = g[u]
                                    }
                                d = r ? r.apply(g[t], w) : void 0,
                                t && (s && s.exports !== e && s.exports !== g[t] ? g[t] = s.exports : d === e && b || (g[t] = d))
                            } else
                                t && (g[t] = r)
                        }
                        ,
                        t = n = f = function(t, n, r, i, o) {
                            if ("string" == typeof t)
                                return v[t] ? v[t](n) : l(m(t, h(n)).f);
                            if (!t.splice) {
                                if (_ = t,
                                _.deps && f(_.deps, _.callback),
                                !n)
                                    return;
                                n.splice ? (t = n,
                                n = r,
                                r = null) : t = e
                            }
                            return n = n || function() {}
                            ,
                            "function" == typeof r && (r = i,
                            i = o),
                            i ? p(e, t, n, r) : setTimeout(function() {
                                p(e, t, n, r)
                            }, 4),
                            f
                        }
                        ,
                        f.config = function(t) {
                            return f(t)
                        }
                        ,
                        t._defined = g,
                        r = function(t, e, n) {
                            if ("string" != typeof t)
                                throw new Error("See almond README: incorrect module build, no module name");
                            e.splice || (n = e,
                            e = []),
                            i(g, t) || i(y, t) || (y[t] = [t, e, n])
                        }
                        ,
                        r.amd = {
                            jQuery: !0
                        }
                    }(),
                    e.requirejs = t,
                    e.require = n,
                    e.define = r
                }
            }(),
            e.define("almond", function() {}),
            e.define("jquery", [], function() {
                var e = t || $;
                return null == e && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."),
                e
            }),
            e.define("select2/utils", ["jquery"], function(t) {
                function e(t) {
                    var e = t.prototype
                      , n = [];
                    for (var r in e) {
                        "function" == typeof e[r] && ("constructor" !== r && n.push(r))
                    }
                    return n
                }
                var n = {};
                n.Extend = function(t, e) {
                    function n() {
                        this.constructor = t
                    }
                    var r = {}.hasOwnProperty;
                    for (var i in e)
                        r.call(e, i) && (t[i] = e[i]);
                    return n.prototype = e.prototype,
                    t.prototype = new n,
                    t.__super__ = e.prototype,
                    t
                }
                ,
                n.Decorate = function(t, n) {
                    function r() {
                        var e = Array.prototype.unshift
                          , r = n.prototype.constructor.length
                          , i = t.prototype.constructor;
                        r > 0 && (e.call(arguments, t.prototype.constructor),
                        i = n.prototype.constructor),
                        i.apply(this, arguments)
                    }
                    function i() {
                        this.constructor = r
                    }
                    var o = e(n)
                      , a = e(t);
                    n.displayName = t.displayName,
                    r.prototype = new i;
                    for (var s = 0; s < a.length; s++) {
                        var c = a[s];
                        r.prototype[c] = t.prototype[c]
                    }
                    for (var l = 0; l < o.length; l++) {
                        var u = o[l];
                        r.prototype[u] = function(t) {
                            var e = function() {};
                            t in r.prototype && (e = r.prototype[t]);
                            var i = n.prototype[t];
                            return function() {
                                return Array.prototype.unshift.call(arguments, e),
                                i.apply(this, arguments)
                            }
                        }(u)
                    }
                    return r
                }
                ;
                var r = function() {
                    this.listeners = {}
                };
                r.prototype.on = function(t, e) {
                    this.listeners = this.listeners || {},
                    t in this.listeners ? this.listeners[t].push(e) : this.listeners[t] = [e]
                }
                ,
                r.prototype.trigger = function(t) {
                    var e = Array.prototype.slice
                      , n = e.call(arguments, 1);
                    this.listeners = this.listeners || {},
                    null == n && (n = []),
                    0 === n.length && n.push({}),
                    n[0]._type = t,
                    t in this.listeners && this.invoke(this.listeners[t], e.call(arguments, 1)),
                    "*"in this.listeners && this.invoke(this.listeners["*"], arguments)
                }
                ,
                r.prototype.invoke = function(t, e) {
                    for (var n = 0, r = t.length; n < r; n++)
                        t[n].apply(this, e)
                }
                ,
                n.Observable = r,
                n.generateChars = function(t) {
                    for (var e = "", n = 0; n < t; n++) {
                        e += Math.floor(36 * Math.random()).toString(36)
                    }
                    return e
                }
                ,
                n.bind = function(t, e) {
                    return function() {
                        t.apply(e, arguments)
                    }
                }
                ,
                n._convertData = function(t) {
                    for (var e in t) {
                        var n = e.split("-")
                          , r = t;
                        if (1 !== n.length) {
                            for (var i = 0; i < n.length; i++) {
                                var o = n[i];
                                o = o.substring(0, 1).toLowerCase() + o.substring(1),
                                o in r || (r[o] = {}),
                                i == n.length - 1 && (r[o] = t[e]),
                                r = r[o]
                            }
                            delete t[e]
                        }
                    }
                    return t
                }
                ,
                n.hasScroll = function(e, n) {
                    var r = t(n)
                      , i = n.style.overflowX
                      , o = n.style.overflowY;
                    return (i !== o || "hidden" !== o && "visible" !== o) && ("scroll" === i || "scroll" === o || (r.innerHeight() < n.scrollHeight || r.innerWidth() < n.scrollWidth))
                }
                ,
                n.escapeMarkup = function(t) {
                    var e = {
                        "\\": "&#92;",
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#39;",
                        "/": "&#47;"
                    };
                    return "string" != typeof t ? t : String(t).replace(/[&<>"'\/\\]/g, function(t) {
                        return e[t]
                    })
                }
                ,
                n.appendMany = function(e, n) {
                    if ("1.7" === t.fn.jquery.substr(0, 3)) {
                        var r = t();
                        t.map(n, function(t) {
                            r = r.add(t)
                        }),
                        n = r
                    }
                    e.append(n)
                }
                ,
                n.__cache = {};
                var i = 0;
                return n.GetUniqueElementId = function(t) {
                    var e = t.getAttribute("data-select2-id");
                    return null == e && (t.id ? (e = t.id,
                    t.setAttribute("data-select2-id", e)) : (t.setAttribute("data-select2-id", ++i),
                    e = i.toString())),
                    e
                }
                ,
                n.StoreData = function(t, e, r) {
                    var i = n.GetUniqueElementId(t);
                    n.__cache[i] || (n.__cache[i] = {}),
                    n.__cache[i][e] = r
                }
                ,
                n.GetData = function(e, r) {
                    var i = n.GetUniqueElementId(e);
                    return r ? n.__cache[i] && null != n.__cache[i][r] ? n.__cache[i][r] : t(e).data(r) : n.__cache[i]
                }
                ,
                n.RemoveData = function(t) {
                    var e = n.GetUniqueElementId(t);
                    null != n.__cache[e] && delete n.__cache[e]
                }
                ,
                n
            }),
            e.define("select2/results", ["jquery", "./utils"], function(t, e) {
                function n(t, e, r) {
                    this.$element = t,
                    this.data = r,
                    this.options = e,
                    n.__super__.constructor.call(this)
                }
                return e.Extend(n, e.Observable),
                n.prototype.render = function() {
                    var e = t('<ul class="select2-results__options" role="tree"></ul>');
                    return this.options.get("multiple") && e.attr("aria-multiselectable", "true"),
                    this.$results = e,
                    e
                }
                ,
                n.prototype.clear = function() {
                    this.$results.empty()
                }
                ,
                n.prototype.displayMessage = function(e) {
                    var n = this.options.get("escapeMarkup");
                    this.clear(),
                    this.hideLoading();
                    var r = t('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>')
                      , i = this.options.get("translations").get(e.message);
                    r.append(n(i(e.args))),
                    r[0].className += " select2-results__message",
                    this.$results.append(r)
                }
                ,
                n.prototype.hideMessages = function() {
                    this.$results.find(".select2-results__message").remove()
                }
                ,
                n.prototype.append = function(t) {
                    this.hideLoading();
                    var e = [];
                    if (null == t.results || 0 === t.results.length)
                        return void (0 === this.$results.children().length && this.trigger("results:message", {
                            message: "noResults"
                        }));
                    t.results = this.sort(t.results);
                    for (var n = 0; n < t.results.length; n++) {
                        var r = t.results[n]
                          , i = this.option(r);
                        e.push(i)
                    }
                    this.$results.append(e)
                }
                ,
                n.prototype.position = function(t, e) {
                    e.find(".select2-results").append(t)
                }
                ,
                n.prototype.sort = function(t) {
                    return this.options.get("sorter")(t)
                }
                ,
                n.prototype.highlightFirstItem = function() {
                    var t = this.$results.find(".select2-results__option[aria-selected]")
                      , e = t.filter("[aria-selected=true]");
                    e.length > 0 ? e.first().trigger("mouseenter") : t.first().trigger("mouseenter"),
                    this.ensureHighlightVisible()
                }
                ,
                n.prototype.setClasses = function() {
                    var n = this;
                    this.data.current(function(r) {
                        var i = t.map(r, function(t) {
                            return t.id.toString()
                        });
                        n.$results.find(".select2-results__option[aria-selected]").each(function() {
                            var n = t(this)
                              , r = e.GetData(this, "data")
                              , o = "" + r.id;
                            null != r.element && r.element.selected || null == r.element && t.inArray(o, i) > -1 ? n.attr("aria-selected", "true") : n.attr("aria-selected", "false")
                        })
                    })
                }
                ,
                n.prototype.showLoading = function(t) {
                    this.hideLoading();
                    var e = this.options.get("translations").get("searching")
                      , n = {
                        disabled: !0,
                        loading: !0,
                        text: e(t)
                    }
                      , r = this.option(n);
                    r.className += " loading-results",
                    this.$results.prepend(r)
                }
                ,
                n.prototype.hideLoading = function() {
                    this.$results.find(".loading-results").remove()
                }
                ,
                n.prototype.option = function(n) {
                    var r = document.createElement("li");
                    r.className = "select2-results__option";
                    var i = {
                        role: "treeitem",
                        "aria-selected": "false"
                    };
                    n.disabled && (delete i["aria-selected"],
                    i["aria-disabled"] = "true"),
                    null == n.id && delete i["aria-selected"],
                    null != n._resultId && (r.id = n._resultId),
                    n.title && (r.title = n.title),
                    n.children && (i.role = "group",
                    i["aria-label"] = n.text,
                    delete i["aria-selected"]);
                    for (var o in i) {
                        var a = i[o];
                        r.setAttribute(o, a)
                    }
                    if (n.children) {
                        var s = t(r)
                          , c = document.createElement("strong");
                        c.className = "select2-results__group";
                        t(c);
                        this.template(n, c);
                        for (var l = [], u = 0; u < n.children.length; u++) {
                            var h = n.children[u]
                              , d = this.option(h);
                            l.push(d)
                        }
                        var p = t("<ul></ul>", {
                            class: "select2-results__options select2-results__options--nested"
                        });
                        p.append(l),
                        s.append(c),
                        s.append(p)
                    } else
                        this.template(n, r);
                    return e.StoreData(r, "data", n),
                    r
                }
                ,
                n.prototype.bind = function(n, r) {
                    var i = this
                      , o = n.id + "-results";
                    this.$results.attr("id", o),
                    n.on("results:all", function(t) {
                        i.clear(),
                        i.append(t.data),
                        n.isOpen() && (i.setClasses(),
                        i.highlightFirstItem())
                    }),
                    n.on("results:append", function(t) {
                        i.append(t.data),
                        n.isOpen() && i.setClasses()
                    }),
                    n.on("query", function(t) {
                        i.hideMessages(),
                        i.showLoading(t)
                    }),
                    n.on("select", function() {
                        n.isOpen() && (i.setClasses(),
                        i.highlightFirstItem())
                    }),
                    n.on("unselect", function() {
                        n.isOpen() && (i.setClasses(),
                        i.highlightFirstItem())
                    }),
                    n.on("open", function() {
                        i.$results.attr("aria-expanded", "true"),
                        i.$results.attr("aria-hidden", "false"),
                        i.setClasses(),
                        i.ensureHighlightVisible()
                    }),
                    n.on("close", function() {
                        i.$results.attr("aria-expanded", "false"),
                        i.$results.attr("aria-hidden", "true"),
                        i.$results.removeAttr("aria-activedescendant")
                    }),
                    n.on("results:toggle", function() {
                        var t = i.getHighlightedResults();
                        0 !== t.length && t.trigger("mouseup")
                    }),
                    n.on("results:select", function() {
                        var t = i.getHighlightedResults();
                        if (0 !== t.length) {
                            var n = e.GetData(t[0], "data");
                            "true" == t.attr("aria-selected") ? i.trigger("close", {}) : i.trigger("select", {
                                data: n
                            })
                        }
                    }),
                    n.on("results:previous", function() {
                        var t = i.getHighlightedResults()
                          , e = i.$results.find("[aria-selected]")
                          , n = e.index(t);
                        if (!(n <= 0)) {
                            var r = n - 1;
                            0 === t.length && (r = 0);
                            var o = e.eq(r);
                            o.trigger("mouseenter");
                            var a = i.$results.offset().top
                              , s = o.offset().top
                              , c = i.$results.scrollTop() + (s - a);
                            0 === r ? i.$results.scrollTop(0) : s - a < 0 && i.$results.scrollTop(c)
                        }
                    }),
                    n.on("results:next", function() {
                        var t = i.getHighlightedResults()
                          , e = i.$results.find("[aria-selected]")
                          , n = e.index(t)
                          , r = n + 1;
                        if (!(r >= e.length)) {
                            var o = e.eq(r);
                            o.trigger("mouseenter");
                            var a = i.$results.offset().top + i.$results.outerHeight(!1)
                              , s = o.offset().top + o.outerHeight(!1)
                              , c = i.$results.scrollTop() + s - a;
                            0 === r ? i.$results.scrollTop(0) : s > a && i.$results.scrollTop(c)
                        }
                    }),
                    n.on("results:focus", function(t) {
                        t.element.addClass("select2-results__option--highlighted")
                    }),
                    n.on("results:message", function(t) {
                        i.displayMessage(t)
                    }),
                    t.fn.mousewheel && this.$results.on("mousewheel", function(t) {
                        var e = i.$results.scrollTop()
                          , n = i.$results.get(0).scrollHeight - e + t.deltaY
                          , r = t.deltaY > 0 && e - t.deltaY <= 0
                          , o = t.deltaY < 0 && n <= i.$results.height();
                        r ? (i.$results.scrollTop(0),
                        t.preventDefault(),
                        t.stopPropagation()) : o && (i.$results.scrollTop(i.$results.get(0).scrollHeight - i.$results.height()),
                        t.preventDefault(),
                        t.stopPropagation())
                    }),
                    this.$results.on("mouseup", ".select2-results__option[aria-selected]", function(n) {
                        var r = t(this)
                          , o = e.GetData(this, "data");
                        if ("true" === r.attr("aria-selected"))
                            return void (i.options.get("multiple") ? i.trigger("unselect", {
                                originalEvent: n,
                                data: o
                            }) : i.trigger("close", {}));
                        i.trigger("select", {
                            originalEvent: n,
                            data: o
                        })
                    }),
                    this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function(n) {
                        var r = e.GetData(this, "data");
                        i.getHighlightedResults().removeClass("select2-results__option--highlighted"),
                        i.trigger("results:focus", {
                            data: r,
                            element: t(this)
                        })
                    })
                }
                ,
                n.prototype.getHighlightedResults = function() {
                    return this.$results.find(".select2-results__option--highlighted")
                }
                ,
                n.prototype.destroy = function() {
                    this.$results.remove()
                }
                ,
                n.prototype.ensureHighlightVisible = function() {
                    var t = this.getHighlightedResults();
                    if (0 !== t.length) {
                        var e = this.$results.find("[aria-selected]")
                          , n = e.index(t)
                          , r = this.$results.offset().top
                          , i = t.offset().top
                          , o = this.$results.scrollTop() + (i - r)
                          , a = i - r;
                        o -= 2 * t.outerHeight(!1),
                        n <= 2 ? this.$results.scrollTop(0) : (a > this.$results.outerHeight() || a < 0) && this.$results.scrollTop(o)
                    }
                }
                ,
                n.prototype.template = function(e, n) {
                    var r = this.options.get("templateResult")
                      , i = this.options.get("escapeMarkup")
                      , o = r(e, n);
                    null == o ? n.style.display = "none" : "string" == typeof o ? n.innerHTML = i(o) : t(n).append(o)
                }
                ,
                n
            }),
            e.define("select2/keys", [], function() {
                return {
                    BACKSPACE: 8,
                    TAB: 9,
                    ENTER: 13,
                    SHIFT: 16,
                    CTRL: 17,
                    ALT: 18,
                    ESC: 27,
                    SPACE: 32,
                    PAGE_UP: 33,
                    PAGE_DOWN: 34,
                    END: 35,
                    HOME: 36,
                    LEFT: 37,
                    UP: 38,
                    RIGHT: 39,
                    DOWN: 40,
                    DELETE: 46
                }
            }),
            e.define("select2/selection/base", ["jquery", "../utils", "../keys"], function(t, e, n) {
                function r(t, e) {
                    this.$element = t,
                    this.options = e,
                    r.__super__.constructor.call(this)
                }
                return e.Extend(r, e.Observable),
                r.prototype.render = function() {
                    var n = t('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
                    return this._tabindex = 0,
                    null != e.GetData(this.$element[0], "old-tabindex") ? this._tabindex = e.GetData(this.$element[0], "old-tabindex") : null != this.$element.attr("tabindex") && (this._tabindex = this.$element.attr("tabindex")),
                    n.attr("title", this.$element.attr("title")),
                    n.attr("tabindex", this._tabindex),
                    this.$selection = n,
                    n
                }
                ,
                r.prototype.bind = function(t, e) {
                    var r = this
                      , i = (t.id,
                    t.id + "-results");
                    this.container = t,
                    this.$selection.on("focus", function(t) {
                        r.trigger("focus", t)
                    }),
                    this.$selection.on("blur", function(t) {
                        r._handleBlur(t)
                    }),
                    this.$selection.on("keydown", function(t) {
                        r.trigger("keypress", t),
                        t.which === n.SPACE && t.preventDefault()
                    }),
                    t.on("results:focus", function(t) {
                        r.$selection.attr("aria-activedescendant", t.data._resultId)
                    }),
                    t.on("selection:update", function(t) {
                        r.update(t.data)
                    }),
                    t.on("open", function() {
                        r.$selection.attr("aria-expanded", "true"),
                        r.$selection.attr("aria-owns", i),
                        r._attachCloseHandler(t)
                    }),
                    t.on("close", function() {
                        r.$selection.attr("aria-expanded", "false"),
                        r.$selection.removeAttr("aria-activedescendant"),
                        r.$selection.removeAttr("aria-owns"),
                        r.$selection.focus(),
                        window.setTimeout(function() {
                            r.$selection.focus()
                        }, 0),
                        r._detachCloseHandler(t)
                    }),
                    t.on("enable", function() {
                        r.$selection.attr("tabindex", r._tabindex)
                    }),
                    t.on("disable", function() {
                        r.$selection.attr("tabindex", "-1")
                    })
                }
                ,
                r.prototype._handleBlur = function(e) {
                    var n = this;
                    window.setTimeout(function() {
                        document.activeElement == n.$selection[0] || t.contains(n.$selection[0], document.activeElement) || n.trigger("blur", e)
                    }, 1)
                }
                ,
                r.prototype._attachCloseHandler = function(n) {
                    t(document.body).on("mousedown.select2." + n.id, function(n) {
                        var r = t(n.target)
                          , i = r.closest(".select2");
                        t(".select2.select2-container--open").each(function() {
                            t(this),
                            this != i[0] && e.GetData(this, "element").select2("close")
                        })
                    })
                }
                ,
                r.prototype._detachCloseHandler = function(e) {
                    t(document.body).off("mousedown.select2." + e.id)
                }
                ,
                r.prototype.position = function(t, e) {
                    e.find(".selection").append(t)
                }
                ,
                r.prototype.destroy = function() {
                    this._detachCloseHandler(this.container)
                }
                ,
                r.prototype.update = function(t) {
                    throw new Error("The `update` method must be defined in child classes.")
                }
                ,
                r
            }),
            e.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function(t, e, n, r) {
                function i() {
                    i.__super__.constructor.apply(this, arguments)
                }
                return n.Extend(i, e),
                i.prototype.render = function() {
                    var t = i.__super__.render.call(this);
                    return t.addClass("select2-selection--single"),
                    t.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'),
                    t
                }
                ,
                i.prototype.bind = function(t, e) {
                    var n = this;
                    i.__super__.bind.apply(this, arguments);
                    var r = t.id + "-container";
                    this.$selection.find(".select2-selection__rendered").attr("id", r).attr("role", "textbox").attr("aria-readonly", "true"),
                    this.$selection.attr("aria-labelledby", r),
                    this.$selection.on("mousedown", function(t) {
                        1 === t.which && n.trigger("toggle", {
                            originalEvent: t
                        })
                    }),
                    this.$selection.on("focus", function(t) {}),
                    this.$selection.on("blur", function(t) {}),
                    t.on("focus", function(e) {
                        t.isOpen() || n.$selection.focus()
                    })
                }
                ,
                i.prototype.clear = function() {
                    var t = this.$selection.find(".select2-selection__rendered");
                    t.empty(),
                    t.removeAttr("title")
                }
                ,
                i.prototype.display = function(t, e) {
                    var n = this.options.get("templateSelection");
                    return this.options.get("escapeMarkup")(n(t, e))
                }
                ,
                i.prototype.selectionContainer = function() {
                    return t("<span></span>")
                }
                ,
                i.prototype.update = function(t) {
                    if (0 === t.length)
                        return void this.clear();
                    var e = t[0]
                      , n = this.$selection.find(".select2-selection__rendered")
                      , r = this.display(e, n);
                    n.empty().append(r),
                    n.attr("title", e.title || e.text)
                }
                ,
                i
            }),
            e.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function(t, e, n) {
                function r(t, e) {
                    r.__super__.constructor.apply(this, arguments)
                }
                return n.Extend(r, e),
                r.prototype.render = function() {
                    var t = r.__super__.render.call(this);
                    return t.addClass("select2-selection--multiple"),
                    t.html('<ul class="select2-selection__rendered"></ul>'),
                    t
                }
                ,
                r.prototype.bind = function(e, i) {
                    var o = this;
                    r.__super__.bind.apply(this, arguments),
                    this.$selection.on("click", function(t) {
                        o.trigger("toggle", {
                            originalEvent: t
                        })
                    }),
                    this.$selection.on("click", ".select2-selection__choice__remove", function(e) {
                        if (!o.options.get("disabled")) {
                            var r = t(this)
                              , i = r.parent()
                              , a = n.GetData(i[0], "data");
                            o.trigger("unselect", {
                                originalEvent: e,
                                data: a
                            })
                        }
                    })
                }
                ,
                r.prototype.clear = function() {
                    var t = this.$selection.find(".select2-selection__rendered");
                    t.empty(),
                    t.removeAttr("title")
                }
                ,
                r.prototype.display = function(t, e) {
                    var n = this.options.get("templateSelection");
                    return this.options.get("escapeMarkup")(n(t, e))
                }
                ,
                r.prototype.selectionContainer = function() {
                    return t('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>')
                }
                ,
                r.prototype.update = function(t) {
                    if (this.clear(),
                    0 !== t.length) {
                        for (var e = [], r = 0; r < t.length; r++) {
                            var i = t[r]
                              , o = this.selectionContainer()
                              , a = this.display(i, o);
                            o.append(a),
                            o.attr("title", i.title || i.text),
                            n.StoreData(o[0], "data", i),
                            e.push(o)
                        }
                        var s = this.$selection.find(".select2-selection__rendered");
                        n.appendMany(s, e)
                    }
                }
                ,
                r
            }),
            e.define("select2/selection/placeholder", ["../utils"], function(t) {
                function e(t, e, n) {
                    this.placeholder = this.normalizePlaceholder(n.get("placeholder")),
                    t.call(this, e, n)
                }
                return e.prototype.normalizePlaceholder = function(t, e) {
                    return "string" == typeof e && (e = {
                        id: "",
                        text: e
                    }),
                    e
                }
                ,
                e.prototype.createPlaceholder = function(t, e) {
                    var n = this.selectionContainer();
                    return n.html(this.display(e)),
                    n.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"),
                    n
                }
                ,
                e.prototype.update = function(t, e) {
                    var n = 1 == e.length && e[0].id != this.placeholder.id;
                    if (e.length > 1 || n)
                        return t.call(this, e);
                    this.clear();
                    var r = this.createPlaceholder(this.placeholder);
                    this.$selection.find(".select2-selection__rendered").append(r)
                }
                ,
                e
            }),
            e.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function(t, e, n) {
                function r() {}
                return r.prototype.bind = function(t, e, n) {
                    var r = this;
                    t.call(this, e, n),
                    null == this.placeholder && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."),
                    this.$selection.on("mousedown", ".select2-selection__clear", function(t) {
                        r._handleClear(t)
                    }),
                    e.on("keypress", function(t) {
                        r._handleKeyboardClear(t, e)
                    })
                }
                ,
                r.prototype._handleClear = function(t, e) {
                    if (!this.options.get("disabled")) {
                        var r = this.$selection.find(".select2-selection__clear");
                        if (0 !== r.length) {
                            e.stopPropagation();
                            var i = n.GetData(r[0], "data")
                              , o = this.$element.val();
                            this.$element.val(this.placeholder.id);
                            var a = {
                                data: i
                            };
                            if (this.trigger("clear", a),
                            a.prevented)
                                return void this.$element.val(o);
                            for (var s = 0; s < i.length; s++)
                                if (a = {
                                    data: i[s]
                                },
                                this.trigger("unselect", a),
                                a.prevented)
                                    return void this.$element.val(o);
                            this.$element.trigger("change"),
                            this.trigger("toggle", {})
                        }
                    }
                }
                ,
                r.prototype._handleKeyboardClear = function(t, n, r) {
                    r.isOpen() || n.which != e.DELETE && n.which != e.BACKSPACE || this._handleClear(n)
                }
                ,
                r.prototype.update = function(e, r) {
                    if (e.call(this, r),
                    !(this.$selection.find(".select2-selection__placeholder").length > 0 || 0 === r.length)) {
                        var i = t('<span class="select2-selection__clear">&times;</span>');
                        n.StoreData(i[0], "data", r),
                        this.$selection.find(".select2-selection__rendered").prepend(i)
                    }
                }
                ,
                r
            }),
            e.define("select2/selection/search", ["jquery", "../utils", "../keys"], function(t, e, n) {
                function r(t, e, n) {
                    t.call(this, e, n)
                }
                return r.prototype.render = function(e) {
                    var n = t('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>');
                    this.$searchContainer = n,
                    this.$search = n.find("input");
                    var r = e.call(this);
                    return this._transferTabIndex(),
                    r
                }
                ,
                r.prototype.bind = function(t, r, i) {
                    var o = this;
                    t.call(this, r, i),
                    r.on("open", function() {
                        o.$search.trigger("focus")
                    }),
                    r.on("close", function() {
                        o.$search.val(""),
                        o.$search.removeAttr("aria-activedescendant"),
                        o.$search.trigger("focus")
                    }),
                    r.on("enable", function() {
                        o.$search.prop("disabled", !1),
                        o._transferTabIndex()
                    }),
                    r.on("disable", function() {
                        o.$search.prop("disabled", !0)
                    }),
                    r.on("focus", function(t) {
                        o.$search.trigger("focus")
                    }),
                    r.on("results:focus", function(t) {
                        o.$search.attr("aria-activedescendant", t.id)
                    }),
                    this.$selection.on("focusin", ".select2-search--inline", function(t) {
                        o.trigger("focus", t)
                    }),
                    this.$selection.on("focusout", ".select2-search--inline", function(t) {
                        o._handleBlur(t)
                    }),
                    this.$selection.on("keydown", ".select2-search--inline", function(t) {
                        if (t.stopPropagation(),
                        o.trigger("keypress", t),
                        o._keyUpPrevented = t.isDefaultPrevented(),
                        t.which === n.BACKSPACE && "" === o.$search.val()) {
                            var r = o.$searchContainer.prev(".select2-selection__choice");
                            if (r.length > 0) {
                                var i = e.GetData(r[0], "data");
                                o.searchRemoveChoice(i),
                                t.preventDefault()
                            }
                        }
                    });
                    var a = document.documentMode
                      , s = a && a <= 11;
                    this.$selection.on("input.searchcheck", ".select2-search--inline", function(t) {
                        if (s)
                            return void o.$selection.off("input.search input.searchcheck");
                        o.$selection.off("keyup.search")
                    }),
                    this.$selection.on("keyup.search input.search", ".select2-search--inline", function(t) {
                        if (s && "input" === t.type)
                            return void o.$selection.off("input.search input.searchcheck");
                        var e = t.which;
                        e != n.SHIFT && e != n.CTRL && e != n.ALT && e != n.TAB && o.handleSearch(t)
                    })
                }
                ,
                r.prototype._transferTabIndex = function(t) {
                    this.$search.attr("tabindex", this.$selection.attr("tabindex")),
                    this.$selection.attr("tabindex", "-1")
                }
                ,
                r.prototype.createPlaceholder = function(t, e) {
                    this.$search.attr("placeholder", e.text)
                }
                ,
                r.prototype.update = function(t, e) {
                    var n = this.$search[0] == document.activeElement;
                    if (this.$search.attr("placeholder", ""),
                    t.call(this, e),
                    this.$selection.find(".select2-selection__rendered").append(this.$searchContainer),
                    this.resizeSearch(),
                    n) {
                        this.$element.find("[data-select2-tag]").length ? this.$element.focus() : this.$search.focus()
                    }
                }
                ,
                r.prototype.handleSearch = function() {
                    if (this.resizeSearch(),
                    !this._keyUpPrevented) {
                        var t = this.$search.val();
                        this.trigger("query", {
                            term: t
                        })
                    }
                    this._keyUpPrevented = !1
                }
                ,
                r.prototype.searchRemoveChoice = function(t, e) {
                    this.trigger("unselect", {
                        data: e
                    }),
                    this.$search.val(e.text),
                    this.handleSearch()
                }
                ,
                r.prototype.resizeSearch = function() {
                    this.$search.css("width", "25px");
                    var t = "";
                    if ("" !== this.$search.attr("placeholder"))
                        t = this.$selection.find(".select2-selection__rendered").innerWidth();
                    else {
                        t = .75 * (this.$search.val().length + 1) + "em"
                    }
                    this.$search.css("width", t)
                }
                ,
                r
            }),
            e.define("select2/selection/eventRelay", ["jquery"], function(t) {
                function e() {}
                return e.prototype.bind = function(e, n, r) {
                    var i = this
                      , o = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"]
                      , a = ["opening", "closing", "selecting", "unselecting", "clearing"];
                    e.call(this, n, r),
                    n.on("*", function(e, n) {
                        if (-1 !== t.inArray(e, o)) {
                            n = n || {};
                            var r = t.Event("select2:" + e, {
                                params: n
                            });
                            i.$element.trigger(r),
                            -1 !== t.inArray(e, a) && (n.prevented = r.isDefaultPrevented())
                        }
                    })
                }
                ,
                e
            }),
            e.define("select2/translation", ["jquery", "require"], function(t, e) {
                function n(t) {
                    this.dict = t || {}
                }
                return n.prototype.all = function() {
                    return this.dict
                }
                ,
                n.prototype.get = function(t) {
                    return this.dict[t]
                }
                ,
                n.prototype.extend = function(e) {
                    this.dict = t.extend({}, e.all(), this.dict)
                }
                ,
                n._cache = {},
                n.loadPath = function(t) {
                    if (!(t in n._cache)) {
                        var r = e(t);
                        n._cache[t] = r
                    }
                    return new n(n._cache[t])
                }
                ,
                n
            }),
            e.define("select2/diacritics", [], function() {
                return {
                    "Ⓐ": "A",
                    "Ａ": "A",
                    "À": "A",
                    "Á": "A",
                    "Â": "A",
                    "Ầ": "A",
                    "Ấ": "A",
                    "Ẫ": "A",
                    "Ẩ": "A",
                    "Ã": "A",
                    "Ā": "A",
                    "Ă": "A",
                    "Ằ": "A",
                    "Ắ": "A",
                    "Ẵ": "A",
                    "Ẳ": "A",
                    "Ȧ": "A",
                    "Ǡ": "A",
                    "Ä": "A",
                    "Ǟ": "A",
                    "Ả": "A",
                    "Å": "A",
                    "Ǻ": "A",
                    "Ǎ": "A",
                    "Ȁ": "A",
                    "Ȃ": "A",
                    "Ạ": "A",
                    "Ậ": "A",
                    "Ặ": "A",
                    "Ḁ": "A",
                    "Ą": "A",
                    "Ⱥ": "A",
                    "Ɐ": "A",
                    "Ꜳ": "AA",
                    "Æ": "AE",
                    "Ǽ": "AE",
                    "Ǣ": "AE",
                    "Ꜵ": "AO",
                    "Ꜷ": "AU",
                    "Ꜹ": "AV",
                    "Ꜻ": "AV",
                    "Ꜽ": "AY",
                    "Ⓑ": "B",
                    "Ｂ": "B",
                    "Ḃ": "B",
                    "Ḅ": "B",
                    "Ḇ": "B",
                    "Ƀ": "B",
                    "Ƃ": "B",
                    "Ɓ": "B",
                    "Ⓒ": "C",
                    "Ｃ": "C",
                    "Ć": "C",
                    "Ĉ": "C",
                    "Ċ": "C",
                    "Č": "C",
                    "Ç": "C",
                    "Ḉ": "C",
                    "Ƈ": "C",
                    "Ȼ": "C",
                    "Ꜿ": "C",
                    "Ⓓ": "D",
                    "Ｄ": "D",
                    "Ḋ": "D",
                    "Ď": "D",
                    "Ḍ": "D",
                    "Ḑ": "D",
                    "Ḓ": "D",
                    "Ḏ": "D",
                    "Đ": "D",
                    "Ƌ": "D",
                    "Ɗ": "D",
                    "Ɖ": "D",
                    "Ꝺ": "D",
                    "Ǳ": "DZ",
                    "Ǆ": "DZ",
                    "ǲ": "Dz",
                    "ǅ": "Dz",
                    "Ⓔ": "E",
                    "Ｅ": "E",
                    "È": "E",
                    "É": "E",
                    "Ê": "E",
                    "Ề": "E",
                    "Ế": "E",
                    "Ễ": "E",
                    "Ể": "E",
                    "Ẽ": "E",
                    "Ē": "E",
                    "Ḕ": "E",
                    "Ḗ": "E",
                    "Ĕ": "E",
                    "Ė": "E",
                    "Ë": "E",
                    "Ẻ": "E",
                    "Ě": "E",
                    "Ȅ": "E",
                    "Ȇ": "E",
                    "Ẹ": "E",
                    "Ệ": "E",
                    "Ȩ": "E",
                    "Ḝ": "E",
                    "Ę": "E",
                    "Ḙ": "E",
                    "Ḛ": "E",
                    "Ɛ": "E",
                    "Ǝ": "E",
                    "Ⓕ": "F",
                    "Ｆ": "F",
                    "Ḟ": "F",
                    "Ƒ": "F",
                    "Ꝼ": "F",
                    "Ⓖ": "G",
                    "Ｇ": "G",
                    "Ǵ": "G",
                    "Ĝ": "G",
                    "Ḡ": "G",
                    "Ğ": "G",
                    "Ġ": "G",
                    "Ǧ": "G",
                    "Ģ": "G",
                    "Ǥ": "G",
                    "Ɠ": "G",
                    "Ꞡ": "G",
                    "Ᵹ": "G",
                    "Ꝿ": "G",
                    "Ⓗ": "H",
                    "Ｈ": "H",
                    "Ĥ": "H",
                    "Ḣ": "H",
                    "Ḧ": "H",
                    "Ȟ": "H",
                    "Ḥ": "H",
                    "Ḩ": "H",
                    "Ḫ": "H",
                    "Ħ": "H",
                    "Ⱨ": "H",
                    "Ⱶ": "H",
                    "Ɥ": "H",
                    "Ⓘ": "I",
                    "Ｉ": "I",
                    "Ì": "I",
                    "Í": "I",
                    "Î": "I",
                    "Ĩ": "I",
                    "Ī": "I",
                    "Ĭ": "I",
                    "İ": "I",
                    "Ï": "I",
                    "Ḯ": "I",
                    "Ỉ": "I",
                    "Ǐ": "I",
                    "Ȉ": "I",
                    "Ȋ": "I",
                    "Ị": "I",
                    "Į": "I",
                    "Ḭ": "I",
                    "Ɨ": "I",
                    "Ⓙ": "J",
                    "Ｊ": "J",
                    "Ĵ": "J",
                    "Ɉ": "J",
                    "Ⓚ": "K",
                    "Ｋ": "K",
                    "Ḱ": "K",
                    "Ǩ": "K",
                    "Ḳ": "K",
                    "Ķ": "K",
                    "Ḵ": "K",
                    "Ƙ": "K",
                    "Ⱪ": "K",
                    "Ꝁ": "K",
                    "Ꝃ": "K",
                    "Ꝅ": "K",
                    "Ꞣ": "K",
                    "Ⓛ": "L",
                    "Ｌ": "L",
                    "Ŀ": "L",
                    "Ĺ": "L",
                    "Ľ": "L",
                    "Ḷ": "L",
                    "Ḹ": "L",
                    "Ļ": "L",
                    "Ḽ": "L",
                    "Ḻ": "L",
                    "Ł": "L",
                    "Ƚ": "L",
                    "Ɫ": "L",
                    "Ⱡ": "L",
                    "Ꝉ": "L",
                    "Ꝇ": "L",
                    "Ꞁ": "L",
                    "Ǉ": "LJ",
                    "ǈ": "Lj",
                    "Ⓜ": "M",
                    "Ｍ": "M",
                    "Ḿ": "M",
                    "Ṁ": "M",
                    "Ṃ": "M",
                    "Ɱ": "M",
                    "Ɯ": "M",
                    "Ⓝ": "N",
                    "Ｎ": "N",
                    "Ǹ": "N",
                    "Ń": "N",
                    "Ñ": "N",
                    "Ṅ": "N",
                    "Ň": "N",
                    "Ṇ": "N",
                    "Ņ": "N",
                    "Ṋ": "N",
                    "Ṉ": "N",
                    "Ƞ": "N",
                    "Ɲ": "N",
                    "Ꞑ": "N",
                    "Ꞥ": "N",
                    "Ǌ": "NJ",
                    "ǋ": "Nj",
                    "Ⓞ": "O",
                    "Ｏ": "O",
                    "Ò": "O",
                    "Ó": "O",
                    "Ô": "O",
                    "Ồ": "O",
                    "Ố": "O",
                    "Ỗ": "O",
                    "Ổ": "O",
                    "Õ": "O",
                    "Ṍ": "O",
                    "Ȭ": "O",
                    "Ṏ": "O",
                    "Ō": "O",
                    "Ṑ": "O",
                    "Ṓ": "O",
                    "Ŏ": "O",
                    "Ȯ": "O",
                    "Ȱ": "O",
                    "Ö": "O",
                    "Ȫ": "O",
                    "Ỏ": "O",
                    "Ő": "O",
                    "Ǒ": "O",
                    "Ȍ": "O",
                    "Ȏ": "O",
                    "Ơ": "O",
                    "Ờ": "O",
                    "Ớ": "O",
                    "Ỡ": "O",
                    "Ở": "O",
                    "Ợ": "O",
                    "Ọ": "O",
                    "Ộ": "O",
                    "Ǫ": "O",
                    "Ǭ": "O",
                    "Ø": "O",
                    "Ǿ": "O",
                    "Ɔ": "O",
                    "Ɵ": "O",
                    "Ꝋ": "O",
                    "Ꝍ": "O",
                    "Ƣ": "OI",
                    "Ꝏ": "OO",
                    "Ȣ": "OU",
                    "Ⓟ": "P",
                    "Ｐ": "P",
                    "Ṕ": "P",
                    "Ṗ": "P",
                    "Ƥ": "P",
                    "Ᵽ": "P",
                    "Ꝑ": "P",
                    "Ꝓ": "P",
                    "Ꝕ": "P",
                    "Ⓠ": "Q",
                    "Ｑ": "Q",
                    "Ꝗ": "Q",
                    "Ꝙ": "Q",
                    "Ɋ": "Q",
                    "Ⓡ": "R",
                    "Ｒ": "R",
                    "Ŕ": "R",
                    "Ṙ": "R",
                    "Ř": "R",
                    "Ȑ": "R",
                    "Ȓ": "R",
                    "Ṛ": "R",
                    "Ṝ": "R",
                    "Ŗ": "R",
                    "Ṟ": "R",
                    "Ɍ": "R",
                    "Ɽ": "R",
                    "Ꝛ": "R",
                    "Ꞧ": "R",
                    "Ꞃ": "R",
                    "Ⓢ": "S",
                    "Ｓ": "S",
                    "ẞ": "S",
                    "Ś": "S",
                    "Ṥ": "S",
                    "Ŝ": "S",
                    "Ṡ": "S",
                    "Š": "S",
                    "Ṧ": "S",
                    "Ṣ": "S",
                    "Ṩ": "S",
                    "Ș": "S",
                    "Ş": "S",
                    "Ȿ": "S",
                    "Ꞩ": "S",
                    "Ꞅ": "S",
                    "Ⓣ": "T",
                    "Ｔ": "T",
                    "Ṫ": "T",
                    "Ť": "T",
                    "Ṭ": "T",
                    "Ț": "T",
                    "Ţ": "T",
                    "Ṱ": "T",
                    "Ṯ": "T",
                    "Ŧ": "T",
                    "Ƭ": "T",
                    "Ʈ": "T",
                    "Ⱦ": "T",
                    "Ꞇ": "T",
                    "Ꜩ": "TZ",
                    "Ⓤ": "U",
                    "Ｕ": "U",
                    "Ù": "U",
                    "Ú": "U",
                    "Û": "U",
                    "Ũ": "U",
                    "Ṹ": "U",
                    "Ū": "U",
                    "Ṻ": "U",
                    "Ŭ": "U",
                    "Ü": "U",
                    "Ǜ": "U",
                    "Ǘ": "U",
                    "Ǖ": "U",
                    "Ǚ": "U",
                    "Ủ": "U",
                    "Ů": "U",
                    "Ű": "U",
                    "Ǔ": "U",
                    "Ȕ": "U",
                    "Ȗ": "U",
                    "Ư": "U",
                    "Ừ": "U",
                    "Ứ": "U",
                    "Ữ": "U",
                    "Ử": "U",
                    "Ự": "U",
                    "Ụ": "U",
                    "Ṳ": "U",
                    "Ų": "U",
                    "Ṷ": "U",
                    "Ṵ": "U",
                    "Ʉ": "U",
                    "Ⓥ": "V",
                    "Ｖ": "V",
                    "Ṽ": "V",
                    "Ṿ": "V",
                    "Ʋ": "V",
                    "Ꝟ": "V",
                    "Ʌ": "V",
                    "Ꝡ": "VY",
                    "Ⓦ": "W",
                    "Ｗ": "W",
                    "Ẁ": "W",
                    "Ẃ": "W",
                    "Ŵ": "W",
                    "Ẇ": "W",
                    "Ẅ": "W",
                    "Ẉ": "W",
                    "Ⱳ": "W",
                    "Ⓧ": "X",
                    "Ｘ": "X",
                    "Ẋ": "X",
                    "Ẍ": "X",
                    "Ⓨ": "Y",
                    "Ｙ": "Y",
                    "Ỳ": "Y",
                    "Ý": "Y",
                    "Ŷ": "Y",
                    "Ỹ": "Y",
                    "Ȳ": "Y",
                    "Ẏ": "Y",
                    "Ÿ": "Y",
                    "Ỷ": "Y",
                    "Ỵ": "Y",
                    "Ƴ": "Y",
                    "Ɏ": "Y",
                    "Ỿ": "Y",
                    "Ⓩ": "Z",
                    "Ｚ": "Z",
                    "Ź": "Z",
                    "Ẑ": "Z",
                    "Ż": "Z",
                    "Ž": "Z",
                    "Ẓ": "Z",
                    "Ẕ": "Z",
                    "Ƶ": "Z",
                    "Ȥ": "Z",
                    "Ɀ": "Z",
                    "Ⱬ": "Z",
                    "Ꝣ": "Z",
                    "ⓐ": "a",
                    "ａ": "a",
                    "ẚ": "a",
                    "à": "a",
                    "á": "a",
                    "â": "a",
                    "ầ": "a",
                    "ấ": "a",
                    "ẫ": "a",
                    "ẩ": "a",
                    "ã": "a",
                    "ā": "a",
                    "ă": "a",
                    "ằ": "a",
                    "ắ": "a",
                    "ẵ": "a",
                    "ẳ": "a",
                    "ȧ": "a",
                    "ǡ": "a",
                    "ä": "a",
                    "ǟ": "a",
                    "ả": "a",
                    "å": "a",
                    "ǻ": "a",
                    "ǎ": "a",
                    "ȁ": "a",
                    "ȃ": "a",
                    "ạ": "a",
                    "ậ": "a",
                    "ặ": "a",
                    "ḁ": "a",
                    "ą": "a",
                    "ⱥ": "a",
                    "ɐ": "a",
                    "ꜳ": "aa",
                    "æ": "ae",
                    "ǽ": "ae",
                    "ǣ": "ae",
                    "ꜵ": "ao",
                    "ꜷ": "au",
                    "ꜹ": "av",
                    "ꜻ": "av",
                    "ꜽ": "ay",
                    "ⓑ": "b",
                    "ｂ": "b",
                    "ḃ": "b",
                    "ḅ": "b",
                    "ḇ": "b",
                    "ƀ": "b",
                    "ƃ": "b",
                    "ɓ": "b",
                    "ⓒ": "c",
                    "ｃ": "c",
                    "ć": "c",
                    "ĉ": "c",
                    "ċ": "c",
                    "č": "c",
                    "ç": "c",
                    "ḉ": "c",
                    "ƈ": "c",
                    "ȼ": "c",
                    "ꜿ": "c",
                    "ↄ": "c",
                    "ⓓ": "d",
                    "ｄ": "d",
                    "ḋ": "d",
                    "ď": "d",
                    "ḍ": "d",
                    "ḑ": "d",
                    "ḓ": "d",
                    "ḏ": "d",
                    "đ": "d",
                    "ƌ": "d",
                    "ɖ": "d",
                    "ɗ": "d",
                    "ꝺ": "d",
                    "ǳ": "dz",
                    "ǆ": "dz",
                    "ⓔ": "e",
                    "ｅ": "e",
                    "è": "e",
                    "é": "e",
                    "ê": "e",
                    "ề": "e",
                    "ế": "e",
                    "ễ": "e",
                    "ể": "e",
                    "ẽ": "e",
                    "ē": "e",
                    "ḕ": "e",
                    "ḗ": "e",
                    "ĕ": "e",
                    "ė": "e",
                    "ë": "e",
                    "ẻ": "e",
                    "ě": "e",
                    "ȅ": "e",
                    "ȇ": "e",
                    "ẹ": "e",
                    "ệ": "e",
                    "ȩ": "e",
                    "ḝ": "e",
                    "ę": "e",
                    "ḙ": "e",
                    "ḛ": "e",
                    "ɇ": "e",
                    "ɛ": "e",
                    "ǝ": "e",
                    "ⓕ": "f",
                    "ｆ": "f",
                    "ḟ": "f",
                    "ƒ": "f",
                    "ꝼ": "f",
                    "ⓖ": "g",
                    "ｇ": "g",
                    "ǵ": "g",
                    "ĝ": "g",
                    "ḡ": "g",
                    "ğ": "g",
                    "ġ": "g",
                    "ǧ": "g",
                    "ģ": "g",
                    "ǥ": "g",
                    "ɠ": "g",
                    "ꞡ": "g",
                    "ᵹ": "g",
                    "ꝿ": "g",
                    "ⓗ": "h",
                    "ｈ": "h",
                    "ĥ": "h",
                    "ḣ": "h",
                    "ḧ": "h",
                    "ȟ": "h",
                    "ḥ": "h",
                    "ḩ": "h",
                    "ḫ": "h",
                    "ẖ": "h",
                    "ħ": "h",
                    "ⱨ": "h",
                    "ⱶ": "h",
                    "ɥ": "h",
                    "ƕ": "hv",
                    "ⓘ": "i",
                    "ｉ": "i",
                    "ì": "i",
                    "í": "i",
                    "î": "i",
                    "ĩ": "i",
                    "ī": "i",
                    "ĭ": "i",
                    "ï": "i",
                    "ḯ": "i",
                    "ỉ": "i",
                    "ǐ": "i",
                    "ȉ": "i",
                    "ȋ": "i",
                    "ị": "i",
                    "į": "i",
                    "ḭ": "i",
                    "ɨ": "i",
                    "ı": "i",
                    "ⓙ": "j",
                    "ｊ": "j",
                    "ĵ": "j",
                    "ǰ": "j",
                    "ɉ": "j",
                    "ⓚ": "k",
                    "ｋ": "k",
                    "ḱ": "k",
                    "ǩ": "k",
                    "ḳ": "k",
                    "ķ": "k",
                    "ḵ": "k",
                    "ƙ": "k",
                    "ⱪ": "k",
                    "ꝁ": "k",
                    "ꝃ": "k",
                    "ꝅ": "k",
                    "ꞣ": "k",
                    "ⓛ": "l",
                    "ｌ": "l",
                    "ŀ": "l",
                    "ĺ": "l",
                    "ľ": "l",
                    "ḷ": "l",
                    "ḹ": "l",
                    "ļ": "l",
                    "ḽ": "l",
                    "ḻ": "l",
                    "ſ": "l",
                    "ł": "l",
                    "ƚ": "l",
                    "ɫ": "l",
                    "ⱡ": "l",
                    "ꝉ": "l",
                    "ꞁ": "l",
                    "ꝇ": "l",
                    "ǉ": "lj",
                    "ⓜ": "m",
                    "ｍ": "m",
                    "ḿ": "m",
                    "ṁ": "m",
                    "ṃ": "m",
                    "ɱ": "m",
                    "ɯ": "m",
                    "ⓝ": "n",
                    "ｎ": "n",
                    "ǹ": "n",
                    "ń": "n",
                    "ñ": "n",
                    "ṅ": "n",
                    "ň": "n",
                    "ṇ": "n",
                    "ņ": "n",
                    "ṋ": "n",
                    "ṉ": "n",
                    "ƞ": "n",
                    "ɲ": "n",
                    "ŉ": "n",
                    "ꞑ": "n",
                    "ꞥ": "n",
                    "ǌ": "nj",
                    "ⓞ": "o",
                    "ｏ": "o",
                    "ò": "o",
                    "ó": "o",
                    "ô": "o",
                    "ồ": "o",
                    "ố": "o",
                    "ỗ": "o",
                    "ổ": "o",
                    "õ": "o",
                    "ṍ": "o",
                    "ȭ": "o",
                    "ṏ": "o",
                    "ō": "o",
                    "ṑ": "o",
                    "ṓ": "o",
                    "ŏ": "o",
                    "ȯ": "o",
                    "ȱ": "o",
                    "ö": "o",
                    "ȫ": "o",
                    "ỏ": "o",
                    "ő": "o",
                    "ǒ": "o",
                    "ȍ": "o",
                    "ȏ": "o",
                    "ơ": "o",
                    "ờ": "o",
                    "ớ": "o",
                    "ỡ": "o",
                    "ở": "o",
                    "ợ": "o",
                    "ọ": "o",
                    "ộ": "o",
                    "ǫ": "o",
                    "ǭ": "o",
                    "ø": "o",
                    "ǿ": "o",
                    "ɔ": "o",
                    "ꝋ": "o",
                    "ꝍ": "o",
                    "ɵ": "o",
                    "ƣ": "oi",
                    "ȣ": "ou",
                    "ꝏ": "oo",
                    "ⓟ": "p",
                    "ｐ": "p",
                    "ṕ": "p",
                    "ṗ": "p",
                    "ƥ": "p",
                    "ᵽ": "p",
                    "ꝑ": "p",
                    "ꝓ": "p",
                    "ꝕ": "p",
                    "ⓠ": "q",
                    "ｑ": "q",
                    "ɋ": "q",
                    "ꝗ": "q",
                    "ꝙ": "q",
                    "ⓡ": "r",
                    "ｒ": "r",
                    "ŕ": "r",
                    "ṙ": "r",
                    "ř": "r",
                    "ȑ": "r",
                    "ȓ": "r",
                    "ṛ": "r",
                    "ṝ": "r",
                    "ŗ": "r",
                    "ṟ": "r",
                    "ɍ": "r",
                    "ɽ": "r",
                    "ꝛ": "r",
                    "ꞧ": "r",
                    "ꞃ": "r",
                    "ⓢ": "s",
                    "ｓ": "s",
                    "ß": "s",
                    "ś": "s",
                    "ṥ": "s",
                    "ŝ": "s",
                    "ṡ": "s",
                    "š": "s",
                    "ṧ": "s",
                    "ṣ": "s",
                    "ṩ": "s",
                    "ș": "s",
                    "ş": "s",
                    "ȿ": "s",
                    "ꞩ": "s",
                    "ꞅ": "s",
                    "ẛ": "s",
                    "ⓣ": "t",
                    "ｔ": "t",
                    "ṫ": "t",
                    "ẗ": "t",
                    "ť": "t",
                    "ṭ": "t",
                    "ț": "t",
                    "ţ": "t",
                    "ṱ": "t",
                    "ṯ": "t",
                    "ŧ": "t",
                    "ƭ": "t",
                    "ʈ": "t",
                    "ⱦ": "t",
                    "ꞇ": "t",
                    "ꜩ": "tz",
                    "ⓤ": "u",
                    "ｕ": "u",
                    "ù": "u",
                    "ú": "u",
                    "û": "u",
                    "ũ": "u",
                    "ṹ": "u",
                    "ū": "u",
                    "ṻ": "u",
                    "ŭ": "u",
                    "ü": "u",
                    "ǜ": "u",
                    "ǘ": "u",
                    "ǖ": "u",
                    "ǚ": "u",
                    "ủ": "u",
                    "ů": "u",
                    "ű": "u",
                    "ǔ": "u",
                    "ȕ": "u",
                    "ȗ": "u",
                    "ư": "u",
                    "ừ": "u",
                    "ứ": "u",
                    "ữ": "u",
                    "ử": "u",
                    "ự": "u",
                    "ụ": "u",
                    "ṳ": "u",
                    "ų": "u",
                    "ṷ": "u",
                    "ṵ": "u",
                    "ʉ": "u",
                    "ⓥ": "v",
                    "ｖ": "v",
                    "ṽ": "v",
                    "ṿ": "v",
                    "ʋ": "v",
                    "ꝟ": "v",
                    "ʌ": "v",
                    "ꝡ": "vy",
                    "ⓦ": "w",
                    "ｗ": "w",
                    "ẁ": "w",
                    "ẃ": "w",
                    "ŵ": "w",
                    "ẇ": "w",
                    "ẅ": "w",
                    "ẘ": "w",
                    "ẉ": "w",
                    "ⱳ": "w",
                    "ⓧ": "x",
                    "ｘ": "x",
                    "ẋ": "x",
                    "ẍ": "x",
                    "ⓨ": "y",
                    "ｙ": "y",
                    "ỳ": "y",
                    "ý": "y",
                    "ŷ": "y",
                    "ỹ": "y",
                    "ȳ": "y",
                    "ẏ": "y",
                    "ÿ": "y",
                    "ỷ": "y",
                    "ẙ": "y",
                    "ỵ": "y",
                    "ƴ": "y",
                    "ɏ": "y",
                    "ỿ": "y",
                    "ⓩ": "z",
                    "ｚ": "z",
                    "ź": "z",
                    "ẑ": "z",
                    "ż": "z",
                    "ž": "z",
                    "ẓ": "z",
                    "ẕ": "z",
                    "ƶ": "z",
                    "ȥ": "z",
                    "ɀ": "z",
                    "ⱬ": "z",
                    "ꝣ": "z",
                    "Ά": "Α",
                    "Έ": "Ε",
                    "Ή": "Η",
                    "Ί": "Ι",
                    "Ϊ": "Ι",
                    "Ό": "Ο",
                    "Ύ": "Υ",
                    "Ϋ": "Υ",
                    "Ώ": "Ω",
                    "ά": "α",
                    "έ": "ε",
                    "ή": "η",
                    "ί": "ι",
                    "ϊ": "ι",
                    "ΐ": "ι",
                    "ό": "ο",
                    "ύ": "υ",
                    "ϋ": "υ",
                    "ΰ": "υ",
                    "ω": "ω",
                    "ς": "σ"
                }
            }),
            e.define("select2/data/base", ["../utils"], function(t) {
                function e(t, n) {
                    e.__super__.constructor.call(this)
                }
                return t.Extend(e, t.Observable),
                e.prototype.current = function(t) {
                    throw new Error("The `current` method must be defined in child classes.")
                }
                ,
                e.prototype.query = function(t, e) {
                    throw new Error("The `query` method must be defined in child classes.")
                }
                ,
                e.prototype.bind = function(t, e) {}
                ,
                e.prototype.destroy = function() {}
                ,
                e.prototype.generateResultId = function(e, n) {
                    var r = e.id + "-result-";
                    return r += t.generateChars(4),
                    null != n.id ? r += "-" + n.id.toString() : r += "-" + t.generateChars(4),
                    r
                }
                ,
                e
            }),
            e.define("select2/data/select", ["./base", "../utils", "jquery"], function(t, e, n) {
                function r(t, e) {
                    this.$element = t,
                    this.options = e,
                    r.__super__.constructor.call(this)
                }
                return e.Extend(r, t),
                r.prototype.current = function(t) {
                    var e = []
                      , r = this;
                    this.$element.find(":selected").each(function() {
                        var t = n(this)
                          , i = r.item(t);
                        e.push(i)
                    }),
                    t(e)
                }
                ,
                r.prototype.select = function(t) {
                    var e = this;
                    if (t.selected = !0,
                    n(t.element).is("option"))
                        return t.element.selected = !0,
                        void this.$element.trigger("change");
                    if (this.$element.prop("multiple"))
                        this.current(function(r) {
                            var i = [];
                            t = [t],
                            t.push.apply(t, r);
                            for (var o = 0; o < t.length; o++) {
                                var a = t[o].id;
                                -1 === n.inArray(a, i) && i.push(a)
                            }
                            e.$element.val(i),
                            e.$element.trigger("change")
                        });
                    else {
                        var r = t.id;
                        this.$element.val(r),
                        this.$element.trigger("change")
                    }
                }
                ,
                r.prototype.unselect = function(t) {
                    var e = this;
                    if (this.$element.prop("multiple")) {
                        if (t.selected = !1,
                        n(t.element).is("option"))
                            return t.element.selected = !1,
                            void this.$element.trigger("change");
                        this.current(function(r) {
                            for (var i = [], o = 0; o < r.length; o++) {
                                var a = r[o].id;
                                a !== t.id && -1 === n.inArray(a, i) && i.push(a)
                            }
                            e.$element.val(i),
                            e.$element.trigger("change")
                        })
                    }
                }
                ,
                r.prototype.bind = function(t, e) {
                    var n = this;
                    this.container = t,
                    t.on("select", function(t) {
                        n.select(t.data)
                    }),
                    t.on("unselect", function(t) {
                        n.unselect(t.data)
                    })
                }
                ,
                r.prototype.destroy = function() {
                    this.$element.find("*").each(function() {
                        e.RemoveData(this)
                    })
                }
                ,
                r.prototype.query = function(t, e) {
                    var r = []
                      , i = this;
                    this.$element.children().each(function() {
                        var e = n(this);
                        if (e.is("option") || e.is("optgroup")) {
                            var o = i.item(e)
                              , a = i.matches(t, o);
                            null !== a && r.push(a)
                        }
                    }),
                    e({
                        results: r
                    })
                }
                ,
                r.prototype.addOptions = function(t) {
                    e.appendMany(this.$element, t)
                }
                ,
                r.prototype.option = function(t) {
                    var r;
                    t.children ? (r = document.createElement("optgroup"),
                    r.label = t.text) : (r = document.createElement("option"),
                    void 0 !== r.textContent ? r.textContent = t.text : r.innerText = t.text),
                    void 0 !== t.id && (r.value = t.id),
                    t.disabled && (r.disabled = !0),
                    t.selected && (r.selected = !0),
                    t.title && (r.title = t.title);
                    var i = n(r)
                      , o = this._normalizeItem(t);
                    return o.element = r,
                    e.StoreData(r, "data", o),
                    i
                }
                ,
                r.prototype.item = function(t) {
                    var r = {};
                    if (null != (r = e.GetData(t[0], "data")))
                        return r;
                    if (t.is("option"))
                        r = {
                            id: t.val(),
                            text: t.text(),
                            disabled: t.prop("disabled"),
                            selected: t.prop("selected"),
                            title: t.prop("title")
                        };
                    else if (t.is("optgroup")) {
                        r = {
                            text: t.prop("label"),
                            children: [],
                            title: t.prop("title")
                        };
                        for (var i = t.children("option"), o = [], a = 0; a < i.length; a++) {
                            var s = n(i[a])
                              , c = this.item(s);
                            o.push(c)
                        }
                        r.children = o
                    }
                    return r = this._normalizeItem(r),
                    r.element = t[0],
                    e.StoreData(t[0], "data", r),
                    r
                }
                ,
                r.prototype._normalizeItem = function(t) {
                    t !== Object(t) && (t = {
                        id: t,
                        text: t
                    }),
                    t = n.extend({}, {
                        text: ""
                    }, t);
                    var e = {
                        selected: !1,
                        disabled: !1
                    };
                    return null != t.id && (t.id = t.id.toString()),
                    null != t.text && (t.text = t.text.toString()),
                    null == t._resultId && t.id && null != this.container && (t._resultId = this.generateResultId(this.container, t)),
                    n.extend({}, e, t)
                }
                ,
                r.prototype.matches = function(t, e) {
                    return this.options.get("matcher")(t, e)
                }
                ,
                r
            }),
            e.define("select2/data/array", ["./select", "../utils", "jquery"], function(t, e, n) {
                function r(t, e) {
                    var n = e.get("data") || [];
                    r.__super__.constructor.call(this, t, e),
                    this.addOptions(this.convertToOptions(n))
                }
                return e.Extend(r, t),
                r.prototype.select = function(t) {
                    var e = this.$element.find("option").filter(function(e, n) {
                        return n.value == t.id.toString()
                    });
                    0 === e.length && (e = this.option(t),
                    this.addOptions(e)),
                    r.__super__.select.call(this, t)
                }
                ,
                r.prototype.convertToOptions = function(t) {
                    for (var r = this, i = this.$element.find("option"), o = i.map(function() {
                        return r.item(n(this)).id
                    }).get(), a = [], s = 0; s < t.length; s++) {
                        var c = this._normalizeItem(t[s]);
                        if (n.inArray(c.id, o) >= 0) {
                            var l = i.filter(function(t) {
                                return function() {
                                    return n(this).val() == t.id
                                }
                            }(c))
                              , u = this.item(l)
                              , h = n.extend(!0, {}, c, u)
                              , d = this.option(h);
                            l.replaceWith(d)
                        } else {
                            var p = this.option(c);
                            if (c.children) {
                                var f = this.convertToOptions(c.children);
                                e.appendMany(p, f)
                            }
                            a.push(p)
                        }
                    }
                    return a
                }
                ,
                r
            }),
            e.define("select2/data/ajax", ["./array", "../utils", "jquery"], function(t, e, n) {
                function r(t, e) {
                    this.ajaxOptions = this._applyDefaults(e.get("ajax")),
                    null != this.ajaxOptions.processResults && (this.processResults = this.ajaxOptions.processResults),
                    r.__super__.constructor.call(this, t, e)
                }
                return e.Extend(r, t),
                r.prototype._applyDefaults = function(t) {
                    var e = {
                        data: function(t) {
                            return n.extend({}, t, {
                                q: t.term
                            })
                        },
                        transport: function(t, e, r) {
                            var i = n.ajax(t);
                            return i.then(e),
                            i.fail(r),
                            i
                        }
                    };
                    return n.extend({}, e, t, !0)
                }
                ,
                r.prototype.processResults = function(t) {
                    return t
                }
                ,
                r.prototype.query = function(t, e) {
                    function r() {
                        var r = o.transport(o, function(r) {
                            var o = i.processResults(r, t);
                            i.options.get("debug") && window.console && console.error && (o && o.results && n.isArray(o.results) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")),
                            e(o)
                        }, function() {
                            "status"in r && (0 === r.status || "0" === r.status) || i.trigger("results:message", {
                                message: "errorLoading"
                            })
                        });
                        i._request = r
                    }
                    var i = this;
                    null != this._request && (n.isFunction(this._request.abort) && this._request.abort(),
                    this._request = null);
                    var o = n.extend({
                        type: "GET"
                    }, this.ajaxOptions);
                    "function" == typeof o.url && (o.url = o.url.call(this.$element, t)),
                    "function" == typeof o.data && (o.data = o.data.call(this.$element, t)),
                    this.ajaxOptions.delay && null != t.term ? (this._queryTimeout && window.clearTimeout(this._queryTimeout),
                    this._queryTimeout = window.setTimeout(r, this.ajaxOptions.delay)) : r()
                }
                ,
                r
            }),
            e.define("select2/data/tags", ["jquery"], function(t) {
                function e(e, n, r) {
                    var i = r.get("tags")
                      , o = r.get("createTag");
                    void 0 !== o && (this.createTag = o);
                    var a = r.get("insertTag");
                    if (void 0 !== a && (this.insertTag = a),
                    e.call(this, n, r),
                    t.isArray(i))
                        for (var s = 0; s < i.length; s++) {
                            var c = i[s]
                              , l = this._normalizeItem(c)
                              , u = this.option(l);
                            this.$element.append(u)
                        }
                }
                return e.prototype.query = function(t, e, n) {
                    function r(t, o) {
                        for (var a = t.results, s = 0; s < a.length; s++) {
                            var c = a[s]
                              , l = null != c.children && !r({
                                results: c.children
                            }, !0);
                            if ((c.text || "").toUpperCase() === (e.term || "").toUpperCase() || l)
                                return !o && (t.data = a,
                                void n(t))
                        }
                        if (o)
                            return !0;
                        var u = i.createTag(e);
                        if (null != u) {
                            var h = i.option(u);
                            h.attr("data-select2-tag", !0),
                            i.addOptions([h]),
                            i.insertTag(a, u)
                        }
                        t.results = a,
                        n(t)
                    }
                    var i = this;
                    if (this._removeOldTags(),
                    null == e.term || null != e.page)
                        return void t.call(this, e, n);
                    t.call(this, e, r)
                }
                ,
                e.prototype.createTag = function(e, n) {
                    var r = t.trim(n.term);
                    return "" === r ? null : {
                        id: r,
                        text: r
                    }
                }
                ,
                e.prototype.insertTag = function(t, e, n) {
                    e.unshift(n)
                }
                ,
                e.prototype._removeOldTags = function(e) {
                    this._lastTag;
                    this.$element.find("option[data-select2-tag]").each(function() {
                        this.selected || t(this).remove()
                    })
                }
                ,
                e
            }),
            e.define("select2/data/tokenizer", ["jquery"], function(t) {
                function e(t, e, n) {
                    var r = n.get("tokenizer");
                    void 0 !== r && (this.tokenizer = r),
                    t.call(this, e, n)
                }
                return e.prototype.bind = function(t, e, n) {
                    t.call(this, e, n),
                    this.$search = e.dropdown.$search || e.selection.$search || n.find(".select2-search__field")
                }
                ,
                e.prototype.query = function(e, n, r) {
                    function i(e) {
                        var n = a._normalizeItem(e);
                        if (!a.$element.find("option").filter(function() {
                            return t(this).val() === n.id
                        }).length) {
                            var r = a.option(n);
                            r.attr("data-select2-tag", !0),
                            a._removeOldTags(),
                            a.addOptions([r])
                        }
                        o(n)
                    }
                    function o(t) {
                        a.trigger("select", {
                            data: t
                        })
                    }
                    var a = this;
                    n.term = n.term || "";
                    var s = this.tokenizer(n, this.options, i);
                    s.term !== n.term && (this.$search.length && (this.$search.val(s.term),
                    this.$search.focus()),
                    n.term = s.term),
                    e.call(this, n, r)
                }
                ,
                e.prototype.tokenizer = function(e, n, r, i) {
                    for (var o = r.get("tokenSeparators") || [], a = n.term, s = 0, c = this.createTag || function(t) {
                        return {
                            id: t.term,
                            text: t.term
                        }
                    }
                    ; s < a.length; ) {
                        var l = a[s];
                        if (-1 !== t.inArray(l, o)) {
                            var u = a.substr(0, s)
                              , h = t.extend({}, n, {
                                term: u
                            })
                              , d = c(h);
                            null != d ? (i(d),
                            a = a.substr(s + 1) || "",
                            s = 0) : s++
                        } else
                            s++
                    }
                    return {
                        term: a
                    }
                }
                ,
                e
            }),
            e.define("select2/data/minimumInputLength", [], function() {
                function t(t, e, n) {
                    this.minimumInputLength = n.get("minimumInputLength"),
                    t.call(this, e, n)
                }
                return t.prototype.query = function(t, e, n) {
                    if (e.term = e.term || "",
                    e.term.length < this.minimumInputLength)
                        return void this.trigger("results:message", {
                            message: "inputTooShort",
                            args: {
                                minimum: this.minimumInputLength,
                                input: e.term,
                                params: e
                            }
                        });
                    t.call(this, e, n)
                }
                ,
                t
            }),
            e.define("select2/data/maximumInputLength", [], function() {
                function t(t, e, n) {
                    this.maximumInputLength = n.get("maximumInputLength"),
                    t.call(this, e, n)
                }
                return t.prototype.query = function(t, e, n) {
                    if (e.term = e.term || "",
                    this.maximumInputLength > 0 && e.term.length > this.maximumInputLength)
                        return void this.trigger("results:message", {
                            message: "inputTooLong",
                            args: {
                                maximum: this.maximumInputLength,
                                input: e.term,
                                params: e
                            }
                        });
                    t.call(this, e, n)
                }
                ,
                t
            }),
            e.define("select2/data/maximumSelectionLength", [], function() {
                function t(t, e, n) {
                    this.maximumSelectionLength = n.get("maximumSelectionLength"),
                    t.call(this, e, n)
                }
                return t.prototype.query = function(t, e, n) {
                    var r = this;
                    this.current(function(i) {
                        var o = null != i ? i.length : 0;
                        if (r.maximumSelectionLength > 0 && o >= r.maximumSelectionLength)
                            return void r.trigger("results:message", {
                                message: "maximumSelected",
                                args: {
                                    maximum: r.maximumSelectionLength
                                }
                            });
                        t.call(r, e, n)
                    })
                }
                ,
                t
            }),
            e.define("select2/dropdown", ["jquery", "./utils"], function(t, e) {
                function n(t, e) {
                    this.$element = t,
                    this.options = e,
                    n.__super__.constructor.call(this)
                }
                return e.Extend(n, e.Observable),
                n.prototype.render = function() {
                    var e = t('<span class="select2-dropdown"><span class="select2-results"></span></span>');
                    return e.attr("dir", this.options.get("dir")),
                    this.$dropdown = e,
                    e
                }
                ,
                n.prototype.bind = function() {}
                ,
                n.prototype.position = function(t, e) {}
                ,
                n.prototype.destroy = function() {
                    this.$dropdown.remove()
                }
                ,
                n
            }),
            e.define("select2/dropdown/search", ["jquery", "../utils"], function(t, e) {
                function n() {}
                return n.prototype.render = function(e) {
                    var n = e.call(this)
                      , r = t('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>');
                    return this.$searchContainer = r,
                    this.$search = r.find("input"),
                    n.prepend(r),
                    n
                }
                ,
                n.prototype.bind = function(e, n, r) {
                    var i = this;
                    e.call(this, n, r),
                    this.$search.on("keydown", function(t) {
                        i.trigger("keypress", t),
                        i._keyUpPrevented = t.isDefaultPrevented()
                    }),
                    this.$search.on("input", function(e) {
                        t(this).off("keyup")
                    }),
                    this.$search.on("keyup input", function(t) {
                        i.handleSearch(t)
                    }),
                    n.on("open", function() {
                        i.$search.attr("tabindex", 0),
                        i.$search.focus(),
                        window.setTimeout(function() {
                            i.$search.focus()
                        }, 0)
                    }),
                    n.on("close", function() {
                        i.$search.attr("tabindex", -1),
                        i.$search.val(""),
                        i.$search.blur()
                    }),
                    n.on("focus", function() {
                        n.isOpen() || i.$search.focus()
                    }),
                    n.on("results:all", function(t) {
                        if (null == t.query.term || "" === t.query.term) {
                            i.showSearch(t) ? i.$searchContainer.removeClass("select2-search--hide") : i.$searchContainer.addClass("select2-search--hide")
                        }
                    })
                }
                ,
                n.prototype.handleSearch = function(t) {
                    if (!this._keyUpPrevented) {
                        var e = this.$search.val();
                        this.trigger("query", {
                            term: e
                        })
                    }
                    this._keyUpPrevented = !1
                }
                ,
                n.prototype.showSearch = function(t, e) {
                    return !0
                }
                ,
                n
            }),
            e.define("select2/dropdown/hidePlaceholder", [], function() {
                function t(t, e, n, r) {
                    this.placeholder = this.normalizePlaceholder(n.get("placeholder")),
                    t.call(this, e, n, r)
                }
                return t.prototype.append = function(t, e) {
                    e.results = this.removePlaceholder(e.results),
                    t.call(this, e)
                }
                ,
                t.prototype.normalizePlaceholder = function(t, e) {
                    return "string" == typeof e && (e = {
                        id: "",
                        text: e
                    }),
                    e
                }
                ,
                t.prototype.removePlaceholder = function(t, e) {
                    for (var n = e.slice(0), r = e.length - 1; r >= 0; r--) {
                        var i = e[r];
                        this.placeholder.id === i.id && n.splice(r, 1)
                    }
                    return n
                }
                ,
                t
            }),
            e.define("select2/dropdown/infiniteScroll", ["jquery"], function(t) {
                function e(t, e, n, r) {
                    this.lastParams = {},
                    t.call(this, e, n, r),
                    this.$loadingMore = this.createLoadingMore(),
                    this.loading = !1
                }
                return e.prototype.append = function(t, e) {
                    this.$loadingMore.remove(),
                    this.loading = !1,
                    t.call(this, e),
                    this.showLoadingMore(e) && this.$results.append(this.$loadingMore)
                }
                ,
                e.prototype.bind = function(e, n, r) {
                    var i = this;
                    e.call(this, n, r),
                    n.on("query", function(t) {
                        i.lastParams = t,
                        i.loading = !0
                    }),
                    n.on("query:append", function(t) {
                        i.lastParams = t,
                        i.loading = !0
                    }),
                    this.$results.on("scroll", function() {
                        var e = t.contains(document.documentElement, i.$loadingMore[0]);
                        if (!i.loading && e) {
                            i.$results.offset().top + i.$results.outerHeight(!1) + 50 >= i.$loadingMore.offset().top + i.$loadingMore.outerHeight(!1) && i.loadMore()
                        }
                    })
                }
                ,
                e.prototype.loadMore = function() {
                    this.loading = !0;
                    var e = t.extend({}, {
                        page: 1
                    }, this.lastParams);
                    e.page++,
                    this.trigger("query:append", e)
                }
                ,
                e.prototype.showLoadingMore = function(t, e) {
                    return e.pagination && e.pagination.more
                }
                ,
                e.prototype.createLoadingMore = function() {
                    var e = t('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>')
                      , n = this.options.get("translations").get("loadingMore");
                    return e.html(n(this.lastParams)),
                    e
                }
                ,
                e
            }),
            e.define("select2/dropdown/attachBody", ["jquery", "../utils"], function(t, e) {
                function n(e, n, r) {
                    this.$dropdownParent = r.get("dropdownParent") || t(document.body),
                    e.call(this, n, r)
                }
                return n.prototype.bind = function(t, e, n) {
                    var r = this
                      , i = !1;
                    t.call(this, e, n),
                    e.on("open", function() {
                        r._showDropdown(),
                        r._attachPositioningHandler(e),
                        i || (i = !0,
                        e.on("results:all", function() {
                            r._positionDropdown(),
                            r._resizeDropdown()
                        }),
                        e.on("results:append", function() {
                            r._positionDropdown(),
                            r._resizeDropdown()
                        }))
                    }),
                    e.on("close", function() {
                        r._hideDropdown(),
                        r._detachPositioningHandler(e)
                    }),
                    this.$dropdownContainer.on("mousedown", function(t) {
                        t.stopPropagation()
                    })
                }
                ,
                n.prototype.destroy = function(t) {
                    t.call(this),
                    this.$dropdownContainer.remove()
                }
                ,
                n.prototype.position = function(t, e, n) {
                    e.attr("class", n.attr("class")),
                    e.removeClass("select2"),
                    e.addClass("select2-container--open"),
                    e.css({
                        position: "absolute",
                        top: -999999
                    }),
                    this.$container = n
                }
                ,
                n.prototype.render = function(e) {
                    var n = t("<span></span>")
                      , r = e.call(this);
                    return n.append(r),
                    this.$dropdownContainer = n,
                    n
                }
                ,
                n.prototype._hideDropdown = function(t) {
                    this.$dropdownContainer.detach()
                }
                ,
                n.prototype._attachPositioningHandler = function(n, r) {
                    var i = this
                      , o = "scroll.select2." + r.id
                      , a = "resize.select2." + r.id
                      , s = "orientationchange.select2." + r.id
                      , c = this.$container.parents().filter(e.hasScroll);
                    c.each(function() {
                        e.StoreData(this, "select2-scroll-position", {
                            x: t(this).scrollLeft(),
                            y: t(this).scrollTop()
                        })
                    }),
                    c.on(o, function(n) {
                        var r = e.GetData(this, "select2-scroll-position");
                        t(this).scrollTop(r.y)
                    }),
                    t(window).on(o + " " + a + " " + s, function(t) {
                        i._positionDropdown(),
                        i._resizeDropdown()
                    })
                }
                ,
                n.prototype._detachPositioningHandler = function(n, r) {
                    var i = "scroll.select2." + r.id
                      , o = "resize.select2." + r.id
                      , a = "orientationchange.select2." + r.id;
                    this.$container.parents().filter(e.hasScroll).off(i),
                    t(window).off(i + " " + o + " " + a)
                }
                ,
                n.prototype._positionDropdown = function() {
                    var e = t(window)
                      , n = this.$dropdown.hasClass("select2-dropdown--above")
                      , r = this.$dropdown.hasClass("select2-dropdown--below")
                      , i = null
                      , o = this.$container.offset();
                    o.bottom = o.top + this.$container.outerHeight(!1);
                    var a = {
                        height: this.$container.outerHeight(!1)
                    };
                    a.top = o.top,
                    a.bottom = o.top + a.height;
                    var s = {
                        height: this.$dropdown.outerHeight(!1)
                    }
                      , c = {
                        top: e.scrollTop(),
                        bottom: e.scrollTop() + e.height()
                    }
                      , l = c.top < o.top - s.height
                      , u = c.bottom > o.bottom + s.height
                      , h = {
                        left: o.left,
                        top: a.bottom
                    }
                      , d = this.$dropdownParent;
                    "static" === d.css("position") && (d = d.offsetParent());
                    var p = d.offset();
                    h.top -= p.top,
                    h.left -= p.left,
                    n || r || (i = "below"),
                    u || !l || n ? !l && u && n && (i = "below") : i = "above",
                    ("above" == i || n && "below" !== i) && (h.top = a.top - p.top - s.height),
                    null != i && (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + i),
                    this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + i)),
                    this.$dropdownContainer.css(h)
                }
                ,
                n.prototype._resizeDropdown = function() {
                    var t = {
                        width: this.$container.outerWidth(!1) + "px"
                    };
                    this.options.get("dropdownAutoWidth") && (t.minWidth = t.width,
                    t.position = "relative",
                    t.width = "auto"),
                    this.$dropdown.css(t)
                }
                ,
                n.prototype._showDropdown = function(t) {
                    this.$dropdownContainer.appendTo(this.$dropdownParent),
                    this._positionDropdown(),
                    this._resizeDropdown()
                }
                ,
                n
            }),
            e.define("select2/dropdown/minimumResultsForSearch", [], function() {
                function t(e) {
                    for (var n = 0, r = 0; r < e.length; r++) {
                        var i = e[r];
                        i.children ? n += t(i.children) : n++
                    }
                    return n
                }
                function e(t, e, n, r) {
                    this.minimumResultsForSearch = n.get("minimumResultsForSearch"),
                    this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0),
                    t.call(this, e, n, r)
                }
                return e.prototype.showSearch = function(e, n) {
                    return !(t(n.data.results) < this.minimumResultsForSearch) && e.call(this, n)
                }
                ,
                e
            }),
            e.define("select2/dropdown/selectOnClose", ["../utils"], function(t) {
                function e() {}
                return e.prototype.bind = function(t, e, n) {
                    var r = this;
                    t.call(this, e, n),
                    e.on("close", function(t) {
                        r._handleSelectOnClose(t)
                    })
                }
                ,
                e.prototype._handleSelectOnClose = function(e, n) {
                    if (n && null != n.originalSelect2Event) {
                        var r = n.originalSelect2Event;
                        if ("select" === r._type || "unselect" === r._type)
                            return
                    }
                    var i = this.getHighlightedResults();
                    if (!(i.length < 1)) {
                        var o = t.GetData(i[0], "data");
                        null != o.element && o.element.selected || null == o.element && o.selected || this.trigger("select", {
                            data: o
                        })
                    }
                }
                ,
                e
            }),
            e.define("select2/dropdown/closeOnSelect", [], function() {
                function t() {}
                return t.prototype.bind = function(t, e, n) {
                    var r = this;
                    t.call(this, e, n),
                    e.on("select", function(t) {
                        r._selectTriggered(t)
                    }),
                    e.on("unselect", function(t) {
                        r._selectTriggered(t)
                    })
                }
                ,
                t.prototype._selectTriggered = function(t, e) {
                    var n = e.originalEvent;
                    n && n.ctrlKey || this.trigger("close", {
                        originalEvent: n,
                        originalSelect2Event: e
                    })
                }
                ,
                t
            }),
            e.define("select2/i18n/en", [], function() {
                return {
                    errorLoading: function() {
                        return "The results could not be loaded."
                    },
                    inputTooLong: function(t) {
                        var e = t.input.length - t.maximum
                          , n = "Please delete " + e + " character";
                        return 1 != e && (n += "s"),
                        n
                    },
                    inputTooShort: function(t) {
                        return "Please enter " + (t.minimum - t.input.length) + " or more characters"
                    },
                    loadingMore: function() {
                        return "Loading more results…"
                    },
                    maximumSelected: function(t) {
                        var e = "You can only select " + t.maximum + " item";
                        return 1 != t.maximum && (e += "s"),
                        e
                    },
                    noResults: function() {
                        return "No results found"
                    },
                    searching: function() {
                        return "Searching…"
                    }
                }
            }),
            e.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function(t, e, n, r, i, o, a, s, c, l, u, h, d, p, f, m, v, g, y, _, x, b, w, M, E, T, S, A, C) {
                function P() {
                    this.reset()
                }
                return P.prototype.apply = function(h) {
                    if (h = t.extend(!0, {}, this.defaults, h),
                    null == h.dataAdapter) {
                        if (null != h.ajax ? h.dataAdapter = f : null != h.data ? h.dataAdapter = p : h.dataAdapter = d,
                        h.minimumInputLength > 0 && (h.dataAdapter = l.Decorate(h.dataAdapter, g)),
                        h.maximumInputLength > 0 && (h.dataAdapter = l.Decorate(h.dataAdapter, y)),
                        h.maximumSelectionLength > 0 && (h.dataAdapter = l.Decorate(h.dataAdapter, _)),
                        h.tags && (h.dataAdapter = l.Decorate(h.dataAdapter, m)),
                        null == h.tokenSeparators && null == h.tokenizer || (h.dataAdapter = l.Decorate(h.dataAdapter, v)),
                        null != h.query) {
                            var C = e(h.amdBase + "compat/query");
                            h.dataAdapter = l.Decorate(h.dataAdapter, C)
                        }
                        if (null != h.initSelection) {
                            var P = e(h.amdBase + "compat/initSelection");
                            h.dataAdapter = l.Decorate(h.dataAdapter, P)
                        }
                    }
                    if (null == h.resultsAdapter && (h.resultsAdapter = n,
                    null != h.ajax && (h.resultsAdapter = l.Decorate(h.resultsAdapter, M)),
                    null != h.placeholder && (h.resultsAdapter = l.Decorate(h.resultsAdapter, w)),
                    h.selectOnClose && (h.resultsAdapter = l.Decorate(h.resultsAdapter, S))),
                    null == h.dropdownAdapter) {
                        if (h.multiple)
                            h.dropdownAdapter = x;
                        else {
                            var L = l.Decorate(x, b);
                            h.dropdownAdapter = L
                        }
                        if (0 !== h.minimumResultsForSearch && (h.dropdownAdapter = l.Decorate(h.dropdownAdapter, T)),
                        h.closeOnSelect && (h.dropdownAdapter = l.Decorate(h.dropdownAdapter, A)),
                        null != h.dropdownCssClass || null != h.dropdownCss || null != h.adaptDropdownCssClass) {
                            var R = e(h.amdBase + "compat/dropdownCss");
                            h.dropdownAdapter = l.Decorate(h.dropdownAdapter, R)
                        }
                        h.dropdownAdapter = l.Decorate(h.dropdownAdapter, E)
                    }
                    if (null == h.selectionAdapter) {
                        if (h.multiple ? h.selectionAdapter = i : h.selectionAdapter = r,
                        null != h.placeholder && (h.selectionAdapter = l.Decorate(h.selectionAdapter, o)),
                        h.allowClear && (h.selectionAdapter = l.Decorate(h.selectionAdapter, a)),
                        h.multiple && (h.selectionAdapter = l.Decorate(h.selectionAdapter, s)),
                        null != h.containerCssClass || null != h.containerCss || null != h.adaptContainerCssClass) {
                            var O = e(h.amdBase + "compat/containerCss");
                            h.selectionAdapter = l.Decorate(h.selectionAdapter, O)
                        }
                        h.selectionAdapter = l.Decorate(h.selectionAdapter, c)
                    }
                    if ("string" == typeof h.language)
                        if (h.language.indexOf("-") > 0) {
                            var I = h.language.split("-")
                              , D = I[0];
                            h.language = [h.language, D]
                        } else
                            h.language = [h.language];
                    if (t.isArray(h.language)) {
                        var N = new u;
                        h.language.push("en");
                        for (var k = h.language, j = 0; j < k.length; j++) {
                            var z = k[j]
                              , B = {};
                            try {
                                B = u.loadPath(z)
                            } catch (t) {
                                try {
                                    z = this.defaults.amdLanguageBase + z,
                                    B = u.loadPath(z)
                                } catch (t) {
                                    h.debug && window.console && console.warn && console.warn('Select2: The language file for "' + z + '" could not be automatically loaded. A fallback will be used instead.');
                                    continue
                                }
                            }
                            N.extend(B)
                        }
                        h.translations = N
                    } else {
                        var U = u.loadPath(this.defaults.amdLanguageBase + "en")
                          , F = new u(h.language);
                        F.extend(U),
                        h.translations = F
                    }
                    return h
                }
                ,
                P.prototype.reset = function() {
                    function e(t) {
                        function e(t) {
                            return h[t] || t
                        }
                        return t.replace(/[^\u0000-\u007E]/g, e)
                    }
                    function n(r, i) {
                        if ("" === t.trim(r.term))
                            return i;
                        if (i.children && i.children.length > 0) {
                            for (var o = t.extend(!0, {}, i), a = i.children.length - 1; a >= 0; a--) {
                                null == n(r, i.children[a]) && o.children.splice(a, 1)
                            }
                            return o.children.length > 0 ? o : n(r, o)
                        }
                        var s = e(i.text).toUpperCase()
                          , c = e(r.term).toUpperCase();
                        return s.indexOf(c) > -1 ? i : null
                    }
                    this.defaults = {
                        amdBase: "./",
                        amdLanguageBase: "./i18n/",
                        closeOnSelect: !0,
                        debug: !1,
                        dropdownAutoWidth: !1,
                        escapeMarkup: l.escapeMarkup,
                        language: C,
                        matcher: n,
                        minimumInputLength: 0,
                        maximumInputLength: 0,
                        maximumSelectionLength: 0,
                        minimumResultsForSearch: 0,
                        selectOnClose: !1,
                        sorter: function(t) {
                            return t
                        },
                        templateResult: function(t) {
                            return t.text
                        },
                        templateSelection: function(t) {
                            return t.text
                        },
                        theme: "default",
                        width: "resolve"
                    }
                }
                ,
                P.prototype.set = function(e, n) {
                    var r = t.camelCase(e)
                      , i = {};
                    i[r] = n;
                    var o = l._convertData(i);
                    t.extend(!0, this.defaults, o)
                }
                ,
                new P
            }),
            e.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function(t, e, n, r) {
                function i(e, i) {
                    if (this.options = e,
                    null != i && this.fromElement(i),
                    this.options = n.apply(this.options),
                    i && i.is("input")) {
                        var o = t(this.get("amdBase") + "compat/inputData");
                        this.options.dataAdapter = r.Decorate(this.options.dataAdapter, o)
                    }
                }
                return i.prototype.fromElement = function(t) {
                    var n = ["select2"];
                    null == this.options.multiple && (this.options.multiple = t.prop("multiple")),
                    null == this.options.disabled && (this.options.disabled = t.prop("disabled")),
                    null == this.options.language && (t.prop("lang") ? this.options.language = t.prop("lang").toLowerCase() : t.closest("[lang]").prop("lang") && (this.options.language = t.closest("[lang]").prop("lang"))),
                    null == this.options.dir && (t.prop("dir") ? this.options.dir = t.prop("dir") : t.closest("[dir]").prop("dir") ? this.options.dir = t.closest("[dir]").prop("dir") : this.options.dir = "ltr"),
                    t.prop("disabled", this.options.disabled),
                    t.prop("multiple", this.options.multiple),
                    r.GetData(t[0], "select2Tags") && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),
                    r.StoreData(t[0], "data", r.GetData(t[0], "select2Tags")),
                    r.StoreData(t[0], "tags", !0)),
                    r.GetData(t[0], "ajaxUrl") && (this.options.debug && window.console && console.warn && console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),
                    t.attr("ajax--url", r.GetData(t[0], "ajaxUrl")),
                    r.StoreData(t[0], "ajax-Url", r.GetData(t[0], "ajaxUrl")));
                    var i = {};
                    i = e.fn.jquery && "1." == e.fn.jquery.substr(0, 2) && t[0].dataset ? e.extend(!0, {}, t[0].dataset, r.GetData(t[0])) : r.GetData(t[0]);
                    var o = e.extend(!0, {}, i);
                    o = r._convertData(o);
                    for (var a in o)
                        e.inArray(a, n) > -1 || (e.isPlainObject(this.options[a]) ? e.extend(this.options[a], o[a]) : this.options[a] = o[a]);
                    return this
                }
                ,
                i.prototype.get = function(t) {
                    return this.options[t]
                }
                ,
                i.prototype.set = function(t, e) {
                    this.options[t] = e
                }
                ,
                i
            }),
            e.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function(t, e, n, r) {
                var i = function(t, r) {
                    null != n.GetData(t[0], "select2") && n.GetData(t[0], "select2").destroy(),
                    this.$element = t,
                    this.id = this._generateId(t),
                    r = r || {},
                    this.options = new e(r,t),
                    i.__super__.constructor.call(this);
                    var o = t.attr("tabindex") || 0;
                    n.StoreData(t[0], "old-tabindex", o),
                    t.attr("tabindex", "-1");
                    var a = this.options.get("dataAdapter");
                    this.dataAdapter = new a(t,this.options);
                    var s = this.render();
                    this._placeContainer(s);
                    var c = this.options.get("selectionAdapter");
                    this.selection = new c(t,this.options),
                    this.$selection = this.selection.render(),
                    this.selection.position(this.$selection, s);
                    var l = this.options.get("dropdownAdapter");
                    this.dropdown = new l(t,this.options),
                    this.$dropdown = this.dropdown.render(),
                    this.dropdown.position(this.$dropdown, s);
                    var u = this.options.get("resultsAdapter");
                    this.results = new u(t,this.options,this.dataAdapter),
                    this.$results = this.results.render(),
                    this.results.position(this.$results, this.$dropdown);
                    var h = this;
                    this._bindAdapters(),
                    this._registerDomEvents(),
                    this._registerDataEvents(),
                    this._registerSelectionEvents(),
                    this._registerDropdownEvents(),
                    this._registerResultsEvents(),
                    this._registerEvents(),
                    this.dataAdapter.current(function(t) {
                        h.trigger("selection:update", {
                            data: t
                        })
                    }),
                    t.addClass("select2-hidden-accessible"),
                    t.attr("aria-hidden", "true"),
                    this._syncAttributes(),
                    n.StoreData(t[0], "select2", this),
                    t.data("select2", this)
                };
                return n.Extend(i, n.Observable),
                i.prototype._generateId = function(t) {
                    var e = "";
                    return e = null != t.attr("id") ? t.attr("id") : null != t.attr("name") ? t.attr("name") + "-" + n.generateChars(2) : n.generateChars(4),
                    e = e.replace(/(:|\.|\[|\]|,)/g, ""),
                    e = "select2-" + e
                }
                ,
                i.prototype._placeContainer = function(t) {
                    t.insertAfter(this.$element);
                    var e = this._resolveWidth(this.$element, this.options.get("width"));
                    null != e && t.css("width", e)
                }
                ,
                i.prototype._resolveWidth = function(t, e) {
                    var n = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
                    if ("resolve" == e) {
                        var r = this._resolveWidth(t, "style");
                        return null != r ? r : this._resolveWidth(t, "element")
                    }
                    if ("element" == e) {
                        var i = t.outerWidth(!1);
                        return i <= 0 ? "auto" : i + "px"
                    }
                    if ("style" == e) {
                        var o = t.attr("style");
                        if ("string" != typeof o)
                            return null;
                        for (var a = o.split(";"), s = 0, c = a.length; s < c; s += 1) {
                            var l = a[s].replace(/\s/g, "")
                              , u = l.match(n);
                            if (null !== u && u.length >= 1)
                                return u[1]
                        }
                        return null
                    }
                    return e
                }
                ,
                i.prototype._bindAdapters = function() {
                    this.dataAdapter.bind(this, this.$container),
                    this.selection.bind(this, this.$container),
                    this.dropdown.bind(this, this.$container),
                    this.results.bind(this, this.$container)
                }
                ,
                i.prototype._registerDomEvents = function() {
                    var e = this;
                    this.$element.on("change.select2", function() {
                        e.dataAdapter.current(function(t) {
                            e.trigger("selection:update", {
                                data: t
                            })
                        })
                    }),
                    this.$element.on("focus.select2", function(t) {
                        e.trigger("focus", t)
                    }),
                    this._syncA = n.bind(this._syncAttributes, this),
                    this._syncS = n.bind(this._syncSubtree, this),
                    this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
                    var r = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                    null != r ? (this._observer = new r(function(n) {
                        t.each(n, e._syncA),
                        t.each(n, e._syncS)
                    }
                    ),
                    this._observer.observe(this.$element[0], {
                        attributes: !0,
                        childList: !0,
                        subtree: !1
                    })) : this.$element[0].addEventListener && (this.$element[0].addEventListener("DOMAttrModified", e._syncA, !1),
                    this.$element[0].addEventListener("DOMNodeInserted", e._syncS, !1),
                    this.$element[0].addEventListener("DOMNodeRemoved", e._syncS, !1))
                }
                ,
                i.prototype._registerDataEvents = function() {
                    var t = this;
                    this.dataAdapter.on("*", function(e, n) {
                        t.trigger(e, n)
                    })
                }
                ,
                i.prototype._registerSelectionEvents = function() {
                    var e = this
                      , n = ["toggle", "focus"];
                    this.selection.on("toggle", function() {
                        e.toggleDropdown()
                    }),
                    this.selection.on("focus", function(t) {
                        e.focus(t)
                    }),
                    this.selection.on("*", function(r, i) {
                        -1 === t.inArray(r, n) && e.trigger(r, i)
                    })
                }
                ,
                i.prototype._registerDropdownEvents = function() {
                    var t = this;
                    this.dropdown.on("*", function(e, n) {
                        t.trigger(e, n)
                    })
                }
                ,
                i.prototype._registerResultsEvents = function() {
                    var t = this;
                    this.results.on("*", function(e, n) {
                        t.trigger(e, n)
                    })
                }
                ,
                i.prototype._registerEvents = function() {
                    var t = this;
                    this.on("open", function() {
                        t.$container.addClass("select2-container--open")
                    }),
                    this.on("close", function() {
                        t.$container.removeClass("select2-container--open")
                    }),
                    this.on("enable", function() {
                        t.$container.removeClass("select2-container--disabled")
                    }),
                    this.on("disable", function() {
                        t.$container.addClass("select2-container--disabled")
                    }),
                    this.on("blur", function() {
                        t.$container.removeClass("select2-container--focus")
                    }),
                    this.on("query", function(e) {
                        t.isOpen() || t.trigger("open", {}),
                        this.dataAdapter.query(e, function(n) {
                            t.trigger("results:all", {
                                data: n,
                                query: e
                            })
                        })
                    }),
                    this.on("query:append", function(e) {
                        this.dataAdapter.query(e, function(n) {
                            t.trigger("results:append", {
                                data: n,
                                query: e
                            })
                        })
                    }),
                    this.on("keypress", function(e) {
                        var n = e.which;
                        t.isOpen() ? n === r.ESC || n === r.TAB || n === r.UP && e.altKey ? (t.close(),
                        e.preventDefault()) : n === r.ENTER ? (t.trigger("results:select", {}),
                        e.preventDefault()) : n === r.SPACE && e.ctrlKey ? (t.trigger("results:toggle", {}),
                        e.preventDefault()) : n === r.UP ? (t.trigger("results:previous", {}),
                        e.preventDefault()) : n === r.DOWN && (t.trigger("results:next", {}),
                        e.preventDefault()) : (n === r.ENTER || n === r.SPACE || n === r.DOWN && e.altKey) && (t.open(),
                        e.preventDefault())
                    })
                }
                ,
                i.prototype._syncAttributes = function() {
                    this.options.set("disabled", this.$element.prop("disabled")),
                    this.options.get("disabled") ? (this.isOpen() && this.close(),
                    this.trigger("disable", {})) : this.trigger("enable", {})
                }
                ,
                i.prototype._syncSubtree = function(t, e) {
                    var n = !1
                      , r = this;
                    if (!t || !t.target || "OPTION" === t.target.nodeName || "OPTGROUP" === t.target.nodeName) {
                        if (e)
                            if (e.addedNodes && e.addedNodes.length > 0)
                                for (var i = 0; i < e.addedNodes.length; i++) {
                                    var o = e.addedNodes[i];
                                    o.selected && (n = !0)
                                }
                            else
                                e.removedNodes && e.removedNodes.length > 0 && (n = !0);
                        else
                            n = !0;
                        n && this.dataAdapter.current(function(t) {
                            r.trigger("selection:update", {
                                data: t
                            })
                        })
                    }
                }
                ,
                i.prototype.trigger = function(t, e) {
                    var n = i.__super__.trigger
                      , r = {
                        open: "opening",
                        close: "closing",
                        select: "selecting",
                        unselect: "unselecting",
                        clear: "clearing"
                    };
                    if (void 0 === e && (e = {}),
                    t in r) {
                        var o = r[t]
                          , a = {
                            prevented: !1,
                            name: t,
                            args: e
                        };
                        if (n.call(this, o, a),
                        a.prevented)
                            return void (e.prevented = !0)
                    }
                    n.call(this, t, e)
                }
                ,
                i.prototype.toggleDropdown = function() {
                    this.options.get("disabled") || (this.isOpen() ? this.close() : this.open())
                }
                ,
                i.prototype.open = function() {
                    this.isOpen() || this.trigger("query", {})
                }
                ,
                i.prototype.close = function() {
                    this.isOpen() && this.trigger("close", {})
                }
                ,
                i.prototype.isOpen = function() {
                    return this.$container.hasClass("select2-container--open")
                }
                ,
                i.prototype.hasFocus = function() {
                    return this.$container.hasClass("select2-container--focus")
                }
                ,
                i.prototype.focus = function(t) {
                    this.hasFocus() || (this.$container.addClass("select2-container--focus"),
                    this.trigger("focus", {}))
                }
                ,
                i.prototype.enable = function(t) {
                    this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'),
                    null != t && 0 !== t.length || (t = [!0]);
                    var e = !t[0];
                    this.$element.prop("disabled", e)
                }
                ,
                i.prototype.data = function() {
                    this.options.get("debug") && arguments.length > 0 && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
                    var t = [];
                    return this.dataAdapter.current(function(e) {
                        t = e
                    }),
                    t
                }
                ,
                i.prototype.val = function(e) {
                    if (this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),
                    null == e || 0 === e.length)
                        return this.$element.val();
                    var n = e[0];
                    t.isArray(n) && (n = t.map(n, function(t) {
                        return t.toString()
                    })),
                    this.$element.val(n).trigger("change")
                }
                ,
                i.prototype.destroy = function() {
                    this.$container.remove(),
                    this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA),
                    null != this._observer ? (this._observer.disconnect(),
                    this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, !1),
                    this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, !1),
                    this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, !1)),
                    this._syncA = null,
                    this._syncS = null,
                    this.$element.off(".select2"),
                    this.$element.attr("tabindex", n.GetData(this.$element[0], "old-tabindex")),
                    this.$element.removeClass("select2-hidden-accessible"),
                    this.$element.attr("aria-hidden", "false"),
                    n.RemoveData(this.$element[0]),
                    this.$element.removeData("select2"),
                    this.dataAdapter.destroy(),
                    this.selection.destroy(),
                    this.dropdown.destroy(),
                    this.results.destroy(),
                    this.dataAdapter = null,
                    this.selection = null,
                    this.dropdown = null,
                    this.results = null
                }
                ,
                i.prototype.render = function() {
                    var e = t('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
                    return e.attr("dir", this.options.get("dir")),
                    this.$container = e,
                    this.$container.addClass("select2-container--" + this.options.get("theme")),
                    n.StoreData(e[0], "element", this.$element),
                    e
                }
                ,
                i
            }),
            e.define("jquery-mousewheel", ["jquery"], function(t) {
                return t
            }),
            e.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function(t, e, n, r, i) {
                if (null == t.fn.select2) {
                    var o = ["open", "close", "destroy"];
                    t.fn.select2 = function(e) {
                        if ("object" == typeof (e = e || {}))
                            return this.each(function() {
                                var r = t.extend(!0, {}, e);
                                new n(t(this),r)
                            }),
                            this;
                        if ("string" == typeof e) {
                            var r, a = Array.prototype.slice.call(arguments, 1);
                            return this.each(function() {
                                var t = i.GetData(this, "select2");
                                null == t && window.console && console.error && console.error("The select2('" + e + "') method was called on an element that is not using Select2."),
                                r = t[e].apply(t, a)
                            }),
                            t.inArray(e, o) > -1 ? this : r
                        }
                        throw new Error("Invalid arguments for Select2: " + e)
                    }
                }
                return null == t.fn.select2.defaults && (t.fn.select2.defaults = r),
                n
            }),
            {
                define: e.define,
                require: e.require
            }
        }()
          , n = e.require("jquery.select2");
        return t.fn.select2.amd = e,
        n
    })
}
, function(t, e, n) {
    "use strict";
    function r(t, e) {
        var n = new e;
        return {
            linkProp: function(e) {
                return {
                    default: n[e](),
                    onChange: function(n, r) {
                        r[t][e](n)
                    },
                    triggerUpdate: !1
                }
            },
            linkMethod: function(e) {
                return function(n) {
                    for (var r = n[t], i = arguments.length, o = Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++)
                        o[a - 1] = arguments[a];
                    var s = r[e].apply(r, o);
                    return s === r ? this : s
                }
            }
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(1013)
      , o = n(1014)
      , a = n(1015)
      , s = n(1141)
      , c = n(159)
      , l = n.n(c)
      , u = n(158)
      , h = n.n(u);
    !function(t, e) {
        void 0 === e && (e = {});
        var n = e.insertAt;
        if (t && "undefined" != typeof document) {
            var r = document.head || document.getElementsByTagName("head")[0]
              , i = document.createElement("style");
            i.type = "text/css",
            "top" === n && r.firstChild ? r.insertBefore(i, r.firstChild) : r.appendChild(i),
            i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t))
        }
    }(".graph-nav-info {\n  bottom: 5px;\n  width: 100%;\n  text-align: center;\n  color: slategrey;\n  opacity: 0.7;\n  font-size: 10px;\n}\n\n.graph-info-msg {\n  top: 50%;\n  width: 100%;\n  text-align: center;\n  color: lavender;\n  opacity: 0.7;\n  font-size: 22px;\n}\n\n.graph-tooltip {\n  color: lavender;\n  font-size: 18px;\n  transform: translate(-50%, 25px);\n}\n\n.graph-info-msg, .graph-nav-info, .graph-tooltip {\n  position: absolute;\n  font-family: Sans-serif;\n}\n\n.grabbable {\n  cursor: move;\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n\n.grabbable:active {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}");
    var d = function(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n,
        t
    }
      , p = Object.assign || function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
        }
        return t
    }
      , f = function(t) {
        if (Array.isArray(t)) {
            for (var e = 0, n = Array(t.length); e < t.length; e++)
                n[e] = t[e];
            return n
        }
        return Array.from(t)
    }
      , m = window.THREE ? window.THREE : {
        AmbientLight: i.a,
        DirectionalLight: i.b
    }
      , v = r("forceGraph", a.a)
      , g = Object.assign.apply(Object, f(["jsonUrl", "graphData", "numDimensions", "nodeRelSize", "nodeId", "nodeVal", "nodeResolution", "nodeColor", "nodeAutoColorBy", "nodeOpacity", "nodeThreeObject", "linkSource", "linkTarget", "linkColor", "linkAutoColorBy", "linkOpacity", "linkWidth", "linkResolution", "linkDirectionalParticles", "linkDirectionalParticleSpeed", "linkDirectionalParticleWidth", "linkDirectionalParticleColor", "linkDirectionalParticleResolution", "forceEngine", "d3AlphaDecay", "d3VelocityDecay", "warmupTicks", "cooldownTicks", "cooldownTime"].map(function(t) {
        return d({}, t, v.linkProp(t))
    })))
      , y = Object.assign.apply(Object, f(["d3Force"].map(function(t) {
        return d({}, t, v.linkMethod(t))
    })))
      , _ = r("renderObjs", s.a)
      , x = Object.assign.apply(Object, f(["width", "height", "backgroundColor", "showNavInfo", "enablePointerInteraction"].map(function(t) {
        return d({}, t, _.linkProp(t))
    })))
      , b = Object.assign.apply(Object, f(["cameraPosition"].map(function(t) {
        return d({}, t, _.linkMethod(t))
    })))
      , w = h()({
        props: p({
            nodeLabel: {
                default: "name",
                triggerUpdate: !1
            },
            linkLabel: {
                default: "name",
                triggerUpdate: !1
            },
            linkHoverPrecision: {
                default: 1,
                onChange: function(t, e) {
                    return e.renderObjs.lineHoverPrecision(t)
                },
                triggerUpdate: !1
            },
            enableNodeDrag: {
                default: !0,
                triggerUpdate: !1
            },
            onNodeClick: {
                default: function() {},
                triggerUpdate: !1
            },
            onNodeHover: {
                default: function() {},
                triggerUpdate: !1
            },
            onLinkClick: {
                default: function() {},
                triggerUpdate: !1
            },
            onLinkHover: {
                default: function() {},
                triggerUpdate: !1
            }
        }, g, x),
        aliases: {
            nameField: "nodeLabel",
            idField: "nodeId",
            valField: "nodeVal",
            colorField: "nodeColor",
            autoColorBy: "nodeAutoColorBy",
            linkSourceField: "linkSource",
            linkTargetField: "linkTarget",
            linkColorField: "linkColor",
            lineOpacity: "linkOpacity"
        },
        methods: p({
            stopAnimation: function(t) {
                return t.animationFrameRequestId && cancelAnimationFrame(t.animationFrameRequestId),
                this
            },
            scene: function(t) {
                return t.renderObjs.scene()
            }
        }, y, b),
        stateInit: function() {
            return {
                forceGraph: new a.a,
                renderObjs: Object(s.a)()
            }
        },
        init: function(t, e) {
            t.innerHTML = "",
            t.appendChild(e.container = document.createElement("div")),
            e.container.style.position = "relative";
            var n = document.createElement("div");
            e.container.appendChild(n),
            e.renderObjs(n);
            var r = e.renderObjs.camera()
              , i = e.renderObjs.renderer()
              , a = e.renderObjs.tbControls();
            e.lastSetCameraZ = r.position.z;
            var s = void 0;
            e.container.appendChild(s = document.createElement("div")),
            s.className = "graph-info-msg",
            s.textContent = "",
            e.forceGraph.onLoading(function() {
                s.textContent = "Loading..."
            }),
            e.forceGraph.onFinishLoading(function() {
                if (s.textContent = "",
                e.graphData = e.forceGraph.graphData(),
                0 === r.position.x && 0 === r.position.y && r.position.z === e.lastSetCameraZ && (r.lookAt(e.forceGraph.position),
                e.lastSetCameraZ = r.position.z = 150 * Math.cbrt(e.graphData.nodes.length)),
                e.enableNodeDrag && e.enablePointerInteraction && "d3" === e.forceEngine) {
                    var t = new o.a(e.graphData.nodes.map(function(t) {
                        return t.__threeObj
                    }),r,i.domElement);
                    t.addEventListener("dragstart", function(t) {
                        a.enabled = !1;
                        var n = t.object.__data;
                        n.__initialFixedPos = {
                            fx: n.fx,
                            fy: n.fy,
                            fz: n.fz
                        },
                        ["x", "y", "z"].forEach(function(t) {
                            return n["f" + t] = n[t]
                        }),
                        e.forceGraph.d3AlphaTarget(.3),
                        i.domElement.classList.add("grabbable")
                    }),
                    t.addEventListener("drag", function(t) {
                        e.ignoreOneClick = !0;
                        var n = t.object.__data;
                        ["x", "y", "z"].forEach(function(e) {
                            return n["f" + e] = n[e] = t.object.position[e]
                        }),
                        e.forceGraph.resetCountdown()
                    }),
                    t.addEventListener("dragend", function(t) {
                        var n = t.object.__data
                          , r = n.__initialFixedPos;
                        r && (["x", "y", "z"].forEach(function(t) {
                            var e = "f" + t;
                            void 0 === r[e] && (n[e] = void 0)
                        }),
                        delete n.__initialFixedPos),
                        e.forceGraph.d3AlphaTarget(0).resetCountdown(),
                        a.enabled = !0,
                        i.domElement.classList.remove("grabbable")
                    })
                }
            });
            var c = function(t) {
                for (var n = t; e.nodeThreeObject && n && !n.hasOwnProperty("__graphObjType"); )
                    n = n.parent;
                return n
            };
            e.renderObjs.objects([new m.AmbientLight(12303291), new m.DirectionalLight(16777215,.6), e.forceGraph]).hoverOrderComparator(function(t, e) {
                var n = c(t);
                if (!n)
                    return 1;
                var r = c(e);
                if (!r)
                    return -1;
                var i = function(t) {
                    return "node" === t.__graphObjType
                };
                return i(r) - i(n)
            }).tooltipContent(function(t) {
                var n = c(t);
                return n ? l()(e[n.__graphObjType + "Label"])(n.__data) || "" : ""
            }).onHover(function(t) {
                var n = c(t);
                if (n !== e.hoverObj) {
                    var r = e.hoverObj ? e.hoverObj.__graphObjType : null
                      , i = e.hoverObj ? e.hoverObj.__data : null
                      , o = n ? n.__graphObjType : null
                      , a = n ? n.__data : null;
                    r && r !== o && e["on" + ("node" === r ? "Node" : "Link") + "Hover"](null, i),
                    o && e["on" + ("node" === o ? "Node" : "Link") + "Hover"](a, r === o ? i : null),
                    e.hoverObj = n
                }
            }).onClick(function(t) {
                if (e.ignoreOneClick)
                    return void (e.ignoreOneClick = !1);
                var n = c(t);
                n && e["on" + ("node" === n.__graphObjType ? "Node" : "Link") + "Click"](n.__data)
            }),
            function t() {
                e.enablePointerInteraction && (i.domElement.style.cursor = null),
                e.forceGraph.tickFrame(),
                e.renderObjs.tick(),
                e.animationFrameRequestId = requestAnimationFrame(t)
            }()
        }
    });
    e.default = w
}
, function(t, e, n) {
    "use strict";
    function r() {}
    function i(t, e) {
        this.x = t || 0,
        this.y = e || 0
    }
    function o() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
    function a(t, e, n, r) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._w = void 0 !== r ? r : 1
    }
    function s(t, e, n) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0
    }
    function c() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    function l(t, e, n, r, o, a, s, u, h, d) {
        Object.defineProperty(this, "id", {
            value: js++
        }),
        this.uuid = ks.generateUUID(),
        this.name = "",
        this.image = void 0 !== t ? t : l.DEFAULT_IMAGE,
        this.mipmaps = [],
        this.mapping = void 0 !== e ? e : l.DEFAULT_MAPPING,
        this.wrapS = void 0 !== n ? n : Sa,
        this.wrapT = void 0 !== r ? r : Sa,
        this.magFilter = void 0 !== o ? o : Ra,
        this.minFilter = void 0 !== a ? a : Ia,
        this.anisotropy = void 0 !== h ? h : 1,
        this.format = void 0 !== s ? s : Ya,
        this.type = void 0 !== u ? u : Da,
        this.offset = new i(0,0),
        this.repeat = new i(1,1),
        this.center = new i(0,0),
        this.rotation = 0,
        this.matrixAutoUpdate = !0,
        this.matrix = new c,
        this.generateMipmaps = !0,
        this.premultiplyAlpha = !1,
        this.flipY = !0,
        this.unpackAlignment = 4,
        this.encoding = void 0 !== d ? d : As,
        this.version = 0,
        this.onUpdate = null
    }
    function u(t, e, n, r) {
        this.x = t || 0,
        this.y = e || 0,
        this.z = n || 0,
        this.w = void 0 !== r ? r : 1
    }
    function h(t, e, n) {
        this.width = t,
        this.height = e,
        this.scissor = new u(0,0,t,e),
        this.scissorTest = !1,
        this.viewport = new u(0,0,t,e),
        n = n || {},
        void 0 === n.minFilter && (n.minFilter = Ra),
        this.texture = new l(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
        this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
        this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
        this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
    }
    function d(t, e, n) {
        h.call(this, t, e, n),
        this.activeCubeFace = 0,
        this.activeMipMapLevel = 0
    }
    function p(t, e, n, r, i, o, a, s, c, u, h, d) {
        l.call(this, null, o, a, s, c, u, r, i, h, d),
        this.image = {
            data: t,
            width: e,
            height: n
        },
        this.magFilter = void 0 !== c ? c : Ca,
        this.minFilter = void 0 !== u ? u : Ca,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.unpackAlignment = 1
    }
    function f(t, e) {
        this.min = void 0 !== t ? t : new s(1 / 0,1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new s(-1 / 0,-1 / 0,-1 / 0)
    }
    function m(t, e) {
        this.center = void 0 !== t ? t : new s,
        this.radius = void 0 !== e ? e : 0
    }
    function v(t, e) {
        this.normal = void 0 !== t ? t : new s(1,0,0),
        this.constant = void 0 !== e ? e : 0
    }
    function g(t, e, n, r, i, o) {
        this.planes = [void 0 !== t ? t : new v, void 0 !== e ? e : new v, void 0 !== n ? n : new v, void 0 !== r ? r : new v, void 0 !== i ? i : new v, void 0 !== o ? o : new v]
    }
    function y(t, e, n) {
        return void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
    }
    function _(t) {
        function e(e, n) {
            var r = e.array
              , i = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW
              , o = t.createBuffer();
            t.bindBuffer(n, o),
            t.bufferData(n, r, i),
            e.onUploadCallback();
            var a = t.FLOAT;
            return r instanceof Float32Array ? a = t.FLOAT : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? a = t.UNSIGNED_SHORT : r instanceof Int16Array ? a = t.SHORT : r instanceof Uint32Array ? a = t.UNSIGNED_INT : r instanceof Int32Array ? a = t.INT : r instanceof Int8Array ? a = t.BYTE : r instanceof Uint8Array && (a = t.UNSIGNED_BYTE),
            {
                buffer: o,
                type: a,
                bytesPerElement: r.BYTES_PER_ELEMENT,
                version: e.version
            }
        }
        function n(e, n, r) {
            var i = n.array
              , o = n.updateRange;
            t.bindBuffer(r, e),
            !1 === n.dynamic ? t.bufferData(r, i, t.STATIC_DRAW) : -1 === o.count ? t.bufferSubData(r, 0, i) : 0 === o.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(r, o.offset * i.BYTES_PER_ELEMENT, i.subarray(o.offset, o.offset + o.count)),
            o.count = -1)
        }
        function r(t) {
            return t.isInterleavedBufferAttribute && (t = t.data),
            a.get(t)
        }
        function i(e) {
            e.isInterleavedBufferAttribute && (e = e.data);
            var n = a.get(e);
            n && (t.deleteBuffer(n.buffer),
            a.delete(e))
        }
        function o(t, r) {
            t.isInterleavedBufferAttribute && (t = t.data);
            var i = a.get(t);
            void 0 === i ? a.set(t, e(t, r)) : i.version < t.version && (n(i.buffer, t, r),
            i.version = t.version)
        }
        var a = new WeakMap;
        return {
            get: r,
            remove: i,
            update: o
        }
    }
    function x(t, e, n, r) {
        this._x = t || 0,
        this._y = e || 0,
        this._z = n || 0,
        this._order = r || x.DefaultOrder
    }
    function b() {
        this.mask = 1
    }
    function w() {
        function t() {
            i.setFromEuler(r, !1)
        }
        function e() {
            r.setFromQuaternion(i, void 0, !1)
        }
        Object.defineProperty(this, "id", {
            value: Gs++
        }),
        this.uuid = ks.generateUUID(),
        this.name = "",
        this.type = "Object3D",
        this.parent = null,
        this.children = [],
        this.up = w.DefaultUp.clone();
        var n = new s
          , r = new x
          , i = new a
          , l = new s(1,1,1);
        r.onChange(t),
        i.onChange(e),
        Object.defineProperties(this, {
            position: {
                enumerable: !0,
                value: n
            },
            rotation: {
                enumerable: !0,
                value: r
            },
            quaternion: {
                enumerable: !0,
                value: i
            },
            scale: {
                enumerable: !0,
                value: l
            },
            modelViewMatrix: {
                value: new o
            },
            normalMatrix: {
                value: new c
            }
        }),
        this.matrix = new o,
        this.matrixWorld = new o,
        this.matrixAutoUpdate = w.DefaultMatrixAutoUpdate,
        this.matrixWorldNeedsUpdate = !1,
        this.layers = new b,
        this.visible = !0,
        this.castShadow = !1,
        this.receiveShadow = !1,
        this.frustumCulled = !0,
        this.renderOrder = 0,
        this.userData = {}
    }
    function M() {
        w.call(this),
        this.type = "Camera",
        this.matrixWorldInverse = new o,
        this.projectionMatrix = new o
    }
    function E(t, e, n, r, i, o) {
        M.call(this),
        this.type = "OrthographicCamera",
        this.zoom = 1,
        this.view = null,
        this.left = t,
        this.right = e,
        this.top = n,
        this.bottom = r,
        this.near = void 0 !== i ? i : .1,
        this.far = void 0 !== o ? o : 2e3,
        this.updateProjectionMatrix()
    }
    function T(t, e, n, r, i, o) {
        this.a = t,
        this.b = e,
        this.c = n,
        this.normal = r && r.isVector3 ? r : new s,
        this.vertexNormals = Array.isArray(r) ? r : [],
        this.color = i && i.isColor ? i : new y,
        this.vertexColors = Array.isArray(i) ? i : [],
        this.materialIndex = void 0 !== o ? o : 0
    }
    function S() {
        Object.defineProperty(this, "id", {
            value: Vs += 2
        }),
        this.uuid = ks.generateUUID(),
        this.name = "",
        this.type = "Geometry",
        this.vertices = [],
        this.colors = [],
        this.faces = [],
        this.faceVertexUvs = [[]],
        this.morphTargets = [],
        this.morphNormals = [],
        this.skinWeights = [],
        this.skinIndices = [],
        this.lineDistances = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.elementsNeedUpdate = !1,
        this.verticesNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.lineDistancesNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function A(t, e, n) {
        if (Array.isArray(t))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "",
        this.array = t,
        this.itemSize = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.normalized = !0 === n,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function C(t, e, n) {
        A.call(this, new Int8Array(t), e, n)
    }
    function P(t, e, n) {
        A.call(this, new Uint8Array(t), e, n)
    }
    function L(t, e, n) {
        A.call(this, new Uint8ClampedArray(t), e, n)
    }
    function R(t, e, n) {
        A.call(this, new Int16Array(t), e, n)
    }
    function O(t, e, n) {
        A.call(this, new Uint16Array(t), e, n)
    }
    function I(t, e, n) {
        A.call(this, new Int32Array(t), e, n)
    }
    function D(t, e, n) {
        A.call(this, new Uint32Array(t), e, n)
    }
    function N(t, e, n) {
        A.call(this, new Float32Array(t), e, n)
    }
    function k(t, e, n) {
        A.call(this, new Float64Array(t), e, n)
    }
    function j() {
        this.vertices = [],
        this.normals = [],
        this.colors = [],
        this.uvs = [],
        this.uvs2 = [],
        this.groups = [],
        this.morphTargets = {},
        this.skinWeights = [],
        this.skinIndices = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.verticesNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function z(t) {
        if (0 === t.length)
            return -1 / 0;
        for (var e = t[0], n = 1, r = t.length; n < r; ++n)
            t[n] > e && (e = t[n]);
        return e
    }
    function B() {
        Object.defineProperty(this, "id", {
            value: Ws += 2
        }),
        this.uuid = ks.generateUUID(),
        this.name = "",
        this.type = "BufferGeometry",
        this.index = null,
        this.attributes = {},
        this.morphAttributes = {},
        this.groups = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.drawRange = {
            start: 0,
            count: 1 / 0
        }
    }
    function U(t, e, n, r, i, o) {
        S.call(this),
        this.type = "BoxGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: r,
            heightSegments: i,
            depthSegments: o
        },
        this.fromBufferGeometry(new F(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function F(t, e, n, r, i, o) {
        function a(t, e, n, r, i, o, a, m, v, g, y) {
            var _, x, b = o / v, w = a / g, M = o / 2, E = a / 2, T = m / 2, S = v + 1, A = g + 1, C = 0, P = 0, L = new s;
            for (x = 0; x < A; x++) {
                var R = x * w - E;
                for (_ = 0; _ < S; _++) {
                    var O = _ * b - M;
                    L[t] = O * r,
                    L[e] = R * i,
                    L[n] = T,
                    u.push(L.x, L.y, L.z),
                    L[t] = 0,
                    L[e] = 0,
                    L[n] = m > 0 ? 1 : -1,
                    h.push(L.x, L.y, L.z),
                    d.push(_ / v),
                    d.push(1 - x / g),
                    C += 1
                }
            }
            for (x = 0; x < g; x++)
                for (_ = 0; _ < v; _++) {
                    var I = p + _ + S * x
                      , D = p + _ + S * (x + 1)
                      , N = p + (_ + 1) + S * (x + 1)
                      , k = p + (_ + 1) + S * x;
                    l.push(I, D, k),
                    l.push(D, N, k),
                    P += 6
                }
            c.addGroup(f, P, y),
            f += P,
            p += C
        }
        B.call(this),
        this.type = "BoxBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: r,
            heightSegments: i,
            depthSegments: o
        };
        var c = this;
        t = t || 1,
        e = e || 1,
        n = n || 1,
        r = Math.floor(r) || 1,
        i = Math.floor(i) || 1,
        o = Math.floor(o) || 1;
        var l = []
          , u = []
          , h = []
          , d = []
          , p = 0
          , f = 0;
        a("z", "y", "x", -1, -1, n, e, t, o, i, 0),
        a("z", "y", "x", 1, -1, n, e, -t, o, i, 1),
        a("x", "z", "y", 1, 1, t, n, e, r, o, 2),
        a("x", "z", "y", 1, -1, t, n, -e, r, o, 3),
        a("x", "y", "z", 1, -1, t, e, n, r, i, 4),
        a("x", "y", "z", -1, -1, t, e, -n, r, i, 5),
        this.setIndex(l),
        this.addAttribute("position", new N(u,3)),
        this.addAttribute("normal", new N(h,3)),
        this.addAttribute("uv", new N(d,2))
    }
    function H(t, e, n, r) {
        S.call(this),
        this.type = "PlaneGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: r
        },
        this.fromBufferGeometry(new G(t,e,n,r)),
        this.mergeVertices()
    }
    function G(t, e, n, r) {
        B.call(this),
        this.type = "PlaneBufferGeometry",
        this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: r
        },
        t = t || 1,
        e = e || 1;
        var i, o, a = t / 2, s = e / 2, c = Math.floor(n) || 1, l = Math.floor(r) || 1, u = c + 1, h = l + 1, d = t / c, p = e / l, f = [], m = [], v = [], g = [];
        for (o = 0; o < h; o++) {
            var y = o * p - s;
            for (i = 0; i < u; i++) {
                var _ = i * d - a;
                m.push(_, -y, 0),
                v.push(0, 0, 1),
                g.push(i / c),
                g.push(1 - o / l)
            }
        }
        for (o = 0; o < l; o++)
            for (i = 0; i < c; i++) {
                var x = i + u * o
                  , b = i + u * (o + 1)
                  , w = i + 1 + u * (o + 1)
                  , M = i + 1 + u * o;
                f.push(x, b, M),
                f.push(b, w, M)
            }
        this.setIndex(f),
        this.addAttribute("position", new N(m,3)),
        this.addAttribute("normal", new N(v,3)),
        this.addAttribute("uv", new N(g,2))
    }
    function V() {
        Object.defineProperty(this, "id", {
            value: qs++
        }),
        this.uuid = ks.generateUUID(),
        this.name = "",
        this.type = "Material",
        this.fog = !0,
        this.lights = !0,
        this.blending = No,
        this.side = Co,
        this.flatShading = !1,
        this.vertexColors = Ro,
        this.opacity = 1,
        this.transparent = !1,
        this.blendSrc = $o,
        this.blendDst = Zo,
        this.blendEquation = Uo,
        this.blendSrcAlpha = null,
        this.blendDstAlpha = null,
        this.blendEquationAlpha = null,
        this.depthFunc = oa,
        this.depthTest = !0,
        this.depthWrite = !0,
        this.clippingPlanes = null,
        this.clipIntersection = !1,
        this.clipShadows = !1,
        this.shadowSide = null,
        this.colorWrite = !0,
        this.precision = null,
        this.polygonOffset = !1,
        this.polygonOffsetFactor = 0,
        this.polygonOffsetUnits = 0,
        this.dithering = !1,
        this.alphaTest = 0,
        this.premultipliedAlpha = !1,
        this.overdraw = 0,
        this.visible = !0,
        this.userData = {},
        this.needsUpdate = !0
    }
    function W(t) {
        V.call(this),
        this.type = "MeshBasicMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ua,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function q(t) {
        V.call(this),
        this.type = "ShaderMaterial",
        this.defines = {},
        this.uniforms = {},
        this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
        this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
        this.linewidth = 1,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.clipping = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        },
        this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        },
        this.index0AttributeName = void 0,
        this.uniformsNeedUpdate = !1,
        void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
        this.setValues(t))
    }
    function X(t, e) {
        this.origin = void 0 !== t ? t : new s,
        this.direction = void 0 !== e ? e : new s
    }
    function Y(t, e) {
        this.start = void 0 !== t ? t : new s,
        this.end = void 0 !== e ? e : new s
    }
    function $(t, e, n) {
        this.a = void 0 !== t ? t : new s,
        this.b = void 0 !== e ? e : new s,
        this.c = void 0 !== n ? n : new s
    }
    function Z(t, e) {
        w.call(this),
        this.type = "Mesh",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new W({
            color: 16777215 * Math.random()
        }),
        this.drawMode = Es,
        this.updateMorphTargets()
    }
    function J(t, e, n, r) {
        function i(e, r, i, h) {
            var d = r.background;
            null === d ? o(l, u) : d && d.isColor && (o(d, 1),
            h = !0),
            (t.autoClear || h) && t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
            d && d.isCubeTexture ? (void 0 === c && (c = new Z(new F(1,1,1),new q({
                uniforms: Hs.cube.uniforms,
                vertexShader: Hs.cube.vertexShader,
                fragmentShader: Hs.cube.fragmentShader,
                side: Po,
                depthTest: !0,
                depthWrite: !1,
                fog: !1
            })),
            c.geometry.removeAttribute("normal"),
            c.geometry.removeAttribute("uv"),
            c.onBeforeRender = function(t, e, n) {
                this.matrixWorld.copyPosition(n.matrixWorld)
            }
            ,
            n.update(c.geometry)),
            c.material.uniforms.tCube.value = d,
            e.push(c, c.geometry, c.material, 0, null)) : d && d.isTexture && (void 0 === a && (a = new E(-1,1,1,-1,0,1),
            s = new Z(new G(2,2),new W({
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })),
            n.update(s.geometry)),
            s.material.map = d,
            t.renderBufferDirect(a, null, s.geometry, s.material, s, null))
        }
        function o(t, n) {
            e.buffers.color.setClear(t.r, t.g, t.b, n, r)
        }
        var a, s, c, l = new y(0), u = 0;
        return {
            getClearColor: function() {
                return l
            },
            setClearColor: function(t, e) {
                l.set(t),
                u = void 0 !== e ? e : 1,
                o(l, u)
            },
            getClearAlpha: function() {
                return u
            },
            setClearAlpha: function(t) {
                u = t,
                o(l, u)
            },
            render: i
        }
    }
    function Q(t, e, n) {
        function r(t) {
            a = t
        }
        function i(e, r) {
            t.drawArrays(a, e, r),
            n.update(r, a)
        }
        function o(t, r, i) {
            var o = e.get("ANGLE_instanced_arrays");
            if (null === o)
                return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            var s = t.attributes.position;
            s.isInterleavedBufferAttribute ? (i = s.data.count,
            o.drawArraysInstancedANGLE(a, 0, i, t.maxInstancedCount)) : o.drawArraysInstancedANGLE(a, r, i, t.maxInstancedCount),
            n.update(i, a, t.maxInstancedCount)
        }
        var a;
        this.setMode = r,
        this.render = i,
        this.renderInstances = o
    }
    function K(t, e, n) {
        function r() {
            if (void 0 !== o)
                return o;
            var n = e.get("EXT_texture_filter_anisotropic");
            return o = null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
        }
        function i(e) {
            if ("highp" === e) {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0)
                    return "highp";
                e = "mediump"
            }
            return "mediump" === e && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
        }
        var o, a = void 0 !== n.precision ? n.precision : "highp", s = i(a);
        s !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", s, "instead."),
        a = s);
        var c = !0 === n.logarithmicDepthBuffer
          , l = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
          , u = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
          , h = t.getParameter(t.MAX_TEXTURE_SIZE)
          , d = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE)
          , p = t.getParameter(t.MAX_VERTEX_ATTRIBS)
          , f = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS)
          , m = t.getParameter(t.MAX_VARYING_VECTORS)
          , v = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS)
          , g = u > 0
          , y = !!e.get("OES_texture_float");
        return {
            getMaxAnisotropy: r,
            getMaxPrecision: i,
            precision: a,
            logarithmicDepthBuffer: c,
            maxTextures: l,
            maxVertexTextures: u,
            maxTextureSize: h,
            maxCubemapSize: d,
            maxAttributes: p,
            maxVertexUniforms: f,
            maxVaryings: m,
            maxFragmentUniforms: v,
            vertexTextures: g,
            floatFragmentTextures: y,
            floatVertexTextures: g && y
        }
    }
    function tt() {
        function t() {
            u.value !== r && (u.value = r,
            u.needsUpdate = i > 0),
            n.numPlanes = i,
            n.numIntersection = 0
        }
        function e(t, e, r, i) {
            var o = null !== t ? t.length : 0
              , a = null;
            if (0 !== o) {
                if (a = u.value,
                !0 !== i || null === a) {
                    var c = r + 4 * o
                      , h = e.matrixWorldInverse;
                    l.getNormalMatrix(h),
                    (null === a || a.length < c) && (a = new Float32Array(c));
                    for (var d = 0, p = r; d !== o; ++d,
                    p += 4)
                        s.copy(t[d]).applyMatrix4(h, l),
                        s.normal.toArray(a, p),
                        a[p + 3] = s.constant
                }
                u.value = a,
                u.needsUpdate = !0
            }
            return n.numPlanes = o,
            a
        }
        var n = this
          , r = null
          , i = 0
          , o = !1
          , a = !1
          , s = new v
          , l = new c
          , u = {
            value: null,
            needsUpdate: !1
        };
        this.uniform = u,
        this.numPlanes = 0,
        this.numIntersection = 0,
        this.init = function(t, n, a) {
            var s = 0 !== t.length || n || 0 !== i || o;
            return o = n,
            r = e(t, a, 0),
            i = t.length,
            s
        }
        ,
        this.beginShadows = function() {
            a = !0,
            e(null)
        }
        ,
        this.endShadows = function() {
            a = !1,
            t()
        }
        ,
        this.setState = function(n, s, c, l, h, d) {
            if (!o || null === n || 0 === n.length || a && !c)
                a ? e(null) : t();
            else {
                var p = a ? 0 : i
                  , f = 4 * p
                  , m = h.clippingState || null;
                u.value = m,
                m = e(n, l, f, d);
                for (var v = 0; v !== f; ++v)
                    m[v] = r[v];
                h.clippingState = m,
                this.numIntersection = s ? this.numPlanes : 0,
                this.numPlanes += p
            }
        }
    }
    function et(t) {
        var e = {};
        return {
            get: function(n) {
                if (void 0 !== e[n])
                    return e[n];
                var r;
                switch (n) {
                case "WEBGL_depth_texture":
                    r = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    r = t.getExtension(n)
                }
                return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."),
                e[n] = r,
                r
            }
        }
    }
    function nt(t, e, n) {
        function r(t) {
            var i = t.target
              , o = s[i.id];
            null !== o.index && e.remove(o.index);
            for (var a in o.attributes)
                e.remove(o.attributes[a]);
            i.removeEventListener("dispose", r),
            delete s[i.id];
            var l = c[i.id];
            l && (e.remove(l),
            delete c[i.id]),
            l = c[o.id],
            l && (e.remove(l),
            delete c[o.id]),
            n.memory.geometries--
        }
        function i(t, e) {
            var i = s[e.id];
            return i || (e.addEventListener("dispose", r),
            e.isBufferGeometry ? i = e : e.isGeometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new B).setFromObject(t)),
            i = e._bufferGeometry),
            s[e.id] = i,
            n.memory.geometries++,
            i)
        }
        function o(n) {
            var r = n.index
              , i = n.attributes;
            null !== r && e.update(r, t.ELEMENT_ARRAY_BUFFER);
            for (var o in i)
                e.update(i[o], t.ARRAY_BUFFER);
            var a = n.morphAttributes;
            for (var o in a)
                for (var s = a[o], c = 0, l = s.length; c < l; c++)
                    e.update(s[c], t.ARRAY_BUFFER)
        }
        function a(n) {
            var r = c[n.id];
            if (r)
                return r;
            var i = []
              , o = n.index
              , a = n.attributes;
            if (null !== o)
                for (var s = o.array, l = 0, u = s.length; l < u; l += 3) {
                    var h = s[l + 0]
                      , d = s[l + 1]
                      , p = s[l + 2];
                    i.push(h, d, d, p, p, h)
                }
            else
                for (var s = a.position.array, l = 0, u = s.length / 3 - 1; l < u; l += 3) {
                    var h = l + 0
                      , d = l + 1
                      , p = l + 2;
                    i.push(h, d, d, p, p, h)
                }
            return r = new (z(i) > 65535 ? D : O)(i,1),
            e.update(r, t.ELEMENT_ARRAY_BUFFER),
            c[n.id] = r,
            r
        }
        var s = {}
          , c = {};
        return {
            get: i,
            update: o,
            getWireframeAttribute: a
        }
    }
    function rt(t, e, n) {
        function r(t) {
            s = t
        }
        function i(t) {
            c = t.type,
            l = t.bytesPerElement
        }
        function o(e, r) {
            t.drawElements(s, r, c, e * l),
            n.update(r, s)
        }
        function a(t, r, i) {
            var o = e.get("ANGLE_instanced_arrays");
            if (null === o)
                return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            o.drawElementsInstancedANGLE(s, i, c, r * l, t.maxInstancedCount),
            n.update(i, s, t.maxInstancedCount)
        }
        var s, c, l;
        this.setMode = r,
        this.setIndex = i,
        this.render = o,
        this.renderInstances = a
    }
    function it(t) {
        function e(e, n, r) {
            switch (r = r || 1,
            i.calls++,
            n) {
            case t.TRIANGLES:
                i.triangles += r * (e / 3);
                break;
            case t.TRIANGLE_STRIP:
            case t.TRIANGLE_FAN:
                i.triangles += r * (e - 2);
                break;
            case t.LINES:
                i.lines += r * (e / 2);
                break;
            case t.LINE_STRIP:
                i.lines += r * (e - 1);
                break;
            case t.LINE_LOOP:
                i.lines += r * e;
                break;
            case t.POINTS:
                i.points += r * e;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", n)
            }
        }
        function n() {
            i.frame++,
            i.calls = 0,
            i.triangles = 0,
            i.points = 0,
            i.lines = 0
        }
        var r = {
            geometries: 0,
            textures: 0
        }
          , i = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: r,
            render: i,
            programs: null,
            autoReset: !0,
            reset: n,
            update: e
        }
    }
    function ot(t, e) {
        return Math.abs(e[1]) - Math.abs(t[1])
    }
    function at(t) {
        function e(e, i, o, a) {
            var s = e.morphTargetInfluences
              , c = s.length
              , l = n[i.id];
            if (void 0 === l) {
                l = [];
                for (var u = 0; u < c; u++)
                    l[u] = [u, 0];
                n[i.id] = l
            }
            for (var h = o.morphTargets && i.morphAttributes.position, d = o.morphNormals && i.morphAttributes.normal, u = 0; u < c; u++) {
                var p = l[u];
                0 !== p[1] && (h && i.removeAttribute("morphTarget" + u),
                d && i.removeAttribute("morphNormal" + u))
            }
            for (var u = 0; u < c; u++) {
                var p = l[u];
                p[0] = u,
                p[1] = s[u]
            }
            l.sort(ot);
            for (var u = 0; u < 8; u++) {
                var p = l[u];
                if (p) {
                    var f = p[0]
                      , m = p[1];
                    if (m) {
                        h && i.addAttribute("morphTarget" + u, h[f]),
                        d && i.addAttribute("morphNormal" + u, d[f]),
                        r[u] = m;
                        continue
                    }
                }
                r[u] = 0
            }
            a.getUniforms().setValue(t, "morphTargetInfluences", r)
        }
        var n = {}
          , r = new Float32Array(8);
        return {
            update: e
        }
    }
    function st(t, e) {
        function n(n) {
            var r = e.render.frame
              , o = n.geometry
              , a = t.get(n, o);
            return i[a.id] !== r && (o.isGeometry && a.updateFromObject(n),
            t.update(a),
            i[a.id] = r),
            a
        }
        function r() {
            i = {}
        }
        var i = {};
        return {
            update: n,
            dispose: r
        }
    }
    function ct(t, e, n, r, i, o, a, s, c, u) {
        t = void 0 !== t ? t : [],
        e = void 0 !== e ? e : ya,
        l.call(this, t, e, n, r, i, o, a, s, c, u),
        this.flipY = !1
    }
    function lt() {
        this.seq = [],
        this.map = {}
    }
    function ut(t, e, n) {
        var r = t[0];
        if (r <= 0 || r > 0)
            return t;
        var i = e * n
          , o = $s[i];
        if (void 0 === o && (o = new Float32Array(i),
        $s[i] = o),
        0 !== e) {
            r.toArray(o, 0);
            for (var a = 1, s = 0; a !== e; ++a)
                s += n,
                t[a].toArray(o, s)
        }
        return o
    }
    function ht(t, e) {
        var n = Zs[e];
        void 0 === n && (n = new Int32Array(e),
        Zs[e] = n);
        for (var r = 0; r !== e; ++r)
            n[r] = t.allocTextureUnit();
        return n
    }
    function dt(t, e) {
        t.uniform1f(this.addr, e)
    }
    function pt(t, e) {
        t.uniform1i(this.addr, e)
    }
    function ft(t, e) {
        void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
    }
    function mt(t, e) {
        void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
    }
    function vt(t, e) {
        void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
    }
    function gt(t, e) {
        t.uniformMatrix2fv(this.addr, !1, e.elements || e)
    }
    function yt(t, e) {
        void 0 === e.elements ? t.uniformMatrix3fv(this.addr, !1, e) : (Qs.set(e.elements),
        t.uniformMatrix3fv(this.addr, !1, Qs))
    }
    function _t(t, e) {
        void 0 === e.elements ? t.uniformMatrix4fv(this.addr, !1, e) : (Js.set(e.elements),
        t.uniformMatrix4fv(this.addr, !1, Js))
    }
    function xt(t, e, n) {
        var r = n.allocTextureUnit();
        t.uniform1i(this.addr, r),
        n.setTexture2D(e || Xs, r)
    }
    function bt(t, e, n) {
        var r = n.allocTextureUnit();
        t.uniform1i(this.addr, r),
        n.setTextureCube(e || Ys, r)
    }
    function wt(t, e) {
        t.uniform2iv(this.addr, e)
    }
    function Mt(t, e) {
        t.uniform3iv(this.addr, e)
    }
    function Et(t, e) {
        t.uniform4iv(this.addr, e)
    }
    function Tt(t) {
        switch (t) {
        case 5126:
            return dt;
        case 35664:
            return ft;
        case 35665:
            return mt;
        case 35666:
            return vt;
        case 35674:
            return gt;
        case 35675:
            return yt;
        case 35676:
            return _t;
        case 35678:
        case 36198:
            return xt;
        case 35680:
            return bt;
        case 5124:
        case 35670:
            return pt;
        case 35667:
        case 35671:
            return wt;
        case 35668:
        case 35672:
            return Mt;
        case 35669:
        case 35673:
            return Et
        }
    }
    function St(t, e) {
        t.uniform1fv(this.addr, e)
    }
    function At(t, e) {
        t.uniform1iv(this.addr, e)
    }
    function Ct(t, e) {
        t.uniform2fv(this.addr, ut(e, this.size, 2))
    }
    function Pt(t, e) {
        t.uniform3fv(this.addr, ut(e, this.size, 3))
    }
    function Lt(t, e) {
        t.uniform4fv(this.addr, ut(e, this.size, 4))
    }
    function Rt(t, e) {
        t.uniformMatrix2fv(this.addr, !1, ut(e, this.size, 4))
    }
    function Ot(t, e) {
        t.uniformMatrix3fv(this.addr, !1, ut(e, this.size, 9))
    }
    function It(t, e) {
        t.uniformMatrix4fv(this.addr, !1, ut(e, this.size, 16))
    }
    function Dt(t, e, n) {
        var r = e.length
          , i = ht(n, r);
        t.uniform1iv(this.addr, i);
        for (var o = 0; o !== r; ++o)
            n.setTexture2D(e[o] || Xs, i[o])
    }
    function Nt(t, e, n) {
        var r = e.length
          , i = ht(n, r);
        t.uniform1iv(this.addr, i);
        for (var o = 0; o !== r; ++o)
            n.setTextureCube(e[o] || Ys, i[o])
    }
    function kt(t) {
        switch (t) {
        case 5126:
            return St;
        case 35664:
            return Ct;
        case 35665:
            return Pt;
        case 35666:
            return Lt;
        case 35674:
            return Rt;
        case 35675:
            return Ot;
        case 35676:
            return It;
        case 35678:
            return Dt;
        case 35680:
            return Nt;
        case 5124:
        case 35670:
            return At;
        case 35667:
        case 35671:
            return wt;
        case 35668:
        case 35672:
            return Mt;
        case 35669:
        case 35673:
            return Et
        }
    }
    function jt(t, e, n) {
        this.id = t,
        this.addr = n,
        this.setValue = Tt(e.type)
    }
    function zt(t, e, n) {
        this.id = t,
        this.addr = n,
        this.size = e.size,
        this.setValue = kt(e.type)
    }
    function Bt(t) {
        this.id = t,
        lt.call(this)
    }
    function Ut(t, e) {
        t.seq.push(e),
        t.map[e.id] = e
    }
    function Ft(t, e, n) {
        var r = t.name
          , i = r.length;
        for (Ks.lastIndex = 0; ; ) {
            var o = Ks.exec(r)
              , a = Ks.lastIndex
              , s = o[1]
              , c = "]" === o[2]
              , l = o[3];
            if (c && (s |= 0),
            void 0 === l || "[" === l && a + 2 === i) {
                Ut(n, void 0 === l ? new jt(s,t,e) : new zt(s,t,e));
                break
            }
            var u = n.map
              , h = u[s];
            void 0 === h && (h = new Bt(s),
            Ut(n, h)),
            n = h
        }
    }
    function Ht(t, e, n) {
        lt.call(this),
        this.renderer = n;
        for (var r = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), i = 0; i < r; ++i) {
            var o = t.getActiveUniform(e, i);
            Ft(o, t.getUniformLocation(e, o.name), this)
        }
    }
    function Gt(t) {
        for (var e = t.split("\n"), n = 0; n < e.length; n++)
            e[n] = n + 1 + ": " + e[n];
        return e.join("\n")
    }
    function Vt(t, e, n) {
        var r = t.createShader(e);
        return t.shaderSource(r, n),
        t.compileShader(r),
        !1 === t.getShaderParameter(r, t.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."),
        "" !== t.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", e === t.VERTEX_SHADER ? "vertex" : "fragment", t.getShaderInfoLog(r), Gt(n)),
        r
    }
    function Wt(t) {
        switch (t) {
        case As:
            return ["Linear", "( value )"];
        case Cs:
            return ["sRGB", "( value )"];
        case Ls:
            return ["RGBE", "( value )"];
        case Rs:
            return ["RGBM", "( value, 7.0 )"];
        case Os:
            return ["RGBM", "( value, 16.0 )"];
        case Is:
            return ["RGBD", "( value, 256.0 )"];
        case Ps:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        default:
            throw new Error("unsupported encoding: " + t)
        }
    }
    function qt(t, e) {
        var n = Wt(e);
        return "vec4 " + t + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }
    function Xt(t, e) {
        var n = Wt(e);
        return "vec4 " + t + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
    }
    function Yt(t, e) {
        var n;
        switch (e) {
        case fa:
            n = "Linear";
            break;
        case ma:
            n = "Reinhard";
            break;
        case va:
            n = "Uncharted2";
            break;
        case ga:
            n = "OptimizedCineon";
            break;
        default:
            throw new Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function $t(t, e, n) {
        return t = t || {},
        [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Qt).join("\n")
    }
    function Zt(t) {
        var e = [];
        for (var n in t) {
            var r = t[n];
            !1 !== r && e.push("#define " + n + " " + r)
        }
        return e.join("\n")
    }
    function Jt(t, e) {
        for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
            var o = t.getActiveAttrib(e, i)
              , a = o.name;
            n[a] = t.getAttribLocation(e, a)
        }
        return n
    }
    function Qt(t) {
        return "" !== t
    }
    function Kt(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }
    function te(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection)
    }
    function ee(t) {
        function e(t, e) {
            var n = zs[e];
            if (void 0 === n)
                throw new Error("Can not resolve #include <" + e + ">");
            return ee(n)
        }
        var n = /^[ \t]*#include +<([\w\d.]+)>/gm;
        return t.replace(n, e)
    }
    function ne(t) {
        function e(t, e, n, r) {
            for (var i = "", o = parseInt(e); o < parseInt(n); o++)
                i += r.replace(/\[ i \]/g, "[ " + o + " ]");
            return i
        }
        var n = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
        return t.replace(n, e)
    }
    function re(t, e, n, r, i, o) {
        var a = t.context
          , s = r.defines
          , c = i.vertexShader
          , l = i.fragmentShader
          , u = "SHADOWMAP_TYPE_BASIC";
        o.shadowMapType === So ? u = "SHADOWMAP_TYPE_PCF" : o.shadowMapType === Ao && (u = "SHADOWMAP_TYPE_PCF_SOFT");
        var h = "ENVMAP_TYPE_CUBE"
          , d = "ENVMAP_MODE_REFLECTION"
          , p = "ENVMAP_BLENDING_MULTIPLY";
        if (o.envMap) {
            switch (r.envMap.mapping) {
            case ya:
            case _a:
                h = "ENVMAP_TYPE_CUBE";
                break;
            case Ma:
            case Ea:
                h = "ENVMAP_TYPE_CUBE_UV";
                break;
            case xa:
            case ba:
                h = "ENVMAP_TYPE_EQUIREC";
                break;
            case wa:
                h = "ENVMAP_TYPE_SPHERE"
            }
            switch (r.envMap.mapping) {
            case _a:
            case ba:
                d = "ENVMAP_MODE_REFRACTION"
            }
            switch (r.combine) {
            case ua:
                p = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case ha:
                p = "ENVMAP_BLENDING_MIX";
                break;
            case da:
                p = "ENVMAP_BLENDING_ADD"
            }
        }
        var f, m, v = t.gammaFactor > 0 ? t.gammaFactor : 1, g = $t(r.extensions, o, e), y = Zt(s), _ = a.createProgram();
        r.isRawShaderMaterial ? (f = [y].filter(Qt).join("\n"),
        f.length > 0 && (f += "\n"),
        m = [g, y].filter(Qt).join("\n"),
        m.length > 0 && (m += "\n")) : (f = ["precision " + o.precision + " float;", "precision " + o.precision + " int;", "#define SHADER_NAME " + i.name, y, o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + v, "#define MAX_BONES " + o.maxBones, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + d : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.displacementMap && o.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexColors ? "#define USE_COLOR" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.skinning ? "#define USE_SKINNING" : "", o.useVertexTexture ? "#define BONE_TEXTURE" : "", o.morphTargets ? "#define USE_MORPHTARGETS" : "", o.morphNormals && !1 === o.flatShading ? "#define USE_MORPHNORMALS" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Qt).join("\n"),
        m = [g, "precision " + o.precision + " float;", "precision " + o.precision + " int;", "#define SHADER_NAME " + i.name, y, o.alphaTest ? "#define ALPHATEST " + o.alphaTest : "", "#define GAMMA_FACTOR " + v, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + h : "", o.envMap ? "#define " + d : "", o.envMap ? "#define " + p : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexColors ? "#define USE_COLOR" : "", o.gradientMap ? "#define USE_GRADIENTMAP" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", o.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && e.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", o.envMap && e.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", o.toneMapping !== pa ? "#define TONE_MAPPING" : "", o.toneMapping !== pa ? zs.tonemapping_pars_fragment : "", o.toneMapping !== pa ? Yt("toneMapping", o.toneMapping) : "", o.dithering ? "#define DITHERING" : "", o.outputEncoding || o.mapEncoding || o.envMapEncoding || o.emissiveMapEncoding ? zs.encodings_pars_fragment : "", o.mapEncoding ? qt("mapTexelToLinear", o.mapEncoding) : "", o.envMapEncoding ? qt("envMapTexelToLinear", o.envMapEncoding) : "", o.emissiveMapEncoding ? qt("emissiveMapTexelToLinear", o.emissiveMapEncoding) : "", o.outputEncoding ? Xt("linearToOutputTexel", o.outputEncoding) : "", o.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "", "\n"].filter(Qt).join("\n")),
        c = ee(c),
        c = Kt(c, o),
        c = te(c, o),
        l = ee(l),
        l = Kt(l, o),
        l = te(l, o),
        c = ne(c),
        l = ne(l);
        var x = f + c
          , b = m + l
          , w = Vt(a, a.VERTEX_SHADER, x)
          , M = Vt(a, a.FRAGMENT_SHADER, b);
        a.attachShader(_, w),
        a.attachShader(_, M),
        void 0 !== r.index0AttributeName ? a.bindAttribLocation(_, 0, r.index0AttributeName) : !0 === o.morphTargets && a.bindAttribLocation(_, 0, "position"),
        a.linkProgram(_);
        var E = a.getProgramInfoLog(_).trim()
          , T = a.getShaderInfoLog(w).trim()
          , S = a.getShaderInfoLog(M).trim()
          , A = !0
          , C = !0;
        !1 === a.getProgramParameter(_, a.LINK_STATUS) ? (A = !1,
        console.error("THREE.WebGLProgram: shader error: ", a.getError(), "gl.VALIDATE_STATUS", a.getProgramParameter(_, a.VALIDATE_STATUS), "gl.getProgramInfoLog", E, T, S)) : "" !== E ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", E) : "" !== T && "" !== S || (C = !1),
        C && (this.diagnostics = {
            runnable: A,
            material: r,
            programLog: E,
            vertexShader: {
                log: T,
                prefix: f
            },
            fragmentShader: {
                log: S,
                prefix: m
            }
        }),
        a.deleteShader(w),
        a.deleteShader(M);
        var P;
        this.getUniforms = function() {
            return void 0 === P && (P = new Ht(a,_,t)),
            P
        }
        ;
        var L;
        return this.getAttributes = function() {
            return void 0 === L && (L = Jt(a, _)),
            L
        }
        ,
        this.destroy = function() {
            a.deleteProgram(_),
            this.program = void 0
        }
        ,
        Object.defineProperties(this, {
            uniforms: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                    this.getUniforms()
                }
            },
            attributes: {
                get: function() {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                    this.getAttributes()
                }
            }
        }),
        this.name = i.name,
        this.id = tc++,
        this.code = n,
        this.usedTimes = 1,
        this.program = _,
        this.vertexShader = w,
        this.fragmentShader = M,
        this
    }
    function ie(t, e, n) {
        function r(t) {
            var e = t.skeleton
              , r = e.bones;
            if (n.floatVertexTextures)
                return 1024;
            var i = n.maxVertexUniforms
              , o = Math.floor((i - 20) / 4)
              , a = Math.min(o, r.length);
            return a < r.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + r.length + " bones. This GPU supports " + a + "."),
            0) : a
        }
        function i(t, e) {
            var n;
            return t ? t.isTexture ? n = t.encoding : t.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
            n = t.texture.encoding) : n = As,
            n === As && e && (n = Ps),
            n
        }
        var o = []
          , a = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow"
        }
          , s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
        this.getParameters = function(e, o, s, c, l, u, h) {
            var d = a[e.type]
              , p = h.isSkinnedMesh ? r(h) : 0
              , f = n.precision;
            null !== e.precision && (f = n.getMaxPrecision(e.precision)) !== e.precision && console.warn("THREE.WebGLProgram.getParameters:", e.precision, "not supported, using", f, "instead.");
            var m = t.getRenderTarget();
            return {
                shaderID: d,
                precision: f,
                supportsVertexTextures: n.vertexTextures,
                outputEncoding: i(m ? m.texture : null, t.gammaOutput),
                map: !!e.map,
                mapEncoding: i(e.map, t.gammaInput),
                envMap: !!e.envMap,
                envMapMode: e.envMap && e.envMap.mapping,
                envMapEncoding: i(e.envMap, t.gammaInput),
                envMapCubeUV: !!e.envMap && (e.envMap.mapping === Ma || e.envMap.mapping === Ea),
                lightMap: !!e.lightMap,
                aoMap: !!e.aoMap,
                emissiveMap: !!e.emissiveMap,
                emissiveMapEncoding: i(e.emissiveMap, t.gammaInput),
                bumpMap: !!e.bumpMap,
                normalMap: !!e.normalMap,
                displacementMap: !!e.displacementMap,
                roughnessMap: !!e.roughnessMap,
                metalnessMap: !!e.metalnessMap,
                specularMap: !!e.specularMap,
                alphaMap: !!e.alphaMap,
                gradientMap: !!e.gradientMap,
                combine: e.combine,
                vertexColors: e.vertexColors,
                fog: !!c,
                useFog: e.fog,
                fogExp: c && c.isFogExp2,
                flatShading: e.flatShading,
                sizeAttenuation: e.sizeAttenuation,
                logarithmicDepthBuffer: n.logarithmicDepthBuffer,
                skinning: e.skinning && p > 0,
                maxBones: p,
                useVertexTexture: n.floatVertexTextures,
                morphTargets: e.morphTargets,
                morphNormals: e.morphNormals,
                maxMorphTargets: t.maxMorphTargets,
                maxMorphNormals: t.maxMorphNormals,
                numDirLights: o.directional.length,
                numPointLights: o.point.length,
                numSpotLights: o.spot.length,
                numRectAreaLights: o.rectArea.length,
                numHemiLights: o.hemi.length,
                numClippingPlanes: l,
                numClipIntersection: u,
                dithering: e.dithering,
                shadowMapEnabled: t.shadowMap.enabled && h.receiveShadow && s.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: t.toneMapping,
                physicallyCorrectLights: t.physicallyCorrectLights,
                premultipliedAlpha: e.premultipliedAlpha,
                alphaTest: e.alphaTest,
                doubleSided: e.side === Lo,
                flipSided: e.side === Po,
                depthPacking: void 0 !== e.depthPacking && e.depthPacking
            }
        }
        ,
        this.getProgramCode = function(e, n) {
            var r = [];
            if (n.shaderID ? r.push(n.shaderID) : (r.push(e.fragmentShader),
            r.push(e.vertexShader)),
            void 0 !== e.defines)
                for (var i in e.defines)
                    r.push(i),
                    r.push(e.defines[i]);
            for (var o = 0; o < s.length; o++)
                r.push(n[s[o]]);
            return r.push(e.onBeforeCompile.toString()),
            r.push(t.gammaOutput),
            r.join()
        }
        ,
        this.acquireProgram = function(n, r, i, a) {
            for (var s, c = 0, l = o.length; c < l; c++) {
                var u = o[c];
                if (u.code === a) {
                    s = u,
                    ++s.usedTimes;
                    break
                }
            }
            return void 0 === s && (s = new re(t,e,a,n,r,i),
            o.push(s)),
            s
        }
        ,
        this.releaseProgram = function(t) {
            if (0 == --t.usedTimes) {
                var e = o.indexOf(t);
                o[e] = o[o.length - 1],
                o.pop(),
                t.destroy()
            }
        }
        ,
        this.programs = o
    }
    function oe() {
        function t(t) {
            var e = i.get(t);
            return void 0 === e && (e = {},
            i.set(t, e)),
            e
        }
        function e(t) {
            i.delete(t)
        }
        function n(t, e, n) {
            i.get(t)[e] = n
        }
        function r() {
            i = new WeakMap
        }
        var i = new WeakMap;
        return {
            get: t,
            remove: e,
            update: n,
            dispose: r
        }
    }
    function ae(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.program && e.program && t.program !== e.program ? t.program.id - e.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }
    function se(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }
    function ce() {
        function t() {
            i = 0,
            o.length = 0,
            a.length = 0
        }
        function e(t, e, n, s, c) {
            var l = r[i];
            void 0 === l ? (l = {
                id: t.id,
                object: t,
                geometry: e,
                material: n,
                program: n.program,
                renderOrder: t.renderOrder,
                z: s,
                group: c
            },
            r[i] = l) : (l.id = t.id,
            l.object = t,
            l.geometry = e,
            l.material = n,
            l.program = n.program,
            l.renderOrder = t.renderOrder,
            l.z = s,
            l.group = c),
            (!0 === n.transparent ? a : o).push(l),
            i++
        }
        function n() {
            o.length > 1 && o.sort(ae),
            a.length > 1 && a.sort(se)
        }
        var r = []
          , i = 0
          , o = []
          , a = [];
        return {
            opaque: o,
            transparent: a,
            init: t,
            push: e,
            sort: n
        }
    }
    function le() {
        function t(t, e) {
            var r = t.id + "," + e.id
              , i = n[r];
            return void 0 === i && (i = new ce,
            n[r] = i),
            i
        }
        function e() {
            n = {}
        }
        var n = {};
        return {
            get: t,
            dispose: e
        }
    }
    function ue() {
        var t = {};
        return {
            get: function(e) {
                if (void 0 !== t[e.id])
                    return t[e.id];
                var n;
                switch (e.type) {
                case "DirectionalLight":
                    n = {
                        direction: new s,
                        color: new y,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new s,
                        direction: new s,
                        color: new y,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new s,
                        color: new y,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new i,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new s,
                        skyColor: new y,
                        groundColor: new y
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new y,
                        position: new s,
                        halfWidth: new s,
                        halfHeight: new s
                    }
                }
                return t[e.id] = n,
                n
            }
        }
    }
    function he() {
        function t(t, o, s) {
            for (var c = 0, l = 0, u = 0, h = 0, d = 0, p = 0, f = 0, m = 0, v = s.matrixWorldInverse, g = 0, y = t.length; g < y; g++) {
                var _ = t[g]
                  , x = _.color
                  , b = _.intensity
                  , w = _.distance
                  , M = _.shadow && _.shadow.map ? _.shadow.map.texture : null;
                if (_.isAmbientLight)
                    c += x.r * b,
                    l += x.g * b,
                    u += x.b * b;
                else if (_.isDirectionalLight) {
                    var E = e.get(_);
                    if (E.color.copy(_.color).multiplyScalar(_.intensity),
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    r.setFromMatrixPosition(_.target.matrixWorld),
                    E.direction.sub(r),
                    E.direction.transformDirection(v),
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize
                    }
                    n.directionalShadowMap[h] = M,
                    n.directionalShadowMatrix[h] = _.shadow.matrix,
                    n.directional[h] = E,
                    h++
                } else if (_.isSpotLight) {
                    var E = e.get(_);
                    if (E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    E.color.copy(x).multiplyScalar(b),
                    E.distance = w,
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    r.setFromMatrixPosition(_.target.matrixWorld),
                    E.direction.sub(r),
                    E.direction.transformDirection(v),
                    E.coneCos = Math.cos(_.angle),
                    E.penumbraCos = Math.cos(_.angle * (1 - _.penumbra)),
                    E.decay = 0 === _.distance ? 0 : _.decay,
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize
                    }
                    n.spotShadowMap[p] = M,
                    n.spotShadowMatrix[p] = _.shadow.matrix,
                    n.spot[p] = E,
                    p++
                } else if (_.isRectAreaLight) {
                    var E = e.get(_);
                    E.color.copy(x).multiplyScalar(b),
                    E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    a.identity(),
                    i.copy(_.matrixWorld),
                    i.premultiply(v),
                    a.extractRotation(i),
                    E.halfWidth.set(.5 * _.width, 0, 0),
                    E.halfHeight.set(0, .5 * _.height, 0),
                    E.halfWidth.applyMatrix4(a),
                    E.halfHeight.applyMatrix4(a),
                    n.rectArea[f] = E,
                    f++
                } else if (_.isPointLight) {
                    var E = e.get(_);
                    if (E.position.setFromMatrixPosition(_.matrixWorld),
                    E.position.applyMatrix4(v),
                    E.color.copy(_.color).multiplyScalar(_.intensity),
                    E.distance = _.distance,
                    E.decay = 0 === _.distance ? 0 : _.decay,
                    E.shadow = _.castShadow,
                    _.castShadow) {
                        var T = _.shadow;
                        E.shadowBias = T.bias,
                        E.shadowRadius = T.radius,
                        E.shadowMapSize = T.mapSize,
                        E.shadowCameraNear = T.camera.near,
                        E.shadowCameraFar = T.camera.far
                    }
                    n.pointShadowMap[d] = M,
                    n.pointShadowMatrix[d] = _.shadow.matrix,
                    n.point[d] = E,
                    d++
                } else if (_.isHemisphereLight) {
                    var E = e.get(_);
                    E.direction.setFromMatrixPosition(_.matrixWorld),
                    E.direction.transformDirection(v),
                    E.direction.normalize(),
                    E.skyColor.copy(_.color).multiplyScalar(b),
                    E.groundColor.copy(_.groundColor).multiplyScalar(b),
                    n.hemi[m] = E,
                    m++
                }
            }
            n.ambient[0] = c,
            n.ambient[1] = l,
            n.ambient[2] = u,
            n.directional.length = h,
            n.spot.length = p,
            n.rectArea.length = f,
            n.point.length = d,
            n.hemi.length = m,
            n.hash = n.id + "," + h + "," + d + "," + p + "," + f + "," + m + "," + o.length
        }
        var e = new ue
          , n = {
            id: ec++,
            hash: "",
            ambient: [0, 0, 0],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
        }
          , r = new s
          , i = new o
          , a = new o;
        return {
            setup: t,
            state: n
        }
    }
    function de() {
        function t() {
            a.length = 0,
            s.length = 0,
            c.length = 0
        }
        function e(t) {
            a.push(t)
        }
        function n(t) {
            s.push(t)
        }
        function r(t) {
            c.push(t)
        }
        function i(t) {
            o.setup(a, s, t)
        }
        var o = new he
          , a = []
          , s = []
          , c = [];
        return {
            init: t,
            state: {
                lightsArray: a,
                shadowsArray: s,
                spritesArray: c,
                lights: o
            },
            setupLights: i,
            pushLight: e,
            pushShadow: n,
            pushSprite: r
        }
    }
    function pe() {
        function t(t, e) {
            var r = t.id + "," + e.id
              , i = n[r];
            return void 0 === i && (i = new de,
            n[r] = i),
            i
        }
        function e() {
            n = {}
        }
        var n = {};
        return {
            get: t,
            dispose: e
        }
    }
    function fe(t) {
        V.call(this),
        this.type = "MeshDepthMaterial",
        this.depthPacking = Ds,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function me(t) {
        V.call(this),
        this.type = "MeshDistanceMaterial",
        this.referencePosition = new s,
        this.nearDistance = 1,
        this.farDistance = 1e3,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function ve(t, e, n) {
        function r(e, n, r, i, o, a) {
            var s = e.geometry
              , c = null
              , l = x
              , u = e.customDepthMaterial;
            if (r && (l = b,
            u = e.customDistanceMaterial),
            u)
                c = u;
            else {
                var h = !1;
                n.morphTargets && (s && s.isBufferGeometry ? h = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : s && s.isGeometry && (h = s.morphTargets && s.morphTargets.length > 0)),
                e.isSkinnedMesh && !1 === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", e);
                var d = e.isSkinnedMesh && n.skinning
                  , p = 0;
                h && (p |= v),
                d && (p |= y),
                c = l[p]
            }
            if (t.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length) {
                var f = c.uuid
                  , m = n.uuid
                  , g = w[f];
                void 0 === g && (g = {},
                w[f] = g);
                var _ = g[m];
                void 0 === _ && (_ = c.clone(),
                g[m] = _),
                c = _
            }
            return c.visible = n.visible,
            c.wireframe = n.wireframe,
            c.side = null != n.shadowSide ? n.shadowSide : M[n.side],
            c.clipShadows = n.clipShadows,
            c.clippingPlanes = n.clippingPlanes,
            c.clipIntersection = n.clipIntersection,
            c.wireframeLinewidth = n.wireframeLinewidth,
            c.linewidth = n.linewidth,
            r && c.isMeshDistanceMaterial && (c.referencePosition.copy(i),
            c.nearDistance = o,
            c.farDistance = a),
            c
        }
        function a(n, i, o, s) {
            if (!1 !== n.visible) {
                if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && n.castShadow && (!n.frustumCulled || c.intersectsObject(n))) {
                    n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
                    var l = e.update(n)
                      , u = n.material;
                    if (Array.isArray(u))
                        for (var h = l.groups, d = 0, p = h.length; d < p; d++) {
                            var f = h[d]
                              , v = u[f.materialIndex];
                            if (v && v.visible) {
                                var g = r(n, v, s, m, o.near, o.far);
                                t.renderBufferDirect(o, null, l, g, n, f)
                            }
                        }
                    else if (u.visible) {
                        var g = r(n, u, s, m, o.near, o.far);
                        t.renderBufferDirect(o, null, l, g, n, null)
                    }
                }
                for (var y = n.children, _ = 0, x = y.length; _ < x; _++)
                    a(y[_], i, o, s)
            }
        }
        for (var c = new g, l = new o, d = new i, p = new i(n,n), f = new s, m = new s, v = 1, y = 2, _ = 1 + (v | y), x = new Array(_), b = new Array(_), w = {}, M = {
            0: Po,
            1: Co,
            2: Lo
        }, E = [new s(1,0,0), new s(-1,0,0), new s(0,0,1), new s(0,0,-1), new s(0,1,0), new s(0,-1,0)], T = [new s(0,1,0), new s(0,1,0), new s(0,1,0), new s(0,1,0), new s(0,0,1), new s(0,0,-1)], S = [new u, new u, new u, new u, new u, new u], A = 0; A !== _; ++A) {
            var C = 0 != (A & v)
              , P = 0 != (A & y)
              , L = new fe({
                depthPacking: Ns,
                morphTargets: C,
                skinning: P
            });
            x[A] = L;
            var R = new me({
                morphTargets: C,
                skinning: P
            });
            b[A] = R
        }
        var O = this;
        this.enabled = !1,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this.type = So,
        this.render = function(e, n, r) {
            if (!1 !== O.enabled && (!1 !== O.autoUpdate || !1 !== O.needsUpdate) && 0 !== e.length) {
                var i = t.context
                  , o = t.state;
                o.disable(i.BLEND),
                o.buffers.color.setClear(1, 1, 1, 1),
                o.buffers.depth.setTest(!0),
                o.setScissorTest(!1);
                for (var s, u = 0, v = e.length; u < v; u++) {
                    var g = e[u]
                      , y = g.shadow
                      , _ = g && g.isPointLight;
                    if (void 0 !== y) {
                        var x = y.camera;
                        if (d.copy(y.mapSize),
                        d.min(p),
                        _) {
                            var b = d.x
                              , w = d.y;
                            S[0].set(2 * b, w, b, w),
                            S[1].set(0, w, b, w),
                            S[2].set(3 * b, w, b, w),
                            S[3].set(b, w, b, w),
                            S[4].set(3 * b, 0, b, w),
                            S[5].set(b, 0, b, w),
                            d.x *= 4,
                            d.y *= 2
                        }
                        if (null === y.map) {
                            var M = {
                                minFilter: Ca,
                                magFilter: Ca,
                                format: Ya
                            };
                            y.map = new h(d.x,d.y,M),
                            y.map.texture.name = g.name + ".shadowMap",
                            x.updateProjectionMatrix()
                        }
                        y.isSpotLightShadow && y.update(g);
                        var A = y.map
                          , C = y.matrix;
                        m.setFromMatrixPosition(g.matrixWorld),
                        x.position.copy(m),
                        _ ? (s = 6,
                        C.makeTranslation(-m.x, -m.y, -m.z)) : (s = 1,
                        f.setFromMatrixPosition(g.target.matrixWorld),
                        x.lookAt(f),
                        x.updateMatrixWorld(),
                        C.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                        C.multiply(x.projectionMatrix),
                        C.multiply(x.matrixWorldInverse)),
                        t.setRenderTarget(A),
                        t.clear();
                        for (var P = 0; P < s; P++) {
                            if (_) {
                                f.copy(x.position),
                                f.add(E[P]),
                                x.up.copy(T[P]),
                                x.lookAt(f),
                                x.updateMatrixWorld();
                                var L = S[P];
                                o.viewport(L)
                            }
                            l.multiplyMatrices(x.projectionMatrix, x.matrixWorldInverse),
                            c.setFromMatrix(l),
                            a(n, r, x, _)
                        }
                    } else
                        console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                }
                O.needsUpdate = !1
            }
        }
    }
    function ge(t, e, n, r, i, o, a, s, c) {
        l.call(this, t, e, n, r, i, o, a, s, c),
        this.needsUpdate = !0
    }
    function ye(t, e, n, r, i) {
        function o() {
            var t = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
              , n = new Uint16Array([0, 1, 2, 0, 2, 3]);
            u = e.createBuffer(),
            h = e.createBuffer(),
            e.bindBuffer(e.ARRAY_BUFFER, u),
            e.bufferData(e.ARRAY_BUFFER, t, e.STATIC_DRAW),
            e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
            e.bufferData(e.ELEMENT_ARRAY_BUFFER, n, e.STATIC_DRAW),
            d = c(),
            p = {
                position: e.getAttribLocation(d, "position"),
                uv: e.getAttribLocation(d, "uv")
            },
            f = {
                uvOffset: e.getUniformLocation(d, "uvOffset"),
                uvScale: e.getUniformLocation(d, "uvScale"),
                rotation: e.getUniformLocation(d, "rotation"),
                center: e.getUniformLocation(d, "center"),
                scale: e.getUniformLocation(d, "scale"),
                color: e.getUniformLocation(d, "color"),
                map: e.getUniformLocation(d, "map"),
                opacity: e.getUniformLocation(d, "opacity"),
                modelViewMatrix: e.getUniformLocation(d, "modelViewMatrix"),
                projectionMatrix: e.getUniformLocation(d, "projectionMatrix"),
                fogType: e.getUniformLocation(d, "fogType"),
                fogDensity: e.getUniformLocation(d, "fogDensity"),
                fogNear: e.getUniformLocation(d, "fogNear"),
                fogFar: e.getUniformLocation(d, "fogFar"),
                fogColor: e.getUniformLocation(d, "fogColor"),
                fogDepth: e.getUniformLocation(d, "fogDepth"),
                alphaTest: e.getUniformLocation(d, "alphaTest")
            };
            var r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            r.width = 8,
            r.height = 8;
            var i = r.getContext("2d");
            i.fillStyle = "white",
            i.fillRect(0, 0, 8, 8),
            m = new ge(r)
        }
        function c() {
            var t = e.createProgram()
              , n = e.createShader(e.VERTEX_SHADER)
              , r = e.createShader(e.FRAGMENT_SHADER);
            return e.shaderSource(n, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 center;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "\tvUV = uvOffset + uv * uvScale;", "\tvec2 alignedPosition = ( position - center ) * scale;", "\tvec2 rotatedPosition;", "\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "\tvec4 mvPosition;", "\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "\tmvPosition.xy += rotatedPosition;", "\tgl_Position = projectionMatrix * mvPosition;", "\tfogDepth = - mvPosition.z;", "}"].join("\n")),
            e.shaderSource(r, ["precision " + i.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "\tvec4 texture = texture2D( map, vUV );", "\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "\tif ( gl_FragColor.a < alphaTest ) discard;", "\tif ( fogType > 0 ) {", "\t\tfloat fogFactor = 0.0;", "\t\tif ( fogType == 1 ) {", "\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );", "\t\t} else {", "\t\t\tconst float LOG2 = 1.442695;", "\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );", "\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "\t\t}", "\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "\t}", "}"].join("\n")),
            e.compileShader(n),
            e.compileShader(r),
            e.attachShader(t, n),
            e.attachShader(t, r),
            e.linkProgram(t),
            t
        }
        function l(t, e) {
            return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
        }
        var u, h, d, p, f, m, v = new s, g = new a, y = new s;
        this.render = function(i, a, s) {
            if (0 !== i.length) {
                void 0 === d && o(),
                n.useProgram(d),
                n.initAttributes(),
                n.enableAttribute(p.position),
                n.enableAttribute(p.uv),
                n.disableUnusedAttributes(),
                n.disable(e.CULL_FACE),
                n.enable(e.BLEND),
                e.bindBuffer(e.ARRAY_BUFFER, u),
                e.vertexAttribPointer(p.position, 2, e.FLOAT, !1, 16, 0),
                e.vertexAttribPointer(p.uv, 2, e.FLOAT, !1, 16, 8),
                e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, h),
                e.uniformMatrix4fv(f.projectionMatrix, !1, s.projectionMatrix.elements),
                n.activeTexture(e.TEXTURE0),
                e.uniform1i(f.map, 0);
                var c = 0
                  , _ = 0
                  , x = a.fog;
                x ? (e.uniform3f(f.fogColor, x.color.r, x.color.g, x.color.b),
                x.isFog ? (e.uniform1f(f.fogNear, x.near),
                e.uniform1f(f.fogFar, x.far),
                e.uniform1i(f.fogType, 1),
                c = 1,
                _ = 1) : x.isFogExp2 && (e.uniform1f(f.fogDensity, x.density),
                e.uniform1i(f.fogType, 2),
                c = 2,
                _ = 2)) : (e.uniform1i(f.fogType, 0),
                c = 0,
                _ = 0);
                for (var b = 0, w = i.length; b < w; b++) {
                    var M = i[b];
                    M.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse, M.matrixWorld),
                    M.z = -M.modelViewMatrix.elements[14]
                }
                i.sort(l);
                for (var E = [], T = [], b = 0, w = i.length; b < w; b++) {
                    var M = i[b]
                      , S = M.material;
                    if (!1 !== S.visible) {
                        M.onBeforeRender(t, a, s, void 0, S, void 0),
                        e.uniform1f(f.alphaTest, S.alphaTest),
                        e.uniformMatrix4fv(f.modelViewMatrix, !1, M.modelViewMatrix.elements),
                        M.matrixWorld.decompose(v, g, y),
                        E[0] = y.x,
                        E[1] = y.y,
                        T[0] = M.center.x - .5,
                        T[1] = M.center.y - .5;
                        var A = 0;
                        a.fog && S.fog && (A = _),
                        c !== A && (e.uniform1i(f.fogType, A),
                        c = A),
                        null !== S.map ? (e.uniform2f(f.uvOffset, S.map.offset.x, S.map.offset.y),
                        e.uniform2f(f.uvScale, S.map.repeat.x, S.map.repeat.y)) : (e.uniform2f(f.uvOffset, 0, 0),
                        e.uniform2f(f.uvScale, 1, 1)),
                        e.uniform1f(f.opacity, S.opacity),
                        e.uniform3f(f.color, S.color.r, S.color.g, S.color.b),
                        e.uniform1f(f.rotation, S.rotation),
                        e.uniform2fv(f.center, T),
                        e.uniform2fv(f.scale, E),
                        n.setBlending(S.blending, S.blendEquation, S.blendSrc, S.blendDst, S.blendEquationAlpha, S.blendSrcAlpha, S.blendDstAlpha, S.premultipliedAlpha),
                        n.buffers.depth.setTest(S.depthTest),
                        n.buffers.depth.setMask(S.depthWrite),
                        n.buffers.color.setMask(S.colorWrite),
                        r.setTexture2D(S.map || m, 0),
                        e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0),
                        M.onAfterRender(t, a, s, void 0, S, void 0)
                    }
                }
                n.enable(e.CULL_FACE),
                n.reset()
            }
        }
    }
    function _e(t, e, n) {
        function r() {
            var e = !1
              , n = new u
              , r = null
              , i = new u(0,0,0,0);
            return {
                setMask: function(n) {
                    r === n || e || (t.colorMask(n, n, n, n),
                    r = n)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e, r, o, a, s) {
                    !0 === s && (e *= a,
                    r *= a,
                    o *= a),
                    n.set(e, r, o, a),
                    !1 === i.equals(n) && (t.clearColor(e, r, o, a),
                    i.copy(n))
                },
                reset: function() {
                    e = !1,
                    r = null,
                    i.set(-1, 0, 0, 0)
                }
            }
        }
        function i() {
            var e = !1
              , n = null
              , r = null
              , i = null;
            return {
                setTest: function(e) {
                    e ? d(t.DEPTH_TEST) : p(t.DEPTH_TEST)
                },
                setMask: function(r) {
                    n === r || e || (t.depthMask(r),
                    n = r)
                },
                setFunc: function(e) {
                    if (r !== e) {
                        if (e)
                            switch (e) {
                            case na:
                                t.depthFunc(t.NEVER);
                                break;
                            case ra:
                                t.depthFunc(t.ALWAYS);
                                break;
                            case ia:
                                t.depthFunc(t.LESS);
                                break;
                            case oa:
                                t.depthFunc(t.LEQUAL);
                                break;
                            case aa:
                                t.depthFunc(t.EQUAL);
                                break;
                            case sa:
                                t.depthFunc(t.GEQUAL);
                                break;
                            case ca:
                                t.depthFunc(t.GREATER);
                                break;
                            case la:
                                t.depthFunc(t.NOTEQUAL);
                                break;
                            default:
                                t.depthFunc(t.LEQUAL)
                            }
                        else
                            t.depthFunc(t.LEQUAL);
                        r = e
                    }
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    i !== e && (t.clearDepth(e),
                    i = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    r = null,
                    i = null
                }
            }
        }
        function o() {
            var e = !1
              , n = null
              , r = null
              , i = null
              , o = null
              , a = null
              , s = null
              , c = null
              , l = null;
            return {
                setTest: function(e) {
                    e ? d(t.STENCIL_TEST) : p(t.STENCIL_TEST)
                },
                setMask: function(r) {
                    n === r || e || (t.stencilMask(r),
                    n = r)
                },
                setFunc: function(e, n, a) {
                    r === e && i === n && o === a || (t.stencilFunc(e, n, a),
                    r = e,
                    i = n,
                    o = a)
                },
                setOp: function(e, n, r) {
                    a === e && s === n && c === r || (t.stencilOp(e, n, r),
                    a = e,
                    s = n,
                    c = r)
                },
                setLocked: function(t) {
                    e = t
                },
                setClear: function(e) {
                    l !== e && (t.clearStencil(e),
                    l = e)
                },
                reset: function() {
                    e = !1,
                    n = null,
                    r = null,
                    i = null,
                    o = null,
                    a = null,
                    s = null,
                    c = null,
                    l = null
                }
            }
        }
        function a(e, n, r) {
            var i = new Uint8Array(4)
              , o = t.createTexture();
            t.bindTexture(e, o),
            t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
            t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for (var a = 0; a < r; a++)
                t.texImage2D(n + a, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, i);
            return o
        }
        function s() {
            for (var t = 0, e = D.length; t < e; t++)
                D[t] = 0
        }
        function c(n) {
            if (D[n] = 1,
            0 === N[n] && (t.enableVertexAttribArray(n),
            N[n] = 1),
            0 !== k[n]) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, 0),
                k[n] = 0
            }
        }
        function l(n, r) {
            if (D[n] = 1,
            0 === N[n] && (t.enableVertexAttribArray(n),
            N[n] = 1),
            k[n] !== r) {
                e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(n, r),
                k[n] = r
            }
        }
        function h() {
            for (var e = 0, n = N.length; e !== n; ++e)
                N[e] !== D[e] && (t.disableVertexAttribArray(e),
                N[e] = 0)
        }
        function d(e) {
            !0 !== j[e] && (t.enable(e),
            j[e] = !0)
        }
        function p(e) {
            !1 !== j[e] && (t.disable(e),
            j[e] = !1)
        }
        function f() {
            if (null === z && (z = [],
            e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1") || e.get("WEBGL_compressed_texture_astc")))
                for (var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), r = 0; r < n.length; r++)
                    z.push(n[r]);
            return z
        }
        function m(e) {
            return B !== e && (t.useProgram(e),
            B = e,
            !0)
        }
        function v(e, r, i, o, a, s, c, l) {
            if (e !== Do ? d(t.BLEND) : p(t.BLEND),
            e !== Bo) {
                if (e !== U || l !== X)
                    switch (e) {
                    case ko:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.SRC_ALPHA, t.ONE));
                        break;
                    case jo:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR));
                        break;
                    case zo:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD),
                        t.blendFunc(t.ZERO, t.SRC_COLOR));
                        break;
                    default:
                        l ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD),
                        t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA))
                    }
                F = null,
                H = null,
                G = null,
                V = null,
                W = null,
                q = null
            } else
                a = a || r,
                s = s || i,
                c = c || o,
                r === F && a === V || (t.blendEquationSeparate(n.convert(r), n.convert(a)),
                F = r,
                V = a),
                i === H && o === G && s === W && c === q || (t.blendFuncSeparate(n.convert(i), n.convert(o), n.convert(s), n.convert(c)),
                H = i,
                G = o,
                W = s,
                q = c);
            U = e,
            X = l
        }
        function g(e, n) {
            e.side === Lo ? p(t.CULL_FACE) : d(t.CULL_FACE);
            var r = e.side === Po;
            n && (r = !r),
            y(r),
            !0 === e.transparent ? v(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha) : v(Do),
            R.setFunc(e.depthFunc),
            R.setTest(e.depthTest),
            R.setMask(e.depthWrite),
            L.setMask(e.colorWrite),
            b(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
        }
        function y(e) {
            Y !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW),
            Y = e)
        }
        function _(e) {
            e !== Mo ? (d(t.CULL_FACE),
            e !== $ && (e === Eo ? t.cullFace(t.BACK) : e === To ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : p(t.CULL_FACE),
            $ = e
        }
        function x(e) {
            e !== Z && (tt && t.lineWidth(e),
            Z = e)
        }
        function b(e, n, r) {
            e ? (d(t.POLYGON_OFFSET_FILL),
            J === n && Q === r || (t.polygonOffset(n, r),
            J = n,
            Q = r)) : p(t.POLYGON_OFFSET_FILL)
        }
        function w(e) {
            e ? d(t.SCISSOR_TEST) : p(t.SCISSOR_TEST)
        }
        function M(e) {
            void 0 === e && (e = t.TEXTURE0 + K - 1),
            rt !== e && (t.activeTexture(e),
            rt = e)
        }
        function E(e, n) {
            null === rt && M();
            var r = it[rt];
            void 0 === r && (r = {
                type: void 0,
                texture: void 0
            },
            it[rt] = r),
            r.type === e && r.texture === n || (t.bindTexture(e, n || st[e]),
            r.type = e,
            r.texture = n)
        }
        function T() {
            try {
                t.compressedTexImage2D.apply(t, arguments)
            } catch (t) {
                console.error("THREE.WebGLState:", t)
            }
        }
        function S() {
            try {
                t.texImage2D.apply(t, arguments)
            } catch (t) {
                console.error("THREE.WebGLState:", t)
            }
        }
        function A(e) {
            !1 === ot.equals(e) && (t.scissor(e.x, e.y, e.z, e.w),
            ot.copy(e))
        }
        function C(e) {
            !1 === at.equals(e) && (t.viewport(e.x, e.y, e.z, e.w),
            at.copy(e))
        }
        function P() {
            for (var e = 0; e < N.length; e++)
                1 === N[e] && (t.disableVertexAttribArray(e),
                N[e] = 0);
            j = {},
            z = null,
            rt = null,
            it = {},
            B = null,
            U = null,
            Y = null,
            $ = null,
            L.reset(),
            R.reset(),
            O.reset()
        }
        var L = new r
          , R = new i
          , O = new o
          , I = t.getParameter(t.MAX_VERTEX_ATTRIBS)
          , D = new Uint8Array(I)
          , N = new Uint8Array(I)
          , k = new Uint8Array(I)
          , j = {}
          , z = null
          , B = null
          , U = null
          , F = null
          , H = null
          , G = null
          , V = null
          , W = null
          , q = null
          , X = !1
          , Y = null
          , $ = null
          , Z = null
          , J = null
          , Q = null
          , K = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
          , tt = !1
          , et = 0
          , nt = t.getParameter(t.VERSION);
        -1 !== nt.indexOf("WebGL") ? (et = parseFloat(/^WebGL\ ([0-9])/.exec(nt)[1]),
        tt = et >= 1) : -1 !== nt.indexOf("OpenGL ES") && (et = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(nt)[1]),
        tt = et >= 2);
        var rt = null
          , it = {}
          , ot = new u
          , at = new u
          , st = {};
        return st[t.TEXTURE_2D] = a(t.TEXTURE_2D, t.TEXTURE_2D, 1),
        st[t.TEXTURE_CUBE_MAP] = a(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
        L.setClear(0, 0, 0, 1),
        R.setClear(1),
        O.setClear(0),
        d(t.DEPTH_TEST),
        R.setFunc(oa),
        y(!1),
        _(Eo),
        d(t.CULL_FACE),
        d(t.BLEND),
        v(No),
        {
            buffers: {
                color: L,
                depth: R,
                stencil: O
            },
            initAttributes: s,
            enableAttribute: c,
            enableAttributeAndDivisor: l,
            disableUnusedAttributes: h,
            enable: d,
            disable: p,
            getCompressedTextureFormats: f,
            useProgram: m,
            setBlending: v,
            setMaterial: g,
            setFlipSided: y,
            setCullFace: _,
            setLineWidth: x,
            setPolygonOffset: b,
            setScissorTest: w,
            activeTexture: M,
            bindTexture: E,
            compressedTexImage2D: T,
            texImage2D: S,
            scissor: A,
            viewport: C,
            reset: P
        }
    }
    function xe(t, e, n, r, i, o, a) {
        function s(t, e) {
            if (t.width > e || t.height > e) {
                if ("data"in t)
                    return void console.warn("THREE.WebGLRenderer: image in DataTexture is too big (" + t.width + "x" + t.height + ").");
                var n = e / Math.max(t.width, t.height)
                  , r = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                r.width = Math.floor(t.width * n),
                r.height = Math.floor(t.height * n);
                return r.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, r.width, r.height),
                console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + r.width + "x" + r.height, t),
                r
            }
            return t
        }
        function c(t) {
            return ks.isPowerOfTwo(t.width) && ks.isPowerOfTwo(t.height)
        }
        function l(t) {
            if (t instanceof HTMLImageElement || t instanceof HTMLCanvasElement || t instanceof ImageBitmap) {
                void 0 === L && (L = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                L.width = ks.floorPowerOfTwo(t.width),
                L.height = ks.floorPowerOfTwo(t.height);
                return L.getContext("2d").drawImage(t, 0, 0, L.width, L.height),
                console.warn("THREE.WebGLRenderer: image is not power of two (" + t.width + "x" + t.height + "). Resized to " + L.width + "x" + L.height, t),
                L
            }
            return t
        }
        function u(t) {
            return t.wrapS !== Sa || t.wrapT !== Sa || t.minFilter !== Ca && t.minFilter !== Ra
        }
        function h(t, e) {
            return t.generateMipmaps && e && t.minFilter !== Ca && t.minFilter !== Ra
        }
        function d(e, n, i, o) {
            t.generateMipmap(e),
            r.get(n).__maxMipLevel = Math.log(Math.max(i, o)) * Math.LOG2E
        }
        function p(e) {
            return e === Ca || e === Pa || e === La ? t.NEAREST : t.LINEAR
        }
        function f(t) {
            var e = t.target;
            e.removeEventListener("dispose", f),
            v(e),
            e.isVideoTexture && delete O[e.id],
            a.memory.textures--
        }
        function m(t) {
            var e = t.target;
            e.removeEventListener("dispose", m),
            g(e),
            a.memory.textures--
        }
        function v(e) {
            var n = r.get(e);
            if (e.image && n.__image__webglTextureCube)
                t.deleteTexture(n.__image__webglTextureCube);
            else {
                if (void 0 === n.__webglInit)
                    return;
                t.deleteTexture(n.__webglTexture)
            }
            r.remove(e)
        }
        function g(e) {
            var n = r.get(e)
              , i = r.get(e.texture);
            if (e) {
                if (void 0 !== i.__webglTexture && t.deleteTexture(i.__webglTexture),
                e.depthTexture && e.depthTexture.dispose(),
                e.isWebGLRenderTargetCube)
                    for (var o = 0; o < 6; o++)
                        t.deleteFramebuffer(n.__webglFramebuffer[o]),
                        n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer[o]);
                else
                    t.deleteFramebuffer(n.__webglFramebuffer),
                    n.__webglDepthbuffer && t.deleteRenderbuffer(n.__webglDepthbuffer);
                r.remove(e.texture),
                r.remove(e)
            }
        }
        function y(e, i) {
            var o = r.get(e);
            if (e.isVideoTexture && P(e),
            e.version > 0 && o.__version !== e.version) {
                var a = e.image;
                if (void 0 === a)
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e);
                else {
                    if (!1 !== a.complete)
                        return void w(o, e, i);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e)
                }
            }
            n.activeTexture(t.TEXTURE0 + i),
            n.bindTexture(t.TEXTURE_2D, o.__webglTexture)
        }
        function _(e, l) {
            var u = r.get(e);
            if (6 === e.image.length)
                if (e.version > 0 && u.__version !== e.version) {
                    u.__image__webglTextureCube || (e.addEventListener("dispose", f),
                    u.__image__webglTextureCube = t.createTexture(),
                    a.memory.textures++),
                    n.activeTexture(t.TEXTURE0 + l),
                    n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube),
                    t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var p = e && e.isCompressedTexture, m = e.image[0] && e.image[0].isDataTexture, v = [], g = 0; g < 6; g++)
                        v[g] = p || m ? m ? e.image[g].image : e.image[g] : s(e.image[g], i.maxCubemapSize);
                    var y = v[0]
                      , _ = c(y)
                      , x = o.convert(e.format)
                      , w = o.convert(e.type);
                    b(t.TEXTURE_CUBE_MAP, e, _);
                    for (var g = 0; g < 6; g++)
                        if (p)
                            for (var M, E = v[g].mipmaps, T = 0, S = E.length; T < S; T++)
                                M = E[T],
                                e.format !== Ya && e.format !== Xa ? n.getCompressedTextureFormats().indexOf(x) > -1 ? n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, T, x, M.width, M.height, 0, M.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, T, x, M.width, M.height, 0, x, w, M.data);
                        else
                            m ? n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, x, v[g].width, v[g].height, 0, x, w, v[g].data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, x, x, w, v[g]);
                    u.__maxMipLevel = p ? E.length - 1 : 0,
                    h(e, _) && d(t.TEXTURE_CUBE_MAP, e, y.width, y.height),
                    u.__version = e.version,
                    e.onUpdate && e.onUpdate(e)
                } else
                    n.activeTexture(t.TEXTURE0 + l),
                    n.bindTexture(t.TEXTURE_CUBE_MAP, u.__image__webglTextureCube)
        }
        function x(e, i) {
            n.activeTexture(t.TEXTURE0 + i),
            n.bindTexture(t.TEXTURE_CUBE_MAP, r.get(e).__webglTexture)
        }
        function b(n, a, s) {
            var c;
            if (s ? (t.texParameteri(n, t.TEXTURE_WRAP_S, o.convert(a.wrapS)),
            t.texParameteri(n, t.TEXTURE_WRAP_T, o.convert(a.wrapT)),
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, o.convert(a.magFilter)),
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, o.convert(a.minFilter))) : (t.texParameteri(n, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
            t.texParameteri(n, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
            a.wrapS === Sa && a.wrapT === Sa || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", a),
            t.texParameteri(n, t.TEXTURE_MAG_FILTER, p(a.magFilter)),
            t.texParameteri(n, t.TEXTURE_MIN_FILTER, p(a.minFilter)),
            a.minFilter !== Ca && a.minFilter !== Ra && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", a)),
            c = e.get("EXT_texture_filter_anisotropic")) {
                if (a.type === Ua && null === e.get("OES_texture_float_linear"))
                    return;
                if (a.type === Fa && null === e.get("OES_texture_half_float_linear"))
                    return;
                (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (t.texParameterf(n, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())),
                r.get(a).__currentAnisotropy = a.anisotropy)
            }
        }
        function w(e, r, p) {
            void 0 === e.__webglInit && (e.__webglInit = !0,
            r.addEventListener("dispose", f),
            e.__webglTexture = t.createTexture(),
            a.memory.textures++),
            n.activeTexture(t.TEXTURE0 + p),
            n.bindTexture(t.TEXTURE_2D, e.__webglTexture),
            t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, r.flipY),
            t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha),
            t.pixelStorei(t.UNPACK_ALIGNMENT, r.unpackAlignment);
            var m = s(r.image, i.maxTextureSize);
            u(r) && !1 === c(m) && (m = l(m));
            var v = c(m)
              , g = o.convert(r.format)
              , y = o.convert(r.type);
            b(t.TEXTURE_2D, r, v);
            var _, x = r.mipmaps;
            if (r.isDepthTexture) {
                var w = t.DEPTH_COMPONENT;
                if (r.type === Ua) {
                    if (!R)
                        throw new Error("Float Depth Texture only supported in WebGL2.0");
                    w = t.DEPTH_COMPONENT32F
                } else
                    R && (w = t.DEPTH_COMPONENT16);
                r.format === Ja && w === t.DEPTH_COMPONENT && r.type !== ja && r.type !== Ba && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                r.type = ja,
                y = o.convert(r.type)),
                r.format === Qa && (w = t.DEPTH_STENCIL,
                r.type !== Wa && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                r.type = Wa,
                y = o.convert(r.type))),
                n.texImage2D(t.TEXTURE_2D, 0, w, m.width, m.height, 0, g, y, null)
            } else if (r.isDataTexture)
                if (x.length > 0 && v) {
                    for (var M = 0, E = x.length; M < E; M++)
                        _ = x[M],
                        n.texImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, g, y, _.data);
                    r.generateMipmaps = !1,
                    e.__maxMipLevel = x.length - 1
                } else
                    n.texImage2D(t.TEXTURE_2D, 0, g, m.width, m.height, 0, g, y, m.data),
                    e.__maxMipLevel = 0;
            else if (r.isCompressedTexture) {
                for (var M = 0, E = x.length; M < E; M++)
                    _ = x[M],
                    r.format !== Ya && r.format !== Xa ? n.getCompressedTextureFormats().indexOf(g) > -1 ? n.compressedTexImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, _.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(t.TEXTURE_2D, M, g, _.width, _.height, 0, g, y, _.data);
                e.__maxMipLevel = x.length - 1
            } else if (x.length > 0 && v) {
                for (var M = 0, E = x.length; M < E; M++)
                    _ = x[M],
                    n.texImage2D(t.TEXTURE_2D, M, g, g, y, _);
                r.generateMipmaps = !1,
                e.__maxMipLevel = x.length - 1
            } else
                n.texImage2D(t.TEXTURE_2D, 0, g, g, y, m),
                e.__maxMipLevel = 0;
            h(r, v) && d(t.TEXTURE_2D, r, m.width, m.height),
            e.__version = r.version,
            r.onUpdate && r.onUpdate(r)
        }
        function M(e, i, a, s) {
            var c = o.convert(i.texture.format)
              , l = o.convert(i.texture.type);
            n.texImage2D(s, 0, c, i.width, i.height, 0, c, l, null),
            t.bindFramebuffer(t.FRAMEBUFFER, e),
            t.framebufferTexture2D(t.FRAMEBUFFER, a, s, r.get(i.texture).__webglTexture, 0),
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function E(e, n) {
            t.bindRenderbuffer(t.RENDERBUFFER, e),
            n.depthBuffer && !n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, n.width, n.height),
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : n.depthBuffer && n.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, n.width, n.height),
            t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, n.width, n.height),
            t.bindRenderbuffer(t.RENDERBUFFER, null)
        }
        function T(e, n) {
            if (n && n.isWebGLRenderTargetCube)
                throw new Error("Depth Texture with cube render targets is not supported");
            if (t.bindFramebuffer(t.FRAMEBUFFER, e),
            !n.depthTexture || !n.depthTexture.isDepthTexture)
                throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
            r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
            n.depthTexture.image.height = n.height,
            n.depthTexture.needsUpdate = !0),
            y(n.depthTexture, 0);
            var i = r.get(n.depthTexture).__webglTexture;
            if (n.depthTexture.format === Ja)
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, i, 0);
            else {
                if (n.depthTexture.format !== Qa)
                    throw new Error("Unknown depthTexture format");
                t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, i, 0)
            }
        }
        function S(e) {
            var n = r.get(e)
              , i = !0 === e.isWebGLRenderTargetCube;
            if (e.depthTexture) {
                if (i)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                T(n.__webglFramebuffer, e)
            } else if (i) {
                n.__webglDepthbuffer = [];
                for (var o = 0; o < 6; o++)
                    t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer[o]),
                    n.__webglDepthbuffer[o] = t.createRenderbuffer(),
                    E(n.__webglDepthbuffer[o], e)
            } else
                t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer),
                n.__webglDepthbuffer = t.createRenderbuffer(),
                E(n.__webglDepthbuffer, e);
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
        function A(e) {
            var i = r.get(e)
              , o = r.get(e.texture);
            e.addEventListener("dispose", m),
            o.__webglTexture = t.createTexture(),
            a.memory.textures++;
            var s = !0 === e.isWebGLRenderTargetCube
              , l = c(e);
            if (s) {
                i.__webglFramebuffer = [];
                for (var u = 0; u < 6; u++)
                    i.__webglFramebuffer[u] = t.createFramebuffer()
            } else
                i.__webglFramebuffer = t.createFramebuffer();
            if (s) {
                n.bindTexture(t.TEXTURE_CUBE_MAP, o.__webglTexture),
                b(t.TEXTURE_CUBE_MAP, e.texture, l);
                for (var u = 0; u < 6; u++)
                    M(i.__webglFramebuffer[u], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + u);
                h(e.texture, l) && d(t.TEXTURE_CUBE_MAP, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_CUBE_MAP, null)
            } else
                n.bindTexture(t.TEXTURE_2D, o.__webglTexture),
                b(t.TEXTURE_2D, e.texture, l),
                M(i.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                h(e.texture, l) && d(t.TEXTURE_2D, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_2D, null);
            e.depthBuffer && S(e)
        }
        function C(e) {
            var i = e.texture;
            if (h(i, c(e))) {
                var o = e.isWebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D
                  , a = r.get(i).__webglTexture;
                n.bindTexture(o, a),
                d(o, i, e.width, e.height),
                n.bindTexture(o, null)
            }
        }
        function P(t) {
            var e = t.id
              , n = a.render.frame;
            O[e] !== n && (O[e] = n,
            t.update())
        }
        var L, R = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext, O = {};
        this.setTexture2D = y,
        this.setTextureCube = _,
        this.setTextureCubeDynamic = x,
        this.setupRenderTarget = A,
        this.updateRenderTargetMipmap = C
    }
    function be(t, e) {
        function n(n) {
            var r;
            if (n === Ta)
                return t.REPEAT;
            if (n === Sa)
                return t.CLAMP_TO_EDGE;
            if (n === Aa)
                return t.MIRRORED_REPEAT;
            if (n === Ca)
                return t.NEAREST;
            if (n === Pa)
                return t.NEAREST_MIPMAP_NEAREST;
            if (n === La)
                return t.NEAREST_MIPMAP_LINEAR;
            if (n === Ra)
                return t.LINEAR;
            if (n === Oa)
                return t.LINEAR_MIPMAP_NEAREST;
            if (n === Ia)
                return t.LINEAR_MIPMAP_LINEAR;
            if (n === Da)
                return t.UNSIGNED_BYTE;
            if (n === Ha)
                return t.UNSIGNED_SHORT_4_4_4_4;
            if (n === Ga)
                return t.UNSIGNED_SHORT_5_5_5_1;
            if (n === Va)
                return t.UNSIGNED_SHORT_5_6_5;
            if (n === Na)
                return t.BYTE;
            if (n === ka)
                return t.SHORT;
            if (n === ja)
                return t.UNSIGNED_SHORT;
            if (n === za)
                return t.INT;
            if (n === Ba)
                return t.UNSIGNED_INT;
            if (n === Ua)
                return t.FLOAT;
            if (n === Fa && null !== (r = e.get("OES_texture_half_float")))
                return r.HALF_FLOAT_OES;
            if (n === qa)
                return t.ALPHA;
            if (n === Xa)
                return t.RGB;
            if (n === Ya)
                return t.RGBA;
            if (n === $a)
                return t.LUMINANCE;
            if (n === Za)
                return t.LUMINANCE_ALPHA;
            if (n === Ja)
                return t.DEPTH_COMPONENT;
            if (n === Qa)
                return t.DEPTH_STENCIL;
            if (n === Uo)
                return t.FUNC_ADD;
            if (n === Fo)
                return t.FUNC_SUBTRACT;
            if (n === Ho)
                return t.FUNC_REVERSE_SUBTRACT;
            if (n === Wo)
                return t.ZERO;
            if (n === qo)
                return t.ONE;
            if (n === Xo)
                return t.SRC_COLOR;
            if (n === Yo)
                return t.ONE_MINUS_SRC_COLOR;
            if (n === $o)
                return t.SRC_ALPHA;
            if (n === Zo)
                return t.ONE_MINUS_SRC_ALPHA;
            if (n === Jo)
                return t.DST_ALPHA;
            if (n === Qo)
                return t.ONE_MINUS_DST_ALPHA;
            if (n === Ko)
                return t.DST_COLOR;
            if (n === ta)
                return t.ONE_MINUS_DST_COLOR;
            if (n === ea)
                return t.SRC_ALPHA_SATURATE;
            if ((n === Ka || n === ts || n === es || n === ns) && null !== (r = e.get("WEBGL_compressed_texture_s3tc"))) {
                if (n === Ka)
                    return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === ts)
                    return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === es)
                    return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === ns)
                    return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            if ((n === rs || n === is || n === os || n === as) && null !== (r = e.get("WEBGL_compressed_texture_pvrtc"))) {
                if (n === rs)
                    return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (n === is)
                    return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (n === os)
                    return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (n === as)
                    return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
            if (n === ss && null !== (r = e.get("WEBGL_compressed_texture_etc1")))
                return r.COMPRESSED_RGB_ETC1_WEBGL;
            if ((n === cs || n === ls || n === us || n === hs || n === ds || n === ps || n === fs || n === ms || n === vs || n === gs || n === ys || n === _s || n === xs || n === bs) && null !== (r = e.get("WEBGL_compressed_texture_astc")))
                return n;
            if ((n === Go || n === Vo) && null !== (r = e.get("EXT_blend_minmax"))) {
                if (n === Go)
                    return r.MIN_EXT;
                if (n === Vo)
                    return r.MAX_EXT
            }
            return n === Wa && null !== (r = e.get("WEBGL_depth_texture")) ? r.UNSIGNED_INT_24_8_WEBGL : 0
        }
        return {
            convert: n
        }
    }
    function we(t, e, n, r) {
        M.call(this),
        this.type = "PerspectiveCamera",
        this.fov = void 0 !== t ? t : 50,
        this.zoom = 1,
        this.near = void 0 !== n ? n : .1,
        this.far = void 0 !== r ? r : 2e3,
        this.focus = 10,
        this.aspect = void 0 !== e ? e : 1,
        this.view = null,
        this.filmGauge = 35,
        this.filmOffset = 0,
        this.updateProjectionMatrix()
    }
    function Me(t) {
        we.call(this),
        this.cameras = t || []
    }
    function Ee(t) {
        function e() {
            return null !== i && !0 === i.isPresenting
        }
        function n() {
            if (e()) {
                var n = i.getEyeParameters("left")
                  , o = n.renderWidth
                  , a = n.renderHeight;
                x = t.getPixelRatio(),
                _ = t.getSize(),
                t.setDrawingBufferSize(2 * o, a, 1)
            } else
                r.enabled && t.setDrawingBufferSize(_.width, _.height, x)
        }
        var r = this
          , i = null
          , c = null
          , l = null
          , h = new o
          , d = new o;
        "undefined" != typeof window && "VRFrameData"in window && (c = new window.VRFrameData,
        window.addEventListener("vrdisplaypresentchange", n, !1));
        var p = new o
          , f = new a
          , m = new s
          , v = new we;
        v.bounds = new u(0,0,.5,1),
        v.layers.enable(1);
        var g = new we;
        g.bounds = new u(.5,0,.5,1),
        g.layers.enable(2);
        var y = new Me([v, g]);
        y.layers.enable(1),
        y.layers.enable(2);
        var _, x;
        this.enabled = !1,
        this.userHeight = 1.6,
        this.getDevice = function() {
            return i
        }
        ,
        this.setDevice = function(t) {
            void 0 !== t && (i = t)
        }
        ,
        this.setPoseTarget = function(t) {
            void 0 !== t && (l = t)
        }
        ,
        this.getCamera = function(t) {
            if (null === i)
                return t;
            i.depthNear = t.near,
            i.depthFar = t.far,
            i.getFrameData(c);
            var e = i.stageParameters;
            e ? h.fromArray(e.sittingToStandingTransform) : h.makeTranslation(0, r.userHeight, 0);
            var n = c.pose
              , o = null !== l ? l : t;
            if (o.matrix.copy(h),
            o.matrix.decompose(o.position, o.quaternion, o.scale),
            null !== n.orientation && (f.fromArray(n.orientation),
            o.quaternion.multiply(f)),
            null !== n.position && (f.setFromRotationMatrix(h),
            m.fromArray(n.position),
            m.applyQuaternion(f),
            o.position.add(m)),
            o.updateMatrixWorld(),
            !1 === i.isPresenting)
                return t;
            v.near = t.near,
            g.near = t.near,
            v.far = t.far,
            g.far = t.far,
            y.matrixWorld.copy(t.matrixWorld),
            y.matrixWorldInverse.copy(t.matrixWorldInverse),
            v.matrixWorldInverse.fromArray(c.leftViewMatrix),
            g.matrixWorldInverse.fromArray(c.rightViewMatrix),
            d.getInverse(h),
            v.matrixWorldInverse.multiply(d),
            g.matrixWorldInverse.multiply(d);
            var a = o.parent;
            null !== a && (p.getInverse(a.matrixWorld),
            v.matrixWorldInverse.multiply(p),
            g.matrixWorldInverse.multiply(p)),
            v.matrixWorld.getInverse(v.matrixWorldInverse),
            g.matrixWorld.getInverse(g.matrixWorldInverse),
            v.projectionMatrix.fromArray(c.leftProjectionMatrix),
            g.projectionMatrix.fromArray(c.rightProjectionMatrix),
            y.projectionMatrix.copy(v.projectionMatrix);
            var s = i.getLayers();
            if (s.length) {
                var u = s[0];
                null !== u.leftBounds && 4 === u.leftBounds.length && v.bounds.fromArray(u.leftBounds),
                null !== u.rightBounds && 4 === u.rightBounds.length && g.bounds.fromArray(u.rightBounds)
            }
            return y
        }
        ,
        this.getStandingMatrix = function() {
            return h
        }
        ,
        this.submitFrame = function() {
            e() && i.submitFrame()
        }
        ,
        this.dispose = function() {
            "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", n)
        }
    }
    function Te(t) {
        function e() {
            return null === ut ? wt : 1
        }
        function n() {
            It = new et(ot),
            It.get("WEBGL_depth_texture"),
            It.get("OES_texture_float"),
            It.get("OES_texture_float_linear"),
            It.get("OES_texture_half_float"),
            It.get("OES_texture_half_float_linear"),
            It.get("OES_standard_derivatives"),
            It.get("OES_element_index_uint"),
            It.get("ANGLE_instanced_arrays"),
            Jt = new be(ot,It),
            Dt = new K(ot,It,t),
            Nt = new _e(ot,It,Jt),
            Nt.scissor(gt.copy(Et).multiplyScalar(wt)),
            Nt.viewport(vt.copy(Mt).multiplyScalar(wt)),
            kt = new it(ot),
            jt = new oe,
            zt = new xe(ot,It,Nt,jt,Dt,Jt,kt),
            Bt = new _(ot),
            Ut = new nt(ot,Bt,kt),
            Ft = new st(Ut,kt),
            Xt = new at(ot),
            Gt = new ie(ct,It,Dt),
            Vt = new le,
            Wt = new pe,
            qt = new J(ct,Nt,Ut,q),
            Yt = new Q(ot,It,kt),
            $t = new rt(ot,It,kt),
            Zt = new ye(ct,ot,Nt,zt,Dt),
            kt.programs = Gt.programs,
            ct.context = ot,
            ct.capabilities = Dt,
            ct.extensions = It,
            ct.properties = jt,
            ct.renderLists = Vt,
            ct.state = Nt,
            ct.info = kt
        }
        function r(t) {
            t.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            lt = !0
        }
        function i() {
            console.log("THREE.WebGLRenderer: Context Restored."),
            lt = !1,
            n()
        }
        function a(t) {
            var e = t.target;
            e.removeEventListener("dispose", a),
            c(e)
        }
        function c(t) {
            l(t),
            jt.remove(t)
        }
        function l(t) {
            var e = jt.get(t).program;
            t.program = void 0,
            void 0 !== e && Gt.releaseProgram(e)
        }
        function h(t, e, n) {
            t.render(function(t) {
                ct.renderBufferImmediate(t, e, n)
            })
        }
        function d(t, e, n) {
            if (n && n.isInstancedBufferGeometry && null === It.get("ANGLE_instanced_arrays"))
                return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            Nt.initAttributes();
            var r = n.attributes
              , i = e.getAttributes()
              , o = t.defaultAttributeValues;
            for (var a in i) {
                var s = i[a];
                if (s >= 0) {
                    var c = r[a];
                    if (void 0 !== c) {
                        var l = c.normalized
                          , u = c.itemSize
                          , h = Bt.get(c);
                        if (void 0 === h)
                            continue;
                        var d = h.buffer
                          , p = h.type
                          , f = h.bytesPerElement;
                        if (c.isInterleavedBufferAttribute) {
                            var m = c.data
                              , v = m.stride
                              , g = c.offset;
                            m && m.isInstancedInterleavedBuffer ? (Nt.enableAttributeAndDivisor(s, m.meshPerAttribute),
                            void 0 === n.maxInstancedCount && (n.maxInstancedCount = m.meshPerAttribute * m.count)) : Nt.enableAttribute(s),
                            ot.bindBuffer(ot.ARRAY_BUFFER, d),
                            ot.vertexAttribPointer(s, u, p, l, v * f, g * f)
                        } else
                            c.isInstancedBufferAttribute ? (Nt.enableAttributeAndDivisor(s, c.meshPerAttribute),
                            void 0 === n.maxInstancedCount && (n.maxInstancedCount = c.meshPerAttribute * c.count)) : Nt.enableAttribute(s),
                            ot.bindBuffer(ot.ARRAY_BUFFER, d),
                            ot.vertexAttribPointer(s, u, p, l, 0, 0)
                    } else if (void 0 !== o) {
                        var y = o[a];
                        if (void 0 !== y)
                            switch (y.length) {
                            case 2:
                                ot.vertexAttrib2fv(s, y);
                                break;
                            case 3:
                                ot.vertexAttrib3fv(s, y);
                                break;
                            case 4:
                                ot.vertexAttrib4fv(s, y);
                                break;
                            default:
                                ot.vertexAttrib1fv(s, y)
                            }
                    }
                }
            }
            Nt.disableUnusedAttributes()
        }
        function f() {
            te || (v(),
            te = !0)
        }
        function m() {
            te = !1
        }
        function v() {
            var t = Qt.getDevice();
            t && t.isPresenting ? t.requestAnimationFrame(y) : window.requestAnimationFrame(y)
        }
        function y(t) {
            !1 !== te && (ee(t),
            v())
        }
        function x(t, e, n) {
            if (!1 !== t.visible) {
                if (t.layers.test(e.layers))
                    if (t.isLight)
                        Z.pushLight(t),
                        t.castShadow && Z.pushShadow(t);
                    else if (t.isSprite)
                        t.frustumCulled && !St.intersectsSprite(t) || Z.pushSprite(t);
                    else if (t.isImmediateRenderObject)
                        n && Rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Lt),
                        $.push(t, null, t.material, Rt.z, null);
                    else if ((t.isMesh || t.isLine || t.isPoints) && (t.isSkinnedMesh && t.skeleton.update(),
                    !t.frustumCulled || St.intersectsObject(t))) {
                        n && Rt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Lt);
                        var r = Ft.update(t)
                          , i = t.material;
                        if (Array.isArray(i))
                            for (var o = r.groups, a = 0, s = o.length; a < s; a++) {
                                var c = o[a]
                                  , l = i[c.materialIndex];
                                l && l.visible && $.push(t, r, l, Rt.z, c)
                            }
                        else
                            i.visible && $.push(t, r, i, Rt.z, null)
                    }
                for (var u = t.children, a = 0, s = u.length; a < s; a++)
                    x(u[a], e, n)
            }
        }
        function b(t, e, n, r) {
            for (var i = 0, o = t.length; i < o; i++) {
                var a = t[i]
                  , s = a.object
                  , c = a.geometry
                  , l = void 0 === r ? a.material : r
                  , u = a.group;
                if (n.isArrayCamera) {
                    mt = n;
                    for (var h = n.cameras, d = 0, p = h.length; d < p; d++) {
                        var f = h[d];
                        if (s.layers.test(f.layers)) {
                            var m = f.bounds
                              , v = m.x * xt
                              , g = m.y * bt
                              , y = m.z * xt
                              , _ = m.w * bt;
                            Nt.viewport(vt.set(v, g, y, _).multiplyScalar(wt)),
                            w(s, e, f, c, l, u)
                        }
                    }
                } else
                    mt = null,
                    w(s, e, n, c, l, u)
            }
        }
        function w(t, e, n, r, i, o) {
            if (t.onBeforeRender(ct, e, n, r, i, o),
            Z = Wt.get(e, mt || n),
            t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
            t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
            t.isImmediateRenderObject) {
                var a = t.isMesh && t.matrixWorld.determinant() < 0;
                Nt.setMaterial(i, a);
                var s = E(n, e.fog, i, t);
                pt = "",
                h(t, s, i)
            } else
                ct.renderBufferDirect(n, e.fog, r, i, t, o);
            t.onAfterRender(ct, e, n, r, i, o),
            Z = Wt.get(e, mt || n)
        }
        function M(t, e, n) {
            var r = jt.get(t)
              , i = Z.state.lights
              , o = Z.state.shadowsArray
              , s = Gt.getParameters(t, i.state, o, e, At.numPlanes, At.numIntersection, n)
              , c = Gt.getProgramCode(t, s)
              , u = r.program
              , h = !0;
            if (void 0 === u)
                t.addEventListener("dispose", a);
            else if (u.code !== c)
                l(t);
            else if (r.lightsHash !== i.state.hash)
                jt.update(t, "lightsHash", i.state.hash),
                h = !1;
            else {
                if (void 0 !== s.shaderID)
                    return;
                h = !1
            }
            if (h) {
                if (s.shaderID) {
                    var d = Hs[s.shaderID];
                    r.shader = {
                        name: t.type,
                        uniforms: Bs.clone(d.uniforms),
                        vertexShader: d.vertexShader,
                        fragmentShader: d.fragmentShader
                    }
                } else
                    r.shader = {
                        name: t.type,
                        uniforms: t.uniforms,
                        vertexShader: t.vertexShader,
                        fragmentShader: t.fragmentShader
                    };
                t.onBeforeCompile(r.shader, ct),
                u = Gt.acquireProgram(t, r.shader, s, c),
                r.program = u,
                t.program = u
            }
            var p = u.getAttributes();
            if (t.morphTargets) {
                t.numSupportedMorphTargets = 0;
                for (var f = 0; f < ct.maxMorphTargets; f++)
                    p["morphTarget" + f] >= 0 && t.numSupportedMorphTargets++
            }
            if (t.morphNormals) {
                t.numSupportedMorphNormals = 0;
                for (var f = 0; f < ct.maxMorphNormals; f++)
                    p["morphNormal" + f] >= 0 && t.numSupportedMorphNormals++
            }
            var m = r.shader.uniforms;
            (t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping || (r.numClippingPlanes = At.numPlanes,
            r.numIntersection = At.numIntersection,
            m.clippingPlanes = At.uniform),
            r.fog = e,
            r.lightsHash = i.state.hash,
            t.lights && (m.ambientLightColor.value = i.state.ambient,
            m.directionalLights.value = i.state.directional,
            m.spotLights.value = i.state.spot,
            m.rectAreaLights.value = i.state.rectArea,
            m.pointLights.value = i.state.point,
            m.hemisphereLights.value = i.state.hemi,
            m.directionalShadowMap.value = i.state.directionalShadowMap,
            m.directionalShadowMatrix.value = i.state.directionalShadowMatrix,
            m.spotShadowMap.value = i.state.spotShadowMap,
            m.spotShadowMatrix.value = i.state.spotShadowMatrix,
            m.pointShadowMap.value = i.state.pointShadowMap,
            m.pointShadowMatrix.value = i.state.pointShadowMatrix);
            var v = r.program.getUniforms()
              , g = Ht.seqWithValue(v.seq, m);
            r.uniformsList = g
        }
        function E(t, e, n, r) {
            _t = 0;
            var i = jt.get(n)
              , o = Z.state.lights;
            if (Ct && (Pt || t !== ft)) {
                var a = t === ft && n.id === dt;
                At.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, t, i, a)
            }
            !1 === n.needsUpdate && (void 0 === i.program ? n.needsUpdate = !0 : n.fog && i.fog !== e ? n.needsUpdate = !0 : n.lights && i.lightsHash !== o.state.hash ? n.needsUpdate = !0 : void 0 === i.numClippingPlanes || i.numClippingPlanes === At.numPlanes && i.numIntersection === At.numIntersection || (n.needsUpdate = !0)),
            n.needsUpdate && (M(n, e, r),
            n.needsUpdate = !1);
            var s = !1
              , c = !1
              , l = !1
              , u = i.program
              , h = u.getUniforms()
              , d = i.shader.uniforms;
            if (Nt.useProgram(u.program) && (s = !0,
            c = !0,
            l = !0),
            n.id !== dt && (dt = n.id,
            c = !0),
            s || t !== ft) {
                if (h.setValue(ot, "projectionMatrix", t.projectionMatrix),
                Dt.logarithmicDepthBuffer && h.setValue(ot, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)),
                ft !== (mt || t) && (ft = mt || t,
                c = !0,
                l = !0),
                n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
                    var f = h.map.cameraPosition;
                    void 0 !== f && f.setValue(ot, Rt.setFromMatrixPosition(t.matrixWorld))
                }
                (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && h.setValue(ot, "viewMatrix", t.matrixWorldInverse)
            }
            if (n.skinning) {
                h.setOptional(ot, r, "bindMatrix"),
                h.setOptional(ot, r, "bindMatrixInverse");
                var m = r.skeleton;
                if (m) {
                    var v = m.bones;
                    if (Dt.floatVertexTextures) {
                        if (void 0 === m.boneTexture) {
                            var g = Math.sqrt(4 * v.length);
                            g = ks.ceilPowerOfTwo(g),
                            g = Math.max(g, 4);
                            var y = new Float32Array(g * g * 4);
                            y.set(m.boneMatrices);
                            var _ = new p(y,g,g,Ya,Ua);
                            _.needsUpdate = !0,
                            m.boneMatrices = y,
                            m.boneTexture = _,
                            m.boneTextureSize = g
                        }
                        h.setValue(ot, "boneTexture", m.boneTexture),
                        h.setValue(ot, "boneTextureSize", m.boneTextureSize)
                    } else
                        h.setOptional(ot, m, "boneMatrices")
                }
            }
            return c && (h.setValue(ot, "toneMappingExposure", ct.toneMappingExposure),
            h.setValue(ot, "toneMappingWhitePoint", ct.toneMappingWhitePoint),
            n.lights && z(d, l),
            e && n.fog && P(d, e),
            n.isMeshBasicMaterial ? T(d, n) : n.isMeshLambertMaterial ? (T(d, n),
            L(d, n)) : n.isMeshPhongMaterial ? (T(d, n),
            n.isMeshToonMaterial ? O(d, n) : R(d, n)) : n.isMeshStandardMaterial ? (T(d, n),
            n.isMeshPhysicalMaterial ? D(d, n) : I(d, n)) : n.isMeshDepthMaterial ? (T(d, n),
            N(d, n)) : n.isMeshDistanceMaterial ? (T(d, n),
            k(d, n)) : n.isMeshNormalMaterial ? (T(d, n),
            j(d, n)) : n.isLineBasicMaterial ? (S(d, n),
            n.isLineDashedMaterial && A(d, n)) : n.isPointsMaterial ? C(d, n) : n.isShadowMaterial && (d.color.value = n.color,
            d.opacity.value = n.opacity),
            void 0 !== d.ltc_1 && (d.ltc_1.value = Fs.LTC_1),
            void 0 !== d.ltc_2 && (d.ltc_2.value = Fs.LTC_2),
            Ht.upload(ot, i.uniformsList, d, ct)),
            n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (Ht.upload(ot, i.uniformsList, d, ct),
            n.uniformsNeedUpdate = !1),
            h.setValue(ot, "modelViewMatrix", r.modelViewMatrix),
            h.setValue(ot, "normalMatrix", r.normalMatrix),
            h.setValue(ot, "modelMatrix", r.matrixWorld),
            u
        }
        function T(t, e) {
            t.opacity.value = e.opacity,
            e.color && (t.diffuse.value = e.color),
            e.emissive && t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),
            e.map && (t.map.value = e.map),
            e.alphaMap && (t.alphaMap.value = e.alphaMap),
            e.specularMap && (t.specularMap.value = e.specularMap),
            e.envMap && (t.envMap.value = e.envMap,
            t.flipEnvMap.value = e.envMap && e.envMap.isCubeTexture ? -1 : 1,
            t.reflectivity.value = e.reflectivity,
            t.refractionRatio.value = e.refractionRatio,
            t.maxMipLevel.value = jt.get(e.envMap).__maxMipLevel),
            e.lightMap && (t.lightMap.value = e.lightMap,
            t.lightMapIntensity.value = e.lightMapIntensity),
            e.aoMap && (t.aoMap.value = e.aoMap,
            t.aoMapIntensity.value = e.aoMapIntensity);
            var n;
            e.map ? n = e.map : e.specularMap ? n = e.specularMap : e.displacementMap ? n = e.displacementMap : e.normalMap ? n = e.normalMap : e.bumpMap ? n = e.bumpMap : e.roughnessMap ? n = e.roughnessMap : e.metalnessMap ? n = e.metalnessMap : e.alphaMap ? n = e.alphaMap : e.emissiveMap && (n = e.emissiveMap),
            void 0 !== n && (n.isWebGLRenderTarget && (n = n.texture),
            !0 === n.matrixAutoUpdate && n.updateMatrix(),
            t.uvTransform.value.copy(n.matrix))
        }
        function S(t, e) {
            t.diffuse.value = e.color,
            t.opacity.value = e.opacity
        }
        function A(t, e) {
            t.dashSize.value = e.dashSize,
            t.totalSize.value = e.dashSize + e.gapSize,
            t.scale.value = e.scale
        }
        function C(t, e) {
            t.diffuse.value = e.color,
            t.opacity.value = e.opacity,
            t.size.value = e.size * wt,
            t.scale.value = .5 * bt,
            t.map.value = e.map,
            null !== e.map && (!0 === e.map.matrixAutoUpdate && e.map.updateMatrix(),
            t.uvTransform.value.copy(e.map.matrix))
        }
        function P(t, e) {
            t.fogColor.value = e.color,
            e.isFog ? (t.fogNear.value = e.near,
            t.fogFar.value = e.far) : e.isFogExp2 && (t.fogDensity.value = e.density)
        }
        function L(t, e) {
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap)
        }
        function R(t, e) {
            t.specular.value = e.specular,
            t.shininess.value = Math.max(e.shininess, 1e-4),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function O(t, e) {
            R(t, e),
            e.gradientMap && (t.gradientMap.value = e.gradientMap)
        }
        function I(t, e) {
            t.roughness.value = e.roughness,
            t.metalness.value = e.metalness,
            e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
            e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias),
            e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
        }
        function D(t, e) {
            t.clearCoat.value = e.clearCoat,
            t.clearCoatRoughness.value = e.clearCoatRoughness,
            I(t, e)
        }
        function N(t, e) {
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function k(t, e) {
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias),
            t.referencePosition.value.copy(e.referencePosition),
            t.nearDistance.value = e.nearDistance,
            t.farDistance.value = e.farDistance
        }
        function j(t, e) {
            e.bumpMap && (t.bumpMap.value = e.bumpMap,
            t.bumpScale.value = e.bumpScale),
            e.normalMap && (t.normalMap.value = e.normalMap,
            t.normalScale.value.copy(e.normalScale)),
            e.displacementMap && (t.displacementMap.value = e.displacementMap,
            t.displacementScale.value = e.displacementScale,
            t.displacementBias.value = e.displacementBias)
        }
        function z(t, e) {
            t.ambientLightColor.needsUpdate = e,
            t.directionalLights.needsUpdate = e,
            t.pointLights.needsUpdate = e,
            t.spotLights.needsUpdate = e,
            t.rectAreaLights.needsUpdate = e,
            t.hemisphereLights.needsUpdate = e
        }
        function B() {
            var t = _t;
            return t >= Dt.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + t + " texture units while this GPU supports only " + Dt.maxTextures),
            _t += 1,
            t
        }
        console.log("THREE.WebGLRenderer", wo),
        t = t || {};
        var U = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
          , F = void 0 !== t.context ? t.context : null
          , H = void 0 !== t.alpha && t.alpha
          , G = void 0 === t.depth || t.depth
          , V = void 0 === t.stencil || t.stencil
          , W = void 0 !== t.antialias && t.antialias
          , q = void 0 === t.premultipliedAlpha || t.premultipliedAlpha
          , X = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer
          , Y = void 0 !== t.powerPreference ? t.powerPreference : "default"
          , $ = null
          , Z = null;
        this.domElement = U,
        this.context = null,
        this.autoClear = !0,
        this.autoClearColor = !0,
        this.autoClearDepth = !0,
        this.autoClearStencil = !0,
        this.sortObjects = !0,
        this.clippingPlanes = [],
        this.localClippingEnabled = !1,
        this.gammaFactor = 2,
        this.gammaInput = !1,
        this.gammaOutput = !1,
        this.physicallyCorrectLights = !1,
        this.toneMapping = fa,
        this.toneMappingExposure = 1,
        this.toneMappingWhitePoint = 1,
        this.maxMorphTargets = 8,
        this.maxMorphNormals = 4;
        var ot, ct = this, lt = !1, ut = null, ht = null, dt = -1, pt = "", ft = null, mt = null, vt = new u, gt = new u, yt = null, _t = 0, xt = U.width, bt = U.height, wt = 1, Mt = new u(0,0,xt,bt), Et = new u(0,0,xt,bt), Tt = !1, St = new g, At = new tt, Ct = !1, Pt = !1, Lt = new o, Rt = new s;
        try {
            var Ot = {
                alpha: H,
                depth: G,
                stencil: V,
                antialias: W,
                premultipliedAlpha: q,
                preserveDrawingBuffer: X,
                powerPreference: Y
            };
            if (U.addEventListener("webglcontextlost", r, !1),
            U.addEventListener("webglcontextrestored", i, !1),
            null === (ot = F || U.getContext("webgl", Ot) || U.getContext("experimental-webgl", Ot)))
                throw null !== U.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
            void 0 === ot.getShaderPrecisionFormat && (ot.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            )
        } catch (t) {
            console.error("THREE.WebGLRenderer: " + t.message)
        }
        var It, Dt, Nt, kt, jt, zt, Bt, Ut, Ft, Gt, Vt, Wt, qt, Xt, Yt, $t, Zt, Jt;
        n();
        var Qt = new Ee(ct);
        this.vr = Qt;
        var Kt = new ve(ct,Ft,Dt.maxTextureSize);
        this.shadowMap = Kt,
        this.getContext = function() {
            return ot
        }
        ,
        this.getContextAttributes = function() {
            return ot.getContextAttributes()
        }
        ,
        this.forceContextLoss = function() {
            var t = It.get("WEBGL_lose_context");
            t && t.loseContext()
        }
        ,
        this.forceContextRestore = function() {
            var t = It.get("WEBGL_lose_context");
            t && t.restoreContext()
        }
        ,
        this.getPixelRatio = function() {
            return wt
        }
        ,
        this.setPixelRatio = function(t) {
            void 0 !== t && (wt = t,
            this.setSize(xt, bt, !1))
        }
        ,
        this.getSize = function() {
            return {
                width: xt,
                height: bt
            }
        }
        ,
        this.setSize = function(t, e, n) {
            var r = Qt.getDevice();
            if (r && r.isPresenting)
                return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            xt = t,
            bt = e,
            U.width = t * wt,
            U.height = e * wt,
            !1 !== n && (U.style.width = t + "px",
            U.style.height = e + "px"),
            this.setViewport(0, 0, t, e)
        }
        ,
        this.getDrawingBufferSize = function() {
            return {
                width: xt * wt,
                height: bt * wt
            }
        }
        ,
        this.setDrawingBufferSize = function(t, e, n) {
            xt = t,
            bt = e,
            wt = n,
            U.width = t * n,
            U.height = e * n,
            this.setViewport(0, 0, t, e)
        }
        ,
        this.getCurrentViewport = function() {
            return vt
        }
        ,
        this.setViewport = function(t, e, n, r) {
            Mt.set(t, bt - e - r, n, r),
            Nt.viewport(vt.copy(Mt).multiplyScalar(wt))
        }
        ,
        this.setScissor = function(t, e, n, r) {
            Et.set(t, bt - e - r, n, r),
            Nt.scissor(gt.copy(Et).multiplyScalar(wt))
        }
        ,
        this.setScissorTest = function(t) {
            Nt.setScissorTest(Tt = t)
        }
        ,
        this.getClearColor = function() {
            return qt.getClearColor()
        }
        ,
        this.setClearColor = function() {
            qt.setClearColor.apply(qt, arguments)
        }
        ,
        this.getClearAlpha = function() {
            return qt.getClearAlpha()
        }
        ,
        this.setClearAlpha = function() {
            qt.setClearAlpha.apply(qt, arguments)
        }
        ,
        this.clear = function(t, e, n) {
            var r = 0;
            (void 0 === t || t) && (r |= ot.COLOR_BUFFER_BIT),
            (void 0 === e || e) && (r |= ot.DEPTH_BUFFER_BIT),
            (void 0 === n || n) && (r |= ot.STENCIL_BUFFER_BIT),
            ot.clear(r)
        }
        ,
        this.clearColor = function() {
            this.clear(!0, !1, !1)
        }
        ,
        this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }
        ,
        this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }
        ,
        this.clearTarget = function(t, e, n, r) {
            this.setRenderTarget(t),
            this.clear(e, n, r)
        }
        ,
        this.dispose = function() {
            U.removeEventListener("webglcontextlost", r, !1),
            U.removeEventListener("webglcontextrestored", i, !1),
            Vt.dispose(),
            Wt.dispose(),
            jt.dispose(),
            Ft.dispose(),
            Qt.dispose(),
            m()
        }
        ,
        this.renderBufferImmediate = function(t, e, n) {
            Nt.initAttributes();
            var r = jt.get(t);
            t.hasPositions && !r.position && (r.position = ot.createBuffer()),
            t.hasNormals && !r.normal && (r.normal = ot.createBuffer()),
            t.hasUvs && !r.uv && (r.uv = ot.createBuffer()),
            t.hasColors && !r.color && (r.color = ot.createBuffer());
            var i = e.getAttributes();
            if (t.hasPositions && (ot.bindBuffer(ot.ARRAY_BUFFER, r.position),
            ot.bufferData(ot.ARRAY_BUFFER, t.positionArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.position),
            ot.vertexAttribPointer(i.position, 3, ot.FLOAT, !1, 0, 0)),
            t.hasNormals) {
                if (ot.bindBuffer(ot.ARRAY_BUFFER, r.normal),
                !n.isMeshPhongMaterial && !n.isMeshStandardMaterial && !n.isMeshNormalMaterial && !0 === n.flatShading)
                    for (var o = 0, a = 3 * t.count; o < a; o += 9) {
                        var s = t.normalArray
                          , c = (s[o + 0] + s[o + 3] + s[o + 6]) / 3
                          , l = (s[o + 1] + s[o + 4] + s[o + 7]) / 3
                          , u = (s[o + 2] + s[o + 5] + s[o + 8]) / 3;
                        s[o + 0] = c,
                        s[o + 1] = l,
                        s[o + 2] = u,
                        s[o + 3] = c,
                        s[o + 4] = l,
                        s[o + 5] = u,
                        s[o + 6] = c,
                        s[o + 7] = l,
                        s[o + 8] = u
                    }
                ot.bufferData(ot.ARRAY_BUFFER, t.normalArray, ot.DYNAMIC_DRAW),
                Nt.enableAttribute(i.normal),
                ot.vertexAttribPointer(i.normal, 3, ot.FLOAT, !1, 0, 0)
            }
            t.hasUvs && n.map && (ot.bindBuffer(ot.ARRAY_BUFFER, r.uv),
            ot.bufferData(ot.ARRAY_BUFFER, t.uvArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.uv),
            ot.vertexAttribPointer(i.uv, 2, ot.FLOAT, !1, 0, 0)),
            t.hasColors && n.vertexColors !== Ro && (ot.bindBuffer(ot.ARRAY_BUFFER, r.color),
            ot.bufferData(ot.ARRAY_BUFFER, t.colorArray, ot.DYNAMIC_DRAW),
            Nt.enableAttribute(i.color),
            ot.vertexAttribPointer(i.color, 3, ot.FLOAT, !1, 0, 0)),
            Nt.disableUnusedAttributes(),
            ot.drawArrays(ot.TRIANGLES, 0, t.count),
            t.count = 0
        }
        ,
        this.renderBufferDirect = function(t, n, r, i, o, a) {
            var s = o.isMesh && o.matrixWorld.determinant() < 0;
            Nt.setMaterial(i, s);
            var c = E(t, n, i, o)
              , l = r.id + "_" + c.id + "_" + (!0 === i.wireframe)
              , u = !1;
            l !== pt && (pt = l,
            u = !0),
            o.morphTargetInfluences && (Xt.update(o, r, i, c),
            u = !0);
            var h = r.index
              , p = r.attributes.position
              , f = 1;
            !0 === i.wireframe && (h = Ut.getWireframeAttribute(r),
            f = 2);
            var m, v = Yt;
            null !== h && (m = Bt.get(h),
            v = $t,
            v.setIndex(m)),
            u && (d(i, c, r),
            null !== h && ot.bindBuffer(ot.ELEMENT_ARRAY_BUFFER, m.buffer));
            var g = 1 / 0;
            null !== h ? g = h.count : void 0 !== p && (g = p.count);
            var y = r.drawRange.start * f
              , _ = r.drawRange.count * f
              , x = null !== a ? a.start * f : 0
              , b = null !== a ? a.count * f : 1 / 0
              , w = Math.max(y, x)
              , M = Math.min(g, y + _, x + b) - 1
              , T = Math.max(0, M - w + 1);
            if (0 !== T) {
                if (o.isMesh)
                    if (!0 === i.wireframe)
                        Nt.setLineWidth(i.wireframeLinewidth * e()),
                        v.setMode(ot.LINES);
                    else
                        switch (o.drawMode) {
                        case Es:
                            v.setMode(ot.TRIANGLES);
                            break;
                        case Ts:
                            v.setMode(ot.TRIANGLE_STRIP);
                            break;
                        case Ss:
                            v.setMode(ot.TRIANGLE_FAN)
                        }
                else if (o.isLine) {
                    var S = i.linewidth;
                    void 0 === S && (S = 1),
                    Nt.setLineWidth(S * e()),
                    o.isLineSegments ? v.setMode(ot.LINES) : o.isLineLoop ? v.setMode(ot.LINE_LOOP) : v.setMode(ot.LINE_STRIP)
                } else
                    o.isPoints && v.setMode(ot.POINTS);
                r && r.isInstancedBufferGeometry ? r.maxInstancedCount > 0 && v.renderInstances(r, w, T) : v.render(w, T)
            }
        }
        ,
        this.compile = function(t, e) {
            Z = Wt.get(t, e),
            Z.init(),
            t.traverse(function(t) {
                t.isLight && (Z.pushLight(t),
                t.castShadow && Z.pushShadow(t))
            }),
            Z.setupLights(e),
            t.traverse(function(e) {
                if (e.material)
                    if (Array.isArray(e.material))
                        for (var n = 0; n < e.material.length; n++)
                            M(e.material[n], t.fog, e);
                    else
                        M(e.material, t.fog, e)
            })
        }
        ;
        var te = !1
          , ee = null;
        this.animate = function(t) {
            ee = t,
            null !== ee ? f() : m()
        }
        ,
        this.render = function(t, e, n, r) {
            if (!e || !e.isCamera)
                return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            if (!lt) {
                pt = "",
                dt = -1,
                ft = null,
                !0 === t.autoUpdate && t.updateMatrixWorld(),
                null === e.parent && e.updateMatrixWorld(),
                Qt.enabled && (e = Qt.getCamera(e)),
                Z = Wt.get(t, e),
                Z.init(),
                t.onBeforeRender(ct, t, e, n),
                Lt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                St.setFromMatrix(Lt),
                Pt = this.localClippingEnabled,
                Ct = At.init(this.clippingPlanes, Pt, e),
                $ = Vt.get(t, e),
                $.init(),
                x(t, e, ct.sortObjects),
                !0 === ct.sortObjects && $.sort(),
                Ct && At.beginShadows();
                var i = Z.state.shadowsArray;
                Kt.render(i, t, e),
                Z.setupLights(e),
                Ct && At.endShadows(),
                this.info.autoReset && this.info.reset(),
                void 0 === n && (n = null),
                this.setRenderTarget(n),
                qt.render($, t, e, r);
                var o = $.opaque
                  , a = $.transparent;
                if (t.overrideMaterial) {
                    var s = t.overrideMaterial;
                    o.length && b(o, t, e, s),
                    a.length && b(a, t, e, s)
                } else
                    o.length && b(o, t, e),
                    a.length && b(a, t, e);
                var c = Z.state.spritesArray;
                Zt.render(c, t, e),
                n && zt.updateRenderTargetMipmap(n),
                Nt.buffers.depth.setTest(!0),
                Nt.buffers.depth.setMask(!0),
                Nt.buffers.color.setMask(!0),
                Nt.setPolygonOffset(!1),
                t.onAfterRender(ct, t, e),
                Qt.enabled && Qt.submitFrame(),
                $ = null,
                Z = null
            }
        }
        ,
        this.allocTextureUnit = B,
        this.setTexture2D = function() {
            var t = !1;
            return function(e, n) {
                e && e.isWebGLRenderTarget && (t || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
                t = !0),
                e = e.texture),
                zt.setTexture2D(e, n)
            }
        }(),
        this.setTexture = function() {
            var t = !1;
            return function(e, n) {
                t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),
                t = !0),
                zt.setTexture2D(e, n)
            }
        }(),
        this.setTextureCube = function() {
            var t = !1;
            return function(e, n) {
                e && e.isWebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
                t = !0),
                e = e.texture),
                e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? zt.setTextureCube(e, n) : zt.setTextureCubeDynamic(e, n)
            }
        }(),
        this.getRenderTarget = function() {
            return ut
        }
        ,
        this.setRenderTarget = function(t) {
            ut = t,
            t && void 0 === jt.get(t).__webglFramebuffer && zt.setupRenderTarget(t);
            var e = null
              , n = !1;
            if (t) {
                var r = jt.get(t).__webglFramebuffer;
                t.isWebGLRenderTargetCube ? (e = r[t.activeCubeFace],
                n = !0) : e = r,
                vt.copy(t.viewport),
                gt.copy(t.scissor),
                yt = t.scissorTest
            } else
                vt.copy(Mt).multiplyScalar(wt),
                gt.copy(Et).multiplyScalar(wt),
                yt = Tt;
            if (ht !== e && (ot.bindFramebuffer(ot.FRAMEBUFFER, e),
            ht = e),
            Nt.viewport(vt),
            Nt.scissor(gt),
            Nt.setScissorTest(yt),
            n) {
                var i = jt.get(t.texture);
                ot.framebufferTexture2D(ot.FRAMEBUFFER, ot.COLOR_ATTACHMENT0, ot.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, i.__webglTexture, t.activeMipMapLevel)
            }
        }
        ,
        this.readRenderTargetPixels = function(t, e, n, r, i, o) {
            if (!t || !t.isWebGLRenderTarget)
                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            var a = jt.get(t).__webglFramebuffer;
            if (a) {
                var s = !1;
                a !== ht && (ot.bindFramebuffer(ot.FRAMEBUFFER, a),
                s = !0);
                try {
                    var c = t.texture
                      , l = c.format
                      , u = c.type;
                    if (l !== Ya && Jt.convert(l) !== ot.getParameter(ot.IMPLEMENTATION_COLOR_READ_FORMAT))
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    if (!(u === Da || Jt.convert(u) === ot.getParameter(ot.IMPLEMENTATION_COLOR_READ_TYPE) || u === Ua && (It.get("OES_texture_float") || It.get("WEBGL_color_buffer_float")) || u === Fa && It.get("EXT_color_buffer_half_float")))
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    ot.checkFramebufferStatus(ot.FRAMEBUFFER) === ot.FRAMEBUFFER_COMPLETE ? e >= 0 && e <= t.width - r && n >= 0 && n <= t.height - i && ot.readPixels(e, n, r, i, Jt.convert(l), Jt.convert(u), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                } finally {
                    s && ot.bindFramebuffer(ot.FRAMEBUFFER, ht)
                }
            }
        }
        ,
        this.copyFramebufferToTexture = function(t, e, n) {
            var r = e.image.width
              , i = e.image.height
              , o = Jt.convert(e.format);
            this.setTexture2D(e, 0),
            ot.copyTexImage2D(ot.TEXTURE_2D, n || 0, o, t.x, t.y, r, i, 0)
        }
        ,
        this.copyTextureToTexture = function(t, e, n, r) {
            var i = e.image.width
              , o = e.image.height
              , a = Jt.convert(n.format)
              , s = Jt.convert(n.type)
              , c = e.isDataTexture ? e.image.data : e.image;
            this.setTexture2D(n, 0),
            ot.texSubImage2D(ot.TEXTURE_2D, r || 0, t.x, t.y, i, o, a, s, c)
        }
    }
    function Se(t, e) {
        this.name = "",
        this.color = new y(t),
        this.density = void 0 !== e ? e : 25e-5
    }
    function Ae(t, e, n) {
        this.name = "",
        this.color = new y(t),
        this.near = void 0 !== e ? e : 1,
        this.far = void 0 !== n ? n : 1e3
    }
    function Ce() {
        w.call(this),
        this.type = "Scene",
        this.background = null,
        this.fog = null,
        this.overrideMaterial = null,
        this.autoUpdate = !0
    }
    function Pe(t) {
        V.call(this),
        this.type = "SpriteMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.rotation = 0,
        this.fog = !1,
        this.lights = !1,
        this.setValues(t)
    }
    function Le(t) {
        w.call(this),
        this.type = "Sprite",
        this.material = void 0 !== t ? t : new Pe,
        this.center = new i(.5,.5)
    }
    function Re() {
        w.call(this),
        this.type = "LOD",
        Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        })
    }
    function Oe(t, e) {
        if (t = t || [],
        this.bones = t.slice(0),
        this.boneMatrices = new Float32Array(16 * this.bones.length),
        void 0 === e)
            this.calculateInverses();
        else if (this.bones.length === e.length)
            this.boneInverses = e.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."),
            this.boneInverses = [];
            for (var n = 0, r = this.bones.length; n < r; n++)
                this.boneInverses.push(new o)
        }
    }
    function Ie() {
        w.call(this),
        this.type = "Bone"
    }
    function De(t, e) {
        Z.call(this, t, e),
        this.type = "SkinnedMesh",
        this.bindMode = "attached",
        this.bindMatrix = new o,
        this.bindMatrixInverse = new o;
        var n = this.initBones()
          , r = new Oe(n);
        this.bind(r, this.matrixWorld),
        this.normalizeSkinWeights()
    }
    function Ne(t) {
        V.call(this),
        this.type = "LineBasicMaterial",
        this.color = new y(16777215),
        this.linewidth = 1,
        this.linecap = "round",
        this.linejoin = "round",
        this.lights = !1,
        this.setValues(t)
    }
    function ke(t, e, n) {
        if (1 === n)
            return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
            new je(t,e);
        w.call(this),
        this.type = "Line",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new Ne({
            color: 16777215 * Math.random()
        })
    }
    function je(t, e) {
        ke.call(this, t, e),
        this.type = "LineSegments"
    }
    function ze(t, e) {
        ke.call(this, t, e),
        this.type = "LineLoop"
    }
    function Be(t) {
        V.call(this),
        this.type = "PointsMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.size = 1,
        this.sizeAttenuation = !0,
        this.lights = !1,
        this.setValues(t)
    }
    function Ue(t, e) {
        w.call(this),
        this.type = "Points",
        this.geometry = void 0 !== t ? t : new B,
        this.material = void 0 !== e ? e : new Be({
            color: 16777215 * Math.random()
        })
    }
    function Fe() {
        w.call(this),
        this.type = "Group"
    }
    function He(t, e, n, r, i, o, a, s, c) {
        l.call(this, t, e, n, r, i, o, a, s, c),
        this.generateMipmaps = !1
    }
    function Ge(t, e, n, r, i, o, a, s, c, u, h, d) {
        l.call(this, null, o, a, s, c, u, r, i, h, d),
        this.image = {
            width: e,
            height: n
        },
        this.mipmaps = t,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Ve(t, e, n, r, i, o, a, s, c, u) {
        if ((u = void 0 !== u ? u : Ja) !== Ja && u !== Qa)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n && u === Ja && (n = ja),
        void 0 === n && u === Qa && (n = Wa),
        l.call(this, null, r, i, o, a, s, u, n, c),
        this.image = {
            width: t,
            height: e
        },
        this.magFilter = void 0 !== a ? a : Ca,
        this.minFilter = void 0 !== s ? s : Ca,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function We(t) {
        B.call(this),
        this.type = "WireframeGeometry";
        var e, n, r, i, o, a, c, l, u, h, d = [], p = [0, 0], f = {}, m = ["a", "b", "c"];
        if (t && t.isGeometry) {
            var v = t.faces;
            for (e = 0,
            r = v.length; e < r; e++) {
                var g = v[e];
                for (n = 0; n < 3; n++)
                    c = g[m[n]],
                    l = g[m[(n + 1) % 3]],
                    p[0] = Math.min(c, l),
                    p[1] = Math.max(c, l),
                    u = p[0] + "," + p[1],
                    void 0 === f[u] && (f[u] = {
                        index1: p[0],
                        index2: p[1]
                    })
            }
            for (u in f)
                a = f[u],
                h = t.vertices[a.index1],
                d.push(h.x, h.y, h.z),
                h = t.vertices[a.index2],
                d.push(h.x, h.y, h.z)
        } else if (t && t.isBufferGeometry) {
            var y, _, x, b, w, M, E, T;
            if (h = new s,
            null !== t.index) {
                for (y = t.attributes.position,
                _ = t.index,
                x = t.groups,
                0 === x.length && (x = [{
                    start: 0,
                    count: _.count,
                    materialIndex: 0
                }]),
                i = 0,
                o = x.length; i < o; ++i)
                    for (b = x[i],
                    w = b.start,
                    M = b.count,
                    e = w,
                    r = w + M; e < r; e += 3)
                        for (n = 0; n < 3; n++)
                            c = _.getX(e + n),
                            l = _.getX(e + (n + 1) % 3),
                            p[0] = Math.min(c, l),
                            p[1] = Math.max(c, l),
                            u = p[0] + "," + p[1],
                            void 0 === f[u] && (f[u] = {
                                index1: p[0],
                                index2: p[1]
                            });
                for (u in f)
                    a = f[u],
                    h.fromBufferAttribute(y, a.index1),
                    d.push(h.x, h.y, h.z),
                    h.fromBufferAttribute(y, a.index2),
                    d.push(h.x, h.y, h.z)
            } else
                for (y = t.attributes.position,
                e = 0,
                r = y.count / 3; e < r; e++)
                    for (n = 0; n < 3; n++)
                        E = 3 * e + n,
                        h.fromBufferAttribute(y, E),
                        d.push(h.x, h.y, h.z),
                        T = 3 * e + (n + 1) % 3,
                        h.fromBufferAttribute(y, T),
                        d.push(h.x, h.y, h.z)
        }
        this.addAttribute("position", new N(d,3))
    }
    function qe(t, e, n) {
        S.call(this),
        this.type = "ParametricGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        },
        this.fromBufferGeometry(new Xe(t,e,n)),
        this.mergeVertices()
    }
    function Xe(t, e, n) {
        B.call(this),
        this.type = "ParametricBufferGeometry",
        this.parameters = {
            func: t,
            slices: e,
            stacks: n
        };
        var r, i, o = [], a = [], c = [], l = [], u = new s, h = new s, d = new s, p = new s, f = new s, m = e + 1;
        for (r = 0; r <= n; r++) {
            var v = r / n;
            for (i = 0; i <= e; i++) {
                var g = i / e;
                t(g, v, h),
                a.push(h.x, h.y, h.z),
                g - 1e-5 >= 0 ? (t(g - 1e-5, v, d),
                p.subVectors(h, d)) : (t(g + 1e-5, v, d),
                p.subVectors(d, h)),
                v - 1e-5 >= 0 ? (t(g, v - 1e-5, d),
                f.subVectors(h, d)) : (t(g, v + 1e-5, d),
                f.subVectors(d, h)),
                u.crossVectors(p, f).normalize(),
                c.push(u.x, u.y, u.z),
                l.push(g, v)
            }
        }
        for (r = 0; r < n; r++)
            for (i = 0; i < e; i++) {
                var y = r * m + i
                  , _ = r * m + i + 1
                  , x = (r + 1) * m + i + 1
                  , b = (r + 1) * m + i;
                o.push(y, _, b),
                o.push(_, x, b)
            }
        this.setIndex(o),
        this.addAttribute("position", new N(a,3)),
        this.addAttribute("normal", new N(c,3)),
        this.addAttribute("uv", new N(l,2))
    }
    function Ye(t, e, n, r) {
        S.call(this),
        this.type = "PolyhedronGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: r
        },
        this.fromBufferGeometry(new $e(t,e,n,r)),
        this.mergeVertices()
    }
    function $e(t, e, n, r) {
        function o(t, e, n, r) {
            var i, o, a = Math.pow(2, r), s = [];
            for (i = 0; i <= a; i++) {
                s[i] = [];
                var l = t.clone().lerp(n, i / a)
                  , u = e.clone().lerp(n, i / a)
                  , h = a - i;
                for (o = 0; o <= h; o++)
                    s[i][o] = 0 === o && i === a ? l : l.clone().lerp(u, o / h)
            }
            for (i = 0; i < a; i++)
                for (o = 0; o < 2 * (a - i) - 1; o++) {
                    var d = Math.floor(o / 2);
                    o % 2 == 0 ? (c(s[i][d + 1]),
                    c(s[i + 1][d]),
                    c(s[i][d])) : (c(s[i][d + 1]),
                    c(s[i + 1][d + 1]),
                    c(s[i + 1][d]))
                }
        }
        function a() {
            for (var t = 0; t < m.length; t += 6) {
                var e = m[t + 0]
                  , n = m[t + 2]
                  , r = m[t + 4]
                  , i = Math.max(e, n, r)
                  , o = Math.min(e, n, r);
                i > .9 && o < .1 && (e < .2 && (m[t + 0] += 1),
                n < .2 && (m[t + 2] += 1),
                r < .2 && (m[t + 4] += 1))
            }
        }
        function c(t) {
            f.push(t.x, t.y, t.z)
        }
        function l(e, n) {
            var r = 3 * e;
            n.x = t[r + 0],
            n.y = t[r + 1],
            n.z = t[r + 2]
        }
        function u() {
            for (var t = new s, e = new s, n = new s, r = new s, o = new i, a = new i, c = new i, l = 0, u = 0; l < f.length; l += 9,
            u += 6) {
                t.set(f[l + 0], f[l + 1], f[l + 2]),
                e.set(f[l + 3], f[l + 4], f[l + 5]),
                n.set(f[l + 6], f[l + 7], f[l + 8]),
                o.set(m[u + 0], m[u + 1]),
                a.set(m[u + 2], m[u + 3]),
                c.set(m[u + 4], m[u + 5]),
                r.copy(t).add(e).add(n).divideScalar(3);
                var p = d(r);
                h(o, u + 0, t, p),
                h(a, u + 2, e, p),
                h(c, u + 4, n, p)
            }
        }
        function h(t, e, n, r) {
            r < 0 && 1 === t.x && (m[e] = t.x - 1),
            0 === n.x && 0 === n.z && (m[e] = r / 2 / Math.PI + .5)
        }
        function d(t) {
            return Math.atan2(t.z, -t.x)
        }
        function p(t) {
            return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z))
        }
        B.call(this),
        this.type = "PolyhedronBufferGeometry",
        this.parameters = {
            vertices: t,
            indices: e,
            radius: n,
            detail: r
        },
        n = n || 1,
        r = r || 0;
        var f = []
          , m = [];
        !function(t) {
            for (var n = new s, r = new s, i = new s, a = 0; a < e.length; a += 3)
                l(e[a + 0], n),
                l(e[a + 1], r),
                l(e[a + 2], i),
                o(n, r, i, t)
        }(r),
        function(t) {
            for (var e = new s, n = 0; n < f.length; n += 3)
                e.x = f[n + 0],
                e.y = f[n + 1],
                e.z = f[n + 2],
                e.normalize().multiplyScalar(t),
                f[n + 0] = e.x,
                f[n + 1] = e.y,
                f[n + 2] = e.z
        }(n),
        function() {
            for (var t = new s, e = 0; e < f.length; e += 3) {
                t.x = f[e + 0],
                t.y = f[e + 1],
                t.z = f[e + 2];
                var n = d(t) / 2 / Math.PI + .5
                  , r = p(t) / Math.PI + .5;
                m.push(n, 1 - r)
            }
            u(),
            a()
        }(),
        this.addAttribute("position", new N(f,3)),
        this.addAttribute("normal", new N(f.slice(),3)),
        this.addAttribute("uv", new N(m,2)),
        0 === r ? this.computeVertexNormals() : this.normalizeNormals()
    }
    function Ze(t, e) {
        S.call(this),
        this.type = "TetrahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new Je(t,e)),
        this.mergeVertices()
    }
    function Je(t, e) {
        var n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
          , r = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
        $e.call(this, n, r, t, e),
        this.type = "TetrahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function Qe(t, e) {
        S.call(this),
        this.type = "OctahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new Ke(t,e)),
        this.mergeVertices()
    }
    function Ke(t, e) {
        var n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
          , r = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
        $e.call(this, n, r, t, e),
        this.type = "OctahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function tn(t, e) {
        S.call(this),
        this.type = "IcosahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new en(t,e)),
        this.mergeVertices()
    }
    function en(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1]
          , i = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
        $e.call(this, r, i, t, e),
        this.type = "IcosahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function nn(t, e) {
        S.call(this),
        this.type = "DodecahedronGeometry",
        this.parameters = {
            radius: t,
            detail: e
        },
        this.fromBufferGeometry(new rn(t,e)),
        this.mergeVertices()
    }
    function rn(t, e) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = 1 / n
          , i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r]
          , o = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
        $e.call(this, i, o, t, e),
        this.type = "DodecahedronBufferGeometry",
        this.parameters = {
            radius: t,
            detail: e
        }
    }
    function on(t, e, n, r, i, o) {
        S.call(this),
        this.type = "TubeGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: r,
            closed: i
        },
        void 0 !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
        var a = new an(t,e,n,r,i);
        this.tangents = a.tangents,
        this.normals = a.normals,
        this.binormals = a.binormals,
        this.fromBufferGeometry(a),
        this.mergeVertices()
    }
    function an(t, e, n, r, o) {
        function a(i) {
            v = t.getPointAt(i / e, v);
            var o = u.normals[i]
              , a = u.binormals[i];
            for (d = 0; d <= r; d++) {
                var s = d / r * Math.PI * 2
                  , c = Math.sin(s)
                  , l = -Math.cos(s);
                f.x = l * o.x + c * a.x,
                f.y = l * o.y + c * a.y,
                f.z = l * o.z + c * a.z,
                f.normalize(),
                y.push(f.x, f.y, f.z),
                p.x = v.x + n * f.x,
                p.y = v.y + n * f.y,
                p.z = v.z + n * f.z,
                g.push(p.x, p.y, p.z)
            }
        }
        function c() {
            for (d = 1; d <= e; d++)
                for (h = 1; h <= r; h++) {
                    var t = (r + 1) * (d - 1) + (h - 1)
                      , n = (r + 1) * d + (h - 1)
                      , i = (r + 1) * d + h
                      , o = (r + 1) * (d - 1) + h;
                    x.push(t, n, o),
                    x.push(n, i, o)
                }
        }
        function l() {
            for (h = 0; h <= e; h++)
                for (d = 0; d <= r; d++)
                    m.x = h / e,
                    m.y = d / r,
                    _.push(m.x, m.y)
        }
        B.call(this),
        this.type = "TubeBufferGeometry",
        this.parameters = {
            path: t,
            tubularSegments: e,
            radius: n,
            radialSegments: r,
            closed: o
        },
        e = e || 64,
        n = n || 1,
        r = r || 8,
        o = o || !1;
        var u = t.computeFrenetFrames(e, o);
        this.tangents = u.tangents,
        this.normals = u.normals,
        this.binormals = u.binormals;
        var h, d, p = new s, f = new s, m = new i, v = new s, g = [], y = [], _ = [], x = [];
        !function() {
            for (h = 0; h < e; h++)
                a(h);
            a(!1 === o ? e : 0),
            l(),
            c()
        }(),
        this.setIndex(x),
        this.addAttribute("position", new N(g,3)),
        this.addAttribute("normal", new N(y,3)),
        this.addAttribute("uv", new N(_,2))
    }
    function sn(t, e, n, r, i, o, a) {
        S.call(this),
        this.type = "TorusKnotGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: o
        },
        void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
        this.fromBufferGeometry(new cn(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function cn(t, e, n, r, i, o) {
        function a(t, e, n, r, i) {
            var o = Math.cos(t)
              , a = Math.sin(t)
              , s = n / e * t
              , c = Math.cos(s);
            i.x = r * (2 + c) * .5 * o,
            i.y = r * (2 + c) * a * .5,
            i.z = r * Math.sin(s) * .5
        }
        B.call(this),
        this.type = "TorusKnotBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: o
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 64,
        r = Math.floor(r) || 8,
        i = i || 2,
        o = o || 3;
        var c, l, u = [], h = [], d = [], p = [], f = new s, m = new s, v = new s, g = new s, y = new s, _ = new s, x = new s;
        for (c = 0; c <= n; ++c) {
            var b = c / n * i * Math.PI * 2;
            for (a(b, i, o, t, v),
            a(b + .01, i, o, t, g),
            _.subVectors(g, v),
            x.addVectors(g, v),
            y.crossVectors(_, x),
            x.crossVectors(y, _),
            y.normalize(),
            x.normalize(),
            l = 0; l <= r; ++l) {
                var w = l / r * Math.PI * 2
                  , M = -e * Math.cos(w)
                  , E = e * Math.sin(w);
                f.x = v.x + (M * x.x + E * y.x),
                f.y = v.y + (M * x.y + E * y.y),
                f.z = v.z + (M * x.z + E * y.z),
                h.push(f.x, f.y, f.z),
                m.subVectors(f, v).normalize(),
                d.push(m.x, m.y, m.z),
                p.push(c / n),
                p.push(l / r)
            }
        }
        for (l = 1; l <= n; l++)
            for (c = 1; c <= r; c++) {
                var T = (r + 1) * (l - 1) + (c - 1)
                  , S = (r + 1) * l + (c - 1)
                  , A = (r + 1) * l + c
                  , C = (r + 1) * (l - 1) + c;
                u.push(T, S, C),
                u.push(S, A, C)
            }
        this.setIndex(u),
        this.addAttribute("position", new N(h,3)),
        this.addAttribute("normal", new N(d,3)),
        this.addAttribute("uv", new N(p,2))
    }
    function ln(t, e, n, r, i) {
        S.call(this),
        this.type = "TorusGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        this.fromBufferGeometry(new un(t,e,n,r,i)),
        this.mergeVertices()
    }
    function un(t, e, n, r, i) {
        B.call(this),
        this.type = "TorusBufferGeometry",
        this.parameters = {
            radius: t,
            tube: e,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        t = t || 1,
        e = e || .4,
        n = Math.floor(n) || 8,
        r = Math.floor(r) || 6,
        i = i || 2 * Math.PI;
        var o, a, c = [], l = [], u = [], h = [], d = new s, p = new s, f = new s;
        for (o = 0; o <= n; o++)
            for (a = 0; a <= r; a++) {
                var m = a / r * i
                  , v = o / n * Math.PI * 2;
                p.x = (t + e * Math.cos(v)) * Math.cos(m),
                p.y = (t + e * Math.cos(v)) * Math.sin(m),
                p.z = e * Math.sin(v),
                l.push(p.x, p.y, p.z),
                d.x = t * Math.cos(m),
                d.y = t * Math.sin(m),
                f.subVectors(p, d).normalize(),
                u.push(f.x, f.y, f.z),
                h.push(a / r),
                h.push(o / n)
            }
        for (o = 1; o <= n; o++)
            for (a = 1; a <= r; a++) {
                var g = (r + 1) * o + a - 1
                  , y = (r + 1) * (o - 1) + a - 1
                  , _ = (r + 1) * (o - 1) + a
                  , x = (r + 1) * o + a;
                c.push(g, y, x),
                c.push(y, _, x)
            }
        this.setIndex(c),
        this.addAttribute("position", new N(l,3)),
        this.addAttribute("normal", new N(u,3)),
        this.addAttribute("uv", new N(h,2))
    }
    function hn(t, e, n, r, i) {
        var o, a;
        if (i === zn(t, e, n, r) > 0)
            for (o = e; o < n; o += r)
                a = Nn(o, t[o], t[o + 1], a);
        else
            for (o = n - r; o >= e; o -= r)
                a = Nn(o, t[o], t[o + 1], a);
        return a && Pn(a, a.next) && (kn(a),
        a = a.next),
        a
    }
    function dn(t, e) {
        if (!t)
            return t;
        e || (e = t);
        var n, r = t;
        do {
            if (n = !1,
            r.steiner || !Pn(r, r.next) && 0 !== Cn(r.prev, r, r.next))
                r = r.next;
            else {
                if (kn(r),
                (r = e = r.prev) === r.next)
                    break;
                n = !0
            }
        } while (n || r !== e);return e
    }
    function pn(t, e, n, r, i, o, a) {
        if (t) {
            !a && o && wn(t, r, i, o);
            for (var s, c, l = t; t.prev !== t.next; )
                if (s = t.prev,
                c = t.next,
                o ? mn(t, r, i, o) : fn(t))
                    e.push(s.i / n),
                    e.push(t.i / n),
                    e.push(c.i / n),
                    kn(t),
                    t = c.next,
                    l = c.next;
                else if ((t = c) === l) {
                    a ? 1 === a ? (t = vn(t, e, n),
                    pn(t, e, n, r, i, o, 2)) : 2 === a && gn(t, e, n, r, i, o) : pn(dn(t), e, n, r, i, o, 1);
                    break
                }
        }
    }
    function fn(t) {
        var e = t.prev
          , n = t
          , r = t.next;
        if (Cn(e, n, r) >= 0)
            return !1;
        for (var i = t.next.next; i !== t.prev; ) {
            if (Sn(e.x, e.y, n.x, n.y, r.x, r.y, i.x, i.y) && Cn(i.prev, i, i.next) >= 0)
                return !1;
            i = i.next
        }
        return !0
    }
    function mn(t, e, n, r) {
        var i = t.prev
          , o = t
          , a = t.next;
        if (Cn(i, o, a) >= 0)
            return !1;
        for (var s = i.x < o.x ? i.x < a.x ? i.x : a.x : o.x < a.x ? o.x : a.x, c = i.y < o.y ? i.y < a.y ? i.y : a.y : o.y < a.y ? o.y : a.y, l = i.x > o.x ? i.x > a.x ? i.x : a.x : o.x > a.x ? o.x : a.x, u = i.y > o.y ? i.y > a.y ? i.y : a.y : o.y > a.y ? o.y : a.y, h = En(s, c, e, n, r), d = En(l, u, e, n, r), p = t.nextZ; p && p.z <= d; ) {
            if (p !== t.prev && p !== t.next && Sn(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Cn(p.prev, p, p.next) >= 0)
                return !1;
            p = p.nextZ
        }
        for (p = t.prevZ; p && p.z >= h; ) {
            if (p !== t.prev && p !== t.next && Sn(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Cn(p.prev, p, p.next) >= 0)
                return !1;
            p = p.prevZ
        }
        return !0
    }
    function vn(t, e, n) {
        var r = t;
        do {
            var i = r.prev
              , o = r.next.next;
            !Pn(i, o) && Ln(i, r, r.next, o) && On(i, o) && On(o, i) && (e.push(i.i / n),
            e.push(r.i / n),
            e.push(o.i / n),
            kn(r),
            kn(r.next),
            r = t = o),
            r = r.next
        } while (r !== t);return r
    }
    function gn(t, e, n, r, i, o) {
        var a = t;
        do {
            for (var s = a.next.next; s !== a.prev; ) {
                if (a.i !== s.i && An(a, s)) {
                    var c = Dn(a, s);
                    return a = dn(a, a.next),
                    c = dn(c, c.next),
                    pn(a, e, n, r, i, o),
                    void pn(c, e, n, r, i, o)
                }
                s = s.next
            }
            a = a.next
        } while (a !== t)
    }
    function yn(t, e, n, r) {
        var i, o, a, s, c, l = [];
        for (i = 0,
        o = e.length; i < o; i++)
            a = e[i] * r,
            s = i < o - 1 ? e[i + 1] * r : t.length,
            c = hn(t, a, s, r, !1),
            c === c.next && (c.steiner = !0),
            l.push(Tn(c));
        for (l.sort(_n),
        i = 0; i < l.length; i++)
            xn(l[i], n),
            n = dn(n, n.next);
        return n
    }
    function _n(t, e) {
        return t.x - e.x
    }
    function xn(t, e) {
        if (e = bn(t, e)) {
            var n = Dn(e, t);
            dn(n, n.next)
        }
    }
    function bn(t, e) {
        var n, r = e, i = t.x, o = t.y, a = -1 / 0;
        do {
            if (o <= r.y && o >= r.next.y && r.next.y !== r.y) {
                var s = r.x + (o - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                if (s <= i && s > a) {
                    if (a = s,
                    s === i) {
                        if (o === r.y)
                            return r;
                        if (o === r.next.y)
                            return r.next
                    }
                    n = r.x < r.next.x ? r : r.next
                }
            }
            r = r.next
        } while (r !== e);if (!n)
            return null;
        if (i === a)
            return n.prev;
        var c, l = n, u = n.x, h = n.y, d = 1 / 0;
        for (r = n.next; r !== l; )
            i >= r.x && r.x >= u && i !== r.x && Sn(o < h ? i : a, o, u, h, o < h ? a : i, o, r.x, r.y) && ((c = Math.abs(o - r.y) / (i - r.x)) < d || c === d && r.x > n.x) && On(r, t) && (n = r,
            d = c),
            r = r.next;
        return n
    }
    function wn(t, e, n, r) {
        var i = t;
        do {
            null === i.z && (i.z = En(i.x, i.y, e, n, r)),
            i.prevZ = i.prev,
            i.nextZ = i.next,
            i = i.next
        } while (i !== t);i.prevZ.nextZ = null,
        i.prevZ = null,
        Mn(i)
    }
    function Mn(t) {
        var e, n, r, i, o, a, s, c, l = 1;
        do {
            for (n = t,
            t = null,
            o = null,
            a = 0; n; ) {
                for (a++,
                r = n,
                s = 0,
                e = 0; e < l && (s++,
                r = r.nextZ); e++)
                    ;
                for (c = l; s > 0 || c > 0 && r; )
                    0 !== s && (0 === c || !r || n.z <= r.z) ? (i = n,
                    n = n.nextZ,
                    s--) : (i = r,
                    r = r.nextZ,
                    c--),
                    o ? o.nextZ = i : t = i,
                    i.prevZ = o,
                    o = i;
                n = r
            }
            o.nextZ = null,
            l *= 2
        } while (a > 1);return t
    }
    function En(t, e, n, r, i) {
        return t = 32767 * (t - n) * i,
        e = 32767 * (e - r) * i,
        t = 16711935 & (t | t << 8),
        t = 252645135 & (t | t << 4),
        t = 858993459 & (t | t << 2),
        t = 1431655765 & (t | t << 1),
        e = 16711935 & (e | e << 8),
        e = 252645135 & (e | e << 4),
        e = 858993459 & (e | e << 2),
        e = 1431655765 & (e | e << 1),
        t | e << 1
    }
    function Tn(t) {
        var e = t
          , n = t;
        do {
            e.x < n.x && (n = e),
            e = e.next
        } while (e !== t);return n
    }
    function Sn(t, e, n, r, i, o, a, s) {
        return (i - a) * (e - s) - (t - a) * (o - s) >= 0 && (t - a) * (r - s) - (n - a) * (e - s) >= 0 && (n - a) * (o - s) - (i - a) * (r - s) >= 0
    }
    function An(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !Rn(t, e) && On(t, e) && On(e, t) && In(t, e)
    }
    function Cn(t, e, n) {
        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)
    }
    function Pn(t, e) {
        return t.x === e.x && t.y === e.y
    }
    function Ln(t, e, n, r) {
        return !!(Pn(t, e) && Pn(n, r) || Pn(t, r) && Pn(n, e)) || Cn(t, e, n) > 0 != Cn(t, e, r) > 0 && Cn(n, r, t) > 0 != Cn(n, r, e) > 0
    }
    function Rn(t, e) {
        var n = t;
        do {
            if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Ln(n, n.next, t, e))
                return !0;
            n = n.next
        } while (n !== t);return !1
    }
    function On(t, e) {
        return Cn(t.prev, t, t.next) < 0 ? Cn(t, e, t.next) >= 0 && Cn(t, t.prev, e) >= 0 : Cn(t, e, t.prev) < 0 || Cn(t, t.next, e) < 0
    }
    function In(t, e) {
        var n = t
          , r = !1
          , i = (t.x + e.x) / 2
          , o = (t.y + e.y) / 2;
        do {
            n.y > o != n.next.y > o && n.next.y !== n.y && i < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (r = !r),
            n = n.next
        } while (n !== t);return r
    }
    function Dn(t, e) {
        var n = new jn(t.i,t.x,t.y)
          , r = new jn(e.i,e.x,e.y)
          , i = t.next
          , o = e.prev;
        return t.next = e,
        e.prev = t,
        n.next = i,
        i.prev = n,
        r.next = n,
        n.prev = r,
        o.next = r,
        r.prev = o,
        r
    }
    function Nn(t, e, n, r) {
        var i = new jn(t,e,n);
        return r ? (i.next = r.next,
        i.prev = r,
        r.next.prev = i,
        r.next = i) : (i.prev = i,
        i.next = i),
        i
    }
    function kn(t) {
        t.next.prev = t.prev,
        t.prev.next = t.next,
        t.prevZ && (t.prevZ.nextZ = t.nextZ),
        t.nextZ && (t.nextZ.prevZ = t.prevZ)
    }
    function jn(t, e, n) {
        this.i = t,
        this.x = e,
        this.y = n,
        this.prev = null,
        this.next = null,
        this.z = null,
        this.prevZ = null,
        this.nextZ = null,
        this.steiner = !1
    }
    function zn(t, e, n, r) {
        for (var i = 0, o = e, a = n - r; o < n; o += r)
            i += (t[a] - t[o]) * (t[o + 1] + t[a + 1]),
            a = o;
        return i
    }
    function Bn(t) {
        var e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop()
    }
    function Un(t, e) {
        for (var n = 0; n < e.length; n++)
            t.push(e[n].x),
            t.push(e[n].y)
    }
    function Fn(t, e) {
        S.call(this),
        this.type = "ExtrudeGeometry",
        this.parameters = {
            shapes: t,
            options: e
        },
        this.fromBufferGeometry(new Hn(t,e)),
        this.mergeVertices()
    }
    function Hn(t, e) {
        B.call(this),
        this.type = "ExtrudeBufferGeometry",
        this.parameters = {
            shapes: t,
            options: e
        },
        t = Array.isArray(t) ? t : [t];
        for (var n = this, r = [], o = [], a = 0, c = t.length; a < c; a++) {
            var l = t[a];
            !function(t) {
                function a(t, e, n) {
                    return e || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                    e.clone().multiplyScalar(n).add(t)
                }
                function c(t, e, n) {
                    var r, o, a, s = t.x - e.x, c = t.y - e.y, l = n.x - t.x, u = n.y - t.y, h = s * s + c * c, d = s * u - c * l;
                    if (Math.abs(d) > Number.EPSILON) {
                        var p = Math.sqrt(h)
                          , f = Math.sqrt(l * l + u * u)
                          , m = e.x - c / p
                          , v = e.y + s / p
                          , g = n.x - u / f
                          , y = n.y + l / f
                          , _ = ((g - m) * u - (y - v) * l) / (s * u - c * l);
                        r = m + s * _ - t.x,
                        o = v + c * _ - t.y;
                        var x = r * r + o * o;
                        if (x <= 2)
                            return new i(r,o);
                        a = Math.sqrt(x / 2)
                    } else {
                        var b = !1;
                        s > Number.EPSILON ? l > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? l < -Number.EPSILON && (b = !0) : Math.sign(c) === Math.sign(u) && (b = !0),
                        b ? (r = -c,
                        o = s,
                        a = Math.sqrt(h)) : (r = s,
                        o = c,
                        a = Math.sqrt(h / 2))
                    }
                    return new i(r / a,o / a)
                }
                function l(t, e) {
                    var n, r;
                    for (Y = t.length; --Y >= 0; ) {
                        n = Y,
                        (r = Y - 1) < 0 && (r = t.length - 1);
                        var i = 0
                          , o = w + 2 * A;
                        for (i = 0; i < o; i++) {
                            var a = W * i
                              , s = W * (i + 1);
                            d(e + n + a, e + r + a, e + r + s, e + n + s)
                        }
                    }
                }
                function u(t, e, n) {
                    x.push(t),
                    x.push(e),
                    x.push(n)
                }
                function h(t, e, i) {
                    p(t),
                    p(e),
                    p(i);
                    var o = r.length / 3
                      , a = P.generateTopUV(n, r, o - 3, o - 2, o - 1);
                    f(a[0]),
                    f(a[1]),
                    f(a[2])
                }
                function d(t, e, i, o) {
                    p(t),
                    p(e),
                    p(o),
                    p(e),
                    p(i),
                    p(o);
                    var a = r.length / 3
                      , s = P.generateSideWallUV(n, r, a - 6, a - 3, a - 2, a - 1);
                    f(s[0]),
                    f(s[1]),
                    f(s[3]),
                    f(s[1]),
                    f(s[2]),
                    f(s[3])
                }
                function p(t) {
                    r.push(x[3 * t + 0]),
                    r.push(x[3 * t + 1]),
                    r.push(x[3 * t + 2])
                }
                function f(t) {
                    o.push(t.x),
                    o.push(t.y)
                }
                var m, v, g, y, _, x = [], b = void 0 !== e.curveSegments ? e.curveSegments : 12, w = void 0 !== e.steps ? e.steps : 1, M = void 0 !== e.amount ? e.amount : 100, E = void 0 === e.bevelEnabled || e.bevelEnabled, T = void 0 !== e.bevelThickness ? e.bevelThickness : 6, S = void 0 !== e.bevelSize ? e.bevelSize : T - 2, A = void 0 !== e.bevelSegments ? e.bevelSegments : 3, C = e.extrudePath, P = void 0 !== e.UVGenerator ? e.UVGenerator : ic, L = !1;
                C && (m = C.getSpacedPoints(w),
                L = !0,
                E = !1,
                v = C.computeFrenetFrames(w, !1),
                g = new s,
                y = new s,
                _ = new s),
                E || (A = 0,
                T = 0,
                S = 0);
                var R, O, I, D = t.extractPoints(b), N = D.shape, k = D.holes;
                if (!rc.isClockWise(N))
                    for (N = N.reverse(),
                    O = 0,
                    I = k.length; O < I; O++)
                        R = k[O],
                        rc.isClockWise(R) && (k[O] = R.reverse());
                var j = rc.triangulateShape(N, k)
                  , z = N;
                for (O = 0,
                I = k.length; O < I; O++)
                    R = k[O],
                    N = N.concat(R);
                for (var B, U, F, H, G, V, W = N.length, q = j.length, X = [], Y = 0, $ = z.length, Z = $ - 1, J = Y + 1; Y < $; Y++,
                Z++,
                J++)
                    Z === $ && (Z = 0),
                    J === $ && (J = 0),
                    X[Y] = c(z[Y], z[Z], z[J]);
                var Q, K = [], tt = X.concat();
                for (O = 0,
                I = k.length; O < I; O++) {
                    for (R = k[O],
                    Q = [],
                    Y = 0,
                    $ = R.length,
                    Z = $ - 1,
                    J = Y + 1; Y < $; Y++,
                    Z++,
                    J++)
                        Z === $ && (Z = 0),
                        J === $ && (J = 0),
                        Q[Y] = c(R[Y], R[Z], R[J]);
                    K.push(Q),
                    tt = tt.concat(Q)
                }
                for (B = 0; B < A; B++) {
                    for (F = B / A,
                    H = T * Math.cos(F * Math.PI / 2),
                    U = S * Math.sin(F * Math.PI / 2),
                    Y = 0,
                    $ = z.length; Y < $; Y++)
                        G = a(z[Y], X[Y], U),
                        u(G.x, G.y, -H);
                    for (O = 0,
                    I = k.length; O < I; O++)
                        for (R = k[O],
                        Q = K[O],
                        Y = 0,
                        $ = R.length; Y < $; Y++)
                            G = a(R[Y], Q[Y], U),
                            u(G.x, G.y, -H)
                }
                for (U = S,
                Y = 0; Y < W; Y++)
                    G = E ? a(N[Y], tt[Y], U) : N[Y],
                    L ? (y.copy(v.normals[0]).multiplyScalar(G.x),
                    g.copy(v.binormals[0]).multiplyScalar(G.y),
                    _.copy(m[0]).add(y).add(g),
                    u(_.x, _.y, _.z)) : u(G.x, G.y, 0);
                var et;
                for (et = 1; et <= w; et++)
                    for (Y = 0; Y < W; Y++)
                        G = E ? a(N[Y], tt[Y], U) : N[Y],
                        L ? (y.copy(v.normals[et]).multiplyScalar(G.x),
                        g.copy(v.binormals[et]).multiplyScalar(G.y),
                        _.copy(m[et]).add(y).add(g),
                        u(_.x, _.y, _.z)) : u(G.x, G.y, M / w * et);
                for (B = A - 1; B >= 0; B--) {
                    for (F = B / A,
                    H = T * Math.cos(F * Math.PI / 2),
                    U = S * Math.sin(F * Math.PI / 2),
                    Y = 0,
                    $ = z.length; Y < $; Y++)
                        G = a(z[Y], X[Y], U),
                        u(G.x, G.y, M + H);
                    for (O = 0,
                    I = k.length; O < I; O++)
                        for (R = k[O],
                        Q = K[O],
                        Y = 0,
                        $ = R.length; Y < $; Y++)
                            G = a(R[Y], Q[Y], U),
                            L ? u(G.x, G.y + m[w - 1].y, m[w - 1].x + H) : u(G.x, G.y, M + H)
                }
                !function() {
                    var t = r.length / 3;
                    if (E) {
                        var e = 0
                          , i = W * e;
                        for (Y = 0; Y < q; Y++)
                            V = j[Y],
                            h(V[2] + i, V[1] + i, V[0] + i);
                        for (e = w + 2 * A,
                        i = W * e,
                        Y = 0; Y < q; Y++)
                            V = j[Y],
                            h(V[0] + i, V[1] + i, V[2] + i)
                    } else {
                        for (Y = 0; Y < q; Y++)
                            V = j[Y],
                            h(V[2], V[1], V[0]);
                        for (Y = 0; Y < q; Y++)
                            V = j[Y],
                            h(V[0] + W * w, V[1] + W * w, V[2] + W * w)
                    }
                    n.addGroup(t, r.length / 3 - t, 0)
                }(),
                function() {
                    var t = r.length / 3
                      , e = 0;
                    for (l(z, e),
                    e += z.length,
                    O = 0,
                    I = k.length; O < I; O++)
                        R = k[O],
                        l(R, e),
                        e += R.length;
                    n.addGroup(t, r.length / 3 - t, 1)
                }()
            }(l)
        }
        this.addAttribute("position", new N(r,3)),
        this.addAttribute("uv", new N(o,2)),
        this.computeVertexNormals()
    }
    function Gn(t, e) {
        S.call(this),
        this.type = "TextGeometry",
        this.parameters = {
            text: t,
            parameters: e
        },
        this.fromBufferGeometry(new Vn(t,e)),
        this.mergeVertices()
    }
    function Vn(t, e) {
        e = e || {};
        var n = e.font;
        if (!n || !n.isFont)
            return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
            new S;
        var r = n.generateShapes(t, e.size, e.curveSegments);
        e.amount = void 0 !== e.height ? e.height : 50,
        void 0 === e.bevelThickness && (e.bevelThickness = 10),
        void 0 === e.bevelSize && (e.bevelSize = 8),
        void 0 === e.bevelEnabled && (e.bevelEnabled = !1),
        Hn.call(this, r, e),
        this.type = "TextBufferGeometry"
    }
    function Wn(t, e, n, r, i, o, a) {
        S.call(this),
        this.type = "SphereGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: o,
            thetaLength: a
        },
        this.fromBufferGeometry(new qn(t,e,n,r,i,o,a)),
        this.mergeVertices()
    }
    function qn(t, e, n, r, i, o, a) {
        B.call(this),
        this.type = "SphereBufferGeometry",
        this.parameters = {
            radius: t,
            widthSegments: e,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: o,
            thetaLength: a
        },
        t = t || 1,
        e = Math.max(3, Math.floor(e) || 8),
        n = Math.max(2, Math.floor(n) || 6),
        r = void 0 !== r ? r : 0,
        i = void 0 !== i ? i : 2 * Math.PI,
        o = void 0 !== o ? o : 0,
        a = void 0 !== a ? a : Math.PI;
        var c, l, u = o + a, h = 0, d = [], p = new s, f = new s, m = [], v = [], g = [], y = [];
        for (l = 0; l <= n; l++) {
            var _ = []
              , x = l / n;
            for (c = 0; c <= e; c++) {
                var b = c / e;
                p.x = -t * Math.cos(r + b * i) * Math.sin(o + x * a),
                p.y = t * Math.cos(o + x * a),
                p.z = t * Math.sin(r + b * i) * Math.sin(o + x * a),
                v.push(p.x, p.y, p.z),
                f.set(p.x, p.y, p.z).normalize(),
                g.push(f.x, f.y, f.z),
                y.push(b, 1 - x),
                _.push(h++)
            }
            d.push(_)
        }
        for (l = 0; l < n; l++)
            for (c = 0; c < e; c++) {
                var w = d[l][c + 1]
                  , M = d[l][c]
                  , E = d[l + 1][c]
                  , T = d[l + 1][c + 1];
                (0 !== l || o > 0) && m.push(w, M, T),
                (l !== n - 1 || u < Math.PI) && m.push(M, E, T)
            }
        this.setIndex(m),
        this.addAttribute("position", new N(v,3)),
        this.addAttribute("normal", new N(g,3)),
        this.addAttribute("uv", new N(y,2))
    }
    function Xn(t, e, n, r, i, o) {
        S.call(this),
        this.type = "RingGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: o
        },
        this.fromBufferGeometry(new Yn(t,e,n,r,i,o)),
        this.mergeVertices()
    }
    function Yn(t, e, n, r, o, a) {
        B.call(this),
        this.type = "RingBufferGeometry",
        this.parameters = {
            innerRadius: t,
            outerRadius: e,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: o,
            thetaLength: a
        },
        t = t || .5,
        e = e || 1,
        o = void 0 !== o ? o : 0,
        a = void 0 !== a ? a : 2 * Math.PI,
        n = void 0 !== n ? Math.max(3, n) : 8,
        r = void 0 !== r ? Math.max(1, r) : 1;
        var c, l, u, h = [], d = [], p = [], f = [], m = t, v = (e - t) / r, g = new s, y = new i;
        for (l = 0; l <= r; l++) {
            for (u = 0; u <= n; u++)
                c = o + u / n * a,
                g.x = m * Math.cos(c),
                g.y = m * Math.sin(c),
                d.push(g.x, g.y, g.z),
                p.push(0, 0, 1),
                y.x = (g.x / e + 1) / 2,
                y.y = (g.y / e + 1) / 2,
                f.push(y.x, y.y);
            m += v
        }
        for (l = 0; l < r; l++) {
            var _ = l * (n + 1);
            for (u = 0; u < n; u++) {
                c = u + _;
                var x = c
                  , b = c + n + 1
                  , w = c + n + 2
                  , M = c + 1;
                h.push(x, b, M),
                h.push(b, w, M)
            }
        }
        this.setIndex(h),
        this.addAttribute("position", new N(d,3)),
        this.addAttribute("normal", new N(p,3)),
        this.addAttribute("uv", new N(f,2))
    }
    function $n(t, e, n, r) {
        S.call(this),
        this.type = "LatheGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: r
        },
        this.fromBufferGeometry(new Zn(t,e,n,r)),
        this.mergeVertices()
    }
    function Zn(t, e, n, r) {
        B.call(this),
        this.type = "LatheBufferGeometry",
        this.parameters = {
            points: t,
            segments: e,
            phiStart: n,
            phiLength: r
        },
        e = Math.floor(e) || 12,
        n = n || 0,
        r = r || 2 * Math.PI,
        r = ks.clamp(r, 0, 2 * Math.PI);
        var o, a, c, l = [], u = [], h = [], d = 1 / e, p = new s, f = new i;
        for (a = 0; a <= e; a++) {
            var m = n + a * d * r
              , v = Math.sin(m)
              , g = Math.cos(m);
            for (c = 0; c <= t.length - 1; c++)
                p.x = t[c].x * v,
                p.y = t[c].y,
                p.z = t[c].x * g,
                u.push(p.x, p.y, p.z),
                f.x = a / e,
                f.y = c / (t.length - 1),
                h.push(f.x, f.y)
        }
        for (a = 0; a < e; a++)
            for (c = 0; c < t.length - 1; c++) {
                o = c + a * t.length;
                var y = o
                  , _ = o + t.length
                  , x = o + t.length + 1
                  , b = o + 1;
                l.push(y, _, b),
                l.push(_, x, b)
            }
        if (this.setIndex(l),
        this.addAttribute("position", new N(u,3)),
        this.addAttribute("uv", new N(h,2)),
        this.computeVertexNormals(),
        r === 2 * Math.PI) {
            var w = this.attributes.normal.array
              , M = new s
              , E = new s
              , T = new s;
            for (o = e * t.length * 3,
            a = 0,
            c = 0; a < t.length; a++,
            c += 3)
                M.x = w[c + 0],
                M.y = w[c + 1],
                M.z = w[c + 2],
                E.x = w[o + c + 0],
                E.y = w[o + c + 1],
                E.z = w[o + c + 2],
                T.addVectors(M, E).normalize(),
                w[c + 0] = w[o + c + 0] = T.x,
                w[c + 1] = w[o + c + 1] = T.y,
                w[c + 2] = w[o + c + 2] = T.z
        }
    }
    function Jn(t, e) {
        S.call(this),
        this.type = "ShapeGeometry",
        "object" == typeof e && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
        e = e.curveSegments),
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        this.fromBufferGeometry(new Qn(t,e)),
        this.mergeVertices()
    }
    function Qn(t, e) {
        function n(t) {
            var n, s, l, u = i.length / 3, h = t.extractPoints(e), d = h.shape, p = h.holes;
            if (!1 === rc.isClockWise(d))
                for (d = d.reverse(),
                n = 0,
                s = p.length; n < s; n++)
                    l = p[n],
                    !0 === rc.isClockWise(l) && (p[n] = l.reverse());
            var f = rc.triangulateShape(d, p);
            for (n = 0,
            s = p.length; n < s; n++)
                l = p[n],
                d = d.concat(l);
            for (n = 0,
            s = d.length; n < s; n++) {
                var m = d[n];
                i.push(m.x, m.y, 0),
                o.push(0, 0, 1),
                a.push(m.x, m.y)
            }
            for (n = 0,
            s = f.length; n < s; n++) {
                var v = f[n]
                  , g = v[0] + u
                  , y = v[1] + u
                  , _ = v[2] + u;
                r.push(g, y, _),
                c += 3
            }
        }
        B.call(this),
        this.type = "ShapeBufferGeometry",
        this.parameters = {
            shapes: t,
            curveSegments: e
        },
        e = e || 12;
        var r = []
          , i = []
          , o = []
          , a = []
          , s = 0
          , c = 0;
        if (!1 === Array.isArray(t))
            n(t);
        else
            for (var l = 0; l < t.length; l++)
                n(t[l]),
                this.addGroup(s, c, l),
                s += c,
                c = 0;
        this.setIndex(r),
        this.addAttribute("position", new N(i,3)),
        this.addAttribute("normal", new N(o,3)),
        this.addAttribute("uv", new N(a,2))
    }
    function Kn(t, e) {
        if (e.shapes = [],
        Array.isArray(t))
            for (var n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.shapes.push(i.uuid)
            }
        else
            e.shapes.push(t.uuid);
        return e
    }
    function tr(t, e) {
        B.call(this),
        this.type = "EdgesGeometry",
        this.parameters = {
            thresholdAngle: e
        },
        e = void 0 !== e ? e : 1;
        var n, r, i, o, a = [], s = Math.cos(ks.DEG2RAD * e), c = [0, 0], l = {}, u = ["a", "b", "c"];
        t.isBufferGeometry ? (o = new S,
        o.fromBufferGeometry(t)) : o = t.clone(),
        o.mergeVertices(),
        o.computeFaceNormals();
        for (var h = o.vertices, d = o.faces, p = 0, f = d.length; p < f; p++)
            for (var m = d[p], v = 0; v < 3; v++)
                n = m[u[v]],
                r = m[u[(v + 1) % 3]],
                c[0] = Math.min(n, r),
                c[1] = Math.max(n, r),
                i = c[0] + "," + c[1],
                void 0 === l[i] ? l[i] = {
                    index1: c[0],
                    index2: c[1],
                    face1: p,
                    face2: void 0
                } : l[i].face2 = p;
        for (i in l) {
            var g = l[i];
            if (void 0 === g.face2 || d[g.face1].normal.dot(d[g.face2].normal) <= s) {
                var y = h[g.index1];
                a.push(y.x, y.y, y.z),
                y = h[g.index2],
                a.push(y.x, y.y, y.z)
            }
        }
        this.addAttribute("position", new N(a,3))
    }
    function er(t, e, n, r, i, o, a, s) {
        S.call(this),
        this.type = "CylinderGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: o,
            thetaStart: a,
            thetaLength: s
        },
        this.fromBufferGeometry(new nr(t,e,n,r,i,o,a,s)),
        this.mergeVertices()
    }
    function nr(t, e, n, r, o, a, c, l) {
        function u(n) {
            var o, a, u, g = new i, x = new s, b = 0, w = !0 === n ? t : e, M = !0 === n ? 1 : -1;
            for (a = v,
            o = 1; o <= r; o++)
                p.push(0, y * M, 0),
                f.push(0, M, 0),
                m.push(.5, .5),
                v++;
            for (u = v,
            o = 0; o <= r; o++) {
                var E = o / r
                  , T = E * l + c
                  , S = Math.cos(T)
                  , A = Math.sin(T);
                x.x = w * A,
                x.y = y * M,
                x.z = w * S,
                p.push(x.x, x.y, x.z),
                f.push(0, M, 0),
                g.x = .5 * S + .5,
                g.y = .5 * A * M + .5,
                m.push(g.x, g.y),
                v++
            }
            for (o = 0; o < r; o++) {
                var C = a + o
                  , P = u + o;
                !0 === n ? d.push(P, P + 1, C) : d.push(P + 1, P, C),
                b += 3
            }
            h.addGroup(_, b, !0 === n ? 1 : 2),
            _ += b
        }
        B.call(this),
        this.type = "CylinderBufferGeometry",
        this.parameters = {
            radiusTop: t,
            radiusBottom: e,
            height: n,
            radialSegments: r,
            heightSegments: o,
            openEnded: a,
            thetaStart: c,
            thetaLength: l
        };
        var h = this;
        t = void 0 !== t ? t : 1,
        e = void 0 !== e ? e : 1,
        n = n || 1,
        r = Math.floor(r) || 8,
        o = Math.floor(o) || 1,
        a = void 0 !== a && a,
        c = void 0 !== c ? c : 0,
        l = void 0 !== l ? l : 2 * Math.PI;
        var d = []
          , p = []
          , f = []
          , m = []
          , v = 0
          , g = []
          , y = n / 2
          , _ = 0;
        !function() {
            var i, a, u = new s, x = new s, b = 0, w = (e - t) / n;
            for (a = 0; a <= o; a++) {
                var M = []
                  , E = a / o
                  , T = E * (e - t) + t;
                for (i = 0; i <= r; i++) {
                    var S = i / r
                      , A = S * l + c
                      , C = Math.sin(A)
                      , P = Math.cos(A);
                    x.x = T * C,
                    x.y = -E * n + y,
                    x.z = T * P,
                    p.push(x.x, x.y, x.z),
                    u.set(C, w, P).normalize(),
                    f.push(u.x, u.y, u.z),
                    m.push(S, 1 - E),
                    M.push(v++)
                }
                g.push(M)
            }
            for (i = 0; i < r; i++)
                for (a = 0; a < o; a++) {
                    var L = g[a][i]
                      , R = g[a + 1][i]
                      , O = g[a + 1][i + 1]
                      , I = g[a][i + 1];
                    d.push(L, R, I),
                    d.push(R, O, I),
                    b += 6
                }
            h.addGroup(_, b, 0),
            _ += b
        }(),
        !1 === a && (t > 0 && u(!0),
        e > 0 && u(!1)),
        this.setIndex(d),
        this.addAttribute("position", new N(p,3)),
        this.addAttribute("normal", new N(f,3)),
        this.addAttribute("uv", new N(m,2))
    }
    function rr(t, e, n, r, i, o, a) {
        er.call(this, 0, t, e, n, r, i, o, a),
        this.type = "ConeGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: o,
            thetaLength: a
        }
    }
    function ir(t, e, n, r, i, o, a) {
        nr.call(this, 0, t, e, n, r, i, o, a),
        this.type = "ConeBufferGeometry",
        this.parameters = {
            radius: t,
            height: e,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: o,
            thetaLength: a
        }
    }
    function or(t, e, n, r) {
        S.call(this),
        this.type = "CircleGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: r
        },
        this.fromBufferGeometry(new ar(t,e,n,r)),
        this.mergeVertices()
    }
    function ar(t, e, n, r) {
        B.call(this),
        this.type = "CircleBufferGeometry",
        this.parameters = {
            radius: t,
            segments: e,
            thetaStart: n,
            thetaLength: r
        },
        t = t || 1,
        e = void 0 !== e ? Math.max(3, e) : 8,
        n = void 0 !== n ? n : 0,
        r = void 0 !== r ? r : 2 * Math.PI;
        var o, a, c = [], l = [], u = [], h = [], d = new s, p = new i;
        for (l.push(0, 0, 0),
        u.push(0, 0, 1),
        h.push(.5, .5),
        a = 0,
        o = 3; a <= e; a++,
        o += 3) {
            var f = n + a / e * r;
            d.x = t * Math.cos(f),
            d.y = t * Math.sin(f),
            l.push(d.x, d.y, d.z),
            u.push(0, 0, 1),
            p.x = (l[o] / t + 1) / 2,
            p.y = (l[o + 1] / t + 1) / 2,
            h.push(p.x, p.y)
        }
        for (o = 1; o <= e; o++)
            c.push(o, o + 1, 0);
        this.setIndex(c),
        this.addAttribute("position", new N(l,3)),
        this.addAttribute("normal", new N(u,3)),
        this.addAttribute("uv", new N(h,2))
    }
    function sr(t) {
        V.call(this),
        this.type = "ShadowMaterial",
        this.color = new y(0),
        this.transparent = !0,
        this.setValues(t)
    }
    function cr(t) {
        q.call(this, t),
        this.type = "RawShaderMaterial"
    }
    function lr(t) {
        V.call(this),
        this.defines = {
            STANDARD: ""
        },
        this.type = "MeshStandardMaterial",
        this.color = new y(16777215),
        this.roughness = .5,
        this.metalness = .5,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.roughnessMap = null,
        this.metalnessMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.envMapIntensity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function ur(t) {
        lr.call(this),
        this.defines = {
            PHYSICAL: ""
        },
        this.type = "MeshPhysicalMaterial",
        this.reflectivity = .5,
        this.clearCoat = 0,
        this.clearCoatRoughness = 0,
        this.setValues(t)
    }
    function hr(t) {
        V.call(this),
        this.type = "MeshPhongMaterial",
        this.color = new y(16777215),
        this.specular = new y(1118481),
        this.shininess = 30,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ua,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function dr(t) {
        hr.call(this),
        this.defines = {
            TOON: ""
        },
        this.type = "MeshToonMaterial",
        this.gradientMap = null,
        this.setValues(t)
    }
    function pr(t) {
        V.call(this),
        this.type = "MeshNormalMaterial",
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalScale = new i(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function fr(t) {
        V.call(this),
        this.type = "MeshLambertMaterial",
        this.color = new y(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new y(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ua,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(t)
    }
    function mr(t) {
        Ne.call(this),
        this.type = "LineDashedMaterial",
        this.scale = 1,
        this.dashSize = 3,
        this.gapSize = 1,
        this.setValues(t)
    }
    function vr(t, e, n) {
        var r = this
          , i = !1
          , o = 0
          , a = 0
          , s = void 0;
        this.onStart = void 0,
        this.onLoad = t,
        this.onProgress = e,
        this.onError = n,
        this.itemStart = function(t) {
            a++,
            !1 === i && void 0 !== r.onStart && r.onStart(t, o, a),
            i = !0
        }
        ,
        this.itemEnd = function(t) {
            o++,
            void 0 !== r.onProgress && r.onProgress(t, o, a),
            o === a && (i = !1,
            void 0 !== r.onLoad && r.onLoad())
        }
        ,
        this.itemError = function(t) {
            void 0 !== r.onError && r.onError(t)
        }
        ,
        this.resolveURL = function(t) {
            return s ? s(t) : t
        }
        ,
        this.setURLModifier = function(t) {
            return s = t,
            this
        }
    }
    function gr(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function yr(t) {
        this.manager = void 0 !== t ? t : cc,
        this._parser = null
    }
    function _r(t) {
        this.manager = void 0 !== t ? t : cc,
        this._parser = null
    }
    function xr(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function br(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function wr(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function Mr() {
        this.type = "Curve",
        this.arcLengthDivisions = 200
    }
    function Er(t, e, n, r, i, o, a, s) {
        Mr.call(this),
        this.type = "EllipseCurve",
        this.aX = t || 0,
        this.aY = e || 0,
        this.xRadius = n || 1,
        this.yRadius = r || 1,
        this.aStartAngle = i || 0,
        this.aEndAngle = o || 2 * Math.PI,
        this.aClockwise = a || !1,
        this.aRotation = s || 0
    }
    function Tr(t, e, n, r, i, o) {
        Er.call(this, t, e, n, n, r, i, o),
        this.type = "ArcCurve"
    }
    function Sr() {
        function t(t, o, a, s) {
            e = t,
            n = a,
            r = -3 * t + 3 * o - 2 * a - s,
            i = 2 * t - 2 * o + a + s
        }
        var e = 0
          , n = 0
          , r = 0
          , i = 0;
        return {
            initCatmullRom: function(e, n, r, i, o) {
                t(n, r, o * (r - e), o * (i - n))
            },
            initNonuniformCatmullRom: function(e, n, r, i, o, a, s) {
                var c = (n - e) / o - (r - e) / (o + a) + (r - n) / a
                  , l = (r - n) / a - (i - n) / (a + s) + (i - r) / s;
                c *= a,
                l *= a,
                t(n, r, c, l)
            },
            calc: function(t) {
                var o = t * t;
                return e + n * t + r * o + i * (o * t)
            }
        }
    }
    function Ar(t, e, n, r) {
        Mr.call(this),
        this.type = "CatmullRomCurve3",
        this.points = t || [],
        this.closed = e || !1,
        this.curveType = n || "centripetal",
        this.tension = r || .5
    }
    function Cr(t, e, n, r, i) {
        var o = .5 * (r - e)
          , a = .5 * (i - n)
          , s = t * t;
        return (2 * n - 2 * r + o + a) * (t * s) + (-3 * n + 3 * r - 2 * o - a) * s + o * t + n
    }
    function Pr(t, e) {
        var n = 1 - t;
        return n * n * e
    }
    function Lr(t, e) {
        return 2 * (1 - t) * t * e
    }
    function Rr(t, e) {
        return t * t * e
    }
    function Or(t, e, n, r) {
        return Pr(t, e) + Lr(t, n) + Rr(t, r)
    }
    function Ir(t, e) {
        var n = 1 - t;
        return n * n * n * e
    }
    function Dr(t, e) {
        var n = 1 - t;
        return 3 * n * n * t * e
    }
    function Nr(t, e) {
        return 3 * (1 - t) * t * t * e
    }
    function kr(t, e) {
        return t * t * t * e
    }
    function jr(t, e, n, r, i) {
        return Ir(t, e) + Dr(t, n) + Nr(t, r) + kr(t, i)
    }
    function zr(t, e, n, r) {
        Mr.call(this),
        this.type = "CubicBezierCurve",
        this.v0 = t || new i,
        this.v1 = e || new i,
        this.v2 = n || new i,
        this.v3 = r || new i
    }
    function Br(t, e, n, r) {
        Mr.call(this),
        this.type = "CubicBezierCurve3",
        this.v0 = t || new s,
        this.v1 = e || new s,
        this.v2 = n || new s,
        this.v3 = r || new s
    }
    function Ur(t, e) {
        Mr.call(this),
        this.type = "LineCurve",
        this.v1 = t || new i,
        this.v2 = e || new i
    }
    function Fr(t, e) {
        Mr.call(this),
        this.type = "LineCurve3",
        this.v1 = t || new s,
        this.v2 = e || new s
    }
    function Hr(t, e, n) {
        Mr.call(this),
        this.type = "QuadraticBezierCurve",
        this.v0 = t || new i,
        this.v1 = e || new i,
        this.v2 = n || new i
    }
    function Gr(t, e, n) {
        Mr.call(this),
        this.type = "QuadraticBezierCurve3",
        this.v0 = t || new s,
        this.v1 = e || new s,
        this.v2 = n || new s
    }
    function Vr(t) {
        Mr.call(this),
        this.type = "SplineCurve",
        this.points = t || []
    }
    function Wr() {
        Mr.call(this),
        this.type = "CurvePath",
        this.curves = [],
        this.autoClose = !1
    }
    function qr(t) {
        Wr.call(this),
        this.type = "Path",
        this.currentPoint = new i,
        t && this.setFromPoints(t)
    }
    function Xr(t) {
        qr.call(this, t),
        this.uuid = ks.generateUUID(),
        this.type = "Shape",
        this.holes = []
    }
    function Yr(t, e) {
        w.call(this),
        this.type = "Light",
        this.color = new y(t),
        this.intensity = void 0 !== e ? e : 1,
        this.receiveShadow = void 0
    }
    function $r(t, e, n) {
        Yr.call(this, t, n),
        this.type = "HemisphereLight",
        this.castShadow = void 0,
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.groundColor = new y(e)
    }
    function Zr(t) {
        this.camera = t,
        this.bias = 0,
        this.radius = 1,
        this.mapSize = new i(512,512),
        this.map = null,
        this.matrix = new o
    }
    function Jr() {
        Zr.call(this, new we(50,1,.5,500))
    }
    function Qr(t, e, n, r, i, o) {
        Yr.call(this, t, e),
        this.type = "SpotLight",
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.target = new w,
        Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / Math.PI
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.angle = void 0 !== r ? r : Math.PI / 3,
        this.penumbra = void 0 !== i ? i : 0,
        this.decay = void 0 !== o ? o : 1,
        this.shadow = new Jr
    }
    function Kr(t, e, n, r) {
        Yr.call(this, t, e),
        this.type = "PointLight",
        Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(t) {
                this.intensity = t / (4 * Math.PI)
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.decay = void 0 !== r ? r : 1,
        this.shadow = new Zr(new we(90,1,.5,500))
    }
    function ti() {
        Zr.call(this, new E(-5,5,5,-5,.5,500))
    }
    function ei(t, e) {
        Yr.call(this, t, e),
        this.type = "DirectionalLight",
        this.position.copy(w.DefaultUp),
        this.updateMatrix(),
        this.target = new w,
        this.shadow = new ti
    }
    function ni(t, e) {
        Yr.call(this, t, e),
        this.type = "AmbientLight",
        this.castShadow = void 0
    }
    function ri(t, e, n, r) {
        Yr.call(this, t, e),
        this.type = "RectAreaLight",
        this.width = void 0 !== n ? n : 10,
        this.height = void 0 !== r ? r : 10
    }
    function ii(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function oi(t, e, n) {
        fi.call(this, t, e, n)
    }
    function ai(t, e, n, r) {
        this.parameterPositions = t,
        this._cachedIndex = 0,
        this.resultBuffer = void 0 !== r ? r : new e.constructor(n),
        this.sampleValues = e,
        this.valueSize = n
    }
    function si(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function ci(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function li(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function ui(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function hi(t, e, n, r) {
        ai.call(this, t, e, n, r),
        this._weightPrev = -0,
        this._offsetPrev = -0,
        this._weightNext = -0,
        this._offsetNext = -0
    }
    function di(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function pi(t, e, n, r) {
        ai.call(this, t, e, n, r)
    }
    function fi(t, e, n, r) {
        if (void 0 === t)
            throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === e || 0 === e.length)
            throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
        this.name = t,
        this.times = mc.convertArray(e, this.TimeBufferType),
        this.values = mc.convertArray(n, this.ValueBufferType),
        this.setInterpolation(r || this.DefaultInterpolation),
        this.validate(),
        this.optimize()
    }
    function mi(t, e, n, r) {
        fi.call(this, t, e, n, r)
    }
    function vi(t, e, n) {
        this.name = t,
        this.tracks = n,
        this.duration = void 0 !== e ? e : -1,
        this.uuid = ks.generateUUID(),
        this.duration < 0 && this.resetDuration(),
        this.optimize()
    }
    function gi(t) {
        this.manager = void 0 !== t ? t : cc,
        this.textures = {}
    }
    function yi(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function _i() {}
    function xi(t) {
        "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
        t = void 0),
        this.manager = void 0 !== t ? t : cc,
        this.withCredentials = !1
    }
    function bi(t) {
        this.manager = void 0 !== t ? t : cc,
        this.texturePath = ""
    }
    function wi(t) {
        "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
        "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
        this.manager = void 0 !== t ? t : cc,
        this.options = void 0
    }
    function Mi() {
        this.type = "ShapePath",
        this.color = new y,
        this.subPaths = [],
        this.currentPath = null
    }
    function Ei(t) {
        this.type = "Font",
        this.data = t
    }
    function Ti(t, e, n, r) {
        for (var i = String(t).split(""), o = e / r.resolution, a = (r.boundingBox.yMax - r.boundingBox.yMin + r.underlineThickness) * o, s = [], c = 0, l = 0, u = 0; u < i.length; u++) {
            var h = i[u];
            if ("\n" === h)
                c = 0,
                l -= a;
            else {
                var d = Si(h, n, o, c, l, r);
                c += d.offsetX,
                s.push(d.path)
            }
        }
        return s
    }
    function Si(t, e, n, r, i, o) {
        var a = o.glyphs[t] || o.glyphs["?"];
        if (a) {
            var s, c, l, u, h, d, p, f, m = new Mi;
            if (a.o)
                for (var v = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), g = 0, y = v.length; g < y; ) {
                    var _ = v[g++];
                    switch (_) {
                    case "m":
                        s = v[g++] * n + r,
                        c = v[g++] * n + i,
                        m.moveTo(s, c);
                        break;
                    case "l":
                        s = v[g++] * n + r,
                        c = v[g++] * n + i,
                        m.lineTo(s, c);
                        break;
                    case "q":
                        l = v[g++] * n + r,
                        u = v[g++] * n + i,
                        h = v[g++] * n + r,
                        d = v[g++] * n + i,
                        m.quadraticCurveTo(h, d, l, u);
                        break;
                    case "b":
                        l = v[g++] * n + r,
                        u = v[g++] * n + i,
                        h = v[g++] * n + r,
                        d = v[g++] * n + i,
                        p = v[g++] * n + r,
                        f = v[g++] * n + i,
                        m.bezierCurveTo(h, d, p, f, l, u)
                    }
                }
            return {
                offsetX: a.ha * n,
                path: m
            }
        }
    }
    function Ai(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function Ci(t) {
        this.manager = void 0 !== t ? t : cc
    }
    function Pi() {
        this.type = "StereoCamera",
        this.aspect = 1,
        this.eyeSep = .064,
        this.cameraL = new we,
        this.cameraL.layers.enable(1),
        this.cameraL.matrixAutoUpdate = !1,
        this.cameraR = new we,
        this.cameraR.layers.enable(2),
        this.cameraR.matrixAutoUpdate = !1
    }
    function Li(t, e, n) {
        w.call(this),
        this.type = "CubeCamera";
        var r = new we(90,1,t,e);
        r.up.set(0, -1, 0),
        r.lookAt(new s(1,0,0)),
        this.add(r);
        var i = new we(90,1,t,e);
        i.up.set(0, -1, 0),
        i.lookAt(new s(-1,0,0)),
        this.add(i);
        var o = new we(90,1,t,e);
        o.up.set(0, 0, 1),
        o.lookAt(new s(0,1,0)),
        this.add(o);
        var a = new we(90,1,t,e);
        a.up.set(0, 0, -1),
        a.lookAt(new s(0,-1,0)),
        this.add(a);
        var c = new we(90,1,t,e);
        c.up.set(0, -1, 0),
        c.lookAt(new s(0,0,1)),
        this.add(c);
        var l = new we(90,1,t,e);
        l.up.set(0, -1, 0),
        l.lookAt(new s(0,0,-1)),
        this.add(l);
        var u = {
            format: Xa,
            magFilter: Ra,
            minFilter: Ra
        };
        this.renderTarget = new d(n,n,u),
        this.renderTarget.texture.name = "CubeCamera",
        this.update = function(t, e) {
            null === this.parent && this.updateMatrixWorld();
            var n = this.renderTarget
              , s = n.texture.generateMipmaps;
            n.texture.generateMipmaps = !1,
            n.activeCubeFace = 0,
            t.render(e, r, n),
            n.activeCubeFace = 1,
            t.render(e, i, n),
            n.activeCubeFace = 2,
            t.render(e, o, n),
            n.activeCubeFace = 3,
            t.render(e, a, n),
            n.activeCubeFace = 4,
            t.render(e, c, n),
            n.texture.generateMipmaps = s,
            n.activeCubeFace = 5,
            t.render(e, l, n),
            t.setRenderTarget(null)
        }
        ,
        this.clear = function(t, e, n, r) {
            for (var i = this.renderTarget, o = 0; o < 6; o++)
                i.activeCubeFace = o,
                t.setRenderTarget(i),
                t.clear(e, n, r);
            t.setRenderTarget(null)
        }
    }
    function Ri() {
        w.call(this),
        this.type = "AudioListener",
        this.context = wc.getContext(),
        this.gain = this.context.createGain(),
        this.gain.connect(this.context.destination),
        this.filter = null
    }
    function Oi(t) {
        w.call(this),
        this.type = "Audio",
        this.context = t.context,
        this.gain = this.context.createGain(),
        this.gain.connect(t.getInput()),
        this.autoplay = !1,
        this.buffer = null,
        this.loop = !1,
        this.startTime = 0,
        this.offset = 0,
        this.playbackRate = 1,
        this.isPlaying = !1,
        this.hasPlaybackControl = !0,
        this.sourceType = "empty",
        this.filters = []
    }
    function Ii(t) {
        Oi.call(this, t),
        this.panner = this.context.createPanner(),
        this.panner.connect(this.gain)
    }
    function Di(t, e) {
        this.analyser = t.context.createAnalyser(),
        this.analyser.fftSize = void 0 !== e ? e : 2048,
        this.data = new Uint8Array(this.analyser.frequencyBinCount),
        t.getOutput().connect(this.analyser)
    }
    function Ni(t, e, n) {
        this.binding = t,
        this.valueSize = n;
        var r, i = Float64Array;
        switch (e) {
        case "quaternion":
            r = this._slerp;
            break;
        case "string":
        case "bool":
            i = Array,
            r = this._select;
            break;
        default:
            r = this._lerp
        }
        this.buffer = new i(4 * n),
        this._mixBufferRegion = r,
        this.cumulativeWeight = 0,
        this.useCount = 0,
        this.referenceCount = 0
    }
    function ki(t, e, n) {
        var r = n || ji.parseTrackName(e);
        this._targetGroup = t,
        this._bindings = t.subscribe_(e, r)
    }
    function ji(t, e, n) {
        this.path = e,
        this.parsedPath = n || ji.parseTrackName(e),
        this.node = ji.findNode(t, this.parsedPath.nodeName) || t,
        this.rootNode = t
    }
    function zi() {
        this.uuid = ks.generateUUID(),
        this._objects = Array.prototype.slice.call(arguments),
        this.nCachedObjects_ = 0;
        var t = {};
        this._indicesByUUID = t;
        for (var e = 0, n = arguments.length; e !== n; ++e)
            t[arguments[e].uuid] = e;
        this._paths = [],
        this._parsedPaths = [],
        this._bindings = [],
        this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects: {
                get total() {
                    return r._objects.length
                },
                get inUse() {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return r._bindings.length
            }
        }
    }
    function Bi(t, e, n) {
        this._mixer = t,
        this._clip = e,
        this._localRoot = n || null;
        for (var r = e.tracks, i = r.length, o = new Array(i), a = {
            endingStart: Ms,
            endingEnd: Ms
        }, s = 0; s !== i; ++s) {
            var c = r[s].createInterpolant(null);
            o[s] = c,
            c.settings = a
        }
        this._interpolantSettings = a,
        this._interpolants = o,
        this._propertyBindings = new Array(i),
        this._cacheIndex = null,
        this._byClipCacheIndex = null,
        this._timeScaleInterpolant = null,
        this._weightInterpolant = null,
        this.loop = ws,
        this._loopCount = -1,
        this._startTime = null,
        this.time = 0,
        this.timeScale = 1,
        this._effectiveTimeScale = 1,
        this.weight = 1,
        this._effectiveWeight = 1,
        this.repetitions = 1 / 0,
        this.paused = !1,
        this.enabled = !0,
        this.clampWhenFinished = !1,
        this.zeroSlopeAtStart = !0,
        this.zeroSlopeAtEnd = !0
    }
    function Ui(t) {
        this._root = t,
        this._initMemoryManager(),
        this._accuIndex = 0,
        this.time = 0,
        this.timeScale = 1
    }
    function Fi(t) {
        "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        t = arguments[1]),
        this.value = t
    }
    function Hi() {
        B.call(this),
        this.type = "InstancedBufferGeometry",
        this.maxInstancedCount = void 0
    }
    function Gi(t, e, n, r) {
        this.data = t,
        this.itemSize = e,
        this.offset = n,
        this.normalized = !0 === r
    }
    function Vi(t, e) {
        this.array = t,
        this.stride = e,
        this.count = void 0 !== t ? t.length / e : 0,
        this.dynamic = !1,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function Wi(t, e, n) {
        Vi.call(this, t, e),
        this.meshPerAttribute = n || 1
    }
    function qi(t, e, n) {
        A.call(this, t, e),
        this.meshPerAttribute = n || 1
    }
    function Xi(t, e, n, r) {
        this.ray = new X(t,e),
        this.near = n || 0,
        this.far = r || 1 / 0,
        this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    function Yi(t, e) {
        return t.distance - e.distance
    }
    function $i(t, e, n, r) {
        if (!1 !== t.visible && (t.raycast(e, n),
        !0 === r))
            for (var i = t.children, o = 0, a = i.length; o < a; o++)
                $i(i[o], e, n, !0)
    }
    function Zi(t) {
        this.autoStart = void 0 === t || t,
        this.startTime = 0,
        this.oldTime = 0,
        this.elapsedTime = 0,
        this.running = !1
    }
    function Ji(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.phi = void 0 !== e ? e : 0,
        this.theta = void 0 !== n ? n : 0,
        this
    }
    function Qi(t, e, n) {
        return this.radius = void 0 !== t ? t : 1,
        this.theta = void 0 !== e ? e : 0,
        this.y = void 0 !== n ? n : 0,
        this
    }
    function Ki(t, e) {
        this.min = void 0 !== t ? t : new i(1 / 0,1 / 0),
        this.max = void 0 !== e ? e : new i(-1 / 0,-1 / 0)
    }
    function to(t) {
        w.call(this),
        this.material = t,
        this.render = function() {}
    }
    function eo(t, e, n, r) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var i = void 0 !== n ? n : 16711680
          , o = void 0 !== r ? r : 1
          , a = 0
          , s = this.object.geometry;
        s && s.isGeometry ? a = 3 * s.faces.length : s && s.isBufferGeometry && (a = s.attributes.normal.count);
        var c = new B
          , l = new N(2 * a * 3,3);
        c.addAttribute("position", l),
        je.call(this, c, new Ne({
            color: i,
            linewidth: o
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function no(t, e) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = e;
        for (var n = new B, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, o = 1; i < 32; i++,
        o++) {
            var a = i / 32 * Math.PI * 2
              , s = o / 32 * Math.PI * 2;
            r.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1)
        }
        n.addAttribute("position", new N(r,3));
        var c = new Ne({
            fog: !1
        });
        this.cone = new je(n,c),
        this.add(this.cone),
        this.update()
    }
    function ro(t) {
        var e = [];
        t && t.isBone && e.push(t);
        for (var n = 0; n < t.children.length; n++)
            e.push.apply(e, ro(t.children[n]));
        return e
    }
    function io(t) {
        for (var e = ro(t), n = new B, r = [], i = [], o = new y(0,0,1), a = new y(0,1,0), s = 0; s < e.length; s++) {
            var c = e[s];
            c.parent && c.parent.isBone && (r.push(0, 0, 0),
            r.push(0, 0, 0),
            i.push(o.r, o.g, o.b),
            i.push(a.r, a.g, a.b))
        }
        n.addAttribute("position", new N(r,3)),
        n.addAttribute("color", new N(i,3));
        var l = new Ne({
            vertexColors: Io,
            depthTest: !1,
            depthWrite: !1,
            transparent: !0
        });
        je.call(this, n, l),
        this.root = t,
        this.bones = e,
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1
    }
    function oo(t, e, n) {
        this.light = t,
        this.light.updateMatrixWorld(),
        this.color = n;
        var r = new qn(e,4,2)
          , i = new W({
            wireframe: !0,
            fog: !1
        });
        Z.call(this, r, i),
        this.matrix = this.light.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ao(t, e) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = e;
        var n = new Ne({
            fog: !1
        })
          , r = new B;
        r.addAttribute("position", new A(new Float32Array(15),3)),
        this.line = new ke(r,n),
        this.add(this.line),
        this.update()
    }
    function so(t, e, n) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n;
        var r = new Ke(e);
        r.rotateY(.5 * Math.PI),
        this.material = new W({
            wireframe: !0,
            fog: !1
        }),
        void 0 === this.color && (this.material.vertexColors = Io);
        var i = r.getAttribute("position")
          , o = new Float32Array(3 * i.count);
        r.addAttribute("color", new A(o,3)),
        this.add(new Z(r,this.material)),
        this.update()
    }
    function co(t, e, n, r) {
        t = t || 10,
        e = e || 10,
        n = new y(void 0 !== n ? n : 4473924),
        r = new y(void 0 !== r ? r : 8947848);
        for (var i = e / 2, o = t / e, a = t / 2, s = [], c = [], l = 0, u = 0, h = -a; l <= e; l++,
        h += o) {
            s.push(-a, 0, h, a, 0, h),
            s.push(h, 0, -a, h, 0, a);
            var d = l === i ? n : r;
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3,
            d.toArray(c, u),
            u += 3
        }
        var p = new B;
        p.addAttribute("position", new N(s,3)),
        p.addAttribute("color", new N(c,3));
        var f = new Ne({
            vertexColors: Io
        });
        je.call(this, p, f)
    }
    function lo(t, e, n, r, i, o) {
        t = t || 10,
        e = e || 16,
        n = n || 8,
        r = r || 64,
        i = new y(void 0 !== i ? i : 4473924),
        o = new y(void 0 !== o ? o : 8947848);
        var a, s, c, l, u, h, d, p = [], f = [];
        for (l = 0; l <= e; l++)
            c = l / e * (2 * Math.PI),
            a = Math.sin(c) * t,
            s = Math.cos(c) * t,
            p.push(0, 0, 0),
            p.push(a, 0, s),
            d = 1 & l ? i : o,
            f.push(d.r, d.g, d.b),
            f.push(d.r, d.g, d.b);
        for (l = 0; l <= n; l++)
            for (d = 1 & l ? i : o,
            h = t - t / n * l,
            u = 0; u < r; u++)
                c = u / r * (2 * Math.PI),
                a = Math.sin(c) * h,
                s = Math.cos(c) * h,
                p.push(a, 0, s),
                f.push(d.r, d.g, d.b),
                c = (u + 1) / r * (2 * Math.PI),
                a = Math.sin(c) * h,
                s = Math.cos(c) * h,
                p.push(a, 0, s),
                f.push(d.r, d.g, d.b);
        var m = new B;
        m.addAttribute("position", new N(p,3)),
        m.addAttribute("color", new N(f,3));
        var v = new Ne({
            vertexColors: Io
        });
        je.call(this, m, v)
    }
    function uo(t, e, n, r) {
        this.object = t,
        this.size = void 0 !== e ? e : 1;
        var i = void 0 !== n ? n : 16776960
          , o = void 0 !== r ? r : 1
          , a = 0
          , s = this.object.geometry;
        s && s.isGeometry ? a = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
        var c = new B
          , l = new N(2 * a * 3,3);
        c.addAttribute("position", l),
        je.call(this, c, new Ne({
            color: i,
            linewidth: o
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function ho(t, e, n) {
        w.call(this),
        this.light = t,
        this.light.updateMatrixWorld(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n,
        void 0 === e && (e = 1);
        var r = new B;
        r.addAttribute("position", new N([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0],3));
        var i = new Ne({
            fog: !1
        });
        this.lightPlane = new ke(r,i),
        this.add(this.lightPlane),
        r = new B,
        r.addAttribute("position", new N([0, 0, 0, 0, 0, 1],3)),
        this.targetLine = new ke(r,i),
        this.add(this.targetLine),
        this.update()
    }
    function po(t) {
        function e(t, e, r) {
            n(t, r),
            n(e, r)
        }
        function n(t, e) {
            o.push(0, 0, 0),
            a.push(e.r, e.g, e.b),
            void 0 === s[t] && (s[t] = []),
            s[t].push(o.length / 3 - 1)
        }
        var r = new B
          , i = new Ne({
            color: 16777215,
            vertexColors: Oo
        })
          , o = []
          , a = []
          , s = {}
          , c = new y(16755200)
          , l = new y(16711680)
          , u = new y(43775)
          , h = new y(16777215)
          , d = new y(3355443);
        e("n1", "n2", c),
        e("n2", "n4", c),
        e("n4", "n3", c),
        e("n3", "n1", c),
        e("f1", "f2", c),
        e("f2", "f4", c),
        e("f4", "f3", c),
        e("f3", "f1", c),
        e("n1", "f1", c),
        e("n2", "f2", c),
        e("n3", "f3", c),
        e("n4", "f4", c),
        e("p", "n1", l),
        e("p", "n2", l),
        e("p", "n3", l),
        e("p", "n4", l),
        e("u1", "u2", u),
        e("u2", "u3", u),
        e("u3", "u1", u),
        e("c", "t", h),
        e("p", "c", d),
        e("cn1", "cn2", d),
        e("cn3", "cn4", d),
        e("cf1", "cf2", d),
        e("cf3", "cf4", d),
        r.addAttribute("position", new N(o,3)),
        r.addAttribute("color", new N(a,3)),
        je.call(this, r, i),
        this.camera = t,
        this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
        this.matrix = t.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.pointMap = s,
        this.update()
    }
    function fo(t, e) {
        this.object = t,
        void 0 === e && (e = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new Float32Array(24)
          , i = new B;
        i.setIndex(new A(n,1)),
        i.addAttribute("position", new A(r,3)),
        je.call(this, i, new Ne({
            color: e
        })),
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function mo(t, e) {
        this.type = "Box3Helper",
        this.box = t;
        var n = void 0 !== e ? e : 16776960
          , r = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , i = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1]
          , o = new B;
        o.setIndex(new A(r,1)),
        o.addAttribute("position", new N(i,3)),
        je.call(this, o, new Ne({
            color: n
        })),
        this.geometry.computeBoundingSphere()
    }
    function vo(t, e, n) {
        this.type = "PlaneHelper",
        this.plane = t,
        this.size = void 0 === e ? 1 : e;
        var r = void 0 !== n ? n : 16776960
          , i = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
          , o = new B;
        o.addAttribute("position", new N(i,3)),
        o.computeBoundingSphere(),
        ke.call(this, o, new Ne({
            color: r
        }));
        var a = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1]
          , s = new B;
        s.addAttribute("position", new N(a,3)),
        s.computeBoundingSphere(),
        this.add(new Z(s,new W({
            color: r,
            opacity: .2,
            transparent: !0,
            depthWrite: !1
        })))
    }
    function go(t, e, n, r, i, o) {
        w.call(this),
        void 0 === r && (r = 16776960),
        void 0 === n && (n = 1),
        void 0 === i && (i = .2 * n),
        void 0 === o && (o = .2 * i),
        void 0 === Ec && (Ec = new B,
        Ec.addAttribute("position", new N([0, 0, 0, 0, 1, 0],3)),
        Tc = new nr(0,.5,1,5,1),
        Tc.translate(0, -.5, 0)),
        this.position.copy(e),
        this.line = new ke(Ec,new Ne({
            color: r
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new Z(Tc,new W({
            color: r
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(t),
        this.setLength(n, i, o)
    }
    function yo(t) {
        t = t || 1;
        var e = [0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]
          , n = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
          , r = new B;
        r.addAttribute("position", new N(e,3)),
        r.addAttribute("color", new N(n,3));
        var i = new Ne({
            vertexColors: Io
        });
        je.call(this, r, i)
    }
    function _o(t) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom",
        this.closed = !0
    }
    function xo(t) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom"
    }
    function bo(t) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
        Ar.call(this, t),
        this.type = "catmullrom"
    }
    n.d(e, "b", function() {
        return ei
    }),
    n.d(e, "a", function() {
        return ni
    }),
    void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
    void 0 === Number.isInteger && (Number.isInteger = function(t) {
        return "number" == typeof t && isFinite(t) && Math.floor(t) === t
    }
    ),
    void 0 === Math.sign && (Math.sign = function(t) {
        return t < 0 ? -1 : t > 0 ? 1 : +t
    }
    ),
    "name"in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }),
    void 0 === Object.assign && function() {
        Object.assign = function(t) {
            if (void 0 === t || null === t)
                throw new TypeError("Cannot convert undefined or null to object");
            for (var e = Object(t), n = 1; n < arguments.length; n++) {
                var r = arguments[n];
                if (void 0 !== r && null !== r)
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
            }
            return e
        }
    }(),
    Object.assign(r.prototype, {
        addEventListener: function(t, e) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[t] && (n[t] = []),
            -1 === n[t].indexOf(e) && n[t].push(e)
        },
        hasEventListener: function(t, e) {
            if (void 0 === this._listeners)
                return !1;
            var n = this._listeners;
            return void 0 !== n[t] && -1 !== n[t].indexOf(e)
        },
        removeEventListener: function(t, e) {
            if (void 0 !== this._listeners) {
                var n = this._listeners
                  , r = n[t];
                if (void 0 !== r) {
                    var i = r.indexOf(e);
                    -1 !== i && r.splice(i, 1)
                }
            }
        },
        dispatchEvent: function(t) {
            if (void 0 !== this._listeners) {
                var e = this._listeners
                  , n = e[t.type];
                if (void 0 !== n) {
                    t.target = this;
                    for (var r = n.slice(0), i = 0, o = r.length; i < o; i++)
                        r[i].call(this, t)
                }
            }
        }
    });
    var wo = "92"
      , Mo = 0
      , Eo = 1
      , To = 2
      , So = 1
      , Ao = 2
      , Co = 0
      , Po = 1
      , Lo = 2
      , Ro = 0
      , Oo = 1
      , Io = 2
      , Do = 0
      , No = 1
      , ko = 2
      , jo = 3
      , zo = 4
      , Bo = 5
      , Uo = 100
      , Fo = 101
      , Ho = 102
      , Go = 103
      , Vo = 104
      , Wo = 200
      , qo = 201
      , Xo = 202
      , Yo = 203
      , $o = 204
      , Zo = 205
      , Jo = 206
      , Qo = 207
      , Ko = 208
      , ta = 209
      , ea = 210
      , na = 0
      , ra = 1
      , ia = 2
      , oa = 3
      , aa = 4
      , sa = 5
      , ca = 6
      , la = 7
      , ua = 0
      , ha = 1
      , da = 2
      , pa = 0
      , fa = 1
      , ma = 2
      , va = 3
      , ga = 4
      , ya = 301
      , _a = 302
      , xa = 303
      , ba = 304
      , wa = 305
      , Ma = 306
      , Ea = 307
      , Ta = 1e3
      , Sa = 1001
      , Aa = 1002
      , Ca = 1003
      , Pa = 1004
      , La = 1005
      , Ra = 1006
      , Oa = 1007
      , Ia = 1008
      , Da = 1009
      , Na = 1010
      , ka = 1011
      , ja = 1012
      , za = 1013
      , Ba = 1014
      , Ua = 1015
      , Fa = 1016
      , Ha = 1017
      , Ga = 1018
      , Va = 1019
      , Wa = 1020
      , qa = 1021
      , Xa = 1022
      , Ya = 1023
      , $a = 1024
      , Za = 1025
      , Ja = 1026
      , Qa = 1027
      , Ka = 33776
      , ts = 33777
      , es = 33778
      , ns = 33779
      , rs = 35840
      , is = 35841
      , os = 35842
      , as = 35843
      , ss = 36196
      , cs = 37808
      , ls = 37809
      , us = 37810
      , hs = 37811
      , ds = 37812
      , ps = 37813
      , fs = 37814
      , ms = 37815
      , vs = 37816
      , gs = 37817
      , ys = 37818
      , _s = 37819
      , xs = 37820
      , bs = 37821
      , ws = 2201
      , Ms = 2400
      , Es = 0
      , Ts = 1
      , Ss = 2
      , As = 3e3
      , Cs = 3001
      , Ps = 3007
      , Ls = 3002
      , Rs = 3004
      , Os = 3005
      , Is = 3006
      , Ds = 3200
      , Ns = 3201
      , ks = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            for (var t = [], e = 0; e < 256; e++)
                t[e] = (e < 16 ? "0" : "") + e.toString(16);
            return function() {
                var e = 4294967295 * Math.random() | 0
                  , n = 4294967295 * Math.random() | 0
                  , r = 4294967295 * Math.random() | 0
                  , i = 4294967295 * Math.random() | 0;
                return (t[255 & e] + t[e >> 8 & 255] + t[e >> 16 & 255] + t[e >> 24 & 255] + "-" + t[255 & n] + t[n >> 8 & 255] + "-" + t[n >> 16 & 15 | 64] + t[n >> 24 & 255] + "-" + t[63 & r | 128] + t[r >> 8 & 255] + "-" + t[r >> 16 & 255] + t[r >> 24 & 255] + t[255 & i] + t[i >> 8 & 255] + t[i >> 16 & 255] + t[i >> 24 & 255]).toUpperCase()
            }
        }(),
        clamp: function(t, e, n) {
            return Math.max(e, Math.min(n, t))
        },
        euclideanModulo: function(t, e) {
            return (t % e + e) % e
        },
        mapLinear: function(t, e, n, r, i) {
            return r + (t - e) * (i - r) / (n - e)
        },
        lerp: function(t, e, n) {
            return (1 - n) * t + n * e
        },
        smoothstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t)
        },
        smootherstep: function(t, e, n) {
            return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10)
        },
        randInt: function(t, e) {
            return t + Math.floor(Math.random() * (e - t + 1))
        },
        randFloat: function(t, e) {
            return t + Math.random() * (e - t)
        },
        randFloatSpread: function(t) {
            return t * (.5 - Math.random())
        },
        degToRad: function(t) {
            return t * ks.DEG2RAD
        },
        radToDeg: function(t) {
            return t * ks.RAD2DEG
        },
        isPowerOfTwo: function(t) {
            return 0 == (t & t - 1) && 0 !== t
        },
        ceilPowerOfTwo: function(t) {
            return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2))
        },
        floorPowerOfTwo: function(t) {
            return Math.pow(2, Math.floor(Math.log(t) / Math.LN2))
        }
    };
    Object.defineProperties(i.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(t) {
                this.x = t
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(t) {
                this.y = t
            }
        }
    }),
    Object.assign(i.prototype, {
        isVector2: !0,
        set: function(t, e) {
            return this.x = t,
            this.y = e,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this
        },
        multiply: function(t) {
            return this.x *= t.x,
            this.y *= t.y,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , r = t.elements;
            return this.x = r[0] * e + r[3] * n + r[6],
            this.y = r[1] * e + r[4] * n + r[7],
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this
        },
        clampScalar: function() {
            var t = new i
              , e = new i;
            return function(n, r) {
                return t.set(n, n),
                e.set(r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            var t = Math.atan2(this.y, this.x);
            return t < 0 && (t += 2 * Math.PI),
            t
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y;
            return e * e + n * n
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this
        },
        rotateAround: function(t, e) {
            var n = Math.cos(e)
              , r = Math.sin(e)
              , i = this.x - t.x
              , o = this.y - t.y;
            return this.x = i * n - o * r + t.x,
            this.y = i * r + o * n + t.y,
            this
        }
    }),
    Object.assign(o.prototype, {
        isMatrix4: !0,
        set: function(t, e, n, r, i, o, a, s, c, l, u, h, d, p, f, m) {
            var v = this.elements;
            return v[0] = t,
            v[4] = e,
            v[8] = n,
            v[12] = r,
            v[1] = i,
            v[5] = o,
            v[9] = a,
            v[13] = s,
            v[2] = c,
            v[6] = l,
            v[10] = u,
            v[14] = h,
            v[3] = d,
            v[7] = p,
            v[11] = f,
            v[15] = m,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new o).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            e[9] = n[9],
            e[10] = n[10],
            e[11] = n[11],
            e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            e[15] = n[15],
            this
        },
        copyPosition: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[12] = n[12],
            e[13] = n[13],
            e[14] = n[14],
            this
        },
        extractBasis: function(t, e, n) {
            return t.setFromMatrixColumn(this, 0),
            e.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        },
        makeBasis: function(t, e, n) {
            return this.set(t.x, e.x, n.x, 0, t.y, e.y, n.y, 0, t.z, e.z, n.z, 0, 0, 0, 0, 1),
            this
        },
        extractRotation: function() {
            var t = new s;
            return function(e) {
                var n = this.elements
                  , r = e.elements
                  , i = 1 / t.setFromMatrixColumn(e, 0).length()
                  , o = 1 / t.setFromMatrixColumn(e, 1).length()
                  , a = 1 / t.setFromMatrixColumn(e, 2).length();
                return n[0] = r[0] * i,
                n[1] = r[1] * i,
                n[2] = r[2] * i,
                n[4] = r[4] * o,
                n[5] = r[5] * o,
                n[6] = r[6] * o,
                n[8] = r[8] * a,
                n[9] = r[9] * a,
                n[10] = r[10] * a,
                this
            }
        }(),
        makeRotationFromEuler: function(t) {
            t && t.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var e = this.elements
              , n = t.x
              , r = t.y
              , i = t.z
              , o = Math.cos(n)
              , a = Math.sin(n)
              , s = Math.cos(r)
              , c = Math.sin(r)
              , l = Math.cos(i)
              , u = Math.sin(i);
            if ("XYZ" === t.order) {
                var h = o * l
                  , d = o * u
                  , p = a * l
                  , f = a * u;
                e[0] = s * l,
                e[4] = -s * u,
                e[8] = c,
                e[1] = d + p * c,
                e[5] = h - f * c,
                e[9] = -a * s,
                e[2] = f - h * c,
                e[6] = p + d * c,
                e[10] = o * s
            } else if ("YXZ" === t.order) {
                var m = s * l
                  , v = s * u
                  , g = c * l
                  , y = c * u;
                e[0] = m + y * a,
                e[4] = g * a - v,
                e[8] = o * c,
                e[1] = o * u,
                e[5] = o * l,
                e[9] = -a,
                e[2] = v * a - g,
                e[6] = y + m * a,
                e[10] = o * s
            } else if ("ZXY" === t.order) {
                var m = s * l
                  , v = s * u
                  , g = c * l
                  , y = c * u;
                e[0] = m - y * a,
                e[4] = -o * u,
                e[8] = g + v * a,
                e[1] = v + g * a,
                e[5] = o * l,
                e[9] = y - m * a,
                e[2] = -o * c,
                e[6] = a,
                e[10] = o * s
            } else if ("ZYX" === t.order) {
                var h = o * l
                  , d = o * u
                  , p = a * l
                  , f = a * u;
                e[0] = s * l,
                e[4] = p * c - d,
                e[8] = h * c + f,
                e[1] = s * u,
                e[5] = f * c + h,
                e[9] = d * c - p,
                e[2] = -c,
                e[6] = a * s,
                e[10] = o * s
            } else if ("YZX" === t.order) {
                var _ = o * s
                  , x = o * c
                  , b = a * s
                  , w = a * c;
                e[0] = s * l,
                e[4] = w - _ * u,
                e[8] = b * u + x,
                e[1] = u,
                e[5] = o * l,
                e[9] = -a * l,
                e[2] = -c * l,
                e[6] = x * u + b,
                e[10] = _ - w * u
            } else if ("XZY" === t.order) {
                var _ = o * s
                  , x = o * c
                  , b = a * s
                  , w = a * c;
                e[0] = s * l,
                e[4] = -u,
                e[8] = c * l,
                e[1] = _ * u + w,
                e[5] = o * l,
                e[9] = x * u - b,
                e[2] = b * u - x,
                e[6] = a * l,
                e[10] = w * u + _
            }
            return e[3] = 0,
            e[7] = 0,
            e[11] = 0,
            e[12] = 0,
            e[13] = 0,
            e[14] = 0,
            e[15] = 1,
            this
        },
        makeRotationFromQuaternion: function(t) {
            var e = this.elements
              , n = t._x
              , r = t._y
              , i = t._z
              , o = t._w
              , a = n + n
              , s = r + r
              , c = i + i
              , l = n * a
              , u = n * s
              , h = n * c
              , d = r * s
              , p = r * c
              , f = i * c
              , m = o * a
              , v = o * s
              , g = o * c;
            return e[0] = 1 - (d + f),
            e[4] = u - g,
            e[8] = h + v,
            e[1] = u + g,
            e[5] = 1 - (l + f),
            e[9] = p - m,
            e[2] = h - v,
            e[6] = p + m,
            e[10] = 1 - (l + d),
            e[3] = 0,
            e[7] = 0,
            e[11] = 0,
            e[12] = 0,
            e[13] = 0,
            e[14] = 0,
            e[15] = 1,
            this
        },
        lookAt: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o) {
                var a = this.elements;
                return n.subVectors(r, i),
                0 === n.lengthSq() && (n.z = 1),
                n.normalize(),
                t.crossVectors(o, n),
                0 === t.lengthSq() && (1 === Math.abs(o.z) ? n.x += 1e-4 : n.z += 1e-4,
                n.normalize(),
                t.crossVectors(o, n)),
                t.normalize(),
                e.crossVectors(n, t),
                a[0] = t.x,
                a[4] = e.x,
                a[8] = n.x,
                a[1] = t.y,
                a[5] = e.y,
                a[9] = n.y,
                a[2] = t.z,
                a[6] = e.z,
                a[10] = n.z,
                this
            }
        }(),
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
            this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , r = e.elements
              , i = this.elements
              , o = n[0]
              , a = n[4]
              , s = n[8]
              , c = n[12]
              , l = n[1]
              , u = n[5]
              , h = n[9]
              , d = n[13]
              , p = n[2]
              , f = n[6]
              , m = n[10]
              , v = n[14]
              , g = n[3]
              , y = n[7]
              , _ = n[11]
              , x = n[15]
              , b = r[0]
              , w = r[4]
              , M = r[8]
              , E = r[12]
              , T = r[1]
              , S = r[5]
              , A = r[9]
              , C = r[13]
              , P = r[2]
              , L = r[6]
              , R = r[10]
              , O = r[14]
              , I = r[3]
              , D = r[7]
              , N = r[11]
              , k = r[15];
            return i[0] = o * b + a * T + s * P + c * I,
            i[4] = o * w + a * S + s * L + c * D,
            i[8] = o * M + a * A + s * R + c * N,
            i[12] = o * E + a * C + s * O + c * k,
            i[1] = l * b + u * T + h * P + d * I,
            i[5] = l * w + u * S + h * L + d * D,
            i[9] = l * M + u * A + h * R + d * N,
            i[13] = l * E + u * C + h * O + d * k,
            i[2] = p * b + f * T + m * P + v * I,
            i[6] = p * w + f * S + m * L + v * D,
            i[10] = p * M + f * A + m * R + v * N,
            i[14] = p * E + f * C + m * O + v * k,
            i[3] = g * b + y * T + _ * P + x * I,
            i[7] = g * w + y * S + _ * L + x * D,
            i[11] = g * M + y * A + _ * R + x * N,
            i[15] = g * E + y * C + _ * O + x * k,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[4] *= t,
            e[8] *= t,
            e[12] *= t,
            e[1] *= t,
            e[5] *= t,
            e[9] *= t,
            e[13] *= t,
            e[2] *= t,
            e[6] *= t,
            e[10] *= t,
            e[14] *= t,
            e[3] *= t,
            e[7] *= t,
            e[11] *= t,
            e[15] *= t,
            this
        },
        applyToBufferAttribute: function() {
            var t = new s;
            return function(e) {
                for (var n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix4(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[4]
              , r = t[8]
              , i = t[12]
              , o = t[1]
              , a = t[5]
              , s = t[9]
              , c = t[13]
              , l = t[2]
              , u = t[6]
              , h = t[10]
              , d = t[14];
            return t[3] * (+i * s * u - r * c * u - i * a * h + n * c * h + r * a * d - n * s * d) + t[7] * (+e * s * d - e * c * h + i * o * h - r * o * d + r * c * l - i * s * l) + t[11] * (+e * c * u - e * a * d - i * o * u + n * o * d + i * a * l - n * c * l) + t[15] * (-r * a * l - e * s * u + e * a * h + r * o * u - n * o * h + n * s * l)
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[4],
            e[4] = t,
            t = e[2],
            e[2] = e[8],
            e[8] = t,
            t = e[6],
            e[6] = e[9],
            e[9] = t,
            t = e[3],
            e[3] = e[12],
            e[12] = t,
            t = e[7],
            e[7] = e[13],
            e[13] = t,
            t = e[11],
            e[11] = e[14],
            e[14] = t,
            this
        },
        setPosition: function(t) {
            var e = this.elements;
            return e[12] = t.x,
            e[13] = t.y,
            e[14] = t.z,
            this
        },
        getInverse: function(t, e) {
            var n = this.elements
              , r = t.elements
              , i = r[0]
              , o = r[1]
              , a = r[2]
              , s = r[3]
              , c = r[4]
              , l = r[5]
              , u = r[6]
              , h = r[7]
              , d = r[8]
              , p = r[9]
              , f = r[10]
              , m = r[11]
              , v = r[12]
              , g = r[13]
              , y = r[14]
              , _ = r[15]
              , x = p * y * h - g * f * h + g * u * m - l * y * m - p * u * _ + l * f * _
              , b = v * f * h - d * y * h - v * u * m + c * y * m + d * u * _ - c * f * _
              , w = d * g * h - v * p * h + v * l * m - c * g * m - d * l * _ + c * p * _
              , M = v * p * u - d * g * u - v * l * f + c * g * f + d * l * y - c * p * y
              , E = i * x + o * b + a * w + s * M;
            if (0 === E) {
                var T = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(T);
                return console.warn(T),
                this.identity()
            }
            var S = 1 / E;
            return n[0] = x * S,
            n[1] = (g * f * s - p * y * s - g * a * m + o * y * m + p * a * _ - o * f * _) * S,
            n[2] = (l * y * s - g * u * s + g * a * h - o * y * h - l * a * _ + o * u * _) * S,
            n[3] = (p * u * s - l * f * s - p * a * h + o * f * h + l * a * m - o * u * m) * S,
            n[4] = b * S,
            n[5] = (d * y * s - v * f * s + v * a * m - i * y * m - d * a * _ + i * f * _) * S,
            n[6] = (v * u * s - c * y * s - v * a * h + i * y * h + c * a * _ - i * u * _) * S,
            n[7] = (c * f * s - d * u * s + d * a * h - i * f * h - c * a * m + i * u * m) * S,
            n[8] = w * S,
            n[9] = (v * p * s - d * g * s - v * o * m + i * g * m + d * o * _ - i * p * _) * S,
            n[10] = (c * g * s - v * l * s + v * o * h - i * g * h - c * o * _ + i * l * _) * S,
            n[11] = (d * l * s - c * p * s - d * o * h + i * p * h + c * o * m - i * l * m) * S,
            n[12] = M * S,
            n[13] = (d * g * a - v * p * a + v * o * f - i * g * f - d * o * y + i * p * y) * S,
            n[14] = (v * l * a - c * g * a - v * o * u + i * g * u + c * o * y - i * l * y) * S,
            n[15] = (c * p * a - d * l * a + d * o * u - i * p * u - c * o * f + i * l * f) * S,
            this
        },
        scale: function(t) {
            var e = this.elements
              , n = t.x
              , r = t.y
              , i = t.z;
            return e[0] *= n,
            e[4] *= r,
            e[8] *= i,
            e[1] *= n,
            e[5] *= r,
            e[9] *= i,
            e[2] *= n,
            e[6] *= r,
            e[10] *= i,
            e[3] *= n,
            e[7] *= r,
            e[11] *= i,
            this
        },
        getMaxScaleOnAxis: function() {
            var t = this.elements
              , e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
              , n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6]
              , r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
            return Math.sqrt(Math.max(e, n, r))
        },
        makeTranslation: function(t, e, n) {
            return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1),
            this
        },
        makeRotationX: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationY: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1),
            this
        },
        makeRotationZ: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t);
            return this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        makeRotationAxis: function(t, e) {
            var n = Math.cos(e)
              , r = Math.sin(e)
              , i = 1 - n
              , o = t.x
              , a = t.y
              , s = t.z
              , c = i * o
              , l = i * a;
            return this.set(c * o + n, c * a - r * s, c * s + r * a, 0, c * a + r * s, l * a + n, l * s - r * o, 0, c * s - r * a, l * s + r * o, i * s * s + n, 0, 0, 0, 0, 1),
            this
        },
        makeScale: function(t, e, n) {
            return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
            this
        },
        makeShear: function(t, e, n) {
            return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1),
            this
        },
        compose: function(t, e, n) {
            return this.makeRotationFromQuaternion(e),
            this.scale(n),
            this.setPosition(t),
            this
        },
        decompose: function() {
            var t = new s
              , e = new o;
            return function(n, r, i) {
                var o = this.elements
                  , a = t.set(o[0], o[1], o[2]).length()
                  , s = t.set(o[4], o[5], o[6]).length()
                  , c = t.set(o[8], o[9], o[10]).length();
                this.determinant() < 0 && (a = -a),
                n.x = o[12],
                n.y = o[13],
                n.z = o[14],
                e.copy(this);
                var l = 1 / a
                  , u = 1 / s
                  , h = 1 / c;
                return e.elements[0] *= l,
                e.elements[1] *= l,
                e.elements[2] *= l,
                e.elements[4] *= u,
                e.elements[5] *= u,
                e.elements[6] *= u,
                e.elements[8] *= h,
                e.elements[9] *= h,
                e.elements[10] *= h,
                r.setFromRotationMatrix(e),
                i.x = a,
                i.y = s,
                i.z = c,
                this
            }
        }(),
        makePerspective: function(t, e, n, r, i, o) {
            void 0 === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var a = this.elements
              , s = 2 * i / (e - t)
              , c = 2 * i / (n - r)
              , l = (e + t) / (e - t)
              , u = (n + r) / (n - r)
              , h = -(o + i) / (o - i)
              , d = -2 * o * i / (o - i);
            return a[0] = s,
            a[4] = 0,
            a[8] = l,
            a[12] = 0,
            a[1] = 0,
            a[5] = c,
            a[9] = u,
            a[13] = 0,
            a[2] = 0,
            a[6] = 0,
            a[10] = h,
            a[14] = d,
            a[3] = 0,
            a[7] = 0,
            a[11] = -1,
            a[15] = 0,
            this
        },
        makeOrthographic: function(t, e, n, r, i, o) {
            var a = this.elements
              , s = 1 / (e - t)
              , c = 1 / (n - r)
              , l = 1 / (o - i)
              , u = (e + t) * s
              , h = (n + r) * c
              , d = (o + i) * l;
            return a[0] = 2 * s,
            a[4] = 0,
            a[8] = 0,
            a[12] = -u,
            a[1] = 0,
            a[5] = 2 * c,
            a[9] = 0,
            a[13] = -h,
            a[2] = 0,
            a[6] = 0,
            a[10] = -2 * l,
            a[14] = -d,
            a[3] = 0,
            a[7] = 0,
            a[11] = 0,
            a[15] = 1,
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, r = 0; r < 16; r++)
                if (e[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 16; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t[e + 9] = n[9],
            t[e + 10] = n[10],
            t[e + 11] = n[11],
            t[e + 12] = n[12],
            t[e + 13] = n[13],
            t[e + 14] = n[14],
            t[e + 15] = n[15],
            t
        }
    }),
    Object.assign(a, {
        slerp: function(t, e, n, r) {
            return n.copy(t).slerp(e, r)
        },
        slerpFlat: function(t, e, n, r, i, o, a) {
            var s = n[r + 0]
              , c = n[r + 1]
              , l = n[r + 2]
              , u = n[r + 3]
              , h = i[o + 0]
              , d = i[o + 1]
              , p = i[o + 2]
              , f = i[o + 3];
            if (u !== f || s !== h || c !== d || l !== p) {
                var m = 1 - a
                  , v = s * h + c * d + l * p + u * f
                  , g = v >= 0 ? 1 : -1
                  , y = 1 - v * v;
                if (y > Number.EPSILON) {
                    var _ = Math.sqrt(y)
                      , x = Math.atan2(_, v * g);
                    m = Math.sin(m * x) / _,
                    a = Math.sin(a * x) / _
                }
                var b = a * g;
                if (s = s * m + h * b,
                c = c * m + d * b,
                l = l * m + p * b,
                u = u * m + f * b,
                m === 1 - a) {
                    var w = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
                    s *= w,
                    c *= w,
                    l *= w,
                    u *= w
                }
            }
            t[e] = s,
            t[e + 1] = c,
            t[e + 2] = l,
            t[e + 3] = u
        }
    }),
    Object.defineProperties(a.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(t) {
                this._w = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(a.prototype, {
        set: function(t, e, n, r) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._w = r,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._w)
        },
        copy: function(t) {
            return this._x = t.x,
            this._y = t.y,
            this._z = t.z,
            this._w = t.w,
            this.onChangeCallback(),
            this
        },
        setFromEuler: function(t, e) {
            if (!t || !t.isEuler)
                throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var n = t._x
              , r = t._y
              , i = t._z
              , o = t.order
              , a = Math.cos
              , s = Math.sin
              , c = a(n / 2)
              , l = a(r / 2)
              , u = a(i / 2)
              , h = s(n / 2)
              , d = s(r / 2)
              , p = s(i / 2);
            return "XYZ" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u - h * d * p) : "YXZ" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u + h * d * p) : "ZXY" === o ? (this._x = h * l * u - c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u - h * d * p) : "ZYX" === o ? (this._x = h * l * u - c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u + h * d * p) : "YZX" === o ? (this._x = h * l * u + c * d * p,
            this._y = c * d * u + h * l * p,
            this._z = c * l * p - h * d * u,
            this._w = c * l * u - h * d * p) : "XZY" === o && (this._x = h * l * u - c * d * p,
            this._y = c * d * u - h * l * p,
            this._z = c * l * p + h * d * u,
            this._w = c * l * u + h * d * p),
            !1 !== e && this.onChangeCallback(),
            this
        },
        setFromAxisAngle: function(t, e) {
            var n = e / 2
              , r = Math.sin(n);
            return this._x = t.x * r,
            this._y = t.y * r,
            this._z = t.z * r,
            this._w = Math.cos(n),
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t) {
            var e, n = t.elements, r = n[0], i = n[4], o = n[8], a = n[1], s = n[5], c = n[9], l = n[2], u = n[6], h = n[10], d = r + s + h;
            return d > 0 ? (e = .5 / Math.sqrt(d + 1),
            this._w = .25 / e,
            this._x = (u - c) * e,
            this._y = (o - l) * e,
            this._z = (a - i) * e) : r > s && r > h ? (e = 2 * Math.sqrt(1 + r - s - h),
            this._w = (u - c) / e,
            this._x = .25 * e,
            this._y = (i + a) / e,
            this._z = (o + l) / e) : s > h ? (e = 2 * Math.sqrt(1 + s - r - h),
            this._w = (o - l) / e,
            this._x = (i + a) / e,
            this._y = .25 * e,
            this._z = (c + u) / e) : (e = 2 * Math.sqrt(1 + h - r - s),
            this._w = (a - i) / e,
            this._x = (o + l) / e,
            this._y = (c + u) / e,
            this._z = .25 * e),
            this.onChangeCallback(),
            this
        },
        setFromUnitVectors: function() {
            var t, e = new s;
            return function(n, r) {
                return void 0 === e && (e = new s),
                t = n.dot(r) + 1,
                t < 1e-6 ? (t = 0,
                Math.abs(n.x) > Math.abs(n.z) ? e.set(-n.y, n.x, 0) : e.set(0, -n.z, n.y)) : e.crossVectors(n, r),
                this._x = e.x,
                this._y = e.y,
                this._z = e.z,
                this._w = t,
                this.normalize()
            }
        }(),
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1,
            this._y *= -1,
            this._z *= -1,
            this.onChangeCallback(),
            this
        },
        dot: function(t) {
            return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var t = this.length();
            return 0 === t ? (this._x = 0,
            this._y = 0,
            this._z = 0,
            this._w = 1) : (t = 1 / t,
            this._x = this._x * t,
            this._y = this._y * t,
            this._z = this._z * t,
            this._w = this._w * t),
            this.onChangeCallback(),
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
            this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
        },
        premultiply: function(t) {
            return this.multiplyQuaternions(t, this)
        },
        multiplyQuaternions: function(t, e) {
            var n = t._x
              , r = t._y
              , i = t._z
              , o = t._w
              , a = e._x
              , s = e._y
              , c = e._z
              , l = e._w;
            return this._x = n * l + o * a + r * c - i * s,
            this._y = r * l + o * s + i * a - n * c,
            this._z = i * l + o * c + n * s - r * a,
            this._w = o * l - n * a - r * s - i * c,
            this.onChangeCallback(),
            this
        },
        slerp: function(t, e) {
            if (0 === e)
                return this;
            if (1 === e)
                return this.copy(t);
            var n = this._x
              , r = this._y
              , i = this._z
              , o = this._w
              , a = o * t._w + n * t._x + r * t._y + i * t._z;
            if (a < 0 ? (this._w = -t._w,
            this._x = -t._x,
            this._y = -t._y,
            this._z = -t._z,
            a = -a) : this.copy(t),
            a >= 1)
                return this._w = o,
                this._x = n,
                this._y = r,
                this._z = i,
                this;
            var s = Math.sqrt(1 - a * a);
            if (Math.abs(s) < .001)
                return this._w = .5 * (o + this._w),
                this._x = .5 * (n + this._x),
                this._y = .5 * (r + this._y),
                this._z = .5 * (i + this._z),
                this;
            var c = Math.atan2(s, a)
              , l = Math.sin((1 - e) * c) / s
              , u = Math.sin(e * c) / s;
            return this._w = o * l + this._w * u,
            this._x = n * l + this._x * u,
            this._y = r * l + this._y * u,
            this._z = i * l + this._z * u,
            this.onChangeCallback(),
            this
        },
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this._x = t[e],
            this._y = t[e + 1],
            this._z = t[e + 2],
            this._w = t[e + 3],
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._w,
            t
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(s.prototype, {
        isVector3: !0,
        set: function(t, e, n) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this
        },
        multiply: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
            this.multiplyVectors(t, e)) : (this.x *= t.x,
            this.y *= t.y,
            this.z *= t.z,
            this)
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this
        },
        multiplyVectors: function(t, e) {
            return this.x = t.x * e.x,
            this.y = t.y * e.y,
            this.z = t.z * e.z,
            this
        },
        applyEuler: function() {
            var t = new a;
            return function(e) {
                return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                this.applyQuaternion(t.setFromEuler(e))
            }
        }(),
        applyAxisAngle: function() {
            var t = new a;
            return function(e, n) {
                return this.applyQuaternion(t.setFromAxisAngle(e, n))
            }
        }(),
        applyMatrix3: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements;
            return this.x = i[0] * e + i[3] * n + i[6] * r,
            this.y = i[1] * e + i[4] * n + i[7] * r,
            this.z = i[2] * e + i[5] * n + i[8] * r,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements
              , o = 1 / (i[3] * e + i[7] * n + i[11] * r + i[15]);
            return this.x = (i[0] * e + i[4] * n + i[8] * r + i[12]) * o,
            this.y = (i[1] * e + i[5] * n + i[9] * r + i[13]) * o,
            this.z = (i[2] * e + i[6] * n + i[10] * r + i[14]) * o,
            this
        },
        applyQuaternion: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.x
              , o = t.y
              , a = t.z
              , s = t.w
              , c = s * e + o * r - a * n
              , l = s * n + a * e - i * r
              , u = s * r + i * n - o * e
              , h = -i * e - o * n - a * r;
            return this.x = c * s + h * -i + l * -a - u * -o,
            this.y = l * s + h * -o + u * -i - c * -a,
            this.z = u * s + h * -a + c * -o - l * -i,
            this
        },
        project: function() {
            var t = new o;
            return function(e) {
                return t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)),
                this.applyMatrix4(t)
            }
        }(),
        unproject: function() {
            var t = new o;
            return function(e) {
                return t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)),
                this.applyMatrix4(t)
            }
        }(),
        transformDirection: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = t.elements;
            return this.x = i[0] * e + i[4] * n + i[8] * r,
            this.y = i[1] * e + i[5] * n + i[9] * r,
            this.z = i[2] * e + i[6] * n + i[10] * r,
            this.normalize()
        },
        divide: function(t) {
            return this.x /= t.x,
            this.y /= t.y,
            this.z /= t.z,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this
        },
        clampScalar: function() {
            var t = new s
              , e = new s;
            return function(n, r) {
                return t.set(n, n, n),
                e.set(r, r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        cross: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(t, e)) : this.crossVectors(this, t)
        },
        crossVectors: function(t, e) {
            var n = t.x
              , r = t.y
              , i = t.z
              , o = e.x
              , a = e.y
              , s = e.z;
            return this.x = r * s - i * a,
            this.y = i * o - n * s,
            this.z = n * a - r * o,
            this
        },
        projectOnVector: function(t) {
            var e = t.dot(this) / t.lengthSq();
            return this.copy(t).multiplyScalar(e)
        },
        projectOnPlane: function() {
            var t = new s;
            return function(e) {
                return t.copy(this).projectOnVector(e),
                this.sub(t)
            }
        }(),
        reflect: function() {
            var t = new s;
            return function(e) {
                return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
            }
        }(),
        angleTo: function(t) {
            var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
            return Math.acos(ks.clamp(e, -1, 1))
        },
        distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t))
        },
        distanceToSquared: function(t) {
            var e = this.x - t.x
              , n = this.y - t.y
              , r = this.z - t.z;
            return e * e + n * n + r * r
        },
        manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
        },
        setFromSpherical: function(t) {
            var e = Math.sin(t.phi) * t.radius;
            return this.x = e * Math.sin(t.theta),
            this.y = Math.cos(t.phi) * t.radius,
            this.z = e * Math.cos(t.theta),
            this
        },
        setFromCylindrical: function(t) {
            return this.x = t.radius * Math.sin(t.theta),
            this.y = t.y,
            this.z = t.radius * Math.cos(t.theta),
            this
        },
        setFromMatrixPosition: function(t) {
            var e = t.elements;
            return this.x = e[12],
            this.y = e[13],
            this.z = e[14],
            this
        },
        setFromMatrixScale: function(t) {
            var e = this.setFromMatrixColumn(t, 0).length()
              , n = this.setFromMatrixColumn(t, 1).length()
              , r = this.setFromMatrixColumn(t, 2).length();
            return this.x = e,
            this.y = n,
            this.z = r,
            this
        },
        setFromMatrixColumn: function(t, e) {
            return this.fromArray(t.elements, 4 * e)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this
        }
    }),
    Object.assign(c.prototype, {
        isMatrix3: !0,
        set: function(t, e, n, r, i, o, a, s, c) {
            var l = this.elements;
            return l[0] = t,
            l[1] = r,
            l[2] = a,
            l[3] = e,
            l[4] = i,
            l[5] = s,
            l[6] = n,
            l[7] = o,
            l[8] = c,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(t) {
            var e = this.elements
              , n = t.elements;
            return e[0] = n[0],
            e[1] = n[1],
            e[2] = n[2],
            e[3] = n[3],
            e[4] = n[4],
            e[5] = n[5],
            e[6] = n[6],
            e[7] = n[7],
            e[8] = n[8],
            this
        },
        setFromMatrix4: function(t) {
            var e = t.elements;
            return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
            this
        },
        applyToBufferAttribute: function() {
            var t = new s;
            return function(e) {
                for (var n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.applyMatrix3(this),
                    e.setXYZ(n, t.x, t.y, t.z);
                return e
            }
        }(),
        multiply: function(t) {
            return this.multiplyMatrices(this, t)
        },
        premultiply: function(t) {
            return this.multiplyMatrices(t, this)
        },
        multiplyMatrices: function(t, e) {
            var n = t.elements
              , r = e.elements
              , i = this.elements
              , o = n[0]
              , a = n[3]
              , s = n[6]
              , c = n[1]
              , l = n[4]
              , u = n[7]
              , h = n[2]
              , d = n[5]
              , p = n[8]
              , f = r[0]
              , m = r[3]
              , v = r[6]
              , g = r[1]
              , y = r[4]
              , _ = r[7]
              , x = r[2]
              , b = r[5]
              , w = r[8];
            return i[0] = o * f + a * g + s * x,
            i[3] = o * m + a * y + s * b,
            i[6] = o * v + a * _ + s * w,
            i[1] = c * f + l * g + u * x,
            i[4] = c * m + l * y + u * b,
            i[7] = c * v + l * _ + u * w,
            i[2] = h * f + d * g + p * x,
            i[5] = h * m + d * y + p * b,
            i[8] = h * v + d * _ + p * w,
            this
        },
        multiplyScalar: function(t) {
            var e = this.elements;
            return e[0] *= t,
            e[3] *= t,
            e[6] *= t,
            e[1] *= t,
            e[4] *= t,
            e[7] *= t,
            e[2] *= t,
            e[5] *= t,
            e[8] *= t,
            this
        },
        determinant: function() {
            var t = this.elements
              , e = t[0]
              , n = t[1]
              , r = t[2]
              , i = t[3]
              , o = t[4]
              , a = t[5]
              , s = t[6]
              , c = t[7]
              , l = t[8];
            return e * o * l - e * a * c - n * i * l + n * a * s + r * i * c - r * o * s
        },
        getInverse: function(t, e) {
            t && t.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
            var n = t.elements
              , r = this.elements
              , i = n[0]
              , o = n[1]
              , a = n[2]
              , s = n[3]
              , c = n[4]
              , l = n[5]
              , u = n[6]
              , h = n[7]
              , d = n[8]
              , p = d * c - l * h
              , f = l * u - d * s
              , m = h * s - c * u
              , v = i * p + o * f + a * m;
            if (0 === v) {
                var g = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                if (!0 === e)
                    throw new Error(g);
                return console.warn(g),
                this.identity()
            }
            var y = 1 / v;
            return r[0] = p * y,
            r[1] = (a * h - d * o) * y,
            r[2] = (l * o - a * c) * y,
            r[3] = f * y,
            r[4] = (d * i - a * u) * y,
            r[5] = (a * s - l * i) * y,
            r[6] = m * y,
            r[7] = (o * u - h * i) * y,
            r[8] = (c * i - o * s) * y,
            this
        },
        transpose: function() {
            var t, e = this.elements;
            return t = e[1],
            e[1] = e[3],
            e[3] = t,
            t = e[2],
            e[2] = e[6],
            e[6] = t,
            t = e[5],
            e[5] = e[7],
            e[7] = t,
            this
        },
        getNormalMatrix: function(t) {
            return this.setFromMatrix4(t).getInverse(this).transpose()
        },
        transposeIntoArray: function(t) {
            var e = this.elements;
            return t[0] = e[0],
            t[1] = e[3],
            t[2] = e[6],
            t[3] = e[1],
            t[4] = e[4],
            t[5] = e[7],
            t[6] = e[2],
            t[7] = e[5],
            t[8] = e[8],
            this
        },
        setUvTransform: function(t, e, n, r, i, o, a) {
            var s = Math.cos(i)
              , c = Math.sin(i);
            this.set(n * s, n * c, -n * (s * o + c * a) + o + t, -r * c, r * s, -r * (-c * o + s * a) + a + e, 0, 0, 1)
        },
        scale: function(t, e) {
            var n = this.elements;
            return n[0] *= t,
            n[3] *= t,
            n[6] *= t,
            n[1] *= e,
            n[4] *= e,
            n[7] *= e,
            this
        },
        rotate: function(t) {
            var e = Math.cos(t)
              , n = Math.sin(t)
              , r = this.elements
              , i = r[0]
              , o = r[3]
              , a = r[6]
              , s = r[1]
              , c = r[4]
              , l = r[7];
            return r[0] = e * i + n * s,
            r[3] = e * o + n * c,
            r[6] = e * a + n * l,
            r[1] = -n * i + e * s,
            r[4] = -n * o + e * c,
            r[7] = -n * a + e * l,
            this
        },
        translate: function(t, e) {
            var n = this.elements;
            return n[0] += t * n[2],
            n[3] += t * n[5],
            n[6] += t * n[8],
            n[1] += e * n[2],
            n[4] += e * n[5],
            n[7] += e * n[8],
            this
        },
        equals: function(t) {
            for (var e = this.elements, n = t.elements, r = 0; r < 9; r++)
                if (e[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(t, e) {
            void 0 === e && (e = 0);
            for (var n = 0; n < 9; n++)
                this.elements[n] = t[n + e];
            return this
        },
        toArray: function(t, e) {
            void 0 === t && (t = []),
            void 0 === e && (e = 0);
            var n = this.elements;
            return t[e] = n[0],
            t[e + 1] = n[1],
            t[e + 2] = n[2],
            t[e + 3] = n[3],
            t[e + 4] = n[4],
            t[e + 5] = n[5],
            t[e + 6] = n[6],
            t[e + 7] = n[7],
            t[e + 8] = n[8],
            t
        }
    });
    var js = 0;
    l.DEFAULT_IMAGE = void 0,
    l.DEFAULT_MAPPING = 300,
    l.prototype = Object.assign(Object.create(r.prototype), {
        constructor: l,
        isTexture: !0,
        updateMatrix: function() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.name = t.name,
            this.image = t.image,
            this.mipmaps = t.mipmaps.slice(0),
            this.mapping = t.mapping,
            this.wrapS = t.wrapS,
            this.wrapT = t.wrapT,
            this.magFilter = t.magFilter,
            this.minFilter = t.minFilter,
            this.anisotropy = t.anisotropy,
            this.format = t.format,
            this.type = t.type,
            this.offset.copy(t.offset),
            this.repeat.copy(t.repeat),
            this.center.copy(t.center),
            this.rotation = t.rotation,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrix.copy(t.matrix),
            this.generateMipmaps = t.generateMipmaps,
            this.premultiplyAlpha = t.premultiplyAlpha,
            this.flipY = t.flipY,
            this.unpackAlignment = t.unpackAlignment,
            this.encoding = t.encoding,
            this
        },
        toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            if (!e && void 0 !== t.textures[this.uuid])
                return t.textures[this.uuid];
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY
            };
            if (void 0 !== this.image) {
                var r = this.image;
                void 0 === r.uuid && (r.uuid = ks.generateUUID()),
                e || void 0 !== t.images[r.uuid] || (t.images[r.uuid] = {
                    uuid: r.uuid,
                    url: function(t) {
                        var e;
                        if (t instanceof HTMLCanvasElement)
                            e = t;
                        else {
                            e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                            e.width = t.width,
                            e.height = t.height;
                            var n = e.getContext("2d");
                            t instanceof ImageData ? n.putImageData(t, 0, 0) : n.drawImage(t, 0, 0, t.width, t.height)
                        }
                        return e.width > 2048 || e.height > 2048 ? e.toDataURL("image/jpeg", .6) : e.toDataURL("image/png")
                    }(r)
                }),
                n.image = r.uuid
            }
            return e || (t.textures[this.uuid] = n),
            n
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(t) {
            if (300 === this.mapping) {
                if (t.applyMatrix3(this.matrix),
                t.x < 0 || t.x > 1)
                    switch (this.wrapS) {
                    case Ta:
                        t.x = t.x - Math.floor(t.x);
                        break;
                    case Sa:
                        t.x = t.x < 0 ? 0 : 1;
                        break;
                    case Aa:
                        1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x)
                    }
                if (t.y < 0 || t.y > 1)
                    switch (this.wrapT) {
                    case Ta:
                        t.y = t.y - Math.floor(t.y);
                        break;
                    case Sa:
                        t.y = t.y < 0 ? 0 : 1;
                        break;
                    case Aa:
                        1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y)
                    }
                this.flipY && (t.y = 1 - t.y)
            }
        }
    }),
    Object.defineProperty(l.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(u.prototype, {
        isVector4: !0,
        set: function(t, e, n, r) {
            return this.x = t,
            this.y = e,
            this.z = n,
            this.w = r,
            this
        },
        setScalar: function(t) {
            return this.x = t,
            this.y = t,
            this.z = t,
            this.w = t,
            this
        },
        setX: function(t) {
            return this.x = t,
            this
        },
        setY: function(t) {
            return this.y = t,
            this
        },
        setZ: function(t) {
            return this.z = t,
            this
        },
        setW: function(t) {
            return this.w = t,
            this
        },
        setComponent: function(t, e) {
            switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            case 3:
                this.w = e;
                break;
            default:
                throw new Error("index is out of range: " + t)
            }
            return this
        },
        getComponent: function(t) {
            switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + t)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z,this.w)
        },
        copy: function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.z = t.z,
            this.w = void 0 !== t.w ? t.w : 1,
            this
        },
        add: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(t, e)) : (this.x += t.x,
            this.y += t.y,
            this.z += t.z,
            this.w += t.w,
            this)
        },
        addScalar: function(t) {
            return this.x += t,
            this.y += t,
            this.z += t,
            this.w += t,
            this
        },
        addVectors: function(t, e) {
            return this.x = t.x + e.x,
            this.y = t.y + e.y,
            this.z = t.z + e.z,
            this.w = t.w + e.w,
            this
        },
        addScaledVector: function(t, e) {
            return this.x += t.x * e,
            this.y += t.y * e,
            this.z += t.z * e,
            this.w += t.w * e,
            this
        },
        sub: function(t, e) {
            return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(t, e)) : (this.x -= t.x,
            this.y -= t.y,
            this.z -= t.z,
            this.w -= t.w,
            this)
        },
        subScalar: function(t) {
            return this.x -= t,
            this.y -= t,
            this.z -= t,
            this.w -= t,
            this
        },
        subVectors: function(t, e) {
            return this.x = t.x - e.x,
            this.y = t.y - e.y,
            this.z = t.z - e.z,
            this.w = t.w - e.w,
            this
        },
        multiplyScalar: function(t) {
            return this.x *= t,
            this.y *= t,
            this.z *= t,
            this.w *= t,
            this
        },
        applyMatrix4: function(t) {
            var e = this.x
              , n = this.y
              , r = this.z
              , i = this.w
              , o = t.elements;
            return this.x = o[0] * e + o[4] * n + o[8] * r + o[12] * i,
            this.y = o[1] * e + o[5] * n + o[9] * r + o[13] * i,
            this.z = o[2] * e + o[6] * n + o[10] * r + o[14] * i,
            this.w = o[3] * e + o[7] * n + o[11] * r + o[15] * i,
            this
        },
        divideScalar: function(t) {
            return this.multiplyScalar(1 / t)
        },
        setAxisAngleFromQuaternion: function(t) {
            this.w = 2 * Math.acos(t.w);
            var e = Math.sqrt(1 - t.w * t.w);
            return e < 1e-4 ? (this.x = 1,
            this.y = 0,
            this.z = 0) : (this.x = t.x / e,
            this.y = t.y / e,
            this.z = t.z / e),
            this
        },
        setAxisAngleFromRotationMatrix: function(t) {
            var e, n, r, i, o = t.elements, a = o[0], s = o[4], c = o[8], l = o[1], u = o[5], h = o[9], d = o[2], p = o[6], f = o[10];
            if (Math.abs(s - l) < .01 && Math.abs(c - d) < .01 && Math.abs(h - p) < .01) {
                if (Math.abs(s + l) < .1 && Math.abs(c + d) < .1 && Math.abs(h + p) < .1 && Math.abs(a + u + f - 3) < .1)
                    return this.set(1, 0, 0, 0),
                    this;
                e = Math.PI;
                var m = (a + 1) / 2
                  , v = (u + 1) / 2
                  , g = (f + 1) / 2
                  , y = (s + l) / 4
                  , _ = (c + d) / 4
                  , x = (h + p) / 4;
                return m > v && m > g ? m < .01 ? (n = 0,
                r = .707106781,
                i = .707106781) : (n = Math.sqrt(m),
                r = y / n,
                i = _ / n) : v > g ? v < .01 ? (n = .707106781,
                r = 0,
                i = .707106781) : (r = Math.sqrt(v),
                n = y / r,
                i = x / r) : g < .01 ? (n = .707106781,
                r = .707106781,
                i = 0) : (i = Math.sqrt(g),
                n = _ / i,
                r = x / i),
                this.set(n, r, i, e),
                this
            }
            var b = Math.sqrt((p - h) * (p - h) + (c - d) * (c - d) + (l - s) * (l - s));
            return Math.abs(b) < .001 && (b = 1),
            this.x = (p - h) / b,
            this.y = (c - d) / b,
            this.z = (l - s) / b,
            this.w = Math.acos((a + u + f - 1) / 2),
            this
        },
        min: function(t) {
            return this.x = Math.min(this.x, t.x),
            this.y = Math.min(this.y, t.y),
            this.z = Math.min(this.z, t.z),
            this.w = Math.min(this.w, t.w),
            this
        },
        max: function(t) {
            return this.x = Math.max(this.x, t.x),
            this.y = Math.max(this.y, t.y),
            this.z = Math.max(this.z, t.z),
            this.w = Math.max(this.w, t.w),
            this
        },
        clamp: function(t, e) {
            return this.x = Math.max(t.x, Math.min(e.x, this.x)),
            this.y = Math.max(t.y, Math.min(e.y, this.y)),
            this.z = Math.max(t.z, Math.min(e.z, this.z)),
            this.w = Math.max(t.w, Math.min(e.w, this.w)),
            this
        },
        clampScalar: function() {
            var t, e;
            return function(n, r) {
                return void 0 === t && (t = new u,
                e = new u),
                t.set(n, n, n, n),
                e.set(r, r, r, r),
                this.clamp(t, e)
            }
        }(),
        clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(t, Math.min(e, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this.w = Math.floor(this.w),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this.w = Math.ceil(this.w),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this.w = Math.round(this.w),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this.w = -this.w,
            this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(t) {
            return this.normalize().multiplyScalar(t)
        },
        lerp: function(t, e) {
            return this.x += (t.x - this.x) * e,
            this.y += (t.y - this.y) * e,
            this.z += (t.z - this.z) * e,
            this.w += (t.w - this.w) * e,
            this
        },
        lerpVectors: function(t, e, n) {
            return this.subVectors(e, t).multiplyScalar(n).add(t)
        },
        equals: function(t) {
            return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.x = t[e],
            this.y = t[e + 1],
            this.z = t[e + 2],
            this.w = t[e + 3],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.x,
            t[e + 1] = this.y,
            t[e + 2] = this.z,
            t[e + 3] = this.w,
            t
        },
        fromBufferAttribute: function(t, e, n) {
            return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
            this.x = t.getX(e),
            this.y = t.getY(e),
            this.z = t.getZ(e),
            this.w = t.getW(e),
            this
        }
    }),
    h.prototype = Object.assign(Object.create(r.prototype), {
        constructor: h,
        isWebGLRenderTarget: !0,
        setSize: function(t, e) {
            this.width === t && this.height === e || (this.width = t,
            this.height = e,
            this.dispose()),
            this.viewport.set(0, 0, t, e),
            this.scissor.set(0, 0, t, e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.width = t.width,
            this.height = t.height,
            this.viewport.copy(t.viewport),
            this.texture = t.texture.clone(),
            this.depthBuffer = t.depthBuffer,
            this.stencilBuffer = t.stencilBuffer,
            this.depthTexture = t.depthTexture,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    d.prototype = Object.create(h.prototype),
    d.prototype.constructor = d,
    d.prototype.isWebGLRenderTargetCube = !0,
    p.prototype = Object.create(l.prototype),
    p.prototype.constructor = p,
    p.prototype.isDataTexture = !0,
    Object.assign(f.prototype, {
        isBox3: !0,
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromArray: function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = t.length; s < c; s += 3) {
                var l = t[s]
                  , u = t[s + 1]
                  , h = t[s + 2];
                l < e && (e = l),
                u < n && (n = u),
                h < r && (r = h),
                l > i && (i = l),
                u > o && (o = u),
                h > a && (a = h)
            }
            return this.min.set(e, n, r),
            this.max.set(i, o, a),
            this
        },
        setFromBufferAttribute: function(t) {
            for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = t.count; s < c; s++) {
                var l = t.getX(s)
                  , u = t.getY(s)
                  , h = t.getZ(s);
                l < e && (e = l),
                u < n && (n = u),
                h < r && (r = h),
                l > i && (i = l),
                u > o && (o = u),
                h > a && (a = h)
            }
            return this.min.set(e, n, r),
            this.max.set(i, o, a),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new s;
            return function(e, n) {
                var r = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(r),
                this.max.copy(e).add(r),
                this
            }
        }(),
        setFromObject: function(t) {
            return this.makeEmpty(),
            this.expandByObject(t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0,
            this.max.x = this.max.y = this.max.z = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getCenter() target is now required"),
            t = new s),
            this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box3: .getSize() target is now required"),
            t = new s),
            this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        expandByObject: function() {
            function t(t) {
                var o = t.geometry;
                if (void 0 !== o)
                    if (o.isGeometry) {
                        var a = o.vertices;
                        for (n = 0,
                        r = a.length; n < r; n++)
                            i.copy(a[n]),
                            i.applyMatrix4(t.matrixWorld),
                            e.expandByPoint(i)
                    } else if (o.isBufferGeometry) {
                        var s = o.attributes.position;
                        if (void 0 !== s)
                            for (n = 0,
                            r = s.count; n < r; n++)
                                i.fromBufferAttribute(s, n).applyMatrix4(t.matrixWorld),
                                e.expandByPoint(i)
                    }
            }
            var e, n, r, i = new s;
            return function(n) {
                return e = this,
                n.updateMatrixWorld(!0),
                n.traverse(t),
                this
            }
        }(),
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .getParameter() target is now required"),
            e = new s),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z)
        },
        intersectsSphere: function() {
            var t = new s;
            return function(e) {
                return this.clampPoint(e.center, t),
                t.distanceToSquared(e.center) <= e.radius * e.radius
            }
        }(),
        intersectsPlane: function(t) {
            var e, n;
            return t.normal.x > 0 ? (e = t.normal.x * this.min.x,
            n = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x,
            n = t.normal.x * this.min.x),
            t.normal.y > 0 ? (e += t.normal.y * this.min.y,
            n += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y,
            n += t.normal.y * this.min.y),
            t.normal.z > 0 ? (e += t.normal.z * this.min.z,
            n += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z,
            n += t.normal.z * this.min.z),
            e <= t.constant && n >= t.constant
        },
        intersectsTriangle: function() {
            function t(t) {
                var i, o;
                for (i = 0,
                o = t.length - 3; i <= o; i += 3) {
                    c.fromArray(t, i);
                    var a = u.x * Math.abs(c.x) + u.y * Math.abs(c.y) + u.z * Math.abs(c.z)
                      , s = e.dot(c)
                      , l = n.dot(c)
                      , h = r.dot(c);
                    if (Math.max(-Math.max(s, l, h), Math.min(s, l, h)) > a)
                        return !1
                }
                return !0
            }
            var e = new s
              , n = new s
              , r = new s
              , i = new s
              , o = new s
              , a = new s
              , c = new s
              , l = new s
              , u = new s
              , h = new s;
            return function(s) {
                if (this.isEmpty())
                    return !1;
                this.getCenter(l),
                u.subVectors(this.max, l),
                e.subVectors(s.a, l),
                n.subVectors(s.b, l),
                r.subVectors(s.c, l),
                i.subVectors(n, e),
                o.subVectors(r, n),
                a.subVectors(e, r);
                var c = [0, -i.z, i.y, 0, -o.z, o.y, 0, -a.z, a.y, i.z, 0, -i.x, o.z, 0, -o.x, a.z, 0, -a.x, -i.y, i.x, 0, -o.y, o.x, 0, -a.y, a.x, 0];
                return !!t(c) && (c = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                !!t(c) && (h.crossVectors(i, o),
                c = [h.x, h.y, h.z],
                t(c)))
            }
        }(),
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box3: .clampPoint() target is now required"),
            e = new s),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new s;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        getBoundingSphere: function() {
            var t = new s;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Box3: .getBoundingSphere() target is now required"),
                e = new m),
                this.getCenter(e.center),
                e.radius = .5 * this.getSize(t).length(),
                e
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this.isEmpty() && this.makeEmpty(),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        applyMatrix4: function() {
            var t = [new s, new s, new s, new s, new s, new s, new s, new s];
            return function(e) {
                return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                this.setFromPoints(t),
                this)
            }
        }(),
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    Object.assign(m.prototype, {
        set: function(t, e) {
            return this.center.copy(t),
            this.radius = e,
            this
        },
        setFromPoints: function() {
            var t = new f;
            return function(e, n) {
                var r = this.center;
                void 0 !== n ? r.copy(n) : t.setFromPoints(e).getCenter(r);
                for (var i = 0, o = 0, a = e.length; o < a; o++)
                    i = Math.max(i, r.distanceToSquared(e[o]));
                return this.radius = Math.sqrt(i),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.center.copy(t.center),
            this.radius = t.radius,
            this
        },
        empty: function() {
            return this.radius <= 0
        },
        containsPoint: function(t) {
            return t.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(t) {
            return t.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(t) {
            var e = this.radius + t.radius;
            return t.center.distanceToSquared(this.center) <= e * e
        },
        intersectsBox: function(t) {
            return t.intersectsSphere(this)
        },
        intersectsPlane: function(t) {
            return Math.abs(t.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(t, e) {
            var n = this.center.distanceToSquared(t);
            return void 0 === e && (console.warn("THREE.Sphere: .clampPoint() target is now required"),
            e = new s),
            e.copy(t),
            n > this.radius * this.radius && (e.sub(this.center).normalize(),
            e.multiplyScalar(this.radius).add(this.center)),
            e
        },
        getBoundingBox: function(t) {
            return void 0 === t && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"),
            t = new f),
            t.set(this.center, this.center),
            t.expandByScalar(this.radius),
            t
        },
        applyMatrix4: function(t) {
            return this.center.applyMatrix4(t),
            this.radius = this.radius * t.getMaxScaleOnAxis(),
            this
        },
        translate: function(t) {
            return this.center.add(t),
            this
        },
        equals: function(t) {
            return t.center.equals(this.center) && t.radius === this.radius
        }
    }),
    Object.assign(v.prototype, {
        set: function(t, e) {
            return this.normal.copy(t),
            this.constant = e,
            this
        },
        setComponents: function(t, e, n, r) {
            return this.normal.set(t, e, n),
            this.constant = r,
            this
        },
        setFromNormalAndCoplanarPoint: function(t, e) {
            return this.normal.copy(t),
            this.constant = -e.dot(this.normal),
            this
        },
        setFromCoplanarPoints: function() {
            var t = new s
              , e = new s;
            return function(n, r, i) {
                var o = t.subVectors(i, r).cross(e.subVectors(n, r)).normalize();
                return this.setFromNormalAndCoplanarPoint(o, n),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.normal.copy(t.normal),
            this.constant = t.constant,
            this
        },
        normalize: function() {
            var t = 1 / this.normal.length();
            return this.normal.multiplyScalar(t),
            this.constant *= t,
            this
        },
        negate: function() {
            return this.constant *= -1,
            this.normal.negate(),
            this
        },
        distanceToPoint: function(t) {
            return this.normal.dot(t) + this.constant
        },
        distanceToSphere: function(t) {
            return this.distanceToPoint(t.center) - t.radius
        },
        projectPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Plane: .projectPoint() target is now required"),
            e = new s),
            e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
        },
        intersectLine: function() {
            var t = new s;
            return function(e, n) {
                void 0 === n && (console.warn("THREE.Plane: .intersectLine() target is now required"),
                n = new s);
                var r = e.delta(t)
                  , i = this.normal.dot(r);
                if (0 !== i) {
                    var o = -(e.start.dot(this.normal) + this.constant) / i;
                    if (!(o < 0 || o > 1))
                        return n.copy(r).multiplyScalar(o).add(e.start)
                } else if (0 === this.distanceToPoint(e.start))
                    return n.copy(e.start)
            }
        }(),
        intersectsLine: function(t) {
            var e = this.distanceToPoint(t.start)
              , n = this.distanceToPoint(t.end);
            return e < 0 && n > 0 || n < 0 && e > 0
        },
        intersectsBox: function(t) {
            return t.intersectsPlane(this)
        },
        intersectsSphere: function(t) {
            return t.intersectsPlane(this)
        },
        coplanarPoint: function(t) {
            return void 0 === t && (console.warn("THREE.Plane: .coplanarPoint() target is now required"),
            t = new s),
            t.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function() {
            var t = new s
              , e = new c;
            return function(n, r) {
                var i = r || e.getNormalMatrix(n)
                  , o = this.coplanarPoint(t).applyMatrix4(n)
                  , a = this.normal.applyMatrix3(i).normalize();
                return this.constant = -o.dot(a),
                this
            }
        }(),
        translate: function(t) {
            return this.constant -= t.dot(this.normal),
            this
        },
        equals: function(t) {
            return t.normal.equals(this.normal) && t.constant === this.constant
        }
    }),
    Object.assign(g.prototype, {
        set: function(t, e, n, r, i, o) {
            var a = this.planes;
            return a[0].copy(t),
            a[1].copy(e),
            a[2].copy(n),
            a[3].copy(r),
            a[4].copy(i),
            a[5].copy(o),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                e[n].copy(t.planes[n]);
            return this
        },
        setFromMatrix: function(t) {
            var e = this.planes
              , n = t.elements
              , r = n[0]
              , i = n[1]
              , o = n[2]
              , a = n[3]
              , s = n[4]
              , c = n[5]
              , l = n[6]
              , u = n[7]
              , h = n[8]
              , d = n[9]
              , p = n[10]
              , f = n[11]
              , m = n[12]
              , v = n[13]
              , g = n[14]
              , y = n[15];
            return e[0].setComponents(a - r, u - s, f - h, y - m).normalize(),
            e[1].setComponents(a + r, u + s, f + h, y + m).normalize(),
            e[2].setComponents(a + i, u + c, f + d, y + v).normalize(),
            e[3].setComponents(a - i, u - c, f - d, y - v).normalize(),
            e[4].setComponents(a - o, u - l, f - p, y - g).normalize(),
            e[5].setComponents(a + o, u + l, f + p, y + g).normalize(),
            this
        },
        intersectsObject: function() {
            var t = new m;
            return function(e) {
                var n = e.geometry;
                return null === n.boundingSphere && n.computeBoundingSphere(),
                t.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
            }
        }(),
        intersectsSprite: function() {
            var t = new m;
            return function(e) {
                return t.center.set(0, 0, 0),
                t.radius = .7071067811865476,
                t.applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
            }
        }(),
        intersectsSphere: function(t) {
            for (var e = this.planes, n = t.center, r = -t.radius, i = 0; i < 6; i++) {
                if (e[i].distanceToPoint(n) < r)
                    return !1
            }
            return !0
        },
        intersectsBox: function() {
            var t = new s
              , e = new s;
            return function(n) {
                for (var r = this.planes, i = 0; i < 6; i++) {
                    var o = r[i];
                    t.x = o.normal.x > 0 ? n.min.x : n.max.x,
                    e.x = o.normal.x > 0 ? n.max.x : n.min.x,
                    t.y = o.normal.y > 0 ? n.min.y : n.max.y,
                    e.y = o.normal.y > 0 ? n.max.y : n.min.y,
                    t.z = o.normal.z > 0 ? n.min.z : n.max.z,
                    e.z = o.normal.z > 0 ? n.max.z : n.min.z;
                    var a = o.distanceToPoint(t)
                      , s = o.distanceToPoint(e);
                    if (a < 0 && s < 0)
                        return !1
                }
                return !0
            }
        }(),
        containsPoint: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
                if (e[n].distanceToPoint(t) < 0)
                    return !1;
            return !0
        }
    });
    var zs = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "\nvec3 transformed = vec3( position );\n",
        beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
        bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif\n",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
        defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
        encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
        envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
        fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
        gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
        lights_pars_begin: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n",
        lights_pars_maps: "#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif\n",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif\n",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
        map_particle_fragment: "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
        map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n",
        normal_fragment_maps: "#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\t\tscale *= float( gl_FrontFacing ) * 2.0 - 1.0;\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
        project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",
        dithering_fragment: "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",
        dithering_pars_fragment: "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
        tonemapping_pars_fragment: "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
        uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",
        uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",
        cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
        cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
        equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars_begin>\n#include <lights_pars_maps>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",
        meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",
        shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"
    }
      , Bs = {
        merge: function(t) {
            for (var e = {}, n = 0; n < t.length; n++) {
                var r = this.clone(t[n]);
                for (var i in r)
                    e[i] = r[i]
            }
            return e
        },
        clone: function(t) {
            var e = {};
            for (var n in t) {
                e[n] = {};
                for (var r in t[n]) {
                    var i = t[n][r];
                    i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? e[n][r] = i.clone() : Array.isArray(i) ? e[n][r] = i.slice() : e[n][r] = i
                }
            }
            return e
        }
    }
      , Us = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    Object.assign(y.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(t) {
            return t && t.isColor ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t),
            this
        },
        setScalar: function(t) {
            return this.r = t,
            this.g = t,
            this.b = t,
            this
        },
        setHex: function(t) {
            return t = Math.floor(t),
            this.r = (t >> 16 & 255) / 255,
            this.g = (t >> 8 & 255) / 255,
            this.b = (255 & t) / 255,
            this
        },
        setRGB: function(t, e, n) {
            return this.r = t,
            this.g = e,
            this.b = n,
            this
        },
        setHSL: function() {
            function t(t, e, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
            }
            return function(e, n, r) {
                if (e = ks.euclideanModulo(e, 1),
                n = ks.clamp(n, 0, 1),
                r = ks.clamp(r, 0, 1),
                0 === n)
                    this.r = this.g = this.b = r;
                else {
                    var i = r <= .5 ? r * (1 + n) : r + n - r * n
                      , o = 2 * r - i;
                    this.r = t(o, i, e + 1 / 3),
                    this.g = t(o, i, e),
                    this.b = t(o, i, e - 1 / 3)
                }
                return this
            }
        }(),
        setStyle: function(t) {
            function e(e) {
                void 0 !== e && parseFloat(e) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
                var r, i = n[1], o = n[2];
                switch (i) {
                case "rgb":
                case "rgba":
                    if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                        return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                        this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                        this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                        e(r[5]),
                        this;
                    if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                        return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                        this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                        this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                        e(r[5]),
                        this;
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
                        var a = parseFloat(r[1]) / 360
                          , s = parseInt(r[2], 10) / 100
                          , c = parseInt(r[3], 10) / 100;
                        return e(r[5]),
                        this.setHSL(a, s, c)
                    }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
                var l = n[1]
                  , u = l.length;
                if (3 === u)
                    return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255,
                    this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255,
                    this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255,
                    this;
                if (6 === u)
                    return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255,
                    this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255,
                    this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255,
                    this
            }
            if (t && t.length > 0) {
                var l = Us[t];
                void 0 !== l ? this.setHex(l) : console.warn("THREE.Color: Unknown color " + t)
            }
            return this
        },
        clone: function() {
            return new this.constructor(this.r,this.g,this.b)
        },
        copy: function(t) {
            return this.r = t.r,
            this.g = t.g,
            this.b = t.b,
            this
        },
        copyGammaToLinear: function(t, e) {
            return void 0 === e && (e = 2),
            this.r = Math.pow(t.r, e),
            this.g = Math.pow(t.g, e),
            this.b = Math.pow(t.b, e),
            this
        },
        copyLinearToGamma: function(t, e) {
            void 0 === e && (e = 2);
            var n = e > 0 ? 1 / e : 1;
            return this.r = Math.pow(t.r, n),
            this.g = Math.pow(t.g, n),
            this.b = Math.pow(t.b, n),
            this
        },
        convertGammaToLinear: function() {
            var t = this.r
              , e = this.g
              , n = this.b;
            return this.r = t * t,
            this.g = e * e,
            this.b = n * n,
            this
        },
        convertLinearToGamma: function() {
            return this.r = Math.sqrt(this.r),
            this.g = Math.sqrt(this.g),
            this.b = Math.sqrt(this.b),
            this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(t) {
            void 0 === t && (console.warn("THREE.Color: .getHSL() target is now required"),
            t = {
                h: 0,
                s: 0,
                l: 0
            });
            var e, n, r = this.r, i = this.g, o = this.b, a = Math.max(r, i, o), s = Math.min(r, i, o), c = (s + a) / 2;
            if (s === a)
                e = 0,
                n = 0;
            else {
                var l = a - s;
                switch (n = c <= .5 ? l / (a + s) : l / (2 - a - s),
                a) {
                case r:
                    e = (i - o) / l + (i < o ? 6 : 0);
                    break;
                case i:
                    e = (o - r) / l + 2;
                    break;
                case o:
                    e = (r - i) / l + 4
                }
                e /= 6
            }
            return t.h = e,
            t.s = n,
            t.l = c,
            t
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function() {
            var t = {};
            return function(e, n, r) {
                return this.getHSL(t),
                t.h += e,
                t.s += n,
                t.l += r,
                this.setHSL(t.h, t.s, t.l),
                this
            }
        }(),
        add: function(t) {
            return this.r += t.r,
            this.g += t.g,
            this.b += t.b,
            this
        },
        addColors: function(t, e) {
            return this.r = t.r + e.r,
            this.g = t.g + e.g,
            this.b = t.b + e.b,
            this
        },
        addScalar: function(t) {
            return this.r += t,
            this.g += t,
            this.b += t,
            this
        },
        sub: function(t) {
            return this.r = Math.max(0, this.r - t.r),
            this.g = Math.max(0, this.g - t.g),
            this.b = Math.max(0, this.b - t.b),
            this
        },
        multiply: function(t) {
            return this.r *= t.r,
            this.g *= t.g,
            this.b *= t.b,
            this
        },
        multiplyScalar: function(t) {
            return this.r *= t,
            this.g *= t,
            this.b *= t,
            this
        },
        lerp: function(t, e) {
            return this.r += (t.r - this.r) * e,
            this.g += (t.g - this.g) * e,
            this.b += (t.b - this.b) * e,
            this
        },
        equals: function(t) {
            return t.r === this.r && t.g === this.g && t.b === this.b
        },
        fromArray: function(t, e) {
            return void 0 === e && (e = 0),
            this.r = t[e],
            this.g = t[e + 1],
            this.b = t[e + 2],
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this.r,
            t[e + 1] = this.g,
            t[e + 2] = this.b,
            t
        },
        toJSON: function() {
            return this.getHex()
        }
    });
    var Fs = {
        common: {
            diffuse: {
                value: new y(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new c
            },
            alphaMap: {
                value: null
            }
        },
        specularmap: {
            specularMap: {
                value: null
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            },
            maxMipLevel: {
                value: 0
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new i(1,1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new y(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {},
                    shadow: {},
                    shadowBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new y(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new c
            }
        }
    }
      , Hs = {
        basic: {
            uniforms: Bs.merge([Fs.common, Fs.specularmap, Fs.envmap, Fs.aomap, Fs.lightmap, Fs.fog]),
            vertexShader: zs.meshbasic_vert,
            fragmentShader: zs.meshbasic_frag
        },
        lambert: {
            uniforms: Bs.merge([Fs.common, Fs.specularmap, Fs.envmap, Fs.aomap, Fs.lightmap, Fs.emissivemap, Fs.fog, Fs.lights, {
                emissive: {
                    value: new y(0)
                }
            }]),
            vertexShader: zs.meshlambert_vert,
            fragmentShader: zs.meshlambert_frag
        },
        phong: {
            uniforms: Bs.merge([Fs.common, Fs.specularmap, Fs.envmap, Fs.aomap, Fs.lightmap, Fs.emissivemap, Fs.bumpmap, Fs.normalmap, Fs.displacementmap, Fs.gradientmap, Fs.fog, Fs.lights, {
                emissive: {
                    value: new y(0)
                },
                specular: {
                    value: new y(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: zs.meshphong_vert,
            fragmentShader: zs.meshphong_frag
        },
        standard: {
            uniforms: Bs.merge([Fs.common, Fs.envmap, Fs.aomap, Fs.lightmap, Fs.emissivemap, Fs.bumpmap, Fs.normalmap, Fs.displacementmap, Fs.roughnessmap, Fs.metalnessmap, Fs.fog, Fs.lights, {
                emissive: {
                    value: new y(0)
                },
                roughness: {
                    value: .5
                },
                metalness: {
                    value: .5
                },
                envMapIntensity: {
                    value: 1
                }
            }]),
            vertexShader: zs.meshphysical_vert,
            fragmentShader: zs.meshphysical_frag
        },
        points: {
            uniforms: Bs.merge([Fs.points, Fs.fog]),
            vertexShader: zs.points_vert,
            fragmentShader: zs.points_frag
        },
        dashed: {
            uniforms: Bs.merge([Fs.common, Fs.fog, {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }]),
            vertexShader: zs.linedashed_vert,
            fragmentShader: zs.linedashed_frag
        },
        depth: {
            uniforms: Bs.merge([Fs.common, Fs.displacementmap]),
            vertexShader: zs.depth_vert,
            fragmentShader: zs.depth_frag
        },
        normal: {
            uniforms: Bs.merge([Fs.common, Fs.bumpmap, Fs.normalmap, Fs.displacementmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: zs.normal_vert,
            fragmentShader: zs.normal_frag
        },
        cube: {
            uniforms: {
                tCube: {
                    value: null
                },
                tFlip: {
                    value: -1
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: zs.cube_vert,
            fragmentShader: zs.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: zs.equirect_vert,
            fragmentShader: zs.equirect_frag
        },
        distanceRGBA: {
            uniforms: Bs.merge([Fs.common, Fs.displacementmap, {
                referencePosition: {
                    value: new s
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }]),
            vertexShader: zs.distanceRGBA_vert,
            fragmentShader: zs.distanceRGBA_frag
        },
        shadow: {
            uniforms: Bs.merge([Fs.lights, Fs.fog, {
                color: {
                    value: new y(0)
                },
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: zs.shadow_vert,
            fragmentShader: zs.shadow_frag
        }
    };
    Hs.physical = {
        uniforms: Bs.merge([Hs.standard.uniforms, {
            clearCoat: {
                value: 0
            },
            clearCoatRoughness: {
                value: 0
            }
        }]),
        vertexShader: zs.meshphysical_vert,
        fragmentShader: zs.meshphysical_frag
    },
    x.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
    x.DefaultOrder = "XYZ",
    Object.defineProperties(x.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(t) {
                this._x = t,
                this.onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(t) {
                this._y = t,
                this.onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(t) {
                this._z = t,
                this.onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(t) {
                this._order = t,
                this.onChangeCallback()
            }
        }
    }),
    Object.assign(x.prototype, {
        isEuler: !0,
        set: function(t, e, n, r) {
            return this._x = t,
            this._y = e,
            this._z = n,
            this._order = r || this._order,
            this.onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._order)
        },
        copy: function(t) {
            return this._x = t._x,
            this._y = t._y,
            this._z = t._z,
            this._order = t._order,
            this.onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(t, e, n) {
            var r = ks.clamp
              , i = t.elements
              , o = i[0]
              , a = i[4]
              , s = i[8]
              , c = i[1]
              , l = i[5]
              , u = i[9]
              , h = i[2]
              , d = i[6]
              , p = i[10];
            return e = e || this._order,
            "XYZ" === e ? (this._y = Math.asin(r(s, -1, 1)),
            Math.abs(s) < .99999 ? (this._x = Math.atan2(-u, p),
            this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(d, l),
            this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-r(u, -1, 1)),
            Math.abs(u) < .99999 ? (this._y = Math.atan2(s, p),
            this._z = Math.atan2(c, l)) : (this._y = Math.atan2(-h, o),
            this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(r(d, -1, 1)),
            Math.abs(d) < .99999 ? (this._y = Math.atan2(-h, p),
            this._z = Math.atan2(-a, l)) : (this._y = 0,
            this._z = Math.atan2(c, o))) : "ZYX" === e ? (this._y = Math.asin(-r(h, -1, 1)),
            Math.abs(h) < .99999 ? (this._x = Math.atan2(d, p),
            this._z = Math.atan2(c, o)) : (this._x = 0,
            this._z = Math.atan2(-a, l))) : "YZX" === e ? (this._z = Math.asin(r(c, -1, 1)),
            Math.abs(c) < .99999 ? (this._x = Math.atan2(-u, l),
            this._y = Math.atan2(-h, o)) : (this._x = 0,
            this._y = Math.atan2(s, p))) : "XZY" === e ? (this._z = Math.asin(-r(a, -1, 1)),
            Math.abs(a) < .99999 ? (this._x = Math.atan2(d, l),
            this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-u, p),
            this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e),
            this._order = e,
            !1 !== n && this.onChangeCallback(),
            this
        },
        setFromQuaternion: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeRotationFromQuaternion(e),
                this.setFromRotationMatrix(t, n, r)
            }
        }(),
        setFromVector3: function(t, e) {
            return this.set(t.x, t.y, t.z, e || this._order)
        },
        reorder: function() {
            var t = new a;
            return function(e) {
                return t.setFromEuler(this),
                this.setFromQuaternion(t, e)
            }
        }(),
        equals: function(t) {
            return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
        },
        fromArray: function(t) {
            return this._x = t[0],
            this._y = t[1],
            this._z = t[2],
            void 0 !== t[3] && (this._order = t[3]),
            this.onChangeCallback(),
            this
        },
        toArray: function(t, e) {
            return void 0 === t && (t = []),
            void 0 === e && (e = 0),
            t[e] = this._x,
            t[e + 1] = this._y,
            t[e + 2] = this._z,
            t[e + 3] = this._order,
            t
        },
        toVector3: function(t) {
            return t ? t.set(this._x, this._y, this._z) : new s(this._x,this._y,this._z)
        },
        onChange: function(t) {
            return this.onChangeCallback = t,
            this
        },
        onChangeCallback: function() {}
    }),
    Object.assign(b.prototype, {
        set: function(t) {
            this.mask = 1 << t | 0
        },
        enable: function(t) {
            this.mask |= 1 << t | 0
        },
        toggle: function(t) {
            this.mask ^= 1 << t | 0
        },
        disable: function(t) {
            this.mask &= ~(1 << t | 0)
        },
        test: function(t) {
            return 0 != (this.mask & t.mask)
        }
    });
    var Gs = 0;
    w.DefaultUp = new s(0,1,0),
    w.DefaultMatrixAutoUpdate = !0,
    w.prototype = Object.assign(Object.create(r.prototype), {
        constructor: w,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix: function(t) {
            this.matrix.multiplyMatrices(t, this.matrix),
            this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(t) {
            return this.quaternion.premultiply(t),
            this
        },
        setRotationFromAxisAngle: function(t, e) {
            this.quaternion.setFromAxisAngle(t, e)
        },
        setRotationFromEuler: function(t) {
            this.quaternion.setFromEuler(t, !0)
        },
        setRotationFromMatrix: function(t) {
            this.quaternion.setFromRotationMatrix(t)
        },
        setRotationFromQuaternion: function(t) {
            this.quaternion.copy(t)
        },
        rotateOnAxis: function() {
            var t = new a;
            return function(e, n) {
                return t.setFromAxisAngle(e, n),
                this.quaternion.multiply(t),
                this
            }
        }(),
        rotateOnWorldAxis: function() {
            var t = new a;
            return function(e, n) {
                return t.setFromAxisAngle(e, n),
                this.quaternion.premultiply(t),
                this
            }
        }(),
        rotateX: function() {
            var t = new s(1,0,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateY: function() {
            var t = new s(0,1,0);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        rotateZ: function() {
            var t = new s(0,0,1);
            return function(e) {
                return this.rotateOnAxis(t, e)
            }
        }(),
        translateOnAxis: function() {
            var t = new s;
            return function(e, n) {
                return t.copy(e).applyQuaternion(this.quaternion),
                this.position.add(t.multiplyScalar(n)),
                this
            }
        }(),
        translateX: function() {
            var t = new s(1,0,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateY: function() {
            var t = new s(0,1,0);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        translateZ: function() {
            var t = new s(0,0,1);
            return function(e) {
                return this.translateOnAxis(t, e)
            }
        }(),
        localToWorld: function(t) {
            return t.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function() {
            var t = new o;
            return function(e) {
                return e.applyMatrix4(t.getInverse(this.matrixWorld))
            }
        }(),
        lookAt: function() {
            var t = new o
              , e = new s;
            return function(n, r, i) {
                n.isVector3 ? e.copy(n) : e.set(n, r, i),
                this.isCamera ? t.lookAt(this.position, e, this.up) : t.lookAt(e, this.position, this.up),
                this.quaternion.setFromRotationMatrix(t)
            }
        }(),
        add: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.add(arguments[e]);
                return this
            }
            return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t),
            this) : (t && t.isObject3D ? (null !== t.parent && t.parent.remove(t),
            t.parent = this,
            t.dispatchEvent({
                type: "added"
            }),
            this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t),
            this)
        },
        remove: function(t) {
            if (arguments.length > 1) {
                for (var e = 0; e < arguments.length; e++)
                    this.remove(arguments[e]);
                return this
            }
            var n = this.children.indexOf(t);
            return -1 !== n && (t.parent = null,
            t.dispatchEvent({
                type: "removed"
            }),
            this.children.splice(n, 1)),
            this
        },
        getObjectById: function(t) {
            return this.getObjectByProperty("id", t)
        },
        getObjectByName: function(t) {
            return this.getObjectByProperty("name", t)
        },
        getObjectByProperty: function(t, e) {
            if (this[t] === e)
                return this;
            for (var n = 0, r = this.children.length; n < r; n++) {
                var i = this.children[n]
                  , o = i.getObjectByProperty(t, e);
                if (void 0 !== o)
                    return o
            }
        },
        getWorldPosition: function(t) {
            return void 0 === t && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"),
            t = new s),
            this.updateMatrixWorld(!0),
            t.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: function() {
            var t = new s
              , e = new s;
            return function(n) {
                return void 0 === n && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),
                n = new a),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, n, e),
                n
            }
        }(),
        getWorldScale: function() {
            var t = new s
              , e = new a;
            return function(n) {
                return void 0 === n && (console.warn("THREE.Object3D: .getWorldScale() target is now required"),
                n = new s),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, e, n),
                n
            }
        }(),
        getWorldDirection: function() {
            var t = new a;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
                e = new s),
                this.getWorldQuaternion(t),
                e.set(0, 0, 1).applyQuaternion(t)
            }
        }(),
        raycast: function() {},
        traverse: function(t) {
            t(this);
            for (var e = this.children, n = 0, r = e.length; n < r; n++)
                e[n].traverse(t)
        },
        traverseVisible: function(t) {
            if (!1 !== this.visible) {
                t(this);
                for (var e = this.children, n = 0, r = e.length; n < r; n++)
                    e[n].traverseVisible(t)
            }
        },
        traverseAncestors: function(t) {
            var e = this.parent;
            null !== e && (t(e),
            e.traverseAncestors(t))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
            this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            this.matrixWorldNeedsUpdate = !1,
            t = !0);
            for (var e = this.children, n = 0, r = e.length; n < r; n++)
                e[n].updateMatrixWorld(t)
        },
        toJSON: function(t) {
            function e(e, n) {
                return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)),
                n.uuid
            }
            function n(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    delete r.metadata,
                    e.push(r)
                }
                return e
            }
            var r = void 0 === t || "string" == typeof t
              , i = {};
            r && (t = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            },
            i.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var o = {};
            if (o.uuid = this.uuid,
            o.type = this.type,
            "" !== this.name && (o.name = this.name),
            !0 === this.castShadow && (o.castShadow = !0),
            !0 === this.receiveShadow && (o.receiveShadow = !0),
            !1 === this.visible && (o.visible = !1),
            !1 === this.frustumCulled && (o.frustumCulled = !1),
            0 !== this.renderOrder && (o.renderOrder = this.renderOrder),
            "{}" !== JSON.stringify(this.userData) && (o.userData = this.userData),
            o.matrix = this.matrix.toArray(),
            !1 === this.matrixAutoUpdate && (o.matrixAutoUpdate = !1),
            void 0 !== this.geometry) {
                o.geometry = e(t.geometries, this.geometry);
                var a = this.geometry.parameters;
                if (void 0 !== a && void 0 !== a.shapes) {
                    var s = a.shapes;
                    if (Array.isArray(s))
                        for (var c = 0, l = s.length; c < l; c++) {
                            var u = s[c];
                            e(t.shapes, u)
                        }
                    else
                        e(t.shapes, s)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    for (var h = [], c = 0, l = this.material.length; c < l; c++)
                        h.push(e(t.materials, this.material[c]));
                    o.material = h
                } else
                    o.material = e(t.materials, this.material);
            if (this.children.length > 0) {
                o.children = [];
                for (var c = 0; c < this.children.length; c++)
                    o.children.push(this.children[c].toJSON(t).object)
            }
            if (r) {
                var d = n(t.geometries)
                  , p = n(t.materials)
                  , f = n(t.textures)
                  , m = n(t.images)
                  , s = n(t.shapes);
                d.length > 0 && (i.geometries = d),
                p.length > 0 && (i.materials = p),
                f.length > 0 && (i.textures = f),
                m.length > 0 && (i.images = m),
                s.length > 0 && (i.shapes = s)
            }
            return i.object = o,
            i
        },
        clone: function(t) {
            return (new this.constructor).copy(this, t)
        },
        copy: function(t, e) {
            if (void 0 === e && (e = !0),
            this.name = t.name,
            this.up.copy(t.up),
            this.position.copy(t.position),
            this.quaternion.copy(t.quaternion),
            this.scale.copy(t.scale),
            this.matrix.copy(t.matrix),
            this.matrixWorld.copy(t.matrixWorld),
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate,
            this.layers.mask = t.layers.mask,
            this.visible = t.visible,
            this.castShadow = t.castShadow,
            this.receiveShadow = t.receiveShadow,
            this.frustumCulled = t.frustumCulled,
            this.renderOrder = t.renderOrder,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            !0 === e)
                for (var n = 0; n < t.children.length; n++) {
                    var r = t.children[n];
                    this.add(r.clone())
                }
            return this
        }
    }),
    M.prototype = Object.assign(Object.create(w.prototype), {
        constructor: M,
        isCamera: !0,
        copy: function(t, e) {
            return w.prototype.copy.call(this, t, e),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this
        },
        getWorldDirection: function() {
            var t = new a;
            return function(e) {
                return void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"),
                e = new s),
                this.getWorldQuaternion(t),
                e.set(0, 0, -1).applyQuaternion(t)
            }
        }(),
        updateMatrixWorld: function(t) {
            w.prototype.updateMatrixWorld.call(this, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    E.prototype = Object.assign(Object.create(M.prototype), {
        constructor: E,
        isOrthographicCamera: !0,
        copy: function(t, e) {
            return M.prototype.copy.call(this, t, e),
            this.left = t.left,
            this.right = t.right,
            this.top = t.top,
            this.bottom = t.bottom,
            this.near = t.near,
            this.far = t.far,
            this.zoom = t.zoom,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this
        },
        setViewOffset: function(t, e, n, r, i, o) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = o,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = (this.right - this.left) / (2 * this.zoom)
              , e = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , r = (this.top + this.bottom) / 2
              , i = n - t
              , o = n + t
              , a = r + e
              , s = r - e;
            if (null !== this.view && this.view.enabled) {
                var c = this.zoom / (this.view.width / this.view.fullWidth)
                  , l = this.zoom / (this.view.height / this.view.fullHeight)
                  , u = (this.right - this.left) / this.view.width
                  , h = (this.top - this.bottom) / this.view.height;
                i += u * (this.view.offsetX / c),
                o = i + u * (this.view.width / c),
                a -= h * (this.view.offsetY / l),
                s = a - h * (this.view.height / l)
            }
            this.projectionMatrix.makeOrthographic(i, o, a, s, this.near, this.far)
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.zoom = this.zoom,
            e.object.left = this.left,
            e.object.right = this.right,
            e.object.top = this.top,
            e.object.bottom = this.bottom,
            e.object.near = this.near,
            e.object.far = this.far,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e
        }
    }),
    Object.assign(T.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.a = t.a,
            this.b = t.b,
            this.c = t.c,
            this.normal.copy(t.normal),
            this.color.copy(t.color),
            this.materialIndex = t.materialIndex;
            for (var e = 0, n = t.vertexNormals.length; e < n; e++)
                this.vertexNormals[e] = t.vertexNormals[e].clone();
            for (var e = 0, n = t.vertexColors.length; e < n; e++)
                this.vertexColors[e] = t.vertexColors[e].clone();
            return this
        }
    });
    var Vs = 0;
    S.prototype = Object.assign(Object.create(r.prototype), {
        constructor: S,
        isGeometry: !0,
        applyMatrix: function(t) {
            for (var e = (new c).getNormalMatrix(t), n = 0, r = this.vertices.length; n < r; n++) {
                this.vertices[n].applyMatrix4(t)
            }
            for (var n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n];
                i.normal.applyMatrix3(e).normalize();
                for (var o = 0, a = i.vertexNormals.length; o < a; o++)
                    i.vertexNormals[o].applyMatrix3(e).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this.verticesNeedUpdate = !0,
            this.normalsNeedUpdate = !0,
            this
        },
        rotateX: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeTranslation(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeScale(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: function() {
            var t = new w;
            return function(e) {
                t.lookAt(e),
                t.updateMatrix(),
                this.applyMatrix(t.matrix)
            }
        }(),
        fromBufferGeometry: function(t) {
            function e(t, e, r, i) {
                var o = void 0 !== c ? [d[t].clone(), d[e].clone(), d[r].clone()] : []
                  , a = void 0 !== l ? [n.colors[t].clone(), n.colors[e].clone(), n.colors[r].clone()] : []
                  , s = new T(t,e,r,o,a,i);
                n.faces.push(s),
                void 0 !== u && n.faceVertexUvs[0].push([p[t].clone(), p[e].clone(), p[r].clone()]),
                void 0 !== h && n.faceVertexUvs[1].push([f[t].clone(), f[e].clone(), f[r].clone()])
            }
            var n = this
              , r = null !== t.index ? t.index.array : void 0
              , o = t.attributes
              , a = o.position.array
              , c = void 0 !== o.normal ? o.normal.array : void 0
              , l = void 0 !== o.color ? o.color.array : void 0
              , u = void 0 !== o.uv ? o.uv.array : void 0
              , h = void 0 !== o.uv2 ? o.uv2.array : void 0;
            void 0 !== h && (this.faceVertexUvs[1] = []);
            for (var d = [], p = [], f = [], m = 0, v = 0; m < a.length; m += 3,
            v += 2)
                n.vertices.push(new s(a[m],a[m + 1],a[m + 2])),
                void 0 !== c && d.push(new s(c[m],c[m + 1],c[m + 2])),
                void 0 !== l && n.colors.push(new y(l[m],l[m + 1],l[m + 2])),
                void 0 !== u && p.push(new i(u[v],u[v + 1])),
                void 0 !== h && f.push(new i(h[v],h[v + 1]));
            var g = t.groups;
            if (g.length > 0)
                for (var m = 0; m < g.length; m++)
                    for (var _ = g[m], x = _.start, b = _.count, v = x, w = x + b; v < w; v += 3)
                        void 0 !== r ? e(r[v], r[v + 1], r[v + 2], _.materialIndex) : e(v, v + 1, v + 2, _.materialIndex);
            else if (void 0 !== r)
                for (var m = 0; m < r.length; m += 3)
                    e(r[m], r[m + 1], r[m + 2]);
            else
                for (var m = 0; m < a.length / 3; m += 3)
                    e(m, m + 1, m + 2);
            return this.computeFaceNormals(),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            this
        },
        center: function() {
            var t = new s;
            return function() {
                return this.computeBoundingBox(),
                this.boundingBox.getCenter(t).negate(),
                this.translate(t.x, t.y, t.z),
                this
            }
        }(),
        normalize: function() {
            this.computeBoundingSphere();
            var t = this.boundingSphere.center
              , e = this.boundingSphere.radius
              , n = 0 === e ? 1 : 1 / e
              , r = new o;
            return r.set(n, 0, 0, -n * t.x, 0, n, 0, -n * t.y, 0, 0, n, -n * t.z, 0, 0, 0, 1),
            this.applyMatrix(r),
            this
        },
        computeFaceNormals: function() {
            for (var t = new s, e = new s, n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n]
                  , o = this.vertices[i.a]
                  , a = this.vertices[i.b]
                  , c = this.vertices[i.c];
                t.subVectors(c, a),
                e.subVectors(o, a),
                t.cross(e),
                t.normalize(),
                i.normal.copy(t)
            }
        },
        computeVertexNormals: function(t) {
            void 0 === t && (t = !0);
            var e, n, r, i, o, a;
            for (a = new Array(this.vertices.length),
            e = 0,
            n = this.vertices.length; e < n; e++)
                a[e] = new s;
            if (t) {
                var c, l, u, h = new s, d = new s;
                for (r = 0,
                i = this.faces.length; r < i; r++)
                    o = this.faces[r],
                    c = this.vertices[o.a],
                    l = this.vertices[o.b],
                    u = this.vertices[o.c],
                    h.subVectors(u, l),
                    d.subVectors(c, l),
                    h.cross(d),
                    a[o.a].add(h),
                    a[o.b].add(h),
                    a[o.c].add(h)
            } else
                for (this.computeFaceNormals(),
                r = 0,
                i = this.faces.length; r < i; r++)
                    o = this.faces[r],
                    a[o.a].add(o.normal),
                    a[o.b].add(o.normal),
                    a[o.c].add(o.normal);
            for (e = 0,
            n = this.vertices.length; e < n; e++)
                a[e].normalize();
            for (r = 0,
            i = this.faces.length; r < i; r++) {
                o = this.faces[r];
                var p = o.vertexNormals;
                3 === p.length ? (p[0].copy(a[o.a]),
                p[1].copy(a[o.b]),
                p[2].copy(a[o.c])) : (p[0] = a[o.a].clone(),
                p[1] = a[o.b].clone(),
                p[2] = a[o.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            var t, e, n;
            for (this.computeFaceNormals(),
            t = 0,
            e = this.faces.length; t < e; t++) {
                n = this.faces[t];
                var r = n.vertexNormals;
                3 === r.length ? (r[0].copy(n.normal),
                r[1].copy(n.normal),
                r[2].copy(n.normal)) : (r[0] = n.normal.clone(),
                r[1] = n.normal.clone(),
                r[2] = n.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            var t, e, n, r, i;
            for (n = 0,
            r = this.faces.length; n < r; n++)
                for (i = this.faces[n],
                i.__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(),
                i.__originalVertexNormals || (i.__originalVertexNormals = []),
                t = 0,
                e = i.vertexNormals.length; t < e; t++)
                    i.__originalVertexNormals[t] ? i.__originalVertexNormals[t].copy(i.vertexNormals[t]) : i.__originalVertexNormals[t] = i.vertexNormals[t].clone();
            var o = new S;
            for (o.faces = this.faces,
            t = 0,
            e = this.morphTargets.length; t < e; t++) {
                if (!this.morphNormals[t]) {
                    this.morphNormals[t] = {},
                    this.morphNormals[t].faceNormals = [],
                    this.morphNormals[t].vertexNormals = [];
                    var a, c, l = this.morphNormals[t].faceNormals, u = this.morphNormals[t].vertexNormals;
                    for (n = 0,
                    r = this.faces.length; n < r; n++)
                        a = new s,
                        c = {
                            a: new s,
                            b: new s,
                            c: new s
                        },
                        l.push(a),
                        u.push(c)
                }
                var h = this.morphNormals[t];
                o.vertices = this.morphTargets[t].vertices,
                o.computeFaceNormals(),
                o.computeVertexNormals();
                var a, c;
                for (n = 0,
                r = this.faces.length; n < r; n++)
                    i = this.faces[n],
                    a = h.faceNormals[n],
                    c = h.vertexNormals[n],
                    a.copy(i.normal),
                    c.a.copy(i.vertexNormals[0]),
                    c.b.copy(i.vertexNormals[1]),
                    c.c.copy(i.vertexNormals[2])
            }
            for (n = 0,
            r = this.faces.length; n < r; n++)
                i = this.faces[n],
                i.normal = i.__originalFaceNormal,
                i.vertexNormals = i.__originalVertexNormals
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new f),
            this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new m),
            this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(t, e, n) {
            if (!t || !t.isGeometry)
                return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t);
            var r, i = this.vertices.length, o = this.vertices, a = t.vertices, s = this.faces, l = t.faces, u = this.faceVertexUvs[0], h = t.faceVertexUvs[0], d = this.colors, p = t.colors;
            void 0 === n && (n = 0),
            void 0 !== e && (r = (new c).getNormalMatrix(e));
            for (var f = 0, m = a.length; f < m; f++) {
                var v = a[f]
                  , g = v.clone();
                void 0 !== e && g.applyMatrix4(e),
                o.push(g)
            }
            for (var f = 0, m = p.length; f < m; f++)
                d.push(p[f].clone());
            for (f = 0,
            m = l.length; f < m; f++) {
                var y, _, x, b = l[f], w = b.vertexNormals, M = b.vertexColors;
                y = new T(b.a + i,b.b + i,b.c + i),
                y.normal.copy(b.normal),
                void 0 !== r && y.normal.applyMatrix3(r).normalize();
                for (var E = 0, S = w.length; E < S; E++)
                    _ = w[E].clone(),
                    void 0 !== r && _.applyMatrix3(r).normalize(),
                    y.vertexNormals.push(_);
                y.color.copy(b.color);
                for (var E = 0, S = M.length; E < S; E++)
                    x = M[E],
                    y.vertexColors.push(x.clone());
                y.materialIndex = b.materialIndex + n,
                s.push(y)
            }
            for (f = 0,
            m = h.length; f < m; f++) {
                var A = h[f]
                  , C = [];
                if (void 0 !== A) {
                    for (var E = 0, S = A.length; E < S; E++)
                        C.push(A[E].clone());
                    u.push(C)
                }
            }
        },
        mergeMesh: function(t) {
            if (!t || !t.isMesh)
                return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t);
            t.matrixAutoUpdate && t.updateMatrix(),
            this.merge(t.geometry, t.matrix)
        },
        mergeVertices: function() {
            var t, e, n, r, i, o, a, s, c = {}, l = [], u = [], h = Math.pow(10, 4);
            for (n = 0,
            r = this.vertices.length; n < r; n++)
                t = this.vertices[n],
                e = Math.round(t.x * h) + "_" + Math.round(t.y * h) + "_" + Math.round(t.z * h),
                void 0 === c[e] ? (c[e] = n,
                l.push(this.vertices[n]),
                u[n] = l.length - 1) : u[n] = u[c[e]];
            var d = [];
            for (n = 0,
            r = this.faces.length; n < r; n++) {
                i = this.faces[n],
                i.a = u[i.a],
                i.b = u[i.b],
                i.c = u[i.c],
                o = [i.a, i.b, i.c];
                for (var p = 0; p < 3; p++)
                    if (o[p] === o[(p + 1) % 3]) {
                        d.push(n);
                        break
                    }
            }
            for (n = d.length - 1; n >= 0; n--) {
                var f = d[n];
                for (this.faces.splice(f, 1),
                a = 0,
                s = this.faceVertexUvs.length; a < s; a++)
                    this.faceVertexUvs[a].splice(f, 1)
            }
            var m = this.vertices.length - l.length;
            return this.vertices = l,
            m
        },
        setFromPoints: function(t) {
            this.vertices = [];
            for (var e = 0, n = t.length; e < n; e++) {
                var r = t[e];
                this.vertices.push(new s(r.x,r.y,r.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            function t(t, e) {
                return t.materialIndex - e.materialIndex
            }
            for (var e = this.faces, n = e.length, r = 0; r < n; r++)
                e[r]._id = r;
            e.sort(t);
            var i, o, a = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
            a && a.length === n && (i = []),
            s && s.length === n && (o = []);
            for (var r = 0; r < n; r++) {
                var c = e[r]._id;
                i && i.push(a[c]),
                o && o.push(s[c])
            }
            i && (this.faceVertexUvs[0] = i),
            o && (this.faceVertexUvs[1] = o)
        },
        toJSON: function() {
            function t(t, e, n) {
                return n ? t | 1 << e : t & ~(1 << e)
            }
            function e(t) {
                var e = t.x.toString() + t.y.toString() + t.z.toString();
                return void 0 !== d[e] ? d[e] : (d[e] = h.length / 3,
                h.push(t.x, t.y, t.z),
                d[e])
            }
            function n(t) {
                var e = t.r.toString() + t.g.toString() + t.b.toString();
                return void 0 !== f[e] ? f[e] : (f[e] = p.length,
                p.push(t.getHex()),
                f[e])
            }
            function r(t) {
                var e = t.x.toString() + t.y.toString();
                return void 0 !== v[e] ? v[e] : (v[e] = m.length / 2,
                m.push(t.x, t.y),
                v[e])
            }
            var i = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (i.uuid = this.uuid,
            i.type = this.type,
            "" !== this.name && (i.name = this.name),
            void 0 !== this.parameters) {
                var o = this.parameters;
                for (var a in o)
                    void 0 !== o[a] && (i[a] = o[a]);
                return i
            }
            for (var s = [], c = 0; c < this.vertices.length; c++) {
                var l = this.vertices[c];
                s.push(l.x, l.y, l.z)
            }
            for (var u = [], h = [], d = {}, p = [], f = {}, m = [], v = {}, c = 0; c < this.faces.length; c++) {
                var g = this.faces[c]
                  , y = void 0 !== this.faceVertexUvs[0][c]
                  , _ = g.normal.length() > 0
                  , x = g.vertexNormals.length > 0
                  , b = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b
                  , w = g.vertexColors.length > 0
                  , M = 0;
                if (M = t(M, 0, 0),
                M = t(M, 1, !0),
                M = t(M, 2, !1),
                M = t(M, 3, y),
                M = t(M, 4, _),
                M = t(M, 5, x),
                M = t(M, 6, b),
                M = t(M, 7, w),
                u.push(M),
                u.push(g.a, g.b, g.c),
                u.push(g.materialIndex),
                y) {
                    var E = this.faceVertexUvs[0][c];
                    u.push(r(E[0]), r(E[1]), r(E[2]))
                }
                if (_ && u.push(e(g.normal)),
                x) {
                    var T = g.vertexNormals;
                    u.push(e(T[0]), e(T[1]), e(T[2]))
                }
                if (b && u.push(n(g.color)),
                w) {
                    var S = g.vertexColors;
                    u.push(n(S[0]), n(S[1]), n(S[2]))
                }
            }
            return i.data = {},
            i.data.vertices = s,
            i.data.normals = h,
            p.length > 0 && (i.data.colors = p),
            m.length > 0 && (i.data.uvs = [m]),
            i.data.faces = u,
            i
        },
        clone: function() {
            return (new S).copy(this)
        },
        copy: function(t) {
            var e, n, r, i, o, a;
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var s = t.vertices;
            for (e = 0,
            n = s.length; e < n; e++)
                this.vertices.push(s[e].clone());
            var c = t.colors;
            for (e = 0,
            n = c.length; e < n; e++)
                this.colors.push(c[e].clone());
            var l = t.faces;
            for (e = 0,
            n = l.length; e < n; e++)
                this.faces.push(l[e].clone());
            for (e = 0,
            n = t.faceVertexUvs.length; e < n; e++) {
                var u = t.faceVertexUvs[e];
                for (void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                r = 0,
                i = u.length; r < i; r++) {
                    var h = u[r]
                      , d = [];
                    for (o = 0,
                    a = h.length; o < a; o++) {
                        var p = h[o];
                        d.push(p.clone())
                    }
                    this.faceVertexUvs[e].push(d)
                }
            }
            var f = t.morphTargets;
            for (e = 0,
            n = f.length; e < n; e++) {
                var m = {};
                if (m.name = f[e].name,
                void 0 !== f[e].vertices)
                    for (m.vertices = [],
                    r = 0,
                    i = f[e].vertices.length; r < i; r++)
                        m.vertices.push(f[e].vertices[r].clone());
                if (void 0 !== f[e].normals)
                    for (m.normals = [],
                    r = 0,
                    i = f[e].normals.length; r < i; r++)
                        m.normals.push(f[e].normals[r].clone());
                this.morphTargets.push(m)
            }
            var v = t.morphNormals;
            for (e = 0,
            n = v.length; e < n; e++) {
                var g = {};
                if (void 0 !== v[e].vertexNormals)
                    for (g.vertexNormals = [],
                    r = 0,
                    i = v[e].vertexNormals.length; r < i; r++) {
                        var y = v[e].vertexNormals[r]
                          , _ = {};
                        _.a = y.a.clone(),
                        _.b = y.b.clone(),
                        _.c = y.c.clone(),
                        g.vertexNormals.push(_)
                    }
                if (void 0 !== v[e].faceNormals)
                    for (g.faceNormals = [],
                    r = 0,
                    i = v[e].faceNormals.length; r < i; r++)
                        g.faceNormals.push(v[e].faceNormals[r].clone());
                this.morphNormals.push(g)
            }
            var x = t.skinWeights;
            for (e = 0,
            n = x.length; e < n; e++)
                this.skinWeights.push(x[e].clone());
            var b = t.skinIndices;
            for (e = 0,
            n = b.length; e < n; e++)
                this.skinIndices.push(b[e].clone());
            var w = t.lineDistances;
            for (e = 0,
            n = w.length; e < n; e++)
                this.lineDistances.push(w[e]);
            var M = t.boundingBox;
            null !== M && (this.boundingBox = M.clone());
            var E = t.boundingSphere;
            return null !== E && (this.boundingSphere = E.clone()),
            this.elementsNeedUpdate = t.elementsNeedUpdate,
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(A.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(A.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.itemSize : 0,
            this.array = t,
            this
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.name = t.name,
            this.array = new t.array.constructor(t.array),
            this.itemSize = t.itemSize,
            this.count = t.count,
            this.normalized = t.normalized,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.itemSize,
            n *= e.itemSize;
            for (var r = 0, i = this.itemSize; r < i; r++)
                this.array[t + r] = e.array[n + r];
            return this
        },
        copyArray: function(t) {
            return this.array.set(t),
            this
        },
        copyColorsArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r),
                o = new y),
                e[n++] = o.r,
                e[n++] = o.g,
                e[n++] = o.b
            }
            return this
        },
        copyVector2sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, o = t.length; r < o; r++) {
                var a = t[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r),
                a = new i),
                e[n++] = a.x,
                e[n++] = a.y
            }
            return this
        },
        copyVector3sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r),
                o = new s),
                e[n++] = o.x,
                e[n++] = o.y,
                e[n++] = o.z
            }
            return this
        },
        copyVector4sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
                var o = t[r];
                void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r),
                o = new u),
                e[n++] = o.x,
                e[n++] = o.y,
                e[n++] = o.z,
                e[n++] = o.w
            }
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        getX: function(t) {
            return this.array[t * this.itemSize]
        },
        setX: function(t, e) {
            return this.array[t * this.itemSize] = e,
            this
        },
        getY: function(t) {
            return this.array[t * this.itemSize + 1]
        },
        setY: function(t, e) {
            return this.array[t * this.itemSize + 1] = e,
            this
        },
        getZ: function(t) {
            return this.array[t * this.itemSize + 2]
        },
        setZ: function(t, e) {
            return this.array[t * this.itemSize + 2] = e,
            this
        },
        getW: function(t) {
            return this.array[t * this.itemSize + 3]
        },
        setW: function(t, e) {
            return this.array[t * this.itemSize + 3] = e,
            this
        },
        setXY: function(t, e, n) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, r) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = r,
            this
        },
        setXYZW: function(t, e, n, r, i) {
            return t *= this.itemSize,
            this.array[t + 0] = e,
            this.array[t + 1] = n,
            this.array[t + 2] = r,
            this.array[t + 3] = i,
            this
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        },
        clone: function() {
            return new this.constructor(this.array,this.itemSize).copy(this)
        }
    }),
    C.prototype = Object.create(A.prototype),
    C.prototype.constructor = C,
    P.prototype = Object.create(A.prototype),
    P.prototype.constructor = P,
    L.prototype = Object.create(A.prototype),
    L.prototype.constructor = L,
    R.prototype = Object.create(A.prototype),
    R.prototype.constructor = R,
    O.prototype = Object.create(A.prototype),
    O.prototype.constructor = O,
    I.prototype = Object.create(A.prototype),
    I.prototype.constructor = I,
    D.prototype = Object.create(A.prototype),
    D.prototype.constructor = D,
    N.prototype = Object.create(A.prototype),
    N.prototype.constructor = N,
    k.prototype = Object.create(A.prototype),
    k.prototype.constructor = k,
    Object.assign(j.prototype, {
        computeGroups: function(t) {
            for (var e, n = [], r = void 0, i = t.faces, o = 0; o < i.length; o++) {
                var a = i[o];
                a.materialIndex !== r && (r = a.materialIndex,
                void 0 !== e && (e.count = 3 * o - e.start,
                n.push(e)),
                e = {
                    start: 3 * o,
                    materialIndex: r
                })
            }
            void 0 !== e && (e.count = 3 * o - e.start,
            n.push(e)),
            this.groups = n
        },
        fromGeometry: function(t) {
            var e, n = t.faces, r = t.vertices, o = t.faceVertexUvs, a = o[0] && o[0].length > 0, s = o[1] && o[1].length > 0, c = t.morphTargets, l = c.length;
            if (l > 0) {
                e = [];
                for (var u = 0; u < l; u++)
                    e[u] = [];
                this.morphTargets.position = e
            }
            var h, d = t.morphNormals, p = d.length;
            if (p > 0) {
                h = [];
                for (var u = 0; u < p; u++)
                    h[u] = [];
                this.morphTargets.normal = h
            }
            for (var f = t.skinIndices, m = t.skinWeights, v = f.length === r.length, g = m.length === r.length, u = 0; u < n.length; u++) {
                var y = n[u];
                this.vertices.push(r[y.a], r[y.b], r[y.c]);
                var _ = y.vertexNormals;
                if (3 === _.length)
                    this.normals.push(_[0], _[1], _[2]);
                else {
                    var x = y.normal;
                    this.normals.push(x, x, x)
                }
                var b = y.vertexColors;
                if (3 === b.length)
                    this.colors.push(b[0], b[1], b[2]);
                else {
                    var w = y.color;
                    this.colors.push(w, w, w)
                }
                if (!0 === a) {
                    var M = o[0][u];
                    void 0 !== M ? this.uvs.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u),
                    this.uvs.push(new i, new i, new i))
                }
                if (!0 === s) {
                    var M = o[1][u];
                    void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u),
                    this.uvs2.push(new i, new i, new i))
                }
                for (var E = 0; E < l; E++) {
                    var T = c[E].vertices;
                    e[E].push(T[y.a], T[y.b], T[y.c])
                }
                for (var E = 0; E < p; E++) {
                    var S = d[E].vertexNormals[u];
                    h[E].push(S.a, S.b, S.c)
                }
                v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]),
                g && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
            }
            return this.computeGroups(t),
            this.verticesNeedUpdate = t.verticesNeedUpdate,
            this.normalsNeedUpdate = t.normalsNeedUpdate,
            this.colorsNeedUpdate = t.colorsNeedUpdate,
            this.uvsNeedUpdate = t.uvsNeedUpdate,
            this.groupsNeedUpdate = t.groupsNeedUpdate,
            this
        }
    });
    var Ws = 1;
    B.prototype = Object.assign(Object.create(r.prototype), {
        constructor: B,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(t) {
            Array.isArray(t) ? this.index = new (z(t) > 65535 ? D : O)(t,1) : this.index = t
        },
        addAttribute: function(t, e) {
            return e && e.isBufferAttribute || e && e.isInterleavedBufferAttribute ? "index" === t ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
            void this.setIndex(e)) : (this.attributes[t] = e,
            this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
            void this.addAttribute(t, new A(arguments[1],arguments[2])))
        },
        getAttribute: function(t) {
            return this.attributes[t]
        },
        removeAttribute: function(t) {
            return delete this.attributes[t],
            this
        },
        addGroup: function(t, e, n) {
            this.groups.push({
                start: t,
                count: e,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(t, e) {
            this.drawRange.start = t,
            this.drawRange.count = e
        },
        applyMatrix: function(t) {
            var e = this.attributes.position;
            void 0 !== e && (t.applyToBufferAttribute(e),
            e.needsUpdate = !0);
            var n = this.attributes.normal;
            if (void 0 !== n) {
                (new c).getNormalMatrix(t).applyToBufferAttribute(n),
                n.needsUpdate = !0
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
        },
        rotateX: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationX(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateY: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationY(e),
                this.applyMatrix(t),
                this
            }
        }(),
        rotateZ: function() {
            var t = new o;
            return function(e) {
                return t.makeRotationZ(e),
                this.applyMatrix(t),
                this
            }
        }(),
        translate: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeTranslation(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        scale: function() {
            var t = new o;
            return function(e, n, r) {
                return t.makeScale(e, n, r),
                this.applyMatrix(t),
                this
            }
        }(),
        lookAt: function() {
            var t = new w;
            return function(e) {
                t.lookAt(e),
                t.updateMatrix(),
                this.applyMatrix(t.matrix)
            }
        }(),
        center: function() {
            var t = new s;
            return function() {
                return this.computeBoundingBox(),
                this.boundingBox.getCenter(t).negate(),
                this.translate(t.x, t.y, t.z),
                this
            }
        }(),
        setFromObject: function(t) {
            var e = t.geometry;
            if (t.isPoints || t.isLine) {
                var n = new N(3 * e.vertices.length,3)
                  , r = new N(3 * e.colors.length,3);
                if (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
                this.addAttribute("color", r.copyColorsArray(e.colors)),
                e.lineDistances && e.lineDistances.length === e.vertices.length) {
                    var i = new N(e.lineDistances.length,1);
                    this.addAttribute("lineDistance", i.copyArray(e.lineDistances))
                }
                null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
            } else
                t.isMesh && e && e.isGeometry && this.fromGeometry(e);
            return this
        },
        setFromPoints: function(t) {
            for (var e = [], n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.push(i.x, i.y, i.z || 0)
            }
            return this.addAttribute("position", new N(e,3)),
            this
        },
        updateFromObject: function(t) {
            var e = t.geometry;
            if (t.isMesh) {
                var n = e.__directGeometry;
                if (!0 === e.elementsNeedUpdate && (n = void 0,
                e.elementsNeedUpdate = !1),
                void 0 === n)
                    return this.fromGeometry(e);
                n.verticesNeedUpdate = e.verticesNeedUpdate,
                n.normalsNeedUpdate = e.normalsNeedUpdate,
                n.colorsNeedUpdate = e.colorsNeedUpdate,
                n.uvsNeedUpdate = e.uvsNeedUpdate,
                n.groupsNeedUpdate = e.groupsNeedUpdate,
                e.verticesNeedUpdate = !1,
                e.normalsNeedUpdate = !1,
                e.colorsNeedUpdate = !1,
                e.uvsNeedUpdate = !1,
                e.groupsNeedUpdate = !1,
                e = n
            }
            var r;
            return !0 === e.verticesNeedUpdate && (r = this.attributes.position,
            void 0 !== r && (r.copyVector3sArray(e.vertices),
            r.needsUpdate = !0),
            e.verticesNeedUpdate = !1),
            !0 === e.normalsNeedUpdate && (r = this.attributes.normal,
            void 0 !== r && (r.copyVector3sArray(e.normals),
            r.needsUpdate = !0),
            e.normalsNeedUpdate = !1),
            !0 === e.colorsNeedUpdate && (r = this.attributes.color,
            void 0 !== r && (r.copyColorsArray(e.colors),
            r.needsUpdate = !0),
            e.colorsNeedUpdate = !1),
            e.uvsNeedUpdate && (r = this.attributes.uv,
            void 0 !== r && (r.copyVector2sArray(e.uvs),
            r.needsUpdate = !0),
            e.uvsNeedUpdate = !1),
            e.lineDistancesNeedUpdate && (r = this.attributes.lineDistance,
            void 0 !== r && (r.copyArray(e.lineDistances),
            r.needsUpdate = !0),
            e.lineDistancesNeedUpdate = !1),
            e.groupsNeedUpdate && (e.computeGroups(t.geometry),
            this.groups = e.groups,
            e.groupsNeedUpdate = !1),
            this
        },
        fromGeometry: function(t) {
            return t.__directGeometry = (new j).fromGeometry(t),
            this.fromDirectGeometry(t.__directGeometry)
        },
        fromDirectGeometry: function(t) {
            var e = new Float32Array(3 * t.vertices.length);
            if (this.addAttribute("position", new A(e,3).copyVector3sArray(t.vertices)),
            t.normals.length > 0) {
                var n = new Float32Array(3 * t.normals.length);
                this.addAttribute("normal", new A(n,3).copyVector3sArray(t.normals))
            }
            if (t.colors.length > 0) {
                var r = new Float32Array(3 * t.colors.length);
                this.addAttribute("color", new A(r,3).copyColorsArray(t.colors))
            }
            if (t.uvs.length > 0) {
                var i = new Float32Array(2 * t.uvs.length);
                this.addAttribute("uv", new A(i,2).copyVector2sArray(t.uvs))
            }
            if (t.uvs2.length > 0) {
                var o = new Float32Array(2 * t.uvs2.length);
                this.addAttribute("uv2", new A(o,2).copyVector2sArray(t.uvs2))
            }
            this.groups = t.groups;
            for (var a in t.morphTargets) {
                for (var s = [], c = t.morphTargets[a], l = 0, u = c.length; l < u; l++) {
                    var h = c[l]
                      , d = new N(3 * h.length,3);
                    s.push(d.copyVector3sArray(h))
                }
                this.morphAttributes[a] = s
            }
            if (t.skinIndices.length > 0) {
                var p = new N(4 * t.skinIndices.length,4);
                this.addAttribute("skinIndex", p.copyVector4sArray(t.skinIndices))
            }
            if (t.skinWeights.length > 0) {
                var f = new N(4 * t.skinWeights.length,4);
                this.addAttribute("skinWeight", f.copyVector4sArray(t.skinWeights))
            }
            return null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
            this
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new f);
            var t = this.attributes.position;
            void 0 !== t ? this.boundingBox.setFromBufferAttribute(t) : this.boundingBox.makeEmpty(),
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
        },
        computeBoundingSphere: function() {
            var t = new f
              , e = new s;
            return function() {
                null === this.boundingSphere && (this.boundingSphere = new m);
                var n = this.attributes.position;
                if (n) {
                    var r = this.boundingSphere.center;
                    t.setFromBufferAttribute(n),
                    t.getCenter(r);
                    for (var i = 0, o = 0, a = n.count; o < a; o++)
                        e.x = n.getX(o),
                        e.y = n.getY(o),
                        e.z = n.getZ(o),
                        i = Math.max(i, r.distanceToSquared(e));
                    this.boundingSphere.radius = Math.sqrt(i),
                    isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                }
            }
        }(),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var t = this.index
              , e = this.attributes
              , n = this.groups;
            if (e.position) {
                var r = e.position.array;
                if (void 0 === e.normal)
                    this.addAttribute("normal", new A(new Float32Array(r.length),3));
                else
                    for (var i = e.normal.array, o = 0, a = i.length; o < a; o++)
                        i[o] = 0;
                var c, l, u, h = e.normal.array, d = new s, p = new s, f = new s, m = new s, v = new s;
                if (t) {
                    var g = t.array;
                    0 === n.length && this.addGroup(0, g.length);
                    for (var y = 0, _ = n.length; y < _; ++y)
                        for (var x = n[y], b = x.start, w = x.count, o = b, a = b + w; o < a; o += 3)
                            c = 3 * g[o + 0],
                            l = 3 * g[o + 1],
                            u = 3 * g[o + 2],
                            d.fromArray(r, c),
                            p.fromArray(r, l),
                            f.fromArray(r, u),
                            m.subVectors(f, p),
                            v.subVectors(d, p),
                            m.cross(v),
                            h[c] += m.x,
                            h[c + 1] += m.y,
                            h[c + 2] += m.z,
                            h[l] += m.x,
                            h[l + 1] += m.y,
                            h[l + 2] += m.z,
                            h[u] += m.x,
                            h[u + 1] += m.y,
                            h[u + 2] += m.z
                } else
                    for (var o = 0, a = r.length; o < a; o += 9)
                        d.fromArray(r, o),
                        p.fromArray(r, o + 3),
                        f.fromArray(r, o + 6),
                        m.subVectors(f, p),
                        v.subVectors(d, p),
                        m.cross(v),
                        h[o] = m.x,
                        h[o + 1] = m.y,
                        h[o + 2] = m.z,
                        h[o + 3] = m.x,
                        h[o + 4] = m.y,
                        h[o + 5] = m.z,
                        h[o + 6] = m.x,
                        h[o + 7] = m.y,
                        h[o + 8] = m.z;
                this.normalizeNormals(),
                e.normal.needsUpdate = !0
            }
        },
        merge: function(t, e) {
            if (!t || !t.isBufferGeometry)
                return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
            void 0 === e && (e = 0,
            console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
            var n = this.attributes;
            for (var r in n)
                if (void 0 !== t.attributes[r])
                    for (var i = n[r], o = i.array, a = t.attributes[r], s = a.array, c = a.itemSize, l = 0, u = c * e; l < s.length; l++,
                    u++)
                        o[u] = s[l];
            return this
        },
        normalizeNormals: function() {
            var t = new s;
            return function() {
                for (var e = this.attributes.normal, n = 0, r = e.count; n < r; n++)
                    t.x = e.getX(n),
                    t.y = e.getY(n),
                    t.z = e.getZ(n),
                    t.normalize(),
                    e.setXYZ(n, t.x, t.y, t.z)
            }
        }(),
        toNonIndexed: function() {
            if (null === this.index)
                return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                this;
            var t = new B
              , e = this.index.array
              , n = this.attributes;
            for (var r in n) {
                for (var i = n[r], o = i.array, a = i.itemSize, s = new o.constructor(e.length * a), c = 0, l = 0, u = 0, h = e.length; u < h; u++) {
                    c = e[u] * a;
                    for (var d = 0; d < a; d++)
                        s[l++] = o[c++]
                }
                t.addAttribute(r, new A(s,a))
            }
            for (var p = this.groups, u = 0, h = p.length; u < h; u++) {
                var f = p[u];
                t.addGroup(f.start, f.count, f.materialIndex)
            }
            return t
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (t.uuid = this.uuid,
            t.type = this.type,
            "" !== this.name && (t.name = this.name),
            void 0 !== this.parameters) {
                var e = this.parameters;
                for (var n in e)
                    void 0 !== e[n] && (t[n] = e[n]);
                return t
            }
            t.data = {
                attributes: {}
            };
            var r = this.index;
            if (null !== r) {
                var i = Array.prototype.slice.call(r.array);
                t.data.index = {
                    type: r.array.constructor.name,
                    array: i
                }
            }
            var o = this.attributes;
            for (var n in o) {
                var a = o[n]
                  , i = Array.prototype.slice.call(a.array);
                t.data.attributes[n] = {
                    itemSize: a.itemSize,
                    type: a.array.constructor.name,
                    array: i,
                    normalized: a.normalized
                }
            }
            var s = this.groups;
            s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
            var c = this.boundingSphere;
            return null !== c && (t.data.boundingSphere = {
                center: c.center.toArray(),
                radius: c.radius
            }),
            t
        },
        clone: function() {
            return (new B).copy(this)
        },
        copy: function(t) {
            var e, n, r;
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = t.name;
            var i = t.index;
            null !== i && this.setIndex(i.clone());
            var o = t.attributes;
            for (e in o) {
                var a = o[e];
                this.addAttribute(e, a.clone())
            }
            var s = t.morphAttributes;
            for (e in s) {
                var c = []
                  , l = s[e];
                for (n = 0,
                r = l.length; n < r; n++)
                    c.push(l[n].clone());
                this.morphAttributes[e] = c
            }
            var u = t.groups;
            for (n = 0,
            r = u.length; n < r; n++) {
                var h = u[n];
                this.addGroup(h.start, h.count, h.materialIndex)
            }
            var d = t.boundingBox;
            null !== d && (this.boundingBox = d.clone());
            var p = t.boundingSphere;
            return null !== p && (this.boundingSphere = p.clone()),
            this.drawRange.start = t.drawRange.start,
            this.drawRange.count = t.drawRange.count,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    U.prototype = Object.create(S.prototype),
    U.prototype.constructor = U,
    F.prototype = Object.create(B.prototype),
    F.prototype.constructor = F,
    H.prototype = Object.create(S.prototype),
    H.prototype.constructor = H,
    G.prototype = Object.create(B.prototype),
    G.prototype.constructor = G;
    var qs = 0;
    V.prototype = Object.assign(Object.create(r.prototype), {
        constructor: V,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(t) {
            if (void 0 !== t)
                for (var e in t) {
                    var n = t[e];
                    if (void 0 !== n)
                        if ("shading" !== e) {
                            var r = this[e];
                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[e] = "overdraw" === e ? Number(n) : n : console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.")
                        } else
                            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                            this.flatShading = 1 === n;
                    else
                        console.warn("THREE.Material: '" + e + "' parameter is undefined.")
                }
        },
        toJSON: function(t) {
            function e(t) {
                var e = [];
                for (var n in t) {
                    var r = t[n];
                    delete r.metadata,
                    e.push(r)
                }
                return e
            }
            var n = void 0 === t || "string" == typeof t;
            n && (t = {
                textures: {},
                images: {}
            });
            var r = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            if (r.uuid = this.uuid,
            r.type = this.type,
            "" !== this.name && (r.name = this.name),
            this.color && this.color.isColor && (r.color = this.color.getHex()),
            void 0 !== this.roughness && (r.roughness = this.roughness),
            void 0 !== this.metalness && (r.metalness = this.metalness),
            this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()),
            1 !== this.emissiveIntensity && (r.emissiveIntensity = this.emissiveIntensity),
            this.specular && this.specular.isColor && (r.specular = this.specular.getHex()),
            void 0 !== this.shininess && (r.shininess = this.shininess),
            void 0 !== this.clearCoat && (r.clearCoat = this.clearCoat),
            void 0 !== this.clearCoatRoughness && (r.clearCoatRoughness = this.clearCoatRoughness),
            this.map && this.map.isTexture && (r.map = this.map.toJSON(t).uuid),
            this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(t).uuid),
            this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(t).uuid),
            this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(t).uuid,
            r.bumpScale = this.bumpScale),
            this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(t).uuid,
            r.normalScale = this.normalScale.toArray()),
            this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(t).uuid,
            r.displacementScale = this.displacementScale,
            r.displacementBias = this.displacementBias),
            this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(t).uuid),
            this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(t).uuid),
            this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(t).uuid),
            this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(t).uuid),
            this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(t).uuid,
            r.reflectivity = this.reflectivity),
            this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(t).uuid),
            void 0 !== this.size && (r.size = this.size),
            void 0 !== this.sizeAttenuation && (r.sizeAttenuation = this.sizeAttenuation),
            this.blending !== No && (r.blending = this.blending),
            !0 === this.flatShading && (r.flatShading = this.flatShading),
            this.side !== Co && (r.side = this.side),
            this.vertexColors !== Ro && (r.vertexColors = this.vertexColors),
            this.opacity < 1 && (r.opacity = this.opacity),
            !0 === this.transparent && (r.transparent = this.transparent),
            r.depthFunc = this.depthFunc,
            r.depthTest = this.depthTest,
            r.depthWrite = this.depthWrite,
            0 !== this.rotation && (r.rotation = this.rotation),
            1 !== this.linewidth && (r.linewidth = this.linewidth),
            void 0 !== this.dashSize && (r.dashSize = this.dashSize),
            void 0 !== this.gapSize && (r.gapSize = this.gapSize),
            void 0 !== this.scale && (r.scale = this.scale),
            !0 === this.dithering && (r.dithering = !0),
            this.alphaTest > 0 && (r.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha && (r.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (r.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap && (r.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin && (r.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (r.morphTargets = !0),
            !0 === this.skinning && (r.skinning = !0),
            !1 === this.visible && (r.visible = !1),
            "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
            n) {
                var i = e(t.textures)
                  , o = e(t.images);
                i.length > 0 && (r.textures = i),
                o.length > 0 && (r.images = o)
            }
            return r
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            this.name = t.name,
            this.fog = t.fog,
            this.lights = t.lights,
            this.blending = t.blending,
            this.side = t.side,
            this.flatShading = t.flatShading,
            this.vertexColors = t.vertexColors,
            this.opacity = t.opacity,
            this.transparent = t.transparent,
            this.blendSrc = t.blendSrc,
            this.blendDst = t.blendDst,
            this.blendEquation = t.blendEquation,
            this.blendSrcAlpha = t.blendSrcAlpha,
            this.blendDstAlpha = t.blendDstAlpha,
            this.blendEquationAlpha = t.blendEquationAlpha,
            this.depthFunc = t.depthFunc,
            this.depthTest = t.depthTest,
            this.depthWrite = t.depthWrite,
            this.colorWrite = t.colorWrite,
            this.precision = t.precision,
            this.polygonOffset = t.polygonOffset,
            this.polygonOffsetFactor = t.polygonOffsetFactor,
            this.polygonOffsetUnits = t.polygonOffsetUnits,
            this.dithering = t.dithering,
            this.alphaTest = t.alphaTest,
            this.premultipliedAlpha = t.premultipliedAlpha,
            this.overdraw = t.overdraw,
            this.visible = t.visible,
            this.userData = JSON.parse(JSON.stringify(t.userData)),
            this.clipShadows = t.clipShadows,
            this.clipIntersection = t.clipIntersection;
            var e = t.clippingPlanes
              , n = null;
            if (null !== e) {
                var r = e.length;
                n = new Array(r);
                for (var i = 0; i !== r; ++i)
                    n[i] = e[i].clone()
            }
            return this.clippingPlanes = n,
            this.shadowSide = t.shadowSide,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    W.prototype = Object.create(V.prototype),
    W.prototype.constructor = W,
    W.prototype.isMeshBasicMaterial = !0,
    W.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this
    }
    ,
    q.prototype = Object.create(V.prototype),
    q.prototype.constructor = q,
    q.prototype.isShaderMaterial = !0,
    q.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.fragmentShader = t.fragmentShader,
        this.vertexShader = t.vertexShader,
        this.uniforms = Bs.clone(t.uniforms),
        this.defines = Object.assign({}, t.defines),
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.lights = t.lights,
        this.clipping = t.clipping,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this.extensions = t.extensions,
        this
    }
    ,
    q.prototype.toJSON = function(t) {
        var e = V.prototype.toJSON.call(this, t);
        return e.uniforms = this.uniforms,
        e.vertexShader = this.vertexShader,
        e.fragmentShader = this.fragmentShader,
        e
    }
    ,
    Object.assign(X.prototype, {
        set: function(t, e) {
            return this.origin.copy(t),
            this.direction.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.origin.copy(t.origin),
            this.direction.copy(t.direction),
            this
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Ray: .at() target is now required"),
            e = new s),
            e.copy(this.direction).multiplyScalar(t).add(this.origin)
        },
        lookAt: function(t) {
            return this.direction.copy(t).sub(this.origin).normalize(),
            this
        },
        recast: function() {
            var t = new s;
            return function(e) {
                return this.origin.copy(this.at(e, t)),
                this
            }
        }(),
        closestPointToPoint: function(t, e) {
            void 0 === e && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
            e = new s),
            e.subVectors(t, this.origin);
            var n = e.dot(this.direction);
            return n < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(n).add(this.origin)
        },
        distanceToPoint: function(t) {
            return Math.sqrt(this.distanceSqToPoint(t))
        },
        distanceSqToPoint: function() {
            var t = new s;
            return function(e) {
                var n = t.subVectors(e, this.origin).dot(this.direction);
                return n < 0 ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(n).add(this.origin),
                t.distanceToSquared(e))
            }
        }(),
        distanceSqToSegment: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o, a) {
                t.copy(r).add(i).multiplyScalar(.5),
                e.copy(i).sub(r).normalize(),
                n.copy(this.origin).sub(t);
                var s, c, l, u, h = .5 * r.distanceTo(i), d = -this.direction.dot(e), p = n.dot(this.direction), f = -n.dot(e), m = n.lengthSq(), v = Math.abs(1 - d * d);
                if (v > 0)
                    if (s = d * f - p,
                    c = d * p - f,
                    u = h * v,
                    s >= 0)
                        if (c >= -u)
                            if (c <= u) {
                                var g = 1 / v;
                                s *= g,
                                c *= g,
                                l = s * (s + d * c + 2 * p) + c * (d * s + c + 2 * f) + m
                            } else
                                c = h,
                                s = Math.max(0, -(d * c + p)),
                                l = -s * s + c * (c + 2 * f) + m;
                        else
                            c = -h,
                            s = Math.max(0, -(d * c + p)),
                            l = -s * s + c * (c + 2 * f) + m;
                    else
                        c <= -u ? (s = Math.max(0, -(-d * h + p)),
                        c = s > 0 ? -h : Math.min(Math.max(-h, -f), h),
                        l = -s * s + c * (c + 2 * f) + m) : c <= u ? (s = 0,
                        c = Math.min(Math.max(-h, -f), h),
                        l = c * (c + 2 * f) + m) : (s = Math.max(0, -(d * h + p)),
                        c = s > 0 ? h : Math.min(Math.max(-h, -f), h),
                        l = -s * s + c * (c + 2 * f) + m);
                else
                    c = d > 0 ? -h : h,
                    s = Math.max(0, -(d * c + p)),
                    l = -s * s + c * (c + 2 * f) + m;
                return o && o.copy(this.direction).multiplyScalar(s).add(this.origin),
                a && a.copy(e).multiplyScalar(c).add(t),
                l
            }
        }(),
        intersectSphere: function() {
            var t = new s;
            return function(e, n) {
                t.subVectors(e.center, this.origin);
                var r = t.dot(this.direction)
                  , i = t.dot(t) - r * r
                  , o = e.radius * e.radius;
                if (i > o)
                    return null;
                var a = Math.sqrt(o - i)
                  , s = r - a
                  , c = r + a;
                return s < 0 && c < 0 ? null : s < 0 ? this.at(c, n) : this.at(s, n)
            }
        }(),
        intersectsSphere: function(t) {
            return this.distanceToPoint(t.center) <= t.radius
        },
        distanceToPlane: function(t) {
            var e = t.normal.dot(this.direction);
            if (0 === e)
                return 0 === t.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(t.normal) + t.constant) / e;
            return n >= 0 ? n : null
        },
        intersectPlane: function(t, e) {
            var n = this.distanceToPlane(t);
            return null === n ? null : this.at(n, e)
        },
        intersectsPlane: function(t) {
            var e = t.distanceToPoint(this.origin);
            return 0 === e || t.normal.dot(this.direction) * e < 0
        },
        intersectBox: function(t, e) {
            var n, r, i, o, a, s, c = 1 / this.direction.x, l = 1 / this.direction.y, u = 1 / this.direction.z, h = this.origin;
            return c >= 0 ? (n = (t.min.x - h.x) * c,
            r = (t.max.x - h.x) * c) : (n = (t.max.x - h.x) * c,
            r = (t.min.x - h.x) * c),
            l >= 0 ? (i = (t.min.y - h.y) * l,
            o = (t.max.y - h.y) * l) : (i = (t.max.y - h.y) * l,
            o = (t.min.y - h.y) * l),
            n > o || i > r ? null : ((i > n || n !== n) && (n = i),
            (o < r || r !== r) && (r = o),
            u >= 0 ? (a = (t.min.z - h.z) * u,
            s = (t.max.z - h.z) * u) : (a = (t.max.z - h.z) * u,
            s = (t.min.z - h.z) * u),
            n > s || a > r ? null : ((a > n || n !== n) && (n = a),
            (s < r || r !== r) && (r = s),
            r < 0 ? null : this.at(n >= 0 ? n : r, e)))
        },
        intersectsBox: function() {
            var t = new s;
            return function(e) {
                return null !== this.intersectBox(e, t)
            }
        }(),
        intersectTriangle: function() {
            var t = new s
              , e = new s
              , n = new s
              , r = new s;
            return function(i, o, a, s, c) {
                e.subVectors(o, i),
                n.subVectors(a, i),
                r.crossVectors(e, n);
                var l, u = this.direction.dot(r);
                if (u > 0) {
                    if (s)
                        return null;
                    l = 1
                } else {
                    if (!(u < 0))
                        return null;
                    l = -1,
                    u = -u
                }
                t.subVectors(this.origin, i);
                var h = l * this.direction.dot(n.crossVectors(t, n));
                if (h < 0)
                    return null;
                var d = l * this.direction.dot(e.cross(t));
                if (d < 0)
                    return null;
                if (h + d > u)
                    return null;
                var p = -l * t.dot(r);
                return p < 0 ? null : this.at(p / u, c)
            }
        }(),
        applyMatrix4: function(t) {
            return this.origin.applyMatrix4(t),
            this.direction.transformDirection(t),
            this
        },
        equals: function(t) {
            return t.origin.equals(this.origin) && t.direction.equals(this.direction)
        }
    }),
    Object.assign(Y.prototype, {
        set: function(t, e) {
            return this.start.copy(t),
            this.end.copy(e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.start.copy(t.start),
            this.end.copy(t.end),
            this
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .getCenter() target is now required"),
            t = new s),
            t.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(t) {
            return void 0 === t && (console.warn("THREE.Line3: .delta() target is now required"),
            t = new s),
            t.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(t, e) {
            return void 0 === e && (console.warn("THREE.Line3: .at() target is now required"),
            e = new s),
            this.delta(e).multiplyScalar(t).add(this.start)
        },
        closestPointToPointParameter: function() {
            var t = new s
              , e = new s;
            return function(n, r) {
                t.subVectors(n, this.start),
                e.subVectors(this.end, this.start);
                var i = e.dot(e)
                  , o = e.dot(t)
                  , a = o / i;
                return r && (a = ks.clamp(a, 0, 1)),
                a
            }
        }(),
        closestPointToPoint: function(t, e, n) {
            var r = this.closestPointToPointParameter(t, e);
            return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
            n = new s),
            this.delta(n).multiplyScalar(r).add(this.start)
        },
        applyMatrix4: function(t) {
            return this.start.applyMatrix4(t),
            this.end.applyMatrix4(t),
            this
        },
        equals: function(t) {
            return t.start.equals(this.start) && t.end.equals(this.end)
        }
    }),
    Object.assign($, {
        getNormal: function() {
            var t = new s;
            return function(e, n, r, i) {
                void 0 === i && (console.warn("THREE.Triangle: .getNormal() target is now required"),
                i = new s),
                i.subVectors(r, n),
                t.subVectors(e, n),
                i.cross(t);
                var o = i.lengthSq();
                return o > 0 ? i.multiplyScalar(1 / Math.sqrt(o)) : i.set(0, 0, 0)
            }
        }(),
        getBarycoord: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i, o, a, c) {
                t.subVectors(a, i),
                e.subVectors(o, i),
                n.subVectors(r, i);
                var l = t.dot(t)
                  , u = t.dot(e)
                  , h = t.dot(n)
                  , d = e.dot(e)
                  , p = e.dot(n)
                  , f = l * d - u * u;
                if (void 0 === c && (console.warn("THREE.Triangle: .getBarycoord() target is now required"),
                c = new s),
                0 === f)
                    return c.set(-2, -1, -1);
                var m = 1 / f
                  , v = (d * h - u * p) * m
                  , g = (l * p - u * h) * m;
                return c.set(1 - v - g, g, v)
            }
        }(),
        containsPoint: function() {
            var t = new s;
            return function(e, n, r, i) {
                return $.getBarycoord(e, n, r, i, t),
                t.x >= 0 && t.y >= 0 && t.x + t.y <= 1
            }
        }()
    }),
    Object.assign($.prototype, {
        set: function(t, e, n) {
            return this.a.copy(t),
            this.b.copy(e),
            this.c.copy(n),
            this
        },
        setFromPointsAndIndices: function(t, e, n, r) {
            return this.a.copy(t[e]),
            this.b.copy(t[n]),
            this.c.copy(t[r]),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.a.copy(t.a),
            this.b.copy(t.b),
            this.c.copy(t.c),
            this
        },
        getArea: function() {
            var t = new s
              , e = new s;
            return function() {
                return t.subVectors(this.c, this.b),
                e.subVectors(this.a, this.b),
                .5 * t.cross(e).length()
            }
        }(),
        getMidpoint: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getMidpoint() target is now required"),
            t = new s),
            t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(t) {
            return $.getNormal(this.a, this.b, this.c, t)
        },
        getPlane: function(t) {
            return void 0 === t && (console.warn("THREE.Triangle: .getPlane() target is now required"),
            t = new s),
            t.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(t, e) {
            return $.getBarycoord(t, this.a, this.b, this.c, e)
        },
        containsPoint: function(t) {
            return $.containsPoint(t, this.a, this.b, this.c)
        },
        intersectsBox: function(t) {
            return t.intersectsTriangle(this)
        },
        closestPointToPoint: function() {
            var t = new v
              , e = [new Y, new Y, new Y]
              , n = new s
              , r = new s;
            return function(i, o) {
                void 0 === o && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),
                o = new s);
                var a = 1 / 0;
                if (t.setFromCoplanarPoints(this.a, this.b, this.c),
                t.projectPoint(i, n),
                !0 === this.containsPoint(n))
                    o.copy(n);
                else {
                    e[0].set(this.a, this.b),
                    e[1].set(this.b, this.c),
                    e[2].set(this.c, this.a);
                    for (var c = 0; c < e.length; c++) {
                        e[c].closestPointToPoint(n, !0, r);
                        var l = n.distanceToSquared(r);
                        l < a && (a = l,
                        o.copy(r))
                    }
                }
                return o
            }
        }(),
        equals: function(t) {
            return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
        }
    }),
    Z.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Z,
        isMesh: !0,
        setDrawMode: function(t) {
            this.drawMode = t
        },
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            this.drawMode = t.drawMode,
            void 0 !== t.morphTargetInfluences && (this.morphTargetInfluences = t.morphTargetInfluences.slice()),
            void 0 !== t.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)),
            this
        },
        updateMorphTargets: function() {
            var t, e, n, r = this.geometry;
            if (r.isBufferGeometry) {
                var i = r.morphAttributes
                  , o = Object.keys(i);
                if (o.length > 0) {
                    var a = i[o[0]];
                    if (void 0 !== a)
                        for (this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {},
                        t = 0,
                        e = a.length; t < e; t++)
                            n = a[t].name || String(t),
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[n] = t
                }
            } else {
                var s = r.morphTargets;
                if (void 0 !== s && s.length > 0)
                    for (this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {},
                    t = 0,
                    e = s.length; t < e; t++)
                        n = s[t].name || String(t),
                        this.morphTargetInfluences.push(0),
                        this.morphTargetDictionary[n] = t
            }
        },
        raycast: function() {
            function t(t, e, n, r, i, o, a) {
                return $.getBarycoord(t, e, n, r, _),
                i.multiplyScalar(_.x),
                o.multiplyScalar(_.y),
                a.multiplyScalar(_.z),
                i.add(o).add(a),
                i.clone()
            }
            function e(t, e, n, r, i, o, a, s) {
                if (null === (e.side === Po ? r.intersectTriangle(a, o, i, !0, s) : r.intersectTriangle(i, o, a, e.side !== Lo, s)))
                    return null;
                b.copy(s),
                b.applyMatrix4(t.matrixWorld);
                var c = n.ray.origin.distanceTo(b);
                return c < n.near || c > n.far ? null : {
                    distance: c,
                    point: b.clone(),
                    object: t
                }
            }
            function n(n, r, i, o, a, s, c, d) {
                l.fromBufferAttribute(o, s),
                u.fromBufferAttribute(o, c),
                h.fromBufferAttribute(o, d);
                var p = e(n, n.material, r, i, l, u, h, x);
                if (p) {
                    a && (v.fromBufferAttribute(a, s),
                    g.fromBufferAttribute(a, c),
                    y.fromBufferAttribute(a, d),
                    p.uv = t(x, l, u, h, v, g, y));
                    var f = new T(s,c,d);
                    $.getNormal(l, u, h, f.normal),
                    p.face = f,
                    p.faceIndex = s
                }
                return p
            }
            var r = new o
              , a = new X
              , c = new m
              , l = new s
              , u = new s
              , h = new s
              , d = new s
              , p = new s
              , f = new s
              , v = new i
              , g = new i
              , y = new i
              , _ = new s
              , x = new s
              , b = new s;
            return function(i, o) {
                var s = this.geometry
                  , m = this.material
                  , _ = this.matrixWorld;
                if (void 0 !== m && (null === s.boundingSphere && s.computeBoundingSphere(),
                c.copy(s.boundingSphere),
                c.applyMatrix4(_),
                !1 !== i.ray.intersectsSphere(c) && (r.getInverse(_),
                a.copy(i.ray).applyMatrix4(r),
                null === s.boundingBox || !1 !== a.intersectsBox(s.boundingBox)))) {
                    var b;
                    if (s.isBufferGeometry) {
                        var w, M, E, T, S, A = s.index, C = s.attributes.position, P = s.attributes.uv;
                        if (null !== A)
                            for (T = 0,
                            S = A.count; T < S; T += 3)
                                w = A.getX(T),
                                M = A.getX(T + 1),
                                E = A.getX(T + 2),
                                (b = n(this, i, a, C, P, w, M, E)) && (b.faceIndex = Math.floor(T / 3),
                                o.push(b));
                        else if (void 0 !== C)
                            for (T = 0,
                            S = C.count; T < S; T += 3)
                                w = T,
                                M = T + 1,
                                E = T + 2,
                                (b = n(this, i, a, C, P, w, M, E)) && o.push(b)
                    } else if (s.isGeometry) {
                        var L, R, O, I, D = Array.isArray(m), N = s.vertices, k = s.faces, j = s.faceVertexUvs[0];
                        j.length > 0 && (I = j);
                        for (var z = 0, B = k.length; z < B; z++) {
                            var U = k[z]
                              , F = D ? m[U.materialIndex] : m;
                            if (void 0 !== F) {
                                if (L = N[U.a],
                                R = N[U.b],
                                O = N[U.c],
                                !0 === F.morphTargets) {
                                    var H = s.morphTargets
                                      , G = this.morphTargetInfluences;
                                    l.set(0, 0, 0),
                                    u.set(0, 0, 0),
                                    h.set(0, 0, 0);
                                    for (var V = 0, W = H.length; V < W; V++) {
                                        var q = G[V];
                                        if (0 !== q) {
                                            var X = H[V].vertices;
                                            l.addScaledVector(d.subVectors(X[U.a], L), q),
                                            u.addScaledVector(p.subVectors(X[U.b], R), q),
                                            h.addScaledVector(f.subVectors(X[U.c], O), q)
                                        }
                                    }
                                    l.add(L),
                                    u.add(R),
                                    h.add(O),
                                    L = l,
                                    R = u,
                                    O = h
                                }
                                if (b = e(this, F, i, a, L, R, O, x)) {
                                    if (I && I[z]) {
                                        var Y = I[z];
                                        v.copy(Y[0]),
                                        g.copy(Y[1]),
                                        y.copy(Y[2]),
                                        b.uv = t(x, L, R, O, v, g, y)
                                    }
                                    b.face = U,
                                    b.faceIndex = z,
                                    o.push(b)
                                }
                            }
                        }
                    }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    ct.prototype = Object.create(l.prototype),
    ct.prototype.constructor = ct,
    ct.prototype.isCubeTexture = !0,
    Object.defineProperty(ct.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(t) {
            this.image = t
        }
    });
    var Xs = new l
      , Ys = new ct
      , $s = []
      , Zs = []
      , Js = new Float32Array(16)
      , Qs = new Float32Array(9);
    Bt.prototype.setValue = function(t, e) {
        for (var n = this.seq, r = 0, i = n.length; r !== i; ++r) {
            var o = n[r];
            o.setValue(t, e[o.id])
        }
    }
    ;
    var Ks = /([\w\d_]+)(\])?(\[|\.)?/g;
    Ht.prototype.setValue = function(t, e, n) {
        var r = this.map[e];
        void 0 !== r && r.setValue(t, n, this.renderer)
    }
    ,
    Ht.prototype.setOptional = function(t, e, n) {
        var r = e[n];
        void 0 !== r && this.setValue(t, n, r)
    }
    ,
    Ht.upload = function(t, e, n, r) {
        for (var i = 0, o = e.length; i !== o; ++i) {
            var a = e[i]
              , s = n[a.id];
            !1 !== s.needsUpdate && a.setValue(t, s.value, r)
        }
    }
    ,
    Ht.seqWithValue = function(t, e) {
        for (var n = [], r = 0, i = t.length; r !== i; ++r) {
            var o = t[r];
            o.id in e && n.push(o)
        }
        return n
    }
    ;
    var tc = 0
      , ec = 0;
    fe.prototype = Object.create(V.prototype),
    fe.prototype.constructor = fe,
    fe.prototype.isMeshDepthMaterial = !0,
    fe.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.depthPacking = t.depthPacking,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this
    }
    ,
    me.prototype = Object.create(V.prototype),
    me.prototype.constructor = me,
    me.prototype.isMeshDistanceMaterial = !0,
    me.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.referencePosition.copy(t.referencePosition),
        this.nearDistance = t.nearDistance,
        this.farDistance = t.farDistance,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.map = t.map,
        this.alphaMap = t.alphaMap,
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this
    }
    ,
    ge.prototype = Object.create(l.prototype),
    ge.prototype.constructor = ge,
    we.prototype = Object.assign(Object.create(M.prototype), {
        constructor: we,
        isPerspectiveCamera: !0,
        copy: function(t, e) {
            return M.prototype.copy.call(this, t, e),
            this.fov = t.fov,
            this.zoom = t.zoom,
            this.near = t.near,
            this.far = t.far,
            this.focus = t.focus,
            this.aspect = t.aspect,
            this.view = null === t.view ? null : Object.assign({}, t.view),
            this.filmGauge = t.filmGauge,
            this.filmOffset = t.filmOffset,
            this
        },
        setFocalLength: function(t) {
            var e = .5 * this.getFilmHeight() / t;
            this.fov = 2 * ks.RAD2DEG * Math.atan(e),
            this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var t = Math.tan(.5 * ks.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / t
        },
        getEffectiveFOV: function() {
            return 2 * ks.RAD2DEG * Math.atan(Math.tan(.5 * ks.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(t, e, n, r, i, o) {
            this.aspect = t / e,
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = t,
            this.view.fullHeight = e,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = o,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var t = this.near
              , e = t * Math.tan(.5 * ks.DEG2RAD * this.fov) / this.zoom
              , n = 2 * e
              , r = this.aspect * n
              , i = -.5 * r
              , o = this.view;
            if (null !== this.view && this.view.enabled) {
                var a = o.fullWidth
                  , s = o.fullHeight;
                i += o.offsetX * r / a,
                e -= o.offsetY * n / s,
                r *= o.width / a,
                n *= o.height / s
            }
            var c = this.filmOffset;
            0 !== c && (i += t * c / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(i, i + r, e, e - n, t, this.far)
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.fov = this.fov,
            e.object.zoom = this.zoom,
            e.object.near = this.near,
            e.object.far = this.far,
            e.object.focus = this.focus,
            e.object.aspect = this.aspect,
            null !== this.view && (e.object.view = Object.assign({}, this.view)),
            e.object.filmGauge = this.filmGauge,
            e.object.filmOffset = this.filmOffset,
            e
        }
    }),
    Me.prototype = Object.assign(Object.create(we.prototype), {
        constructor: Me,
        isArrayCamera: !0
    }),
    Se.prototype.isFogExp2 = !0,
    Se.prototype.clone = function() {
        return new Se(this.color.getHex(),this.density)
    }
    ,
    Se.prototype.toJSON = function() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        }
    }
    ,
    Ae.prototype.isFog = !0,
    Ae.prototype.clone = function() {
        return new Ae(this.color.getHex(),this.near,this.far)
    }
    ,
    Ae.prototype.toJSON = function() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        }
    }
    ,
    Ce.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ce,
        copy: function(t, e) {
            return w.prototype.copy.call(this, t, e),
            null !== t.background && (this.background = t.background.clone()),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()),
            this.autoUpdate = t.autoUpdate,
            this.matrixAutoUpdate = t.matrixAutoUpdate,
            this
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return null !== this.background && (e.object.background = this.background.toJSON(t)),
            null !== this.fog && (e.object.fog = this.fog.toJSON()),
            e
        }
    }),
    Pe.prototype = Object.create(V.prototype),
    Pe.prototype.constructor = Pe,
    Pe.prototype.isSpriteMaterial = !0,
    Pe.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.rotation = t.rotation,
        this
    }
    ,
    Le.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Le,
        isSprite: !0,
        raycast: function() {
            var t = new s
              , e = new s
              , n = new s;
            return function(r, i) {
                e.setFromMatrixPosition(this.matrixWorld),
                r.ray.closestPointToPoint(e, t),
                n.setFromMatrixScale(this.matrixWorld);
                var o = n.x * n.y / 4;
                if (!(e.distanceToSquared(t) > o)) {
                    var a = r.ray.origin.distanceTo(t);
                    a < r.near || a > r.far || i.push({
                        distance: a,
                        point: t.clone(),
                        face: null,
                        object: this
                    })
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.material).copy(this)
        },
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            void 0 !== t.center && this.center.copy(t.center),
            this
        }
    }),
    Re.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Re,
        copy: function(t) {
            w.prototype.copy.call(this, t, !1);
            for (var e = t.levels, n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                this.addLevel(i.object.clone(), i.distance)
            }
            return this
        },
        addLevel: function(t, e) {
            void 0 === e && (e = 0),
            e = Math.abs(e);
            for (var n = this.levels, r = 0; r < n.length && !(e < n[r].distance); r++)
                ;
            n.splice(r, 0, {
                distance: e,
                object: t
            }),
            this.add(t)
        },
        getObjectForDistance: function(t) {
            for (var e = this.levels, n = 1, r = e.length; n < r && !(t < e[n].distance); n++)
                ;
            return e[n - 1].object
        },
        raycast: function() {
            var t = new s;
            return function(e, n) {
                t.setFromMatrixPosition(this.matrixWorld);
                var r = e.ray.origin.distanceTo(t);
                this.getObjectForDistance(r).raycast(e, n)
            }
        }(),
        update: function() {
            var t = new s
              , e = new s;
            return function(n) {
                var r = this.levels;
                if (r.length > 1) {
                    t.setFromMatrixPosition(n.matrixWorld),
                    e.setFromMatrixPosition(this.matrixWorld);
                    var i = t.distanceTo(e);
                    r[0].object.visible = !0;
                    for (var o = 1, a = r.length; o < a && i >= r[o].distance; o++)
                        r[o - 1].object.visible = !1,
                        r[o].object.visible = !0;
                    for (; o < a; o++)
                        r[o].object.visible = !1
                }
            }
        }(),
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            e.object.levels = [];
            for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                var o = n[r];
                e.object.levels.push({
                    object: o.object.uuid,
                    distance: o.distance
                })
            }
            return e
        }
    }),
    Object.assign(Oe.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var t = 0, e = this.bones.length; t < e; t++) {
                var n = new o;
                this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
                this.boneInverses.push(n)
            }
        },
        pose: function() {
            var t, e, n;
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
            for (e = 0,
            n = this.bones.length; e < n; e++)
                (t = this.bones[e]) && (t.parent && t.parent.isBone ? (t.matrix.getInverse(t.parent.matrixWorld),
                t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld),
                t.matrix.decompose(t.position, t.quaternion, t.scale))
        },
        update: function() {
            var t = new o
              , e = new o;
            return function() {
                for (var n = this.bones, r = this.boneInverses, i = this.boneMatrices, o = this.boneTexture, a = 0, s = n.length; a < s; a++) {
                    var c = n[a] ? n[a].matrixWorld : e;
                    t.multiplyMatrices(c, r[a]),
                    t.toArray(i, 16 * a)
                }
                void 0 !== o && (o.needsUpdate = !0)
            }
        }(),
        clone: function() {
            return new Oe(this.bones,this.boneInverses)
        },
        getBoneByName: function(t) {
            for (var e = 0, n = this.bones.length; e < n; e++) {
                var r = this.bones[e];
                if (r.name === t)
                    return r
            }
        }
    }),
    Ie.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ie,
        isBone: !0
    }),
    De.prototype = Object.assign(Object.create(Z.prototype), {
        constructor: De,
        isSkinnedMesh: !0,
        initBones: function() {
            var t, e, n, r, i = [];
            if (this.geometry && void 0 !== this.geometry.bones) {
                for (n = 0,
                r = this.geometry.bones.length; n < r; n++)
                    e = this.geometry.bones[n],
                    t = new Ie,
                    i.push(t),
                    t.name = e.name,
                    t.position.fromArray(e.pos),
                    t.quaternion.fromArray(e.rotq),
                    void 0 !== e.scl && t.scale.fromArray(e.scl);
                for (n = 0,
                r = this.geometry.bones.length; n < r; n++)
                    e = this.geometry.bones[n],
                    -1 !== e.parent && null !== e.parent && void 0 !== i[e.parent] ? i[e.parent].add(i[n]) : this.add(i[n])
            }
            return this.updateMatrixWorld(!0),
            i
        },
        bind: function(t, e) {
            this.skeleton = t,
            void 0 === e && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            e = this.matrixWorld),
            this.bindMatrix.copy(e),
            this.bindMatrixInverse.getInverse(e)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            var t, e;
            if (this.geometry && this.geometry.isGeometry)
                for (e = 0; e < this.geometry.skinWeights.length; e++) {
                    var n = this.geometry.skinWeights[e];
                    t = 1 / n.manhattanLength(),
                    t !== 1 / 0 ? n.multiplyScalar(t) : n.set(1, 0, 0, 0)
                }
            else if (this.geometry && this.geometry.isBufferGeometry) {
                var r = new u
                  , i = this.geometry.attributes.skinWeight;
                for (e = 0; e < i.count; e++)
                    r.x = i.getX(e),
                    r.y = i.getY(e),
                    r.z = i.getZ(e),
                    r.w = i.getW(e),
                    t = 1 / r.manhattanLength(),
                    t !== 1 / 0 ? r.multiplyScalar(t) : r.set(1, 0, 0, 0),
                    i.setXYZW(e, r.x, r.y, r.z, r.w)
            }
        },
        updateMatrixWorld: function(t) {
            Z.prototype.updateMatrixWorld.call(this, t),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Ne.prototype = Object.create(V.prototype),
    Ne.prototype.constructor = Ne,
    Ne.prototype.isLineBasicMaterial = !0,
    Ne.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.linewidth = t.linewidth,
        this.linecap = t.linecap,
        this.linejoin = t.linejoin,
        this
    }
    ,
    ke.prototype = Object.assign(Object.create(w.prototype), {
        constructor: ke,
        isLine: !0,
        computeLineDistances: function() {
            var t = new s
              , e = new s;
            return function() {
                var n = this.geometry;
                if (n.isBufferGeometry)
                    if (null === n.index) {
                        for (var r = n.attributes.position, i = [0], o = 1, a = r.count; o < a; o++)
                            t.fromBufferAttribute(r, o - 1),
                            e.fromBufferAttribute(r, o),
                            i[o] = i[o - 1],
                            i[o] += t.distanceTo(e);
                        n.addAttribute("lineDistance", new N(i,1))
                    } else
                        console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (n.isGeometry) {
                    var s = n.vertices
                      , i = n.lineDistances;
                    i[0] = 0;
                    for (var o = 1, a = s.length; o < a; o++)
                        i[o] = i[o - 1],
                        i[o] += s[o - 1].distanceTo(s[o])
                }
                return this
            }
        }(),
        raycast: function() {
            var t = new o
              , e = new X
              , n = new m;
            return function(r, i) {
                var o = r.linePrecision
                  , a = o * o
                  , c = this.geometry
                  , l = this.matrixWorld;
                if (null === c.boundingSphere && c.computeBoundingSphere(),
                n.copy(c.boundingSphere),
                n.applyMatrix4(l),
                !1 !== r.ray.intersectsSphere(n)) {
                    t.getInverse(l),
                    e.copy(r.ray).applyMatrix4(t);
                    var u = new s
                      , h = new s
                      , d = new s
                      , p = new s
                      , f = this && this.isLineSegments ? 2 : 1;
                    if (c.isBufferGeometry) {
                        var m = c.index
                          , v = c.attributes
                          , g = v.position.array;
                        if (null !== m)
                            for (var y = m.array, _ = 0, x = y.length - 1; _ < x; _ += f) {
                                var b = y[_]
                                  , w = y[_ + 1];
                                u.fromArray(g, 3 * b),
                                h.fromArray(g, 3 * w);
                                var M = e.distanceSqToSegment(u, h, p, d);
                                if (!(M > a)) {
                                    p.applyMatrix4(this.matrixWorld);
                                    var E = r.ray.origin.distanceTo(p);
                                    E < r.near || E > r.far || i.push({
                                        distance: E,
                                        point: d.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                        else
                            for (var _ = 0, x = g.length / 3 - 1; _ < x; _ += f) {
                                u.fromArray(g, 3 * _),
                                h.fromArray(g, 3 * _ + 3);
                                var M = e.distanceSqToSegment(u, h, p, d);
                                if (!(M > a)) {
                                    p.applyMatrix4(this.matrixWorld);
                                    var E = r.ray.origin.distanceTo(p);
                                    E < r.near || E > r.far || i.push({
                                        distance: E,
                                        point: d.clone().applyMatrix4(this.matrixWorld),
                                        index: _,
                                        face: null,
                                        faceIndex: null,
                                        object: this
                                    })
                                }
                            }
                    } else if (c.isGeometry)
                        for (var T = c.vertices, S = T.length, _ = 0; _ < S - 1; _ += f) {
                            var M = e.distanceSqToSegment(T[_], T[_ + 1], p, d);
                            if (!(M > a)) {
                                p.applyMatrix4(this.matrixWorld);
                                var E = r.ray.origin.distanceTo(p);
                                E < r.near || E > r.far || i.push({
                                    distance: E,
                                    point: d.clone().applyMatrix4(this.matrixWorld),
                                    index: _,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    je.prototype = Object.assign(Object.create(ke.prototype), {
        constructor: je,
        isLineSegments: !0,
        computeLineDistances: function() {
            var t = new s
              , e = new s;
            return function() {
                var n = this.geometry;
                if (n.isBufferGeometry)
                    if (null === n.index) {
                        for (var r = n.attributes.position, i = [], o = 0, a = r.count; o < a; o += 2)
                            t.fromBufferAttribute(r, o),
                            e.fromBufferAttribute(r, o + 1),
                            i[o] = 0 === o ? 0 : i[o - 1],
                            i[o + 1] = i[o] + t.distanceTo(e);
                        n.addAttribute("lineDistance", new N(i,1))
                    } else
                        console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                else if (n.isGeometry)
                    for (var s = n.vertices, i = n.lineDistances, o = 0, a = s.length; o < a; o += 2)
                        t.copy(s[o]),
                        e.copy(s[o + 1]),
                        i[o] = 0 === o ? 0 : i[o - 1],
                        i[o + 1] = i[o] + t.distanceTo(e);
                return this
            }
        }()
    }),
    ze.prototype = Object.assign(Object.create(ke.prototype), {
        constructor: ze,
        isLineLoop: !0
    }),
    Be.prototype = Object.create(V.prototype),
    Be.prototype.constructor = Be,
    Be.prototype.isPointsMaterial = !0,
    Be.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.size = t.size,
        this.sizeAttenuation = t.sizeAttenuation,
        this
    }
    ,
    Ue.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ue,
        isPoints: !0,
        raycast: function() {
            var t = new o
              , e = new X
              , n = new m;
            return function(r, i) {
                function o(t, n) {
                    var o = e.distanceSqToPoint(t);
                    if (o < d) {
                        e.closestPointToPoint(t, f),
                        f.applyMatrix4(l);
                        var s = r.ray.origin.distanceTo(f);
                        if (s < r.near || s > r.far)
                            return;
                        i.push({
                            distance: s,
                            distanceToRay: Math.sqrt(o),
                            point: f.clone(),
                            index: n,
                            face: null,
                            object: a
                        })
                    }
                }
                var a = this
                  , c = this.geometry
                  , l = this.matrixWorld
                  , u = r.params.Points.threshold;
                if (null === c.boundingSphere && c.computeBoundingSphere(),
                n.copy(c.boundingSphere),
                n.applyMatrix4(l),
                n.radius += u,
                !1 !== r.ray.intersectsSphere(n)) {
                    t.getInverse(l),
                    e.copy(r.ray).applyMatrix4(t);
                    var h = u / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                      , d = h * h
                      , p = new s
                      , f = new s;
                    if (c.isBufferGeometry) {
                        var m = c.index
                          , v = c.attributes
                          , g = v.position.array;
                        if (null !== m)
                            for (var y = m.array, _ = 0, x = y.length; _ < x; _++) {
                                var b = y[_];
                                p.fromArray(g, 3 * b),
                                o(p, b)
                            }
                        else
                            for (var _ = 0, w = g.length / 3; _ < w; _++)
                                p.fromArray(g, 3 * _),
                                o(p, _)
                    } else
                        for (var M = c.vertices, _ = 0, w = M.length; _ < w; _++)
                            o(M[_], _)
                }
            }
        }(),
        clone: function() {
            return new this.constructor(this.geometry,this.material).copy(this)
        }
    }),
    Fe.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Fe,
        isGroup: !0
    }),
    He.prototype = Object.assign(Object.create(l.prototype), {
        constructor: He,
        isVideoTexture: !0,
        update: function() {
            var t = this.image;
            t.readyState >= t.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }),
    Ge.prototype = Object.create(l.prototype),
    Ge.prototype.constructor = Ge,
    Ge.prototype.isCompressedTexture = !0,
    Ve.prototype = Object.create(l.prototype),
    Ve.prototype.constructor = Ve,
    Ve.prototype.isDepthTexture = !0,
    We.prototype = Object.create(B.prototype),
    We.prototype.constructor = We,
    qe.prototype = Object.create(S.prototype),
    qe.prototype.constructor = qe,
    Xe.prototype = Object.create(B.prototype),
    Xe.prototype.constructor = Xe,
    Ye.prototype = Object.create(S.prototype),
    Ye.prototype.constructor = Ye,
    $e.prototype = Object.create(B.prototype),
    $e.prototype.constructor = $e,
    Ze.prototype = Object.create(S.prototype),
    Ze.prototype.constructor = Ze,
    Je.prototype = Object.create($e.prototype),
    Je.prototype.constructor = Je,
    Qe.prototype = Object.create(S.prototype),
    Qe.prototype.constructor = Qe,
    Ke.prototype = Object.create($e.prototype),
    Ke.prototype.constructor = Ke,
    tn.prototype = Object.create(S.prototype),
    tn.prototype.constructor = tn,
    en.prototype = Object.create($e.prototype),
    en.prototype.constructor = en,
    nn.prototype = Object.create(S.prototype),
    nn.prototype.constructor = nn,
    rn.prototype = Object.create($e.prototype),
    rn.prototype.constructor = rn,
    on.prototype = Object.create(S.prototype),
    on.prototype.constructor = on,
    an.prototype = Object.create(B.prototype),
    an.prototype.constructor = an,
    sn.prototype = Object.create(S.prototype),
    sn.prototype.constructor = sn,
    cn.prototype = Object.create(B.prototype),
    cn.prototype.constructor = cn,
    ln.prototype = Object.create(S.prototype),
    ln.prototype.constructor = ln,
    un.prototype = Object.create(B.prototype),
    un.prototype.constructor = un;
    var nc = {
        triangulate: function(t, e, n) {
            n = n || 2;
            var r = e && e.length
              , i = r ? e[0] * n : t.length
              , o = hn(t, 0, i, n, !0)
              , a = [];
            if (!o)
                return a;
            var s, c, l, u, h, d, p;
            if (r && (o = yn(t, e, o, n)),
            t.length > 80 * n) {
                s = l = t[0],
                c = u = t[1];
                for (var f = n; f < i; f += n)
                    h = t[f],
                    d = t[f + 1],
                    h < s && (s = h),
                    d < c && (c = d),
                    h > l && (l = h),
                    d > u && (u = d);
                p = Math.max(l - s, u - c),
                p = 0 !== p ? 1 / p : 0
            }
            return pn(o, a, n, s, c, p),
            a
        }
    }
      , rc = {
        area: function(t) {
            for (var e = t.length, n = 0, r = e - 1, i = 0; i < e; r = i++)
                n += t[r].x * t[i].y - t[i].x * t[r].y;
            return .5 * n
        },
        isClockWise: function(t) {
            return rc.area(t) < 0
        },
        triangulateShape: function(t, e) {
            var n = []
              , r = []
              , i = [];
            Bn(t),
            Un(n, t);
            var o = t.length;
            e.forEach(Bn);
            for (var a = 0; a < e.length; a++)
                r.push(o),
                o += e[a].length,
                Un(n, e[a]);
            for (var s = nc.triangulate(n, r), a = 0; a < s.length; a += 3)
                i.push(s.slice(a, a + 3));
            return i
        }
    };
    Fn.prototype = Object.create(S.prototype),
    Fn.prototype.constructor = Fn,
    Hn.prototype = Object.create(B.prototype),
    Hn.prototype.constructor = Hn;
    var ic = {
        generateTopUV: function(t, e, n, r, o) {
            var a = e[3 * n]
              , s = e[3 * n + 1]
              , c = e[3 * r]
              , l = e[3 * r + 1]
              , u = e[3 * o]
              , h = e[3 * o + 1];
            return [new i(a,s), new i(c,l), new i(u,h)]
        },
        generateSideWallUV: function(t, e, n, r, o, a) {
            var s = e[3 * n]
              , c = e[3 * n + 1]
              , l = e[3 * n + 2]
              , u = e[3 * r]
              , h = e[3 * r + 1]
              , d = e[3 * r + 2]
              , p = e[3 * o]
              , f = e[3 * o + 1]
              , m = e[3 * o + 2]
              , v = e[3 * a]
              , g = e[3 * a + 1]
              , y = e[3 * a + 2];
            return Math.abs(c - h) < .01 ? [new i(s,1 - l), new i(u,1 - d), new i(p,1 - m), new i(v,1 - y)] : [new i(c,1 - l), new i(h,1 - d), new i(f,1 - m), new i(g,1 - y)]
        }
    };
    Gn.prototype = Object.create(S.prototype),
    Gn.prototype.constructor = Gn,
    Vn.prototype = Object.create(Hn.prototype),
    Vn.prototype.constructor = Vn,
    Wn.prototype = Object.create(S.prototype),
    Wn.prototype.constructor = Wn,
    qn.prototype = Object.create(B.prototype),
    qn.prototype.constructor = qn,
    Xn.prototype = Object.create(S.prototype),
    Xn.prototype.constructor = Xn,
    Yn.prototype = Object.create(B.prototype),
    Yn.prototype.constructor = Yn,
    $n.prototype = Object.create(S.prototype),
    $n.prototype.constructor = $n,
    Zn.prototype = Object.create(B.prototype),
    Zn.prototype.constructor = Zn,
    Jn.prototype = Object.create(S.prototype),
    Jn.prototype.constructor = Jn,
    Jn.prototype.toJSON = function() {
        var t = S.prototype.toJSON.call(this);
        return Kn(this.parameters.shapes, t)
    }
    ,
    Qn.prototype = Object.create(B.prototype),
    Qn.prototype.constructor = Qn,
    Qn.prototype.toJSON = function() {
        var t = B.prototype.toJSON.call(this);
        return Kn(this.parameters.shapes, t)
    }
    ,
    tr.prototype = Object.create(B.prototype),
    tr.prototype.constructor = tr,
    er.prototype = Object.create(S.prototype),
    er.prototype.constructor = er,
    nr.prototype = Object.create(B.prototype),
    nr.prototype.constructor = nr,
    rr.prototype = Object.create(er.prototype),
    rr.prototype.constructor = rr,
    ir.prototype = Object.create(nr.prototype),
    ir.prototype.constructor = ir,
    or.prototype = Object.create(S.prototype),
    or.prototype.constructor = or,
    ar.prototype = Object.create(B.prototype),
    ar.prototype.constructor = ar;
    var oc = Object.freeze({
        WireframeGeometry: We,
        ParametricGeometry: qe,
        ParametricBufferGeometry: Xe,
        TetrahedronGeometry: Ze,
        TetrahedronBufferGeometry: Je,
        OctahedronGeometry: Qe,
        OctahedronBufferGeometry: Ke,
        IcosahedronGeometry: tn,
        IcosahedronBufferGeometry: en,
        DodecahedronGeometry: nn,
        DodecahedronBufferGeometry: rn,
        PolyhedronGeometry: Ye,
        PolyhedronBufferGeometry: $e,
        TubeGeometry: on,
        TubeBufferGeometry: an,
        TorusKnotGeometry: sn,
        TorusKnotBufferGeometry: cn,
        TorusGeometry: ln,
        TorusBufferGeometry: un,
        TextGeometry: Gn,
        TextBufferGeometry: Vn,
        SphereGeometry: Wn,
        SphereBufferGeometry: qn,
        RingGeometry: Xn,
        RingBufferGeometry: Yn,
        PlaneGeometry: H,
        PlaneBufferGeometry: G,
        LatheGeometry: $n,
        LatheBufferGeometry: Zn,
        ShapeGeometry: Jn,
        ShapeBufferGeometry: Qn,
        ExtrudeGeometry: Fn,
        ExtrudeBufferGeometry: Hn,
        EdgesGeometry: tr,
        ConeGeometry: rr,
        ConeBufferGeometry: ir,
        CylinderGeometry: er,
        CylinderBufferGeometry: nr,
        CircleGeometry: or,
        CircleBufferGeometry: ar,
        BoxGeometry: U,
        BoxBufferGeometry: F
    });
    sr.prototype = Object.create(V.prototype),
    sr.prototype.constructor = sr,
    sr.prototype.isShadowMaterial = !0,
    sr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this
    }
    ,
    cr.prototype = Object.create(q.prototype),
    cr.prototype.constructor = cr,
    cr.prototype.isRawShaderMaterial = !0,
    lr.prototype = Object.create(V.prototype),
    lr.prototype.constructor = lr,
    lr.prototype.isMeshStandardMaterial = !0,
    lr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.defines = {
            STANDARD: ""
        },
        this.color.copy(t.color),
        this.roughness = t.roughness,
        this.metalness = t.metalness,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.roughnessMap = t.roughnessMap,
        this.metalnessMap = t.metalnessMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.envMapIntensity = t.envMapIntensity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    ur.prototype = Object.create(lr.prototype),
    ur.prototype.constructor = ur,
    ur.prototype.isMeshPhysicalMaterial = !0,
    ur.prototype.copy = function(t) {
        return lr.prototype.copy.call(this, t),
        this.defines = {
            PHYSICAL: ""
        },
        this.reflectivity = t.reflectivity,
        this.clearCoat = t.clearCoat,
        this.clearCoatRoughness = t.clearCoatRoughness,
        this
    }
    ,
    hr.prototype = Object.create(V.prototype),
    hr.prototype.constructor = hr,
    hr.prototype.isMeshPhongMaterial = !0,
    hr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.specular.copy(t.specular),
        this.shininess = t.shininess,
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    dr.prototype = Object.create(hr.prototype),
    dr.prototype.constructor = dr,
    dr.prototype.isMeshToonMaterial = !0,
    dr.prototype.copy = function(t) {
        return hr.prototype.copy.call(this, t),
        this.gradientMap = t.gradientMap,
        this
    }
    ,
    pr.prototype = Object.create(V.prototype),
    pr.prototype.constructor = pr,
    pr.prototype.isMeshNormalMaterial = !0,
    pr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.bumpMap = t.bumpMap,
        this.bumpScale = t.bumpScale,
        this.normalMap = t.normalMap,
        this.normalScale.copy(t.normalScale),
        this.displacementMap = t.displacementMap,
        this.displacementScale = t.displacementScale,
        this.displacementBias = t.displacementBias,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    fr.prototype = Object.create(V.prototype),
    fr.prototype.constructor = fr,
    fr.prototype.isMeshLambertMaterial = !0,
    fr.prototype.copy = function(t) {
        return V.prototype.copy.call(this, t),
        this.color.copy(t.color),
        this.map = t.map,
        this.lightMap = t.lightMap,
        this.lightMapIntensity = t.lightMapIntensity,
        this.aoMap = t.aoMap,
        this.aoMapIntensity = t.aoMapIntensity,
        this.emissive.copy(t.emissive),
        this.emissiveMap = t.emissiveMap,
        this.emissiveIntensity = t.emissiveIntensity,
        this.specularMap = t.specularMap,
        this.alphaMap = t.alphaMap,
        this.envMap = t.envMap,
        this.combine = t.combine,
        this.reflectivity = t.reflectivity,
        this.refractionRatio = t.refractionRatio,
        this.wireframe = t.wireframe,
        this.wireframeLinewidth = t.wireframeLinewidth,
        this.wireframeLinecap = t.wireframeLinecap,
        this.wireframeLinejoin = t.wireframeLinejoin,
        this.skinning = t.skinning,
        this.morphTargets = t.morphTargets,
        this.morphNormals = t.morphNormals,
        this
    }
    ,
    mr.prototype = Object.create(Ne.prototype),
    mr.prototype.constructor = mr,
    mr.prototype.isLineDashedMaterial = !0,
    mr.prototype.copy = function(t) {
        return Ne.prototype.copy.call(this, t),
        this.scale = t.scale,
        this.dashSize = t.dashSize,
        this.gapSize = t.gapSize,
        this
    }
    ;
    var ac = Object.freeze({
        ShadowMaterial: sr,
        SpriteMaterial: Pe,
        RawShaderMaterial: cr,
        ShaderMaterial: q,
        PointsMaterial: Be,
        MeshPhysicalMaterial: ur,
        MeshStandardMaterial: lr,
        MeshPhongMaterial: hr,
        MeshToonMaterial: dr,
        MeshNormalMaterial: pr,
        MeshLambertMaterial: fr,
        MeshDepthMaterial: fe,
        MeshDistanceMaterial: me,
        MeshBasicMaterial: W,
        LineDashedMaterial: mr,
        LineBasicMaterial: Ne,
        Material: V
    })
      , sc = {
        enabled: !1,
        files: {},
        add: function(t, e) {
            !1 !== this.enabled && (this.files[t] = e)
        },
        get: function(t) {
            if (!1 !== this.enabled)
                return this.files[t]
        },
        remove: function(t) {
            delete this.files[t]
        },
        clear: function() {
            this.files = {}
        }
    }
      , cc = new vr
      , lc = {};
    Object.assign(gr.prototype, {
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var i = this
              , o = sc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            if (void 0 !== lc[t])
                return void lc[t].push({
                    onLoad: e,
                    onProgress: n,
                    onError: r
                });
            var a = /^data:(.*?)(;base64)?,(.*)$/
              , s = t.match(a);
            if (s) {
                var c = s[1]
                  , l = !!s[2]
                  , u = s[3];
                u = window.decodeURIComponent(u),
                l && (u = window.atob(u));
                try {
                    var h, d = (this.responseType || "").toLowerCase();
                    switch (d) {
                    case "arraybuffer":
                    case "blob":
                        for (var p = new Uint8Array(u.length), f = 0; f < u.length; f++)
                            p[f] = u.charCodeAt(f);
                        h = "blob" === d ? new Blob([p.buffer],{
                            type: c
                        }) : p.buffer;
                        break;
                    case "document":
                        var m = new DOMParser;
                        h = m.parseFromString(u, c);
                        break;
                    case "json":
                        h = JSON.parse(u);
                        break;
                    default:
                        h = u
                    }
                    window.setTimeout(function() {
                        e && e(h),
                        i.manager.itemEnd(t)
                    }, 0)
                } catch (e) {
                    window.setTimeout(function() {
                        r && r(e),
                        i.manager.itemEnd(t),
                        i.manager.itemError(t)
                    }, 0)
                }
            } else {
                lc[t] = [],
                lc[t].push({
                    onLoad: e,
                    onProgress: n,
                    onError: r
                });
                var v = new XMLHttpRequest;
                v.open("GET", t, !0),
                v.addEventListener("load", function(e) {
                    var n = this.response;
                    sc.add(t, n);
                    var r = lc[t];
                    if (delete lc[t],
                    200 === this.status) {
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onLoad && s.onLoad(n)
                        }
                        i.manager.itemEnd(t)
                    } else if (0 === this.status) {
                        console.warn("THREE.FileLoader: HTTP Status 0 received.");
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onLoad && s.onLoad(n)
                        }
                        i.manager.itemEnd(t)
                    } else {
                        for (var o = 0, a = r.length; o < a; o++) {
                            var s = r[o];
                            s.onError && s.onError(e)
                        }
                        i.manager.itemEnd(t),
                        i.manager.itemError(t)
                    }
                }, !1),
                v.addEventListener("progress", function(e) {
                    for (var n = lc[t], r = 0, i = n.length; r < i; r++) {
                        var o = n[r];
                        o.onProgress && o.onProgress(e)
                    }
                }, !1),
                v.addEventListener("error", function(e) {
                    var n = lc[t];
                    delete lc[t];
                    for (var r = 0, o = n.length; r < o; r++) {
                        var a = n[r];
                        a.onError && a.onError(e)
                    }
                    i.manager.itemEnd(t),
                    i.manager.itemError(t)
                }, !1),
                void 0 !== this.responseType && (v.responseType = this.responseType),
                void 0 !== this.withCredentials && (v.withCredentials = this.withCredentials),
                v.overrideMimeType && v.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                for (var g in this.requestHeader)
                    v.setRequestHeader(g, this.requestHeader[g]);
                v.send(null)
            }
            return i.manager.itemStart(t),
            v
        },
        setPath: function(t) {
            return this.path = t,
            this
        },
        setResponseType: function(t) {
            return this.responseType = t,
            this
        },
        setWithCredentials: function(t) {
            return this.withCredentials = t,
            this
        },
        setMimeType: function(t) {
            return this.mimeType = t,
            this
        },
        setRequestHeader: function(t) {
            return this.requestHeader = t,
            this
        }
    }),
    Object.assign(yr.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = []
              , a = new Ge;
            a.image = o;
            var s = new gr(this.manager);
            if (s.setPath(this.path),
            s.setResponseType("arraybuffer"),
            Array.isArray(t))
                for (var c = 0, l = 0, u = t.length; l < u; ++l)
                    !function(l) {
                        s.load(t[l], function(t) {
                            var n = i._parser(t, !0);
                            o[l] = {
                                width: n.width,
                                height: n.height,
                                format: n.format,
                                mipmaps: n.mipmaps
                            },
                            6 === (c += 1) && (1 === n.mipmapCount && (a.minFilter = Ra),
                            a.format = n.format,
                            a.needsUpdate = !0,
                            e && e(a))
                        }, n, r)
                    }(l);
            else
                s.load(t, function(t) {
                    var n = i._parser(t, !0);
                    if (n.isCubemap)
                        for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                            o[s] = {
                                mipmaps: []
                            };
                            for (var c = 0; c < n.mipmapCount; c++)
                                o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]),
                                o[s].format = n.format,
                                o[s].width = n.width,
                                o[s].height = n.height
                        }
                    else
                        a.image.width = n.width,
                        a.image.height = n.height,
                        a.mipmaps = n.mipmaps;
                    1 === n.mipmapCount && (a.minFilter = Ra),
                    a.format = n.format,
                    a.needsUpdate = !0,
                    e && e(a)
                }, n, r);
            return a
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(_r.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = new p
              , a = new gr(this.manager);
            return a.setResponseType("arraybuffer"),
            a.load(t, function(t) {
                var n = i._parser(t);
                n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width,
                o.image.height = n.height,
                o.image.data = n.data),
                o.wrapS = void 0 !== n.wrapS ? n.wrapS : Sa,
                o.wrapT = void 0 !== n.wrapT ? n.wrapT : Sa,
                o.magFilter = void 0 !== n.magFilter ? n.magFilter : Ra,
                o.minFilter = void 0 !== n.minFilter ? n.minFilter : Ia,
                o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                void 0 !== n.format && (o.format = n.format),
                void 0 !== n.type && (o.type = n.type),
                void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps),
                1 === n.mipmapCount && (o.minFilter = Ra),
                o.needsUpdate = !0,
                e && e(o, n))
            }, n, r),
            o
        }
    }),
    Object.assign(xr.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            t = this.manager.resolveURL(t);
            var i = this
              , o = sc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
            return a.addEventListener("load", function() {
                sc.add(t, this),
                e && e(this),
                i.manager.itemEnd(t)
            }, !1),
            a.addEventListener("error", function(e) {
                r && r(e),
                i.manager.itemEnd(t),
                i.manager.itemError(t)
            }, !1),
            "data:" !== t.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin),
            i.manager.itemStart(t),
            a.src = t,
            a
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(br.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            var i = new ct
              , o = new xr(this.manager);
            o.setCrossOrigin(this.crossOrigin),
            o.setPath(this.path);
            for (var a = 0, s = 0; s < t.length; ++s)
                !function(n) {
                    o.load(t[n], function(t) {
                        i.images[n] = t,
                        6 == ++a && (i.needsUpdate = !0,
                        e && e(i))
                    }, void 0, r)
                }(s);
            return i
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(wr.prototype, {
        crossOrigin: "Anonymous",
        load: function(t, e, n, r) {
            var i = new l
              , o = new xr(this.manager);
            return o.setCrossOrigin(this.crossOrigin),
            o.setPath(this.path),
            o.load(t, function(n) {
                i.image = n;
                var r = t.search(/\.(jpg|jpeg)$/) > 0 || 0 === t.search(/^data\:image\/jpeg/);
                i.format = r ? Xa : Ya,
                i.needsUpdate = !0,
                void 0 !== e && e(i)
            }, n, r),
            i
        },
        setCrossOrigin: function(t) {
            return this.crossOrigin = t,
            this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    }),
    Object.assign(Mr.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."),
            null
        },
        getPointAt: function(t, e) {
            var n = this.getUtoTmapping(t);
            return this.getPoint(n, e)
        },
        getPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return e
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 5);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPointAt(n / t));
            return e
        },
        getLength: function() {
            var t = this.getLengths();
            return t[t.length - 1]
        },
        getLengths: function(t) {
            if (void 0 === t && (t = this.arcLengthDivisions),
            this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var e, n, r = [], i = this.getPoint(0), o = 0;
            for (r.push(0),
            n = 1; n <= t; n++)
                e = this.getPoint(n / t),
                o += e.distanceTo(i),
                r.push(o),
                i = e;
            return this.cacheArcLengths = r,
            r
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.getLengths()
        },
        getUtoTmapping: function(t, e) {
            var n, r = this.getLengths(), i = 0, o = r.length;
            n = e || t * r[o - 1];
            for (var a, s = 0, c = o - 1; s <= c; )
                if (i = Math.floor(s + (c - s) / 2),
                (a = r[i] - n) < 0)
                    s = i + 1;
                else {
                    if (!(a > 0)) {
                        c = i;
                        break
                    }
                    c = i - 1
                }
            if (i = c,
            r[i] === n)
                return i / (o - 1);
            var l = r[i];
            return (i + (n - l) / (r[i + 1] - l)) / (o - 1)
        },
        getTangent: function(t) {
            var e = t - 1e-4
              , n = t + 1e-4;
            e < 0 && (e = 0),
            n > 1 && (n = 1);
            var r = this.getPoint(e);
            return this.getPoint(n).clone().sub(r).normalize()
        },
        getTangentAt: function(t) {
            var e = this.getUtoTmapping(t);
            return this.getTangent(e)
        },
        computeFrenetFrames: function(t, e) {
            var n, r, i, a = new s, c = [], l = [], u = [], h = new s, d = new o;
            for (n = 0; n <= t; n++)
                r = n / t,
                c[n] = this.getTangentAt(r),
                c[n].normalize();
            l[0] = new s,
            u[0] = new s;
            var p = Number.MAX_VALUE
              , f = Math.abs(c[0].x)
              , m = Math.abs(c[0].y)
              , v = Math.abs(c[0].z);
            for (f <= p && (p = f,
            a.set(1, 0, 0)),
            m <= p && (p = m,
            a.set(0, 1, 0)),
            v <= p && a.set(0, 0, 1),
            h.crossVectors(c[0], a).normalize(),
            l[0].crossVectors(c[0], h),
            u[0].crossVectors(c[0], l[0]),
            n = 1; n <= t; n++)
                l[n] = l[n - 1].clone(),
                u[n] = u[n - 1].clone(),
                h.crossVectors(c[n - 1], c[n]),
                h.length() > Number.EPSILON && (h.normalize(),
                i = Math.acos(ks.clamp(c[n - 1].dot(c[n]), -1, 1)),
                l[n].applyMatrix4(d.makeRotationAxis(h, i))),
                u[n].crossVectors(c[n], l[n]);
            if (!0 === e)
                for (i = Math.acos(ks.clamp(l[0].dot(l[t]), -1, 1)),
                i /= t,
                c[0].dot(h.crossVectors(l[0], l[t])) > 0 && (i = -i),
                n = 1; n <= t; n++)
                    l[n].applyMatrix4(d.makeRotationAxis(c[n], i * n)),
                    u[n].crossVectors(c[n], l[n]);
            return {
                tangents: c,
                normals: l,
                binormals: u
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        },
        toJSON: function() {
            var t = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return t.arcLengthDivisions = this.arcLengthDivisions,
            t.type = this.type,
            t
        },
        fromJSON: function(t) {
            return this.arcLengthDivisions = t.arcLengthDivisions,
            this
        }
    }),
    Er.prototype = Object.create(Mr.prototype),
    Er.prototype.constructor = Er,
    Er.prototype.isEllipseCurve = !0,
    Er.prototype.getPoint = function(t, e) {
        for (var n = e || new i, r = 2 * Math.PI, o = this.aEndAngle - this.aStartAngle, a = Math.abs(o) < Number.EPSILON; o < 0; )
            o += r;
        for (; o > r; )
            o -= r;
        o < Number.EPSILON && (o = a ? 0 : r),
        !0 !== this.aClockwise || a || (o === r ? o = -r : o -= r);
        var s = this.aStartAngle + t * o
          , c = this.aX + this.xRadius * Math.cos(s)
          , l = this.aY + this.yRadius * Math.sin(s);
        if (0 !== this.aRotation) {
            var u = Math.cos(this.aRotation)
              , h = Math.sin(this.aRotation)
              , d = c - this.aX
              , p = l - this.aY;
            c = d * u - p * h + this.aX,
            l = d * h + p * u + this.aY
        }
        return n.set(c, l)
    }
    ,
    Er.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    Er.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.aX = this.aX,
        t.aY = this.aY,
        t.xRadius = this.xRadius,
        t.yRadius = this.yRadius,
        t.aStartAngle = this.aStartAngle,
        t.aEndAngle = this.aEndAngle,
        t.aClockwise = this.aClockwise,
        t.aRotation = this.aRotation,
        t
    }
    ,
    Er.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.aX = t.aX,
        this.aY = t.aY,
        this.xRadius = t.xRadius,
        this.yRadius = t.yRadius,
        this.aStartAngle = t.aStartAngle,
        this.aEndAngle = t.aEndAngle,
        this.aClockwise = t.aClockwise,
        this.aRotation = t.aRotation,
        this
    }
    ,
    Tr.prototype = Object.create(Er.prototype),
    Tr.prototype.constructor = Tr,
    Tr.prototype.isArcCurve = !0;
    var uc = new s
      , hc = new Sr
      , dc = new Sr
      , pc = new Sr;
    Ar.prototype = Object.create(Mr.prototype),
    Ar.prototype.constructor = Ar,
    Ar.prototype.isCatmullRomCurve3 = !0,
    Ar.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.points
          , i = r.length
          , o = (i - (this.closed ? 0 : 1)) * t
          , a = Math.floor(o)
          , c = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / i) + 1) * i : 0 === c && a === i - 1 && (a = i - 2,
        c = 1);
        var l, u, h, d;
        if (this.closed || a > 0 ? l = r[(a - 1) % i] : (uc.subVectors(r[0], r[1]).add(r[0]),
        l = uc),
        u = r[a % i],
        h = r[(a + 1) % i],
        this.closed || a + 2 < i ? d = r[(a + 2) % i] : (uc.subVectors(r[i - 1], r[i - 2]).add(r[i - 1]),
        d = uc),
        "centripetal" === this.curveType || "chordal" === this.curveType) {
            var p = "chordal" === this.curveType ? .5 : .25
              , f = Math.pow(l.distanceToSquared(u), p)
              , m = Math.pow(u.distanceToSquared(h), p)
              , v = Math.pow(h.distanceToSquared(d), p);
            m < 1e-4 && (m = 1),
            f < 1e-4 && (f = m),
            v < 1e-4 && (v = m),
            hc.initNonuniformCatmullRom(l.x, u.x, h.x, d.x, f, m, v),
            dc.initNonuniformCatmullRom(l.y, u.y, h.y, d.y, f, m, v),
            pc.initNonuniformCatmullRom(l.z, u.z, h.z, d.z, f, m, v)
        } else
            "catmullrom" === this.curveType && (hc.initCatmullRom(l.x, u.x, h.x, d.x, this.tension),
            dc.initCatmullRom(l.y, u.y, h.y, d.y, this.tension),
            pc.initCatmullRom(l.z, u.z, h.z, d.z, this.tension));
        return n.set(hc.calc(c), dc.calc(c), pc.calc(c)),
        n
    }
    ,
    Ar.prototype.copy = function(t) {
        Mr.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push(r.clone())
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    Ar.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var r = this.points[e];
            t.points.push(r.toArray())
        }
        return t.closed = this.closed,
        t.curveType = this.curveType,
        t.tension = this.tension,
        t
    }
    ,
    Ar.prototype.fromJSON = function(t) {
        Mr.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push((new s).fromArray(r))
        }
        return this.closed = t.closed,
        this.curveType = t.curveType,
        this.tension = t.tension,
        this
    }
    ,
    zr.prototype = Object.create(Mr.prototype),
    zr.prototype.constructor = zr,
    zr.prototype.isCubicBezierCurve = !0,
    zr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.v0
          , o = this.v1
          , a = this.v2
          , s = this.v3;
        return n.set(jr(t, r.x, o.x, a.x, s.x), jr(t, r.y, o.y, a.y, s.y)),
        n
    }
    ,
    zr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    zr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    zr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    Br.prototype = Object.create(Mr.prototype),
    Br.prototype.constructor = Br,
    Br.prototype.isCubicBezierCurve3 = !0,
    Br.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.v0
          , i = this.v1
          , o = this.v2
          , a = this.v3;
        return n.set(jr(t, r.x, i.x, o.x, a.x), jr(t, r.y, i.y, o.y, a.y), jr(t, r.z, i.z, o.z, a.z)),
        n
    }
    ,
    Br.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this.v3.copy(t.v3),
        this
    }
    ,
    Br.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t.v3 = this.v3.toArray(),
        t
    }
    ,
    Br.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this.v3.fromArray(t.v3),
        this
    }
    ,
    Ur.prototype = Object.create(Mr.prototype),
    Ur.prototype.constructor = Ur,
    Ur.prototype.isLineCurve = !0,
    Ur.prototype.getPoint = function(t, e) {
        var n = e || new i;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    Ur.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    Ur.prototype.getTangent = function() {
        return this.v2.clone().sub(this.v1).normalize()
    }
    ,
    Ur.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Ur.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Ur.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Fr.prototype = Object.create(Mr.prototype),
    Fr.prototype.constructor = Fr,
    Fr.prototype.isLineCurve3 = !0,
    Fr.prototype.getPoint = function(t, e) {
        var n = e || new s;
        return 1 === t ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(t).add(this.v1)),
        n
    }
    ,
    Fr.prototype.getPointAt = function(t, e) {
        return this.getPoint(t, e)
    }
    ,
    Fr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Fr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Fr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Hr.prototype = Object.create(Mr.prototype),
    Hr.prototype.constructor = Hr,
    Hr.prototype.isQuadraticBezierCurve = !0,
    Hr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.v0
          , o = this.v1
          , a = this.v2;
        return n.set(Or(t, r.x, o.x, a.x), Or(t, r.y, o.y, a.y)),
        n
    }
    ,
    Hr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Hr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Hr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Gr.prototype = Object.create(Mr.prototype),
    Gr.prototype.constructor = Gr,
    Gr.prototype.isQuadraticBezierCurve3 = !0,
    Gr.prototype.getPoint = function(t, e) {
        var n = e || new s
          , r = this.v0
          , i = this.v1
          , o = this.v2;
        return n.set(Or(t, r.x, i.x, o.x), Or(t, r.y, i.y, o.y), Or(t, r.z, i.z, o.z)),
        n
    }
    ,
    Gr.prototype.copy = function(t) {
        return Mr.prototype.copy.call(this, t),
        this.v0.copy(t.v0),
        this.v1.copy(t.v1),
        this.v2.copy(t.v2),
        this
    }
    ,
    Gr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        return t.v0 = this.v0.toArray(),
        t.v1 = this.v1.toArray(),
        t.v2 = this.v2.toArray(),
        t
    }
    ,
    Gr.prototype.fromJSON = function(t) {
        return Mr.prototype.fromJSON.call(this, t),
        this.v0.fromArray(t.v0),
        this.v1.fromArray(t.v1),
        this.v2.fromArray(t.v2),
        this
    }
    ,
    Vr.prototype = Object.create(Mr.prototype),
    Vr.prototype.constructor = Vr,
    Vr.prototype.isSplineCurve = !0,
    Vr.prototype.getPoint = function(t, e) {
        var n = e || new i
          , r = this.points
          , o = (r.length - 1) * t
          , a = Math.floor(o)
          , s = o - a
          , c = r[0 === a ? a : a - 1]
          , l = r[a]
          , u = r[a > r.length - 2 ? r.length - 1 : a + 1]
          , h = r[a > r.length - 3 ? r.length - 1 : a + 2];
        return n.set(Cr(s, c.x, l.x, u.x, h.x), Cr(s, c.y, l.y, u.y, h.y)),
        n
    }
    ,
    Vr.prototype.copy = function(t) {
        Mr.prototype.copy.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push(r.clone())
        }
        return this
    }
    ,
    Vr.prototype.toJSON = function() {
        var t = Mr.prototype.toJSON.call(this);
        t.points = [];
        for (var e = 0, n = this.points.length; e < n; e++) {
            var r = this.points[e];
            t.points.push(r.toArray())
        }
        return t
    }
    ,
    Vr.prototype.fromJSON = function(t) {
        Mr.prototype.fromJSON.call(this, t),
        this.points = [];
        for (var e = 0, n = t.points.length; e < n; e++) {
            var r = t.points[e];
            this.points.push((new i).fromArray(r))
        }
        return this
    }
    ;
    var fc = Object.freeze({
        ArcCurve: Tr,
        CatmullRomCurve3: Ar,
        CubicBezierCurve: zr,
        CubicBezierCurve3: Br,
        EllipseCurve: Er,
        LineCurve: Ur,
        LineCurve3: Fr,
        QuadraticBezierCurve: Hr,
        QuadraticBezierCurve3: Gr,
        SplineCurve: Vr
    });
    Wr.prototype = Object.assign(Object.create(Mr.prototype), {
        constructor: Wr,
        add: function(t) {
            this.curves.push(t)
        },
        closePath: function() {
            var t = this.curves[0].getPoint(0)
              , e = this.curves[this.curves.length - 1].getPoint(1);
            t.equals(e) || this.curves.push(new Ur(e,t))
        },
        getPoint: function(t) {
            for (var e = t * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                if (n[r] >= e) {
                    var i = n[r] - e
                      , o = this.curves[r]
                      , a = o.getLength()
                      , s = 0 === a ? 0 : 1 - i / a;
                    return o.getPointAt(s)
                }
                r++
            }
            return null
        },
        getLength: function() {
            var t = this.getCurveLengths();
            return t[t.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.cacheLengths = null,
            this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var t = [], e = 0, n = 0, r = this.curves.length; n < r; n++)
                e += this.curves[n].getLength(),
                t.push(e);
            return this.cacheLengths = t,
            t
        },
        getSpacedPoints: function(t) {
            void 0 === t && (t = 40);
            for (var e = [], n = 0; n <= t; n++)
                e.push(this.getPoint(n / t));
            return this.autoClose && e.push(e[0]),
            e
        },
        getPoints: function(t) {
            t = t || 12;
            for (var e, n = [], r = 0, i = this.curves; r < i.length; r++)
                for (var o = i[r], a = o && o.isEllipseCurve ? 2 * t : o && o.isLineCurve ? 1 : o && o.isSplineCurve ? t * o.points.length : t, s = o.getPoints(a), c = 0; c < s.length; c++) {
                    var l = s[c];
                    e && e.equals(l) || (n.push(l),
                    e = l)
                }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
            n
        },
        copy: function(t) {
            Mr.prototype.copy.call(this, t),
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var r = t.curves[e];
                this.curves.push(r.clone())
            }
            return this.autoClose = t.autoClose,
            this
        },
        toJSON: function() {
            var t = Mr.prototype.toJSON.call(this);
            t.autoClose = this.autoClose,
            t.curves = [];
            for (var e = 0, n = this.curves.length; e < n; e++) {
                var r = this.curves[e];
                t.curves.push(r.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            Mr.prototype.fromJSON.call(this, t),
            this.autoClose = t.autoClose,
            this.curves = [];
            for (var e = 0, n = t.curves.length; e < n; e++) {
                var r = t.curves[e];
                this.curves.push((new fc[r.type]).fromJSON(r))
            }
            return this
        }
    }),
    qr.prototype = Object.assign(Object.create(Wr.prototype), {
        constructor: qr,
        setFromPoints: function(t) {
            this.moveTo(t[0].x, t[0].y);
            for (var e = 1, n = t.length; e < n; e++)
                this.lineTo(t[e].x, t[e].y)
        },
        moveTo: function(t, e) {
            this.currentPoint.set(t, e)
        },
        lineTo: function(t, e) {
            var n = new Ur(this.currentPoint.clone(),new i(t,e));
            this.curves.push(n),
            this.currentPoint.set(t, e)
        },
        quadraticCurveTo: function(t, e, n, r) {
            var o = new Hr(this.currentPoint.clone(),new i(t,e),new i(n,r));
            this.curves.push(o),
            this.currentPoint.set(n, r)
        },
        bezierCurveTo: function(t, e, n, r, o, a) {
            var s = new zr(this.currentPoint.clone(),new i(t,e),new i(n,r),new i(o,a));
            this.curves.push(s),
            this.currentPoint.set(o, a)
        },
        splineThru: function(t) {
            var e = [this.currentPoint.clone()].concat(t)
              , n = new Vr(e);
            this.curves.push(n),
            this.currentPoint.copy(t[t.length - 1])
        },
        arc: function(t, e, n, r, i, o) {
            var a = this.currentPoint.x
              , s = this.currentPoint.y;
            this.absarc(t + a, e + s, n, r, i, o)
        },
        absarc: function(t, e, n, r, i, o) {
            this.absellipse(t, e, n, n, r, i, o)
        },
        ellipse: function(t, e, n, r, i, o, a, s) {
            var c = this.currentPoint.x
              , l = this.currentPoint.y;
            this.absellipse(t + c, e + l, n, r, i, o, a, s)
        },
        absellipse: function(t, e, n, r, i, o, a, s) {
            var c = new Er(t,e,n,r,i,o,a,s);
            if (this.curves.length > 0) {
                var l = c.getPoint(0);
                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
            }
            this.curves.push(c);
            var u = c.getPoint(1);
            this.currentPoint.copy(u)
        },
        copy: function(t) {
            return Wr.prototype.copy.call(this, t),
            this.currentPoint.copy(t.currentPoint),
            this
        },
        toJSON: function() {
            var t = Wr.prototype.toJSON.call(this);
            return t.currentPoint = this.currentPoint.toArray(),
            t
        },
        fromJSON: function(t) {
            return Wr.prototype.fromJSON.call(this, t),
            this.currentPoint.fromArray(t.currentPoint),
            this
        }
    }),
    Xr.prototype = Object.assign(Object.create(qr.prototype), {
        constructor: Xr,
        getPointsHoles: function(t) {
            for (var e = [], n = 0, r = this.holes.length; n < r; n++)
                e[n] = this.holes[n].getPoints(t);
            return e
        },
        extractPoints: function(t) {
            return {
                shape: this.getPoints(t),
                holes: this.getPointsHoles(t)
            }
        },
        copy: function(t) {
            qr.prototype.copy.call(this, t),
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var r = t.holes[e];
                this.holes.push(r.clone())
            }
            return this
        },
        toJSON: function() {
            var t = qr.prototype.toJSON.call(this);
            t.uuid = this.uuid,
            t.holes = [];
            for (var e = 0, n = this.holes.length; e < n; e++) {
                var r = this.holes[e];
                t.holes.push(r.toJSON())
            }
            return t
        },
        fromJSON: function(t) {
            qr.prototype.fromJSON.call(this, t),
            this.uuid = t.uuid,
            this.holes = [];
            for (var e = 0, n = t.holes.length; e < n; e++) {
                var r = t.holes[e];
                this.holes.push((new qr).fromJSON(r))
            }
            return this
        }
    }),
    Yr.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Yr,
        isLight: !0,
        copy: function(t) {
            return w.prototype.copy.call(this, t),
            this.color.copy(t.color),
            this.intensity = t.intensity,
            this
        },
        toJSON: function(t) {
            var e = w.prototype.toJSON.call(this, t);
            return e.object.color = this.color.getHex(),
            e.object.intensity = this.intensity,
            void 0 !== this.groundColor && (e.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (e.object.distance = this.distance),
            void 0 !== this.angle && (e.object.angle = this.angle),
            void 0 !== this.decay && (e.object.decay = this.decay),
            void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
            e
        }
    }),
    $r.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: $r,
        isHemisphereLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.groundColor.copy(t.groundColor),
            this
        }
    }),
    Object.assign(Zr.prototype, {
        copy: function(t) {
            return this.camera = t.camera.clone(),
            this.bias = t.bias,
            this.radius = t.radius,
            this.mapSize.copy(t.mapSize),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var t = {};
            return 0 !== this.bias && (t.bias = this.bias),
            1 !== this.radius && (t.radius = this.radius),
            512 === this.mapSize.x && 512 === this.mapSize.y || (t.mapSize = this.mapSize.toArray()),
            t.camera = this.camera.toJSON(!1).object,
            delete t.camera.matrix,
            t
        }
    }),
    Jr.prototype = Object.assign(Object.create(Zr.prototype), {
        constructor: Jr,
        isSpotLightShadow: !0,
        update: function(t) {
            var e = this.camera
              , n = 2 * ks.RAD2DEG * t.angle
              , r = this.mapSize.width / this.mapSize.height
              , i = t.distance || e.far;
            n === e.fov && r === e.aspect && i === e.far || (e.fov = n,
            e.aspect = r,
            e.far = i,
            e.updateProjectionMatrix())
        }
    }),
    Qr.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: Qr,
        isSpotLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.angle = t.angle,
            this.penumbra = t.penumbra,
            this.decay = t.decay,
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    Kr.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: Kr,
        isPointLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.distance = t.distance,
            this.decay = t.decay,
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    ti.prototype = Object.assign(Object.create(Zr.prototype), {
        constructor: ti
    }),
    ei.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ei,
        isDirectionalLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.target = t.target.clone(),
            this.shadow = t.shadow.clone(),
            this
        }
    }),
    ni.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ni,
        isAmbientLight: !0
    }),
    ri.prototype = Object.assign(Object.create(Yr.prototype), {
        constructor: ri,
        isRectAreaLight: !0,
        copy: function(t) {
            return Yr.prototype.copy.call(this, t),
            this.width = t.width,
            this.height = t.height,
            this
        },
        toJSON: function(t) {
            var e = Yr.prototype.toJSON.call(this, t);
            return e.object.width = this.width,
            e.object.height = this.height,
            e
        }
    }),
    ii.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ii,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    oi.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: oi,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    Object.assign(ai.prototype, {
        evaluate: function(t) {
            var e = this.parameterPositions
              , n = this._cachedIndex
              , r = e[n]
              , i = e[n - 1];
            t: {
                e: {
                    var o;
                    n: {
                        r: if (!(t < r)) {
                            for (var a = n + 2; ; ) {
                                if (void 0 === r) {
                                    if (t < i)
                                        break r;
                                    return n = e.length,
                                    this._cachedIndex = n,
                                    this.afterEnd_(n - 1, t, i)
                                }
                                if (n === a)
                                    break;
                                if (i = r,
                                r = e[++n],
                                t < r)
                                    break e
                            }
                            o = e.length;
                            break n
                        }
                        {
                            if (t >= i)
                                break t;
                            var s = e[1];
                            t < s && (n = 2,
                            i = s);
                            for (var a = n - 2; ; ) {
                                if (void 0 === i)
                                    return this._cachedIndex = 0,
                                    this.beforeStart_(0, t, r);
                                if (n === a)
                                    break;
                                if (r = i,
                                i = e[--n - 1],
                                t >= i)
                                    break e
                            }
                            o = n,
                            n = 0
                        }
                    }
                    for (; n < o; ) {
                        var c = n + o >>> 1;
                        t < e[c] ? o = c : n = c + 1
                    }
                    if (r = e[n],
                    void 0 === (i = e[n - 1]))
                        return this._cachedIndex = 0,
                        this.beforeStart_(0, t, r);
                    if (void 0 === r)
                        return n = e.length,
                        this._cachedIndex = n,
                        this.afterEnd_(n - 1, i, t)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, i, r)
            }
            return this.interpolate_(n, i, t, r)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function() {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(t) {
            for (var e = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = t * r, o = 0; o !== r; ++o)
                e[o] = n[i + o];
            return e
        },
        interpolate_: function() {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(ai.prototype, {
        beforeStart_: ai.prototype.copySampleValue_,
        afterEnd_: ai.prototype.copySampleValue_
    }),
    si.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: si,
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, s = this.valueSize, c = t * s, l = (n - e) / (r - e), u = c + s; c !== u; c += 4)
                a.slerpFlat(i, 0, o, c - s, o, c, l);
            return i
        }
    }),
    ci.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ci,
        ValueTypeName: "quaternion",
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodLinear: function(t) {
            return new si(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: void 0
    }),
    li.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: li,
        ValueTypeName: "color"
    }),
    ui.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: ui,
        ValueTypeName: "number"
    }),
    hi.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: hi,
        DefaultSettings_: {
            endingStart: Ms,
            endingEnd: Ms
        },
        intervalChanged_: function(t, e, n) {
            var r = this.parameterPositions
              , i = t - 2
              , o = t + 1
              , a = r[i]
              , s = r[o];
            if (void 0 === a)
                switch (this.getSettings_().endingStart) {
                case 2401:
                    i = t,
                    a = 2 * e - n;
                    break;
                case 2402:
                    i = r.length - 2,
                    a = e + r[i] - r[i + 1];
                    break;
                default:
                    i = t,
                    a = n
                }
            if (void 0 === s)
                switch (this.getSettings_().endingEnd) {
                case 2401:
                    o = t,
                    s = 2 * n - e;
                    break;
                case 2402:
                    o = 1,
                    s = n + r[1] - r[0];
                    break;
                default:
                    o = t - 1,
                    s = e
                }
            var c = .5 * (n - e)
              , l = this.valueSize;
            this._weightPrev = c / (e - a),
            this._weightNext = c / (s - n),
            this._offsetPrev = i * l,
            this._offsetNext = o * l
        },
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, c = s - a, l = this._offsetPrev, u = this._offsetNext, h = this._weightPrev, d = this._weightNext, p = (n - e) / (r - e), f = p * p, m = f * p, v = -h * m + 2 * h * f - h * p, g = (1 + h) * m + (-1.5 - 2 * h) * f + (-.5 + h) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, _ = d * m - d * f, x = 0; x !== a; ++x)
                i[x] = v * o[l + x] + g * o[c + x] + y * o[s + x] + _ * o[u + x];
            return i
        }
    }),
    di.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: di,
        interpolate_: function(t, e, n, r) {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = t * a, c = s - a, l = (n - e) / (r - e), u = 1 - l, h = 0; h !== a; ++h)
                i[h] = o[c + h] * u + o[s + h] * l;
            return i
        }
    }),
    pi.prototype = Object.assign(Object.create(ai.prototype), {
        constructor: pi,
        interpolate_: function(t) {
            return this.copySampleValue_(t - 1)
        }
    });
    var mc = {
        arraySlice: function(t, e, n) {
            return mc.isTypedArray(t) ? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length)) : t.slice(e, n)
        },
        convertArray: function(t, e, n) {
            return !t || !n && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
        },
        isTypedArray: function(t) {
            return ArrayBuffer.isView(t) && !(t instanceof DataView)
        },
        getKeyframeOrder: function(t) {
            function e(e, n) {
                return t[e] - t[n]
            }
            for (var n = t.length, r = new Array(n), i = 0; i !== n; ++i)
                r[i] = i;
            return r.sort(e),
            r
        },
        sortedArray: function(t, e, n) {
            for (var r = t.length, i = new t.constructor(r), o = 0, a = 0; a !== r; ++o)
                for (var s = n[o] * e, c = 0; c !== e; ++c)
                    i[a++] = t[s + c];
            return i
        },
        flattenJSON: function(t, e, n, r) {
            for (var i = 1, o = t[0]; void 0 !== o && void 0 === o[r]; )
                o = t[i++];
            if (void 0 !== o) {
                var a = o[r];
                if (void 0 !== a)
                    if (Array.isArray(a))
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            n.push.apply(n, a)),
                            o = t[i++]
                        } while (void 0 !== o);
                    else if (void 0 !== a.toArray)
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            a.toArray(n, n.length)),
                            o = t[i++]
                        } while (void 0 !== o);
                    else
                        do {
                            a = o[r],
                            void 0 !== a && (e.push(o.time),
                            n.push(a)),
                            o = t[i++]
                        } while (void 0 !== o)
            }
        }
    };
    Object.assign(fi, {
        parse: function(t) {
            if (void 0 === t.type)
                throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
            var e = fi._getTrackTypeForValueTypeName(t.type);
            if (void 0 === t.times) {
                var n = []
                  , r = [];
                mc.flattenJSON(t.keys, n, r, "value"),
                t.times = n,
                t.values = r
            }
            return void 0 !== e.parse ? e.parse(t) : new e(t.name,t.times,t.values,t.interpolation)
        },
        toJSON: function(t) {
            var e, n = t.constructor;
            if (void 0 !== n.toJSON)
                e = n.toJSON(t);
            else {
                e = {
                    name: t.name,
                    times: mc.convertArray(t.times, Array),
                    values: mc.convertArray(t.values, Array)
                };
                var r = t.getInterpolation();
                r !== t.DefaultInterpolation && (e.interpolation = r)
            }
            return e.type = t.ValueTypeName,
            e
        },
        _getTrackTypeForValueTypeName: function(t) {
            switch (t.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return ui;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return mi;
            case "color":
                return li;
            case "quaternion":
                return ci;
            case "bool":
            case "boolean":
                return oi;
            case "string":
                return ii
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t)
        }
    }),
    Object.assign(fi.prototype, {
        constructor: fi,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodDiscrete: function(t) {
            return new pi(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodLinear: function(t) {
            return new di(this.times,this.values,this.getValueSize(),t)
        },
        InterpolantFactoryMethodSmooth: function(t) {
            return new hi(this.times,this.values,this.getValueSize(),t)
        },
        setInterpolation: function(t) {
            var e;
            switch (t) {
            case 2300:
                e = this.InterpolantFactoryMethodDiscrete;
                break;
            case 2301:
                e = this.InterpolantFactoryMethodLinear;
                break;
            case 2302:
                e = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === e) {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (t === this.DefaultInterpolation)
                        throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return void console.warn("THREE.KeyframeTrack:", n)
            }
            this.createInterpolant = e
        },
        getInterpolation: function() {
            switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return 2300;
            case this.InterpolantFactoryMethodLinear:
                return 2301;
            case this.InterpolantFactoryMethodSmooth:
                return 2302
            }
        },
        getValueSize: function() {
            return this.values.length / this.times.length
        },
        shift: function(t) {
            if (0 !== t)
                for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                    e[n] += t;
            return this
        },
        scale: function(t) {
            if (1 !== t)
                for (var e = this.times, n = 0, r = e.length; n !== r; ++n)
                    e[n] *= t;
            return this
        },
        trim: function(t, e) {
            for (var n = this.times, r = n.length, i = 0, o = r - 1; i !== r && n[i] < t; )
                ++i;
            for (; -1 !== o && n[o] > e; )
                --o;
            if (++o,
            0 !== i || o !== r) {
                i >= o && (o = Math.max(o, 1),
                i = o - 1);
                var a = this.getValueSize();
                this.times = mc.arraySlice(n, i, o),
                this.values = mc.arraySlice(this.values, i * a, o * a)
            }
            return this
        },
        validate: function() {
            var t = !0
              , e = this.getValueSize();
            e - Math.floor(e) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
            t = !1);
            var n = this.times
              , r = this.values
              , i = n.length;
            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this),
            t = !1);
            for (var o = null, a = 0; a !== i; a++) {
                var s = n[a];
                if ("number" == typeof s && isNaN(s)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, s),
                    t = !1;
                    break
                }
                if (null !== o && o > s) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, s, o),
                    t = !1;
                    break
                }
                o = s
            }
            if (void 0 !== r && mc.isTypedArray(r))
                for (var a = 0, c = r.length; a !== c; ++a) {
                    var l = r[a];
                    if (isNaN(l)) {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, l),
                        t = !1;
                        break
                    }
                }
            return t
        },
        optimize: function() {
            for (var t = this.times, e = this.values, n = this.getValueSize(), r = 2302 === this.getInterpolation(), i = 1, o = t.length - 1, a = 1; a < o; ++a) {
                var s = !1
                  , c = t[a];
                if (c !== t[a + 1] && (1 !== a || c !== c[0]))
                    if (r)
                        s = !0;
                    else
                        for (var l = a * n, u = l - n, h = l + n, d = 0; d !== n; ++d) {
                            var p = e[l + d];
                            if (p !== e[u + d] || p !== e[h + d]) {
                                s = !0;
                                break
                            }
                        }
                if (s) {
                    if (a !== i) {
                        t[i] = t[a];
                        for (var f = a * n, m = i * n, d = 0; d !== n; ++d)
                            e[m + d] = e[f + d]
                    }
                    ++i
                }
            }
            if (o > 0) {
                t[i] = t[o];
                for (var f = o * n, m = i * n, d = 0; d !== n; ++d)
                    e[m + d] = e[f + d];
                ++i
            }
            return i !== t.length && (this.times = mc.arraySlice(t, 0, i),
            this.values = mc.arraySlice(e, 0, i * n)),
            this
        }
    }),
    mi.prototype = Object.assign(Object.create(fi.prototype), {
        constructor: mi,
        ValueTypeName: "vector"
    }),
    Object.assign(vi, {
        parse: function(t) {
            for (var e = [], n = t.tracks, r = 1 / (t.fps || 1), i = 0, o = n.length; i !== o; ++i)
                e.push(fi.parse(n[i]).scale(r));
            return new vi(t.name,t.duration,e)
        },
        toJSON: function(t) {
            for (var e = [], n = t.tracks, r = {
                name: t.name,
                duration: t.duration,
                tracks: e
            }, i = 0, o = n.length; i !== o; ++i)
                e.push(fi.toJSON(n[i]));
            return r
        },
        CreateFromMorphTargetSequence: function(t, e, n, r) {
            for (var i = e.length, o = [], a = 0; a < i; a++) {
                var s = []
                  , c = [];
                s.push((a + i - 1) % i, a, (a + 1) % i),
                c.push(0, 1, 0);
                var l = mc.getKeyframeOrder(s);
                s = mc.sortedArray(s, 1, l),
                c = mc.sortedArray(c, 1, l),
                r || 0 !== s[0] || (s.push(i),
                c.push(c[0])),
                o.push(new ui(".morphTargetInfluences[" + e[a].name + "]",s,c).scale(1 / n))
            }
            return new vi(t,-1,o)
        },
        findByName: function(t, e) {
            var n = t;
            if (!Array.isArray(t)) {
                var r = t;
                n = r.geometry && r.geometry.animations || r.animations
            }
            for (var i = 0; i < n.length; i++)
                if (n[i].name === e)
                    return n[i];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(t, e, n) {
            for (var r = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = t.length; o < a; o++) {
                var s = t[o]
                  , c = s.name.match(i);
                if (c && c.length > 1) {
                    var l = c[1]
                      , u = r[l];
                    u || (r[l] = u = []),
                    u.push(s)
                }
            }
            var h = [];
            for (var l in r)
                h.push(vi.CreateFromMorphTargetSequence(l, r[l], e, n));
            return h
        },
        parseAnimation: function(t, e) {
            if (!t)
                return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                null;
            for (var n = function(t, e, n, r, i) {
                if (0 !== n.length) {
                    var o = []
                      , a = [];
                    mc.flattenJSON(n, o, a, r),
                    0 !== o.length && i.push(new t(e,o,a))
                }
            }, r = [], i = t.name || "default", o = t.length || -1, a = t.fps || 30, s = t.hierarchy || [], c = 0; c < s.length; c++) {
                var l = s[c].keys;
                if (l && 0 !== l.length)
                    if (l[0].morphTargets) {
                        for (var u = {}, h = 0; h < l.length; h++)
                            if (l[h].morphTargets)
                                for (var d = 0; d < l[h].morphTargets.length; d++)
                                    u[l[h].morphTargets[d]] = -1;
                        for (var p in u) {
                            for (var f = [], m = [], d = 0; d !== l[h].morphTargets.length; ++d) {
                                var v = l[h];
                                f.push(v.time),
                                m.push(v.morphTarget === p ? 1 : 0)
                            }
                            r.push(new ui(".morphTargetInfluence[" + p + "]",f,m))
                        }
                        o = u.length * (a || 1)
                    } else {
                        var g = ".bones[" + e[c].name + "]";
                        n(mi, g + ".position", l, "pos", r),
                        n(ci, g + ".quaternion", l, "rot", r),
                        n(mi, g + ".scale", l, "scl", r)
                    }
            }
            return 0 === r.length ? null : new vi(i,o,r)
        }
    }),
    Object.assign(vi.prototype, {
        resetDuration: function() {
            for (var t = this.tracks, e = 0, n = 0, r = t.length; n !== r; ++n) {
                var i = this.tracks[n];
                e = Math.max(e, i.times[i.times.length - 1])
            }
            this.duration = e
        },
        trim: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].trim(0, this.duration);
            return this
        },
        optimize: function() {
            for (var t = 0; t < this.tracks.length; t++)
                this.tracks[t].optimize();
            return this
        }
    }),
    Object.assign(gi.prototype, {
        load: function(t, e, n, r) {
            var i = this;
            new gr(i.manager).load(t, function(t) {
                e(i.parse(JSON.parse(t)))
            }, n, r)
        },
        setTextures: function(t) {
            this.textures = t
        },
        parse: function(t) {
            function e(t) {
                return void 0 === n[t] && console.warn("THREE.MaterialLoader: Undefined texture", t),
                n[t]
            }
            var n = this.textures
              , r = new ac[t.type];
            if (void 0 !== t.uuid && (r.uuid = t.uuid),
            void 0 !== t.name && (r.name = t.name),
            void 0 !== t.color && r.color.setHex(t.color),
            void 0 !== t.roughness && (r.roughness = t.roughness),
            void 0 !== t.metalness && (r.metalness = t.metalness),
            void 0 !== t.emissive && r.emissive.setHex(t.emissive),
            void 0 !== t.specular && r.specular.setHex(t.specular),
            void 0 !== t.shininess && (r.shininess = t.shininess),
            void 0 !== t.clearCoat && (r.clearCoat = t.clearCoat),
            void 0 !== t.clearCoatRoughness && (r.clearCoatRoughness = t.clearCoatRoughness),
            void 0 !== t.uniforms && (r.uniforms = t.uniforms),
            void 0 !== t.vertexShader && (r.vertexShader = t.vertexShader),
            void 0 !== t.fragmentShader && (r.fragmentShader = t.fragmentShader),
            void 0 !== t.vertexColors && (r.vertexColors = t.vertexColors),
            void 0 !== t.fog && (r.fog = t.fog),
            void 0 !== t.flatShading && (r.flatShading = t.flatShading),
            void 0 !== t.blending && (r.blending = t.blending),
            void 0 !== t.side && (r.side = t.side),
            void 0 !== t.opacity && (r.opacity = t.opacity),
            void 0 !== t.transparent && (r.transparent = t.transparent),
            void 0 !== t.alphaTest && (r.alphaTest = t.alphaTest),
            void 0 !== t.depthTest && (r.depthTest = t.depthTest),
            void 0 !== t.depthWrite && (r.depthWrite = t.depthWrite),
            void 0 !== t.colorWrite && (r.colorWrite = t.colorWrite),
            void 0 !== t.wireframe && (r.wireframe = t.wireframe),
            void 0 !== t.wireframeLinewidth && (r.wireframeLinewidth = t.wireframeLinewidth),
            void 0 !== t.wireframeLinecap && (r.wireframeLinecap = t.wireframeLinecap),
            void 0 !== t.wireframeLinejoin && (r.wireframeLinejoin = t.wireframeLinejoin),
            void 0 !== t.rotation && (r.rotation = t.rotation),
            1 !== t.linewidth && (r.linewidth = t.linewidth),
            void 0 !== t.dashSize && (r.dashSize = t.dashSize),
            void 0 !== t.gapSize && (r.gapSize = t.gapSize),
            void 0 !== t.scale && (r.scale = t.scale),
            void 0 !== t.polygonOffset && (r.polygonOffset = t.polygonOffset),
            void 0 !== t.polygonOffsetFactor && (r.polygonOffsetFactor = t.polygonOffsetFactor),
            void 0 !== t.polygonOffsetUnits && (r.polygonOffsetUnits = t.polygonOffsetUnits),
            void 0 !== t.skinning && (r.skinning = t.skinning),
            void 0 !== t.morphTargets && (r.morphTargets = t.morphTargets),
            void 0 !== t.dithering && (r.dithering = t.dithering),
            void 0 !== t.visible && (r.visible = t.visible),
            void 0 !== t.userData && (r.userData = t.userData),
            void 0 !== t.shading && (r.flatShading = 1 === t.shading),
            void 0 !== t.size && (r.size = t.size),
            void 0 !== t.sizeAttenuation && (r.sizeAttenuation = t.sizeAttenuation),
            void 0 !== t.map && (r.map = e(t.map)),
            void 0 !== t.alphaMap && (r.alphaMap = e(t.alphaMap),
            r.transparent = !0),
            void 0 !== t.bumpMap && (r.bumpMap = e(t.bumpMap)),
            void 0 !== t.bumpScale && (r.bumpScale = t.bumpScale),
            void 0 !== t.normalMap && (r.normalMap = e(t.normalMap)),
            void 0 !== t.normalScale) {
                var o = t.normalScale;
                !1 === Array.isArray(o) && (o = [o, o]),
                r.normalScale = (new i).fromArray(o)
            }
            return void 0 !== t.displacementMap && (r.displacementMap = e(t.displacementMap)),
            void 0 !== t.displacementScale && (r.displacementScale = t.displacementScale),
            void 0 !== t.displacementBias && (r.displacementBias = t.displacementBias),
            void 0 !== t.roughnessMap && (r.roughnessMap = e(t.roughnessMap)),
            void 0 !== t.metalnessMap && (r.metalnessMap = e(t.metalnessMap)),
            void 0 !== t.emissiveMap && (r.emissiveMap = e(t.emissiveMap)),
            void 0 !== t.emissiveIntensity && (r.emissiveIntensity = t.emissiveIntensity),
            void 0 !== t.specularMap && (r.specularMap = e(t.specularMap)),
            void 0 !== t.envMap && (r.envMap = e(t.envMap)),
            void 0 !== t.reflectivity && (r.reflectivity = t.reflectivity),
            void 0 !== t.lightMap && (r.lightMap = e(t.lightMap)),
            void 0 !== t.lightMapIntensity && (r.lightMapIntensity = t.lightMapIntensity),
            void 0 !== t.aoMap && (r.aoMap = e(t.aoMap)),
            void 0 !== t.aoMapIntensity && (r.aoMapIntensity = t.aoMapIntensity),
            void 0 !== t.gradientMap && (r.gradientMap = e(t.gradientMap)),
            r
        }
    }),
    Object.assign(yi.prototype, {
        load: function(t, e, n, r) {
            var i = this;
            new gr(i.manager).load(t, function(t) {
                e(i.parse(JSON.parse(t)))
            }, n, r)
        },
        parse: function(t) {
            var e = new B
              , n = t.data.index;
            if (void 0 !== n) {
                var r = new vc[n.type](n.array);
                e.setIndex(new A(r,1))
            }
            var i = t.data.attributes;
            for (var o in i) {
                var a = i[o]
                  , r = new vc[a.type](a.array);
                e.addAttribute(o, new A(r,a.itemSize,a.normalized))
            }
            var c = t.data.groups || t.data.drawcalls || t.data.offsets;
            if (void 0 !== c)
                for (var l = 0, u = c.length; l !== u; ++l) {
                    var h = c[l];
                    e.addGroup(h.start, h.count, h.materialIndex)
                }
            var d = t.data.boundingSphere;
            if (void 0 !== d) {
                var p = new s;
                void 0 !== d.center && p.fromArray(d.center),
                e.boundingSphere = new m(p,d.radius)
            }
            return e
        }
    });
    var vc = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    _i.Handlers = {
        handlers: [],
        add: function(t, e) {
            this.handlers.push(t, e)
        },
        get: function(t) {
            for (var e = this.handlers, n = 0, r = e.length; n < r; n += 2) {
                var i = e[n]
                  , o = e[n + 1];
                if (i.test(t))
                    return o
            }
            return null
        }
    },
    Object.assign(_i.prototype, {
        crossOrigin: void 0,
        onLoadStart: function() {},
        onLoadProgress: function() {},
        onLoadComplete: function() {},
        initMaterials: function(t, e, n) {
            for (var r = [], i = 0; i < t.length; ++i)
                r[i] = this.createMaterial(t[i], e, n);
            return r
        },
        createMaterial: function() {
            var t = {
                NoBlending: Do,
                NormalBlending: No,
                AdditiveBlending: ko,
                SubtractiveBlending: jo,
                MultiplyBlending: zo,
                CustomBlending: Bo
            }
              , e = new y
              , n = new wr
              , r = new gi;
            return function(i, o, a) {
                function s(t, e, r, i, s) {
                    var l, u = o + t, h = _i.Handlers.get(u);
                    null !== h ? l = h.load(u) : (n.setCrossOrigin(a),
                    l = n.load(u)),
                    void 0 !== e && (l.repeat.fromArray(e),
                    1 !== e[0] && (l.wrapS = Ta),
                    1 !== e[1] && (l.wrapT = Ta)),
                    void 0 !== r && l.offset.fromArray(r),
                    void 0 !== i && ("repeat" === i[0] && (l.wrapS = Ta),
                    "mirror" === i[0] && (l.wrapS = Aa),
                    "repeat" === i[1] && (l.wrapT = Ta),
                    "mirror" === i[1] && (l.wrapT = Aa)),
                    void 0 !== s && (l.anisotropy = s);
                    var d = ks.generateUUID();
                    return c[d] = l,
                    d
                }
                var c = {}
                  , l = {
                    uuid: ks.generateUUID(),
                    type: "MeshLambertMaterial"
                };
                for (var u in i) {
                    var h = i[u];
                    switch (u) {
                    case "DbgColor":
                    case "DbgIndex":
                    case "opticalDensity":
                    case "illumination":
                        break;
                    case "DbgName":
                        l.name = h;
                        break;
                    case "blending":
                        l.blending = t[h];
                        break;
                    case "colorAmbient":
                    case "mapAmbient":
                        console.warn("THREE.Loader.createMaterial:", u, "is no longer supported.");
                        break;
                    case "colorDiffuse":
                        l.color = e.fromArray(h).getHex();
                        break;
                    case "colorSpecular":
                        l.specular = e.fromArray(h).getHex();
                        break;
                    case "colorEmissive":
                        l.emissive = e.fromArray(h).getHex();
                        break;
                    case "specularCoef":
                        l.shininess = h;
                        break;
                    case "shading":
                        "basic" === h.toLowerCase() && (l.type = "MeshBasicMaterial"),
                        "phong" === h.toLowerCase() && (l.type = "MeshPhongMaterial"),
                        "standard" === h.toLowerCase() && (l.type = "MeshStandardMaterial");
                        break;
                    case "mapDiffuse":
                        l.map = s(h, i.mapDiffuseRepeat, i.mapDiffuseOffset, i.mapDiffuseWrap, i.mapDiffuseAnisotropy);
                        break;
                    case "mapDiffuseRepeat":
                    case "mapDiffuseOffset":
                    case "mapDiffuseWrap":
                    case "mapDiffuseAnisotropy":
                        break;
                    case "mapEmissive":
                        l.emissiveMap = s(h, i.mapEmissiveRepeat, i.mapEmissiveOffset, i.mapEmissiveWrap, i.mapEmissiveAnisotropy);
                        break;
                    case "mapEmissiveRepeat":
                    case "mapEmissiveOffset":
                    case "mapEmissiveWrap":
                    case "mapEmissiveAnisotropy":
                        break;
                    case "mapLight":
                        l.lightMap = s(h, i.mapLightRepeat, i.mapLightOffset, i.mapLightWrap, i.mapLightAnisotropy);
                        break;
                    case "mapLightRepeat":
                    case "mapLightOffset":
                    case "mapLightWrap":
                    case "mapLightAnisotropy":
                        break;
                    case "mapAO":
                        l.aoMap = s(h, i.mapAORepeat, i.mapAOOffset, i.mapAOWrap, i.mapAOAnisotropy);
                        break;
                    case "mapAORepeat":
                    case "mapAOOffset":
                    case "mapAOWrap":
                    case "mapAOAnisotropy":
                        break;
                    case "mapBump":
                        l.bumpMap = s(h, i.mapBumpRepeat, i.mapBumpOffset, i.mapBumpWrap, i.mapBumpAnisotropy);
                        break;
                    case "mapBumpScale":
                        l.bumpScale = h;
                        break;
                    case "mapBumpRepeat":
                    case "mapBumpOffset":
                    case "mapBumpWrap":
                    case "mapBumpAnisotropy":
                        break;
                    case "mapNormal":
                        l.normalMap = s(h, i.mapNormalRepeat, i.mapNormalOffset, i.mapNormalWrap, i.mapNormalAnisotropy);
                        break;
                    case "mapNormalFactor":
                        l.normalScale = h;
                        break;
                    case "mapNormalRepeat":
                    case "mapNormalOffset":
                    case "mapNormalWrap":
                    case "mapNormalAnisotropy":
                        break;
                    case "mapSpecular":
                        l.specularMap = s(h, i.mapSpecularRepeat, i.mapSpecularOffset, i.mapSpecularWrap, i.mapSpecularAnisotropy);
                        break;
                    case "mapSpecularRepeat":
                    case "mapSpecularOffset":
                    case "mapSpecularWrap":
                    case "mapSpecularAnisotropy":
                        break;
                    case "mapMetalness":
                        l.metalnessMap = s(h, i.mapMetalnessRepeat, i.mapMetalnessOffset, i.mapMetalnessWrap, i.mapMetalnessAnisotropy);
                        break;
                    case "mapMetalnessRepeat":
                    case "mapMetalnessOffset":
                    case "mapMetalnessWrap":
                    case "mapMetalnessAnisotropy":
                        break;
                    case "mapRoughness":
                        l.roughnessMap = s(h, i.mapRoughnessRepeat, i.mapRoughnessOffset, i.mapRoughnessWrap, i.mapRoughnessAnisotropy);
                        break;
                    case "mapRoughnessRepeat":
                    case "mapRoughnessOffset":
                    case "mapRoughnessWrap":
                    case "mapRoughnessAnisotropy":
                        break;
                    case "mapAlpha":
                        l.alphaMap = s(h, i.mapAlphaRepeat, i.mapAlphaOffset, i.mapAlphaWrap, i.mapAlphaAnisotropy);
                        break;
                    case "mapAlphaRepeat":
                    case "mapAlphaOffset":
                    case "mapAlphaWrap":
                    case "mapAlphaAnisotropy":
                        break;
                    case "flipSided":
                        l.side = Po;
                        break;
                    case "doubleSided":
                        l.side = Lo;
                        break;
                    case "transparency":
                        console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                        l.opacity = h;
                        break;
                    case "depthTest":
                    case "depthWrite":
                    case "colorWrite":
                    case "opacity":
                    case "reflectivity":
                    case "transparent":
                    case "visible":
                    case "wireframe":
                        l[u] = h;
                        break;
                    case "vertexColors":
                        !0 === h && (l.vertexColors = Io),
                        "face" === h && (l.vertexColors = Oo);
                        break;
                    default:
                        console.error("THREE.Loader.createMaterial: Unsupported", u, h)
                    }
                }
                return "MeshBasicMaterial" === l.type && delete l.emissive,
                "MeshPhongMaterial" !== l.type && delete l.specular,
                l.opacity < 1 && (l.transparent = !0),
                r.setTextures(c),
                r.parse(l)
            }
        }()
    });
    var gc = {
        decodeText: function(t) {
            if ("undefined" != typeof TextDecoder)
                return (new TextDecoder).decode(t);
            for (var e = "", n = 0, r = t.length; n < r; n++)
                e += String.fromCharCode(t[n]);
            return decodeURIComponent(escape(e))
        },
        extractUrlBase: function(t) {
            var e = t.lastIndexOf("/");
            return -1 === e ? "./" : t.substr(0, e + 1)
        }
    };
    Object.assign(xi.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : gc.extractUrlBase(t)
              , a = new gr(this.manager);
            a.setWithCredentials(this.withCredentials),
            a.load(t, function(n) {
                var r = JSON.parse(n)
                  , a = r.metadata;
                if (void 0 !== a) {
                    var s = a.type;
                    if (void 0 !== s && "object" === s.toLowerCase())
                        return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.")
                }
                var c = i.parse(r, o);
                e(c.geometry, c.materials)
            }, n, r)
        },
        setTexturePath: function(t) {
            this.texturePath = t
        },
        parse: function() {
            function t(t, e) {
                function n(t, e) {
                    return t & 1 << e
                }
                var r, o, a, c, l, u, h, d, p, f, m, v, g, _, x, b, w, M, E, S, A, C, P, L, R, O, I, D = t.faces, N = t.vertices, k = t.normals, j = t.colors, z = t.scale, B = 0;
                if (void 0 !== t.uvs) {
                    for (r = 0; r < t.uvs.length; r++)
                        t.uvs[r].length && B++;
                    for (r = 0; r < B; r++)
                        e.faceVertexUvs[r] = []
                }
                for (c = 0,
                l = N.length; c < l; )
                    M = new s,
                    M.x = N[c++] * z,
                    M.y = N[c++] * z,
                    M.z = N[c++] * z,
                    e.vertices.push(M);
                for (c = 0,
                l = D.length; c < l; )
                    if (f = D[c++],
                    m = n(f, 0),
                    v = n(f, 1),
                    g = n(f, 3),
                    _ = n(f, 4),
                    x = n(f, 5),
                    b = n(f, 6),
                    w = n(f, 7),
                    m) {
                        if (S = new T,
                        S.a = D[c],
                        S.b = D[c + 1],
                        S.c = D[c + 3],
                        A = new T,
                        A.a = D[c + 1],
                        A.b = D[c + 2],
                        A.c = D[c + 3],
                        c += 4,
                        v && (p = D[c++],
                        S.materialIndex = p,
                        A.materialIndex = p),
                        a = e.faces.length,
                        g)
                            for (r = 0; r < B; r++)
                                for (L = t.uvs[r],
                                e.faceVertexUvs[r][a] = [],
                                e.faceVertexUvs[r][a + 1] = [],
                                o = 0; o < 4; o++)
                                    d = D[c++],
                                    O = L[2 * d],
                                    I = L[2 * d + 1],
                                    R = new i(O,I),
                                    2 !== o && e.faceVertexUvs[r][a].push(R),
                                    0 !== o && e.faceVertexUvs[r][a + 1].push(R);
                        if (_ && (h = 3 * D[c++],
                        S.normal.set(k[h++], k[h++], k[h]),
                        A.normal.copy(S.normal)),
                        x)
                            for (r = 0; r < 4; r++)
                                h = 3 * D[c++],
                                P = new s(k[h++],k[h++],k[h]),
                                2 !== r && S.vertexNormals.push(P),
                                0 !== r && A.vertexNormals.push(P);
                        if (b && (u = D[c++],
                        C = j[u],
                        S.color.setHex(C),
                        A.color.setHex(C)),
                        w)
                            for (r = 0; r < 4; r++)
                                u = D[c++],
                                C = j[u],
                                2 !== r && S.vertexColors.push(new y(C)),
                                0 !== r && A.vertexColors.push(new y(C));
                        e.faces.push(S),
                        e.faces.push(A)
                    } else {
                        if (E = new T,
                        E.a = D[c++],
                        E.b = D[c++],
                        E.c = D[c++],
                        v && (p = D[c++],
                        E.materialIndex = p),
                        a = e.faces.length,
                        g)
                            for (r = 0; r < B; r++)
                                for (L = t.uvs[r],
                                e.faceVertexUvs[r][a] = [],
                                o = 0; o < 3; o++)
                                    d = D[c++],
                                    O = L[2 * d],
                                    I = L[2 * d + 1],
                                    R = new i(O,I),
                                    e.faceVertexUvs[r][a].push(R);
                        if (_ && (h = 3 * D[c++],
                        E.normal.set(k[h++], k[h++], k[h])),
                        x)
                            for (r = 0; r < 3; r++)
                                h = 3 * D[c++],
                                P = new s(k[h++],k[h++],k[h]),
                                E.vertexNormals.push(P);
                        if (b && (u = D[c++],
                        E.color.setHex(j[u])),
                        w)
                            for (r = 0; r < 3; r++)
                                u = D[c++],
                                E.vertexColors.push(new y(j[u]));
                        e.faces.push(E)
                    }
            }
            function e(t, e) {
                var n = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
                if (t.skinWeights)
                    for (var r = 0, i = t.skinWeights.length; r < i; r += n) {
                        var o = t.skinWeights[r]
                          , a = n > 1 ? t.skinWeights[r + 1] : 0
                          , s = n > 2 ? t.skinWeights[r + 2] : 0
                          , c = n > 3 ? t.skinWeights[r + 3] : 0;
                        e.skinWeights.push(new u(o,a,s,c))
                    }
                if (t.skinIndices)
                    for (var r = 0, i = t.skinIndices.length; r < i; r += n) {
                        var l = t.skinIndices[r]
                          , h = n > 1 ? t.skinIndices[r + 1] : 0
                          , d = n > 2 ? t.skinIndices[r + 2] : 0
                          , p = n > 3 ? t.skinIndices[r + 3] : 0;
                        e.skinIndices.push(new u(l,h,d,p))
                    }
                e.bones = t.bones,
                e.bones && e.bones.length > 0 && (e.skinWeights.length !== e.skinIndices.length || e.skinIndices.length !== e.vertices.length) && console.warn("When skinning, number of vertices (" + e.vertices.length + "), skinIndices (" + e.skinIndices.length + "), and skinWeights (" + e.skinWeights.length + ") should match.")
            }
            function n(t, e) {
                var n = t.scale;
                if (void 0 !== t.morphTargets)
                    for (var r = 0, i = t.morphTargets.length; r < i; r++) {
                        e.morphTargets[r] = {},
                        e.morphTargets[r].name = t.morphTargets[r].name,
                        e.morphTargets[r].vertices = [];
                        for (var o = e.morphTargets[r].vertices, a = t.morphTargets[r].vertices, c = 0, l = a.length; c < l; c += 3) {
                            var u = new s;
                            u.x = a[c] * n,
                            u.y = a[c + 1] * n,
                            u.z = a[c + 2] * n,
                            o.push(u)
                        }
                    }
                if (void 0 !== t.morphColors && t.morphColors.length > 0) {
                    console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                    for (var h = e.faces, d = t.morphColors[0].colors, r = 0, i = h.length; r < i; r++)
                        h[r].color.fromArray(d, 3 * r)
                }
            }
            function r(t, e) {
                var n = []
                  , r = [];
                void 0 !== t.animation && r.push(t.animation),
                void 0 !== t.animations && (t.animations.length ? r = r.concat(t.animations) : r.push(t.animations));
                for (var i = 0; i < r.length; i++) {
                    var o = vi.parseAnimation(r[i], e.bones);
                    o && n.push(o)
                }
                if (e.morphTargets) {
                    var a = vi.CreateClipsFromMorphTargetSequences(e.morphTargets, 10);
                    n = n.concat(a)
                }
                n.length > 0 && (e.animations = n)
            }
            return function(i, o) {
                void 0 !== i.data && (i = i.data),
                void 0 !== i.scale ? i.scale = 1 / i.scale : i.scale = 1;
                var a = new S;
                return t(i, a),
                e(i, a),
                n(i, a),
                r(i, a),
                a.computeFaceNormals(),
                a.computeBoundingSphere(),
                void 0 === i.materials || 0 === i.materials.length ? {
                    geometry: a
                } : {
                    geometry: a,
                    materials: _i.prototype.initMaterials(i.materials, o, this.crossOrigin)
                }
            }
        }()
    }),
    Object.assign(bi.prototype, {
        load: function(t, e, n, r) {
            "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
            var i = this;
            new gr(i.manager).load(t, function(n) {
                var o = null;
                try {
                    o = JSON.parse(n)
                } catch (e) {
                    return void 0 !== r && r(e),
                    void console.error("THREE:ObjectLoader: Can't parse " + t + ".", e.message)
                }
                var a = o.metadata;
                if (void 0 === a || void 0 === a.type || "geometry" === a.type.toLowerCase())
                    return void console.error("THREE.ObjectLoader: Can't load " + t + ". Use THREE.JSONLoader instead.");
                i.parse(o, e)
            }, n, r)
        },
        setTexturePath: function(t) {
            this.texturePath = t
        },
        setCrossOrigin: function(t) {
            this.crossOrigin = t
        },
        parse: function(t, e) {
            var n = this.parseShape(t.shapes)
              , r = this.parseGeometries(t.geometries, n)
              , i = this.parseImages(t.images, function() {
                void 0 !== e && e(s)
            })
              , o = this.parseTextures(t.textures, i)
              , a = this.parseMaterials(t.materials, o)
              , s = this.parseObject(t.object, r, a);
            return t.animations && (s.animations = this.parseAnimations(t.animations)),
            void 0 !== t.images && 0 !== t.images.length || void 0 !== e && e(s),
            s
        },
        parseShape: function(t) {
            var e = {};
            if (void 0 !== t)
                for (var n = 0, r = t.length; n < r; n++) {
                    var i = (new Xr).fromJSON(t[n]);
                    e[i.uuid] = i
                }
            return e
        },
        parseGeometries: function(t, e) {
            var n = {};
            if (void 0 !== t)
                for (var r = new xi, i = new yi, o = 0, a = t.length; o < a; o++) {
                    var s, c = t[o];
                    switch (c.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        s = new oc[c.type](c.width,c.height,c.widthSegments,c.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        s = new oc[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        s = new oc[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        s = new oc[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        s = new oc[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        s = new oc[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        s = new oc[c.type](c.radius,c.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        s = new oc[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        s = new oc[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        s = new oc[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        s = new oc[c.type](c.points,c.segments,c.phiStart,c.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        s = new oc[c.type](c.vertices,c.indices,c.radius,c.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        for (var l = [], u = 0, h = c.shapes.length; u < h; u++) {
                            var d = e[c.shapes[u]];
                            l.push(d)
                        }
                        s = new oc[c.type](l,c.curveSegments);
                        break;
                    case "BufferGeometry":
                        s = i.parse(c);
                        break;
                    case "Geometry":
                        s = r.parse(c, this.texturePath).geometry;
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + c.type + '"');
                        continue
                    }
                    s.uuid = c.uuid,
                    void 0 !== c.name && (s.name = c.name),
                    n[c.uuid] = s
                }
            return n
        },
        parseMaterials: function(t, e) {
            var n = {};
            if (void 0 !== t) {
                var r = new gi;
                r.setTextures(e);
                for (var i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    if ("MultiMaterial" === a.type) {
                        for (var s = [], c = 0; c < a.materials.length; c++)
                            s.push(r.parse(a.materials[c]));
                        n[a.uuid] = s
                    } else
                        n[a.uuid] = r.parse(a)
                }
            }
            return n
        },
        parseAnimations: function(t) {
            for (var e = [], n = 0; n < t.length; n++) {
                var r = vi.parse(t[n]);
                e.push(r)
            }
            return e
        },
        parseImages: function(t, e) {
            var n = this
              , r = {};
            if (void 0 !== t && t.length > 0) {
                var i = new vr(e)
                  , o = new xr(i);
                o.setCrossOrigin(this.crossOrigin);
                for (var a = 0, s = t.length; a < s; a++) {
                    var c = t[a]
                      , l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.texturePath + c.url;
                    r[c.uuid] = function(t) {
                        return n.manager.itemStart(t),
                        o.load(t, function() {
                            n.manager.itemEnd(t)
                        }, void 0, function() {
                            n.manager.itemEnd(t),
                            n.manager.itemError(t)
                        })
                    }(l)
                }
            }
            return r
        },
        parseTextures: function(t, e) {
            function n(t, e) {
                return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t),
                e[t])
            }
            var r = {};
            if (void 0 !== t)
                for (var i = 0, o = t.length; i < o; i++) {
                    var a = t[i];
                    void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid),
                    void 0 === e[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                    var s = new l(e[a.image]);
                    s.needsUpdate = !0,
                    s.uuid = a.uuid,
                    void 0 !== a.name && (s.name = a.name),
                    void 0 !== a.mapping && (s.mapping = n(a.mapping, yc)),
                    void 0 !== a.offset && s.offset.fromArray(a.offset),
                    void 0 !== a.repeat && s.repeat.fromArray(a.repeat),
                    void 0 !== a.center && s.center.fromArray(a.center),
                    void 0 !== a.rotation && (s.rotation = a.rotation),
                    void 0 !== a.wrap && (s.wrapS = n(a.wrap[0], _c),
                    s.wrapT = n(a.wrap[1], _c)),
                    void 0 !== a.format && (s.format = a.format),
                    void 0 !== a.minFilter && (s.minFilter = n(a.minFilter, xc)),
                    void 0 !== a.magFilter && (s.magFilter = n(a.magFilter, xc)),
                    void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy),
                    void 0 !== a.flipY && (s.flipY = a.flipY),
                    r[a.uuid] = s
                }
            return r
        },
        parseObject: function(t, e, n) {
            function r(t) {
                return void 0 === e[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t),
                e[t]
            }
            function i(t) {
                if (void 0 !== t) {
                    if (Array.isArray(t)) {
                        for (var e = [], r = 0, i = t.length; r < i; r++) {
                            var o = t[r];
                            void 0 === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o),
                            e.push(n[o])
                        }
                        return e
                    }
                    return void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined material", t),
                    n[t]
                }
            }
            var o;
            switch (t.type) {
            case "Scene":
                o = new Ce,
                void 0 !== t.background && Number.isInteger(t.background) && (o.background = new y(t.background)),
                void 0 !== t.fog && ("Fog" === t.fog.type ? o.fog = new Ae(t.fog.color,t.fog.near,t.fog.far) : "FogExp2" === t.fog.type && (o.fog = new Se(t.fog.color,t.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new we(t.fov,t.aspect,t.near,t.far),
                void 0 !== t.focus && (o.focus = t.focus),
                void 0 !== t.zoom && (o.zoom = t.zoom),
                void 0 !== t.filmGauge && (o.filmGauge = t.filmGauge),
                void 0 !== t.filmOffset && (o.filmOffset = t.filmOffset),
                void 0 !== t.view && (o.view = Object.assign({}, t.view));
                break;
            case "OrthographicCamera":
                o = new E(t.left,t.right,t.top,t.bottom,t.near,t.far),
                void 0 !== t.zoom && (o.zoom = t.zoom),
                void 0 !== t.view && (o.view = Object.assign({}, t.view));
                break;
            case "AmbientLight":
                o = new ni(t.color,t.intensity);
                break;
            case "DirectionalLight":
                o = new ei(t.color,t.intensity);
                break;
            case "PointLight":
                o = new Kr(t.color,t.intensity,t.distance,t.decay);
                break;
            case "RectAreaLight":
                o = new ri(t.color,t.intensity,t.width,t.height);
                break;
            case "SpotLight":
                o = new Qr(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                break;
            case "HemisphereLight":
                o = new $r(t.color,t.groundColor,t.intensity);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                var a = r(t.geometry)
                  , s = i(t.material);
                o = a.bones && a.bones.length > 0 ? new De(a,s) : new Z(a,s);
                break;
            case "LOD":
                o = new Re;
                break;
            case "Line":
                o = new ke(r(t.geometry),i(t.material),t.mode);
                break;
            case "LineLoop":
                o = new ze(r(t.geometry),i(t.material));
                break;
            case "LineSegments":
                o = new je(r(t.geometry),i(t.material));
                break;
            case "PointCloud":
            case "Points":
                o = new Ue(r(t.geometry),i(t.material));
                break;
            case "Sprite":
                o = new Le(i(t.material));
                break;
            case "Group":
                o = new Fe;
                break;
            default:
                o = new w
            }
            if (o.uuid = t.uuid,
            void 0 !== t.name && (o.name = t.name),
            void 0 !== t.matrix ? (o.matrix.fromArray(t.matrix),
            void 0 !== t.matrixAutoUpdate && (o.matrixAutoUpdate = t.matrixAutoUpdate),
            o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== t.position && o.position.fromArray(t.position),
            void 0 !== t.rotation && o.rotation.fromArray(t.rotation),
            void 0 !== t.quaternion && o.quaternion.fromArray(t.quaternion),
            void 0 !== t.scale && o.scale.fromArray(t.scale)),
            void 0 !== t.castShadow && (o.castShadow = t.castShadow),
            void 0 !== t.receiveShadow && (o.receiveShadow = t.receiveShadow),
            t.shadow && (void 0 !== t.shadow.bias && (o.shadow.bias = t.shadow.bias),
            void 0 !== t.shadow.radius && (o.shadow.radius = t.shadow.radius),
            void 0 !== t.shadow.mapSize && o.shadow.mapSize.fromArray(t.shadow.mapSize),
            void 0 !== t.shadow.camera && (o.shadow.camera = this.parseObject(t.shadow.camera))),
            void 0 !== t.visible && (o.visible = t.visible),
            void 0 !== t.frustumCulled && (o.frustumCulled = t.frustumCulled),
            void 0 !== t.renderOrder && (o.renderOrder = t.renderOrder),
            void 0 !== t.userData && (o.userData = t.userData),
            void 0 !== t.children)
                for (var c = t.children, l = 0; l < c.length; l++)
                    o.add(this.parseObject(c[l], e, n));
            if ("LOD" === t.type)
                for (var u = t.levels, h = 0; h < u.length; h++) {
                    var d = u[h]
                      , p = o.getObjectByProperty("uuid", d.object);
                    void 0 !== p && o.addLevel(p, d.distance)
                }
            return o
        }
    });
    var yc = {
        UVMapping: 300,
        CubeReflectionMapping: ya,
        CubeRefractionMapping: _a,
        EquirectangularReflectionMapping: xa,
        EquirectangularRefractionMapping: ba,
        SphericalReflectionMapping: wa,
        CubeUVReflectionMapping: Ma,
        CubeUVRefractionMapping: Ea
    }
      , _c = {
        RepeatWrapping: Ta,
        ClampToEdgeWrapping: Sa,
        MirroredRepeatWrapping: Aa
    }
      , xc = {
        NearestFilter: Ca,
        NearestMipMapNearestFilter: Pa,
        NearestMipMapLinearFilter: La,
        LinearFilter: Ra,
        LinearMipMapNearestFilter: Oa,
        LinearMipMapLinearFilter: Ia
    };
    wi.prototype = {
        constructor: wi,
        setOptions: function(t) {
            return this.options = t,
            this
        },
        load: function(t, e, n, r) {
            void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t);
            var i = this
              , o = sc.get(t);
            if (void 0 !== o)
                return i.manager.itemStart(t),
                setTimeout(function() {
                    e && e(o),
                    i.manager.itemEnd(t)
                }, 0),
                o;
            fetch(t).then(function(t) {
                return t.blob()
            }).then(function(t) {
                return createImageBitmap(t, i.options)
            }).then(function(n) {
                sc.add(t, n),
                e && e(n),
                i.manager.itemEnd(t)
            }).catch(function(e) {
                r && r(e),
                i.manager.itemEnd(t),
                i.manager.itemError(t)
            })
        },
        setCrossOrigin: function() {
            return this
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    },
    Object.assign(Mi.prototype, {
        moveTo: function(t, e) {
            this.currentPath = new qr,
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(t, e)
        },
        lineTo: function(t, e) {
            this.currentPath.lineTo(t, e)
        },
        quadraticCurveTo: function(t, e, n, r) {
            this.currentPath.quadraticCurveTo(t, e, n, r)
        },
        bezierCurveTo: function(t, e, n, r, i, o) {
            this.currentPath.bezierCurveTo(t, e, n, r, i, o)
        },
        splineThru: function(t) {
            this.currentPath.splineThru(t)
        },
        toShapes: function(t, e) {
            function n(t) {
                for (var e = [], n = 0, r = t.length; n < r; n++) {
                    var i = t[n]
                      , o = new Xr;
                    o.curves = i.curves,
                    e.push(o)
                }
                return e
            }
            var r = rc.isClockWise
              , i = this.subPaths;
            if (0 === i.length)
                return [];
            if (!0 === e)
                return n(i);
            var o, a, s, c = [];
            if (1 === i.length)
                return a = i[0],
                s = new Xr,
                s.curves = a.curves,
                c.push(s),
                c;
            var l = !r(i[0].getPoints());
            l = t ? !l : l;
            var u, h = [], d = [], p = [], f = 0;
            d[f] = void 0,
            p[f] = [];
            for (var m = 0, v = i.length; m < v; m++)
                a = i[m],
                u = a.getPoints(),
                o = r(u),
                o = t ? !o : o,
                o ? (!l && d[f] && f++,
                d[f] = {
                    s: new Xr,
                    p: u
                },
                d[f].s.curves = a.curves,
                l && f++,
                p[f] = []) : p[f].push({
                    h: a,
                    p: u[0]
                });
            if (!d[0])
                return n(i);
            if (d.length > 1) {
                for (var g = !1, y = [], _ = 0, x = d.length; _ < x; _++)
                    h[_] = [];
                for (var _ = 0, x = d.length; _ < x; _++)
                    for (var b = p[_], w = 0; w < b.length; w++) {
                        for (var M = b[w], E = !0, T = 0; T < d.length; T++)
                            (function(t, e) {
                                for (var n = e.length, r = !1, i = n - 1, o = 0; o < n; i = o++) {
                                    var a = e[i]
                                      , s = e[o]
                                      , c = s.x - a.x
                                      , l = s.y - a.y;
                                    if (Math.abs(l) > Number.EPSILON) {
                                        if (l < 0 && (a = e[o],
                                        c = -c,
                                        s = e[i],
                                        l = -l),
                                        t.y < a.y || t.y > s.y)
                                            continue;
                                        if (t.y === a.y) {
                                            if (t.x === a.x)
                                                return !0
                                        } else {
                                            var u = l * (t.x - a.x) - c * (t.y - a.y);
                                            if (0 === u)
                                                return !0;
                                            if (u < 0)
                                                continue;
                                            r = !r
                                        }
                                    } else {
                                        if (t.y !== a.y)
                                            continue;
                                        if (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x)
                                            return !0
                                    }
                                }
                                return r
                            }
                            )(M.p, d[T].p) && (_ !== T && y.push({
                                froms: _,
                                tos: T,
                                hole: w
                            }),
                            E ? (E = !1,
                            h[T].push(M)) : g = !0);
                        E && h[_].push(M)
                    }
                y.length > 0 && (g || (p = h))
            }
            for (var S, m = 0, A = d.length; m < A; m++) {
                s = d[m].s,
                c.push(s),
                S = p[m];
                for (var C = 0, P = S.length; C < P; C++)
                    s.holes.push(S[C].h)
            }
            return c
        }
    }),
    Object.assign(Ei.prototype, {
        isFont: !0,
        generateShapes: function(t, e, n) {
            void 0 === e && (e = 100),
            void 0 === n && (n = 4);
            for (var r = [], i = Ti(t, e, n, this.data), o = 0, a = i.length; o < a; o++)
                Array.prototype.push.apply(r, i[o].toShapes());
            return r
        }
    }),
    Object.assign(Ai.prototype, {
        load: function(t, e, n, r) {
            var i = this
              , o = new gr(this.manager);
            o.setPath(this.path),
            o.load(t, function(t) {
                var n;
                try {
                    n = JSON.parse(t)
                } catch (e) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                    n = JSON.parse(t.substring(65, t.length - 2))
                }
                var r = i.parse(n);
                e && e(r)
            }, n, r)
        },
        parse: function(t) {
            return new Ei(t)
        },
        setPath: function(t) {
            return this.path = t,
            this
        }
    });
    var bc, wc = {
        getContext: function() {
            return void 0 === bc && (bc = new (window.AudioContext || window.webkitAudioContext)),
            bc
        },
        setContext: function(t) {
            bc = t
        }
    };
    Object.assign(Ci.prototype, {
        load: function(t, e, n, r) {
            var i = new gr(this.manager);
            i.setResponseType("arraybuffer"),
            i.load(t, function(t) {
                wc.getContext().decodeAudioData(t, function(t) {
                    e(t)
                })
            }, n, r)
        }
    }),
    Object.assign(Pi.prototype, {
        update: function() {
            var t, e, n, r, i, a, s, c, l = new o, u = new o;
            return function(o) {
                if (t !== this || e !== o.focus || n !== o.fov || r !== o.aspect * this.aspect || i !== o.near || a !== o.far || s !== o.zoom || c !== this.eyeSep) {
                    t = this,
                    e = o.focus,
                    n = o.fov,
                    r = o.aspect * this.aspect,
                    i = o.near,
                    a = o.far,
                    s = o.zoom;
                    var h = o.projectionMatrix.clone();
                    c = this.eyeSep / 2;
                    var d, p, f = c * i / e, m = i * Math.tan(ks.DEG2RAD * n * .5) / s;
                    u.elements[12] = -c,
                    l.elements[12] = c,
                    d = -m * r + f,
                    p = m * r + f,
                    h.elements[0] = 2 * i / (p - d),
                    h.elements[8] = (p + d) / (p - d),
                    this.cameraL.projectionMatrix.copy(h),
                    d = -m * r - f,
                    p = m * r - f,
                    h.elements[0] = 2 * i / (p - d),
                    h.elements[8] = (p + d) / (p - d),
                    this.cameraR.projectionMatrix.copy(h)
                }
                this.cameraL.matrixWorld.copy(o.matrixWorld).multiply(u),
                this.cameraR.matrixWorld.copy(o.matrixWorld).multiply(l)
            }
        }()
    }),
    Li.prototype = Object.create(w.prototype),
    Li.prototype.constructor = Li,
    Ri.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Ri,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null)
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(t) {
            null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = t,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination)
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(t) {
            this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01)
        },
        updateMatrixWorld: function() {
            var t = new s
              , e = new a
              , n = new s
              , r = new s;
            return function(i) {
                w.prototype.updateMatrixWorld.call(this, i);
                var o = this.context.listener
                  , a = this.up;
                this.matrixWorld.decompose(t, e, n),
                r.set(0, 0, -1).applyQuaternion(e),
                o.positionX ? (o.positionX.setValueAtTime(t.x, this.context.currentTime),
                o.positionY.setValueAtTime(t.y, this.context.currentTime),
                o.positionZ.setValueAtTime(t.z, this.context.currentTime),
                o.forwardX.setValueAtTime(r.x, this.context.currentTime),
                o.forwardY.setValueAtTime(r.y, this.context.currentTime),
                o.forwardZ.setValueAtTime(r.z, this.context.currentTime),
                o.upX.setValueAtTime(a.x, this.context.currentTime),
                o.upY.setValueAtTime(a.y, this.context.currentTime),
                o.upZ.setValueAtTime(a.z, this.context.currentTime)) : (o.setPosition(t.x, t.y, t.z),
                o.setOrientation(r.x, r.y, r.z, a.x, a.y, a.z))
            }
        }()
    }),
    Oi.prototype = Object.assign(Object.create(w.prototype), {
        constructor: Oi,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(t) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = t,
            this.connect(),
            this
        },
        setBuffer: function(t) {
            return this.buffer = t,
            this.sourceType = "buffer",
            this.autoplay && this.play(),
            this
        },
        play: function() {
            if (!0 === this.isPlaying)
                return void console.warn("THREE.Audio: Audio is already playing.");
            if (!1 === this.hasPlaybackControl)
                return void console.warn("THREE.Audio: this Audio has no playback control.");
            var t = this.context.createBufferSource();
            return t.buffer = this.buffer,
            t.loop = this.loop,
            t.onended = this.onEnded.bind(this),
            t.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
            this.startTime = this.context.currentTime,
            t.start(this.startTime, this.offset),
            this.isPlaying = !0,
            this.source = t,
            this.connect()
        },
        pause: function() {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (!0 === this.isPlaying && (this.source.stop(),
            this.offset += (this.context.currentTime - this.startTime) * this.playbackRate,
            this.isPlaying = !1),
            this)
        },
        stop: function() {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
            this.offset = 0,
            this.isPlaying = !1,
            this)
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].connect(this.filters[t]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else
                this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var t = 1, e = this.filters.length; t < e; t++)
                    this.filters[t - 1].disconnect(this.filters[t]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else
                this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(t) {
            return t || (t = []),
            !0 === this.isPlaying ? (this.disconnect(),
            this.filters = t,
            this.connect()) : this.filters = t,
            this
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(t) {
            return this.setFilters(t ? [t] : [])
        },
        setPlaybackRate: function(t) {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.playbackRate = t,
            !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
            this)
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.loop
        },
        setLoop: function(t) {
            return !1 === this.hasPlaybackControl ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.loop = t,
            !0 === this.isPlaying && (this.source.loop = this.loop),
            this)
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(t) {
            return this.gain.gain.setTargetAtTime(t, this.context.currentTime, .01),
            this
        }
    }),
    Ii.prototype = Object.assign(Object.create(Oi.prototype), {
        constructor: Ii,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(t) {
            this.panner.refDistance = t
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(t) {
            this.panner.rolloffFactor = t
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(t) {
            this.panner.distanceModel = t
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(t) {
            this.panner.maxDistance = t
        },
        updateMatrixWorld: function() {
            var t = new s;
            return function(e) {
                w.prototype.updateMatrixWorld.call(this, e),
                t.setFromMatrixPosition(this.matrixWorld),
                this.panner.setPosition(t.x, t.y, t.z)
            }
        }()
    }),
    Object.assign(Di.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data),
            this.data
        },
        getAverageFrequency: function() {
            for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
                t += e[n];
            return t / e.length
        }
    }),
    Object.assign(Ni.prototype, {
        accumulate: function(t, e) {
            var n = this.buffer
              , r = this.valueSize
              , i = t * r + r
              , o = this.cumulativeWeight;
            if (0 === o) {
                for (var a = 0; a !== r; ++a)
                    n[i + a] = n[a];
                o = e
            } else {
                o += e;
                var s = e / o;
                this._mixBufferRegion(n, i, 0, s, r)
            }
            this.cumulativeWeight = o
        },
        apply: function(t) {
            var e = this.valueSize
              , n = this.buffer
              , r = t * e + e
              , i = this.cumulativeWeight
              , o = this.binding;
            if (this.cumulativeWeight = 0,
            i < 1) {
                var a = 3 * e;
                this._mixBufferRegion(n, r, a, 1 - i, e)
            }
            for (var s = e, c = e + e; s !== c; ++s)
                if (n[s] !== n[s + e]) {
                    o.setValue(n, r);
                    break
                }
        },
        saveOriginalState: function() {
            var t = this.binding
              , e = this.buffer
              , n = this.valueSize
              , r = 3 * n;
            t.getValue(e, r);
            for (var i = n, o = r; i !== o; ++i)
                e[i] = e[r + i % n];
            this.cumulativeWeight = 0
        },
        restoreOriginalState: function() {
            var t = 3 * this.valueSize;
            this.binding.setValue(this.buffer, t)
        },
        _select: function(t, e, n, r, i) {
            if (r >= .5)
                for (var o = 0; o !== i; ++o)
                    t[e + o] = t[n + o]
        },
        _slerp: function(t, e, n, r) {
            a.slerpFlat(t, e, t, e, t, n, r)
        },
        _lerp: function(t, e, n, r, i) {
            for (var o = 1 - r, a = 0; a !== i; ++a) {
                var s = e + a;
                t[s] = t[s] * o + t[n + a] * r
            }
        }
    });
    var Mc = "\\[\\]\\.:\\/";
    Object.assign(ki.prototype, {
        getValue: function(t, e) {
            this.bind();
            var n = this._targetGroup.nCachedObjects_
              , r = this._bindings[n];
            void 0 !== r && r.getValue(t, e)
        },
        setValue: function(t, e) {
            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                n[r].setValue(t, e)
        },
        bind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].bind()
        },
        unbind: function() {
            for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, n = t.length; e !== n; ++e)
                t[e].unbind()
        }
    }),
    Object.assign(ji, {
        Composite: ki,
        create: function(t, e, n) {
            return t && t.isAnimationObjectGroup ? new ji.Composite(t,e,n) : new ji(t,e,n)
        },
        sanitizeNodeName: function() {
            var t = new RegExp("[" + Mc + "]","g");
            return function(e) {
                return e.replace(/\s/g, "_").replace(t, "")
            }
        }(),
        parseTrackName: function() {
            var t = "[^" + Mc + "]"
              , e = "[^" + Mc.replace("\\.", "") + "]"
              , n = /((?:WC+[\/:])*)/.source.replace("WC", t)
              , r = /(WCOD+)?/.source.replace("WCOD", e)
              , i = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", t)
              , o = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", t)
              , a = new RegExp("^" + n + r + i + o + "$")
              , s = ["material", "materials", "bones"];
            return function(t) {
                var e = a.exec(t);
                if (!e)
                    throw new Error("PropertyBinding: Cannot parse trackName: " + t);
                var n = {
                    nodeName: e[2],
                    objectName: e[3],
                    objectIndex: e[4],
                    propertyName: e[5],
                    propertyIndex: e[6]
                }
                  , r = n.nodeName && n.nodeName.lastIndexOf(".");
                if (void 0 !== r && -1 !== r) {
                    var i = n.nodeName.substring(r + 1);
                    -1 !== s.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r),
                    n.objectName = i)
                }
                if (null === n.propertyName || 0 === n.propertyName.length)
                    throw new Error("PropertyBinding: can not parse propertyName from trackName: " + t);
                return n
            }
        }(),
        findNode: function(t, e) {
            if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid)
                return t;
            if (t.skeleton) {
                var n = t.skeleton.getBoneByName(e);
                if (void 0 !== n)
                    return n
            }
            if (t.children) {
                var r = function(t) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n];
                        if (i.name === e || i.uuid === e)
                            return i;
                        var o = r(i.children);
                        if (o)
                            return o
                    }
                    return null
                }
                  , i = r(t.children);
                if (i)
                    return i
            }
            return null
        }
    }),
    Object.assign(ji.prototype, {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning: {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(t, e) {
            t[e] = this.node[this.propertyName]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                t[e++] = n[r]
        }
        , function(t, e) {
            t[e] = this.resolvedProperty[this.propertyIndex]
        }
        , function(t, e) {
            this.resolvedProperty.toArray(t, e)
        }
        ],
        SetterByBindingTypeAndVersioning: [[function(t, e) {
            this.targetObject[this.propertyName] = t[e]
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.targetObject[this.propertyName] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++]
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++];
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = t[e++];
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e]
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty[this.propertyIndex] = t[e],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(t, e) {
            this.resolvedProperty.fromArray(t, e)
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.needsUpdate = !0
        }
        , function(t, e) {
            this.resolvedProperty.fromArray(t, e),
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ]],
        getValue: function(t, e) {
            this.bind(),
            this.getValue(t, e)
        },
        setValue: function(t, e) {
            this.bind(),
            this.setValue(t, e)
        },
        bind: function() {
            var t = this.node
              , e = this.parsedPath
              , n = e.objectName
              , r = e.propertyName
              , i = e.propertyIndex;
            if (t || (t = ji.findNode(this.rootNode, e.nodeName) || this.rootNode,
            this.node = t),
            this.getValue = this._getValue_unavailable,
            this.setValue = this._setValue_unavailable,
            !t)
                return void console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            if (n) {
                var o = e.objectIndex;
                switch (n) {
                case "materials":
                    if (!t.material)
                        return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                    if (!t.material.materials)
                        return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                    t = t.material.materials;
                    break;
                case "bones":
                    if (!t.skeleton)
                        return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                    t = t.skeleton.bones;
                    for (var a = 0; a < t.length; a++)
                        if (t[a].name === o) {
                            o = a;
                            break
                        }
                    break;
                default:
                    if (void 0 === t[n])
                        return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                    t = t[n]
                }
                if (void 0 !== o) {
                    if (void 0 === t[o])
                        return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                    t = t[o]
                }
            }
            var s = t[r];
            if (void 0 === s) {
                var c = e.nodeName;
                return void console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + r + " but it wasn't found.", t)
            }
            var l = this.Versioning.None;
            void 0 !== t.needsUpdate ? (l = this.Versioning.NeedsUpdate,
            this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate,
            this.targetObject = t);
            var u = this.BindingType.Direct;
            if (void 0 !== i) {
                if ("morphTargetInfluences" === r) {
                    if (!t.geometry)
                        return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    if (t.geometry.isBufferGeometry) {
                        if (!t.geometry.morphAttributes)
                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        for (var a = 0; a < this.node.geometry.morphAttributes.position.length; a++)
                            if (t.geometry.morphAttributes.position[a].name === i) {
                                i = a;
                                break
                            }
                    } else {
                        if (!t.geometry.morphTargets)
                            return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                        for (var a = 0; a < this.node.geometry.morphTargets.length; a++)
                            if (t.geometry.morphTargets[a].name === i) {
                                i = a;
                                break
                            }
                    }
                }
                u = this.BindingType.ArrayElement,
                this.resolvedProperty = s,
                this.propertyIndex = i
            } else
                void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray,
                this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray,
                this.resolvedProperty = s) : this.propertyName = r;
            this.getValue = this.GetterByBindingType[u],
            this.setValue = this.SetterByBindingTypeAndVersioning[u][l]
        },
        unbind: function() {
            this.node = null,
            this.getValue = this._getValue_unbound,
            this.setValue = this._setValue_unbound
        }
    }),
    //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(ji.prototype, {
        _getValue_unbound: ji.prototype.getValue,
        _setValue_unbound: ji.prototype.setValue
    }),
    Object.assign(zi.prototype, {
        isAnimationObjectGroup: !0,
        add: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._paths, o = this._parsedPaths, a = this._bindings, s = a.length, c = void 0, l = 0, u = arguments.length; l !== u; ++l) {
                var h = arguments[l]
                  , d = h.uuid
                  , p = r[d];
                if (void 0 === p) {
                    p = e++,
                    r[d] = p,
                    t.push(h);
                    for (var f = 0, m = s; f !== m; ++f)
                        a[f].push(new ji(h,i[f],o[f]))
                } else if (p < n) {
                    c = t[p];
                    var v = --n
                      , g = t[v];
                    r[g.uuid] = p,
                    t[p] = g,
                    r[d] = v,
                    t[v] = h;
                    for (var f = 0, m = s; f !== m; ++f) {
                        var y = a[f]
                          , _ = y[v]
                          , x = y[p];
                        y[p] = _,
                        void 0 === x && (x = new ji(h,i[f],o[f])),
                        y[v] = x
                    }
                } else
                    t[p] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = n
        },
        remove: function() {
            for (var t = this._objects, e = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, i = r.length, o = 0, a = arguments.length; o !== a; ++o) {
                var s = arguments[o]
                  , c = s.uuid
                  , l = n[c];
                if (void 0 !== l && l >= e) {
                    var u = e++
                      , h = t[u];
                    n[h.uuid] = l,
                    t[l] = h,
                    n[c] = u,
                    t[u] = s;
                    for (var d = 0, p = i; d !== p; ++d) {
                        var f = r[d]
                          , m = f[u]
                          , v = f[l];
                        f[l] = m,
                        f[u] = v
                    }
                }
            }
            this.nCachedObjects_ = e
        },
        uncache: function() {
            for (var t = this._objects, e = t.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, o = i.length, a = 0, s = arguments.length; a !== s; ++a) {
                var c = arguments[a]
                  , l = c.uuid
                  , u = r[l];
                if (void 0 !== u)
                    if (delete r[l],
                    u < n) {
                        var h = --n
                          , d = t[h]
                          , p = --e
                          , f = t[p];
                        r[d.uuid] = u,
                        t[u] = d,
                        r[f.uuid] = h,
                        t[h] = f,
                        t.pop();
                        for (var m = 0, v = o; m !== v; ++m) {
                            var g = i[m]
                              , y = g[h]
                              , _ = g[p];
                            g[u] = y,
                            g[h] = _,
                            g.pop()
                        }
                    } else {
                        var p = --e
                          , f = t[p];
                        r[f.uuid] = u,
                        t[u] = f,
                        t.pop();
                        for (var m = 0, v = o; m !== v; ++m) {
                            var g = i[m];
                            g[u] = g[p],
                            g.pop()
                        }
                    }
            }
            this.nCachedObjects_ = n
        },
        subscribe_: function(t, e) {
            var n = this._bindingsIndicesByPath
              , r = n[t]
              , i = this._bindings;
            if (void 0 !== r)
                return i[r];
            var o = this._paths
              , a = this._parsedPaths
              , s = this._objects
              , c = s.length
              , l = this.nCachedObjects_
              , u = new Array(c);
            r = i.length,
            n[t] = r,
            o.push(t),
            a.push(e),
            i.push(u);
            for (var h = l, d = s.length; h !== d; ++h) {
                var p = s[h];
                u[h] = new ji(p,t,e)
            }
            return u
        },
        unsubscribe_: function(t) {
            var e = this._bindingsIndicesByPath
              , n = e[t];
            if (void 0 !== n) {
                var r = this._paths
                  , i = this._parsedPaths
                  , o = this._bindings
                  , a = o.length - 1
                  , s = o[a];
                e[t[a]] = n,
                o[n] = s,
                o.pop(),
                i[n] = i[a],
                i.pop(),
                r[n] = r[a],
                r.pop()
            }
        }
    }),
    Object.assign(Bi.prototype, {
        play: function() {
            return this._mixer._activateAction(this),
            this
        },
        stop: function() {
            return this._mixer._deactivateAction(this),
            this.reset()
        },
        reset: function() {
            return this.paused = !1,
            this.enabled = !0,
            this.time = 0,
            this._loopCount = -1,
            this._startTime = null,
            this.stopFading().stopWarping()
        },
        isRunning: function() {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function() {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(t) {
            return this._startTime = t,
            this
        },
        setLoop: function(t, e) {
            return this.loop = t,
            this.repetitions = e,
            this
        },
        setEffectiveWeight: function(t) {
            return this.weight = t,
            this._effectiveWeight = this.enabled ? t : 0,
            this.stopFading()
        },
        getEffectiveWeight: function() {
            return this._effectiveWeight
        },
        fadeIn: function(t) {
            return this._scheduleFading(t, 0, 1)
        },
        fadeOut: function(t) {
            return this._scheduleFading(t, 1, 0)
        },
        crossFadeFrom: function(t, e, n) {
            if (t.fadeOut(e),
            this.fadeIn(e),
            n) {
                var r = this._clip.duration
                  , i = t._clip.duration
                  , o = i / r
                  , a = r / i;
                t.warp(1, o, e),
                this.warp(a, 1, e)
            }
            return this
        },
        crossFadeTo: function(t, e, n) {
            return t.crossFadeFrom(this, e, n)
        },
        stopFading: function() {
            var t = this._weightInterpolant;
            return null !== t && (this._weightInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        setEffectiveTimeScale: function(t) {
            return this.timeScale = t,
            this._effectiveTimeScale = this.paused ? 0 : t,
            this.stopWarping()
        },
        getEffectiveTimeScale: function() {
            return this._effectiveTimeScale
        },
        setDuration: function(t) {
            return this.timeScale = this._clip.duration / t,
            this.stopWarping()
        },
        syncWith: function(t) {
            return this.time = t.time,
            this.timeScale = t.timeScale,
            this.stopWarping()
        },
        halt: function(t) {
            return this.warp(this._effectiveTimeScale, 0, t)
        },
        warp: function(t, e, n) {
            var r = this._mixer
              , i = r.time
              , o = this._timeScaleInterpolant
              , a = this.timeScale;
            null === o && (o = r._lendControlInterpolant(),
            this._timeScaleInterpolant = o);
            var s = o.parameterPositions
              , c = o.sampleValues;
            return s[0] = i,
            s[1] = i + n,
            c[0] = t / a,
            c[1] = e / a,
            this
        },
        stopWarping: function() {
            var t = this._timeScaleInterpolant;
            return null !== t && (this._timeScaleInterpolant = null,
            this._mixer._takeBackControlInterpolant(t)),
            this
        },
        getMixer: function() {
            return this._mixer
        },
        getClip: function() {
            return this._clip
        },
        getRoot: function() {
            return this._localRoot || this._mixer._root
        },
        _update: function(t, e, n, r) {
            if (!this.enabled)
                return void this._updateWeight(t);
            var i = this._startTime;
            if (null !== i) {
                var o = (t - i) * n;
                if (o < 0 || 0 === n)
                    return;
                this._startTime = null,
                e = n * o
            }
            e *= this._updateTimeScale(t);
            var a = this._updateTime(e)
              , s = this._updateWeight(t);
            if (s > 0)
                for (var c = this._interpolants, l = this._propertyBindings, u = 0, h = c.length; u !== h; ++u)
                    c[u].evaluate(a),
                    l[u].accumulate(r, s)
        },
        _updateWeight: function(t) {
            var e = 0;
            if (this.enabled) {
                e = this.weight;
                var n = this._weightInterpolant;
                if (null !== n) {
                    var r = n.evaluate(t)[0];
                    e *= r,
                    t > n.parameterPositions[1] && (this.stopFading(),
                    0 === r && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = e,
            e
        },
        _updateTimeScale: function(t) {
            var e = 0;
            if (!this.paused) {
                e = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n) {
                    e *= n.evaluate(t)[0],
                    t > n.parameterPositions[1] && (this.stopWarping(),
                    0 === e ? this.paused = !0 : this.timeScale = e)
                }
            }
            return this._effectiveTimeScale = e,
            e
        },
        _updateTime: function(t) {
            var e = this.time + t;
            if (0 === t)
                return e;
            var n = this._clip.duration
              , r = this.loop
              , i = this._loopCount;
            if (2200 === r) {
                -1 === i && (this._loopCount = 0,
                this._setEndings(!0, !0, !1));
                t: {
                    if (e >= n)
                        e = n;
                    else {
                        if (!(e < 0))
                            break t;
                        e = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: t < 0 ? -1 : 1
                    })
                }
            } else {
                var o = 2202 === r;
                if (-1 === i && (t >= 0 ? (i = 0,
                this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)),
                e >= n || e < 0) {
                    var a = Math.floor(e / n);
                    e -= n * a,
                    i += Math.abs(a);
                    var s = this.repetitions - i;
                    if (s <= 0)
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        e = t > 0 ? n : 0,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: t > 0 ? 1 : -1
                        });
                    else {
                        if (1 === s) {
                            var c = t < 0;
                            this._setEndings(c, !c, o)
                        } else
                            this._setEndings(!1, !1, o);
                        this._loopCount = i,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: a
                        })
                    }
                }
                if (o && 1 == (1 & i))
                    return this.time = e,
                    n - e
            }
            return this.time = e,
            e
        },
        _setEndings: function(t, e, n) {
            var r = this._interpolantSettings;
            n ? (r.endingStart = 2401,
            r.endingEnd = 2401) : (r.endingStart = t ? this.zeroSlopeAtStart ? 2401 : Ms : 2402,
            r.endingEnd = e ? this.zeroSlopeAtEnd ? 2401 : Ms : 2402)
        },
        _scheduleFading: function(t, e, n) {
            var r = this._mixer
              , i = r.time
              , o = this._weightInterpolant;
            null === o && (o = r._lendControlInterpolant(),
            this._weightInterpolant = o);
            var a = o.parameterPositions
              , s = o.sampleValues;
            return a[0] = i,
            s[0] = e,
            a[1] = i + t,
            s[1] = n,
            this
        }
    }),
    Ui.prototype = Object.assign(Object.create(r.prototype), {
        constructor: Ui,
        _bindAction: function(t, e) {
            var n = t._localRoot || this._root
              , r = t._clip.tracks
              , i = r.length
              , o = t._propertyBindings
              , a = t._interpolants
              , s = n.uuid
              , c = this._bindingsByRootAndName
              , l = c[s];
            void 0 === l && (l = {},
            c[s] = l);
            for (var u = 0; u !== i; ++u) {
                var h = r[u]
                  , d = h.name
                  , p = l[d];
                if (void 0 !== p)
                    o[u] = p;
                else {
                    if (void 0 !== (p = o[u])) {
                        null === p._cacheIndex && (++p.referenceCount,
                        this._addInactiveBinding(p, s, d));
                        continue
                    }
                    var f = e && e._propertyBindings[u].binding.parsedPath;
                    p = new Ni(ji.create(n, d, f),h.ValueTypeName,h.getValueSize()),
                    ++p.referenceCount,
                    this._addInactiveBinding(p, s, d),
                    o[u] = p
                }
                a[u].resultBuffer = p.buffer
            }
        },
        _activateAction: function(t) {
            if (!this._isActiveAction(t)) {
                if (null === t._cacheIndex) {
                    var e = (t._localRoot || this._root).uuid
                      , n = t._clip.uuid
                      , r = this._actionsByClip[n];
                    this._bindAction(t, r && r.knownActions[0]),
                    this._addInactiveAction(t, n, e)
                }
                for (var i = t._propertyBindings, o = 0, a = i.length; o !== a; ++o) {
                    var s = i[o];
                    0 == s.useCount++ && (this._lendBinding(s),
                    s.saveOriginalState())
                }
                this._lendAction(t)
            }
        },
        _deactivateAction: function(t) {
            if (this._isActiveAction(t)) {
                for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                    var i = e[n];
                    0 == --i.useCount && (i.restoreOriginalState(),
                    this._takeBackBinding(i))
                }
                this._takeBackAction(t)
            }
        },
        _initMemoryManager: function() {
            this._actions = [],
            this._nActiveActions = 0,
            this._actionsByClip = {},
            this._bindings = [],
            this._nActiveBindings = 0,
            this._bindingsByRootAndName = {},
            this._controlInterpolants = [],
            this._nActiveControlInterpolants = 0;
            var t = this;
            this.stats = {
                actions: {
                    get total() {
                        return t._actions.length
                    },
                    get inUse() {
                        return t._nActiveActions
                    }
                },
                bindings: {
                    get total() {
                        return t._bindings.length
                    },
                    get inUse() {
                        return t._nActiveBindings
                    }
                },
                controlInterpolants: {
                    get total() {
                        return t._controlInterpolants.length
                    },
                    get inUse() {
                        return t._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(t) {
            var e = t._cacheIndex;
            return null !== e && e < this._nActiveActions
        },
        _addInactiveAction: function(t, e, n) {
            var r = this._actions
              , i = this._actionsByClip
              , o = i[e];
            if (void 0 === o)
                o = {
                    knownActions: [t],
                    actionByRoot: {}
                },
                t._byClipCacheIndex = 0,
                i[e] = o;
            else {
                var a = o.knownActions;
                t._byClipCacheIndex = a.length,
                a.push(t)
            }
            t._cacheIndex = r.length,
            r.push(t),
            o.actionByRoot[n] = t
        },
        _removeInactiveAction: function(t) {
            var e = this._actions
              , n = e[e.length - 1]
              , r = t._cacheIndex;
            n._cacheIndex = r,
            e[r] = n,
            e.pop(),
            t._cacheIndex = null;
            var i = t._clip.uuid
              , o = this._actionsByClip
              , a = o[i]
              , s = a.knownActions
              , c = s[s.length - 1]
              , l = t._byClipCacheIndex;
            c._byClipCacheIndex = l,
            s[l] = c,
            s.pop(),
            t._byClipCacheIndex = null,
            delete a.actionByRoot[(t._localRoot || this._root).uuid],
            0 === s.length && delete o[i],
            this._removeInactiveBindingsForAction(t)
        },
        _removeInactiveBindingsForAction: function(t) {
            for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
                var i = e[n];
                0 == --i.referenceCount && this._removeInactiveBinding(i)
            }
        },
        _lendAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , r = this._nActiveActions++
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _takeBackAction: function(t) {
            var e = this._actions
              , n = t._cacheIndex
              , r = --this._nActiveActions
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _addInactiveBinding: function(t, e, n) {
            var r = this._bindingsByRootAndName
              , i = r[e]
              , o = this._bindings;
            void 0 === i && (i = {},
            r[e] = i),
            i[n] = t,
            t._cacheIndex = o.length,
            o.push(t)
        },
        _removeInactiveBinding: function(t) {
            var e = this._bindings
              , n = t.binding
              , r = n.rootNode.uuid
              , i = n.path
              , o = this._bindingsByRootAndName
              , a = o[r]
              , s = e[e.length - 1]
              , c = t._cacheIndex;
            s._cacheIndex = c,
            e[c] = s,
            e.pop(),
            delete a[i];
            t: {
                for (var l in a)
                    break t;
                delete o[r]
            }
        },
        _lendBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , r = this._nActiveBindings++
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _takeBackBinding: function(t) {
            var e = this._bindings
              , n = t._cacheIndex
              , r = --this._nActiveBindings
              , i = e[r];
            t._cacheIndex = r,
            e[r] = t,
            i._cacheIndex = n,
            e[n] = i
        },
        _lendControlInterpolant: function() {
            var t = this._controlInterpolants
              , e = this._nActiveControlInterpolants++
              , n = t[e];
            return void 0 === n && (n = new di(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
            n.__cacheIndex = e,
            t[e] = n),
            n
        },
        _takeBackControlInterpolant: function(t) {
            var e = this._controlInterpolants
              , n = t.__cacheIndex
              , r = --this._nActiveControlInterpolants
              , i = e[r];
            t.__cacheIndex = r,
            e[r] = t,
            i.__cacheIndex = n,
            e[n] = i
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(t, e) {
            var n = e || this._root
              , r = n.uuid
              , i = "string" == typeof t ? vi.findByName(n, t) : t
              , o = null !== i ? i.uuid : t
              , a = this._actionsByClip[o]
              , s = null;
            if (void 0 !== a) {
                var c = a.actionByRoot[r];
                if (void 0 !== c)
                    return c;
                s = a.knownActions[0],
                null === i && (i = s._clip)
            }
            if (null === i)
                return null;
            var l = new Bi(this,i,e);
            return this._bindAction(l, s),
            this._addInactiveAction(l, o, r),
            l
        },
        existingAction: function(t, e) {
            var n = e || this._root
              , r = n.uuid
              , i = "string" == typeof t ? vi.findByName(n, t) : t
              , o = i ? i.uuid : t
              , a = this._actionsByClip[o];
            return void 0 !== a ? a.actionByRoot[r] || null : null
        },
        stopAllAction: function() {
            var t = this._actions
              , e = this._nActiveActions
              , n = this._bindings
              , r = this._nActiveBindings;
            this._nActiveActions = 0,
            this._nActiveBindings = 0;
            for (var i = 0; i !== e; ++i)
                t[i].reset();
            for (var i = 0; i !== r; ++i)
                n[i].useCount = 0;
            return this
        },
        update: function(t) {
            t *= this.timeScale;
            for (var e = this._actions, n = this._nActiveActions, r = this.time += t, i = Math.sign(t), o = this._accuIndex ^= 1, a = 0; a !== n; ++a) {
                e[a]._update(r, t, i, o)
            }
            for (var s = this._bindings, c = this._nActiveBindings, a = 0; a !== c; ++a)
                s[a].apply(o);
            return this
        },
        getRoot: function() {
            return this._root
        },
        uncacheClip: function(t) {
            var e = this._actions
              , n = t.uuid
              , r = this._actionsByClip
              , i = r[n];
            if (void 0 !== i) {
                for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a) {
                    var c = o[a];
                    this._deactivateAction(c);
                    var l = c._cacheIndex
                      , u = e[e.length - 1];
                    c._cacheIndex = null,
                    c._byClipCacheIndex = null,
                    u._cacheIndex = l,
                    e[l] = u,
                    e.pop(),
                    this._removeInactiveBindingsForAction(c)
                }
                delete r[n]
            }
        },
        uncacheRoot: function(t) {
            var e = t.uuid
              , n = this._actionsByClip;
            for (var r in n) {
                var i = n[r].actionByRoot
                  , o = i[e];
                void 0 !== o && (this._deactivateAction(o),
                this._removeInactiveAction(o))
            }
            var a = this._bindingsByRootAndName
              , s = a[e];
            if (void 0 !== s)
                for (var c in s) {
                    var l = s[c];
                    l.restoreOriginalState(),
                    this._removeInactiveBinding(l)
                }
        },
        uncacheAction: function(t, e) {
            var n = this.existingAction(t, e);
            null !== n && (this._deactivateAction(n),
            this._removeInactiveAction(n))
        }
    }),
    Fi.prototype.clone = function() {
        return new Fi(void 0 === this.value.clone ? this.value : this.value.clone())
    }
    ,
    Hi.prototype = Object.assign(Object.create(B.prototype), {
        constructor: Hi,
        isInstancedBufferGeometry: !0,
        copy: function(t) {
            return B.prototype.copy.call(this, t),
            this.maxInstancedCount = t.maxInstancedCount,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    Object.defineProperties(Gi.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        }
    }),
    Object.assign(Gi.prototype, {
        isInterleavedBufferAttribute: !0,
        setX: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset] = e,
            this
        },
        setY: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 1] = e,
            this
        },
        setZ: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 2] = e,
            this
        },
        setW: function(t, e) {
            return this.data.array[t * this.data.stride + this.offset + 3] = e,
            this
        },
        getX: function(t) {
            return this.data.array[t * this.data.stride + this.offset]
        },
        getY: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 1]
        },
        getZ: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 2]
        },
        getW: function(t) {
            return this.data.array[t * this.data.stride + this.offset + 3]
        },
        setXY: function(t, e, n) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this
        },
        setXYZ: function(t, e, n, r) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = r,
            this
        },
        setXYZW: function(t, e, n, r, i) {
            return t = t * this.data.stride + this.offset,
            this.data.array[t + 0] = e,
            this.data.array[t + 1] = n,
            this.data.array[t + 2] = r,
            this.data.array[t + 3] = i,
            this
        }
    }),
    Object.defineProperty(Vi.prototype, "needsUpdate", {
        set: function(t) {
            !0 === t && this.version++
        }
    }),
    Object.assign(Vi.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setArray: function(t) {
            if (Array.isArray(t))
                throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            return this.count = void 0 !== t ? t.length / this.stride : 0,
            this.array = t,
            this
        },
        setDynamic: function(t) {
            return this.dynamic = t,
            this
        },
        copy: function(t) {
            return this.array = new t.array.constructor(t.array),
            this.count = t.count,
            this.stride = t.stride,
            this.dynamic = t.dynamic,
            this
        },
        copyAt: function(t, e, n) {
            t *= this.stride,
            n *= e.stride;
            for (var r = 0, i = this.stride; r < i; r++)
                this.array[t + r] = e.array[n + r];
            return this
        },
        set: function(t, e) {
            return void 0 === e && (e = 0),
            this.array.set(t, e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        onUpload: function(t) {
            return this.onUploadCallback = t,
            this
        }
    }),
    Wi.prototype = Object.assign(Object.create(Vi.prototype), {
        constructor: Wi,
        isInstancedInterleavedBuffer: !0,
        copy: function(t) {
            return Vi.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
    }),
    qi.prototype = Object.assign(Object.create(A.prototype), {
        constructor: qi,
        isInstancedBufferAttribute: !0,
        copy: function(t) {
            return A.prototype.copy.call(this, t),
            this.meshPerAttribute = t.meshPerAttribute,
            this
        }
    }),
    Object.assign(Xi.prototype, {
        linePrecision: 1,
        set: function(t, e) {
            this.ray.set(t, e)
        },
        setFromCamera: function(t, e) {
            e && e.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
            this.ray.direction.set(t.x, t.y, .5).unproject(e).sub(this.ray.origin).normalize()) : e && e.isOrthographicCamera ? (this.ray.origin.set(t.x, t.y, (e.near + e.far) / (e.near - e.far)).unproject(e),
            this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(t, e, n) {
            var r = n || [];
            return $i(t, this, r, e),
            r.sort(Yi),
            r
        },
        intersectObjects: function(t, e, n) {
            var r = n || [];
            if (!1 === Array.isArray(t))
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var i = 0, o = t.length; i < o; i++)
                $i(t[i], this, r, e);
            return r.sort(Yi),
            r
        }
    }),
    Object.assign(Zi.prototype, {
        start: function() {
            this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
            this.oldTime = this.startTime,
            this.elapsedTime = 0,
            this.running = !0
        },
        stop: function() {
            this.getElapsedTime(),
            this.running = !1,
            this.autoStart = !1
        },
        getElapsedTime: function() {
            return this.getDelta(),
            this.elapsedTime
        },
        getDelta: function() {
            var t = 0;
            if (this.autoStart && !this.running)
                return this.start(),
                0;
            if (this.running) {
                var e = ("undefined" == typeof performance ? Date : performance).now();
                t = (e - this.oldTime) / 1e3,
                this.oldTime = e,
                this.elapsedTime += t
            }
            return t
        }
    }),
    Object.assign(Ji.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.phi = e,
            this.theta = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.phi = t.phi,
            this.theta = t.theta,
            this
        },
        makeSafe: function() {
            return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
            this
        },
        setFromVector3: function(t) {
            return this.radius = t.length(),
            0 === this.radius ? (this.theta = 0,
            this.phi = 0) : (this.theta = Math.atan2(t.x, t.z),
            this.phi = Math.acos(ks.clamp(t.y / this.radius, -1, 1))),
            this
        }
    }),
    Object.assign(Qi.prototype, {
        set: function(t, e, n) {
            return this.radius = t,
            this.theta = e,
            this.y = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.radius = t.radius,
            this.theta = t.theta,
            this.y = t.y,
            this
        },
        setFromVector3: function(t) {
            return this.radius = Math.sqrt(t.x * t.x + t.z * t.z),
            this.theta = Math.atan2(t.x, t.z),
            this.y = t.y,
            this
        }
    }),
    Object.assign(Ki.prototype, {
        set: function(t, e) {
            return this.min.copy(t),
            this.max.copy(e),
            this
        },
        setFromPoints: function(t) {
            this.makeEmpty();
            for (var e = 0, n = t.length; e < n; e++)
                this.expandByPoint(t[e]);
            return this
        },
        setFromCenterAndSize: function() {
            var t = new i;
            return function(e, n) {
                var r = t.copy(n).multiplyScalar(.5);
                return this.min.copy(e).sub(r),
                this.max.copy(e).add(r),
                this
            }
        }(),
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(t) {
            return this.min.copy(t.min),
            this.max.copy(t.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0,
            this.max.x = this.max.y = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        getCenter: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getCenter() target is now required"),
            t = new i),
            this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(t) {
            return void 0 === t && (console.warn("THREE.Box2: .getSize() target is now required"),
            t = new i),
            this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
        },
        expandByPoint: function(t) {
            return this.min.min(t),
            this.max.max(t),
            this
        },
        expandByVector: function(t) {
            return this.min.sub(t),
            this.max.add(t),
            this
        },
        expandByScalar: function(t) {
            return this.min.addScalar(-t),
            this.max.addScalar(t),
            this
        },
        containsPoint: function(t) {
            return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y)
        },
        containsBox: function(t) {
            return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y
        },
        getParameter: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .getParameter() target is now required"),
            e = new i),
            e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
        },
        intersectsBox: function(t) {
            return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y)
        },
        clampPoint: function(t, e) {
            return void 0 === e && (console.warn("THREE.Box2: .clampPoint() target is now required"),
            e = new i),
            e.copy(t).clamp(this.min, this.max)
        },
        distanceToPoint: function() {
            var t = new i;
            return function(e) {
                return t.copy(e).clamp(this.min, this.max).sub(e).length()
            }
        }(),
        intersect: function(t) {
            return this.min.max(t.min),
            this.max.min(t.max),
            this
        },
        union: function(t) {
            return this.min.min(t.min),
            this.max.max(t.max),
            this
        },
        translate: function(t) {
            return this.min.add(t),
            this.max.add(t),
            this
        },
        equals: function(t) {
            return t.min.equals(this.min) && t.max.equals(this.max)
        }
    }),
    to.prototype = Object.create(w.prototype),
    to.prototype.constructor = to,
    to.prototype.isImmediateRenderObject = !0,
    eo.prototype = Object.create(je.prototype),
    eo.prototype.constructor = eo,
    eo.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new c;
        return function() {
            var r = ["a", "b", "c"];
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            var i = this.object.matrixWorld
              , o = this.geometry.attributes.position
              , a = this.object.geometry;
            if (a && a.isGeometry)
                for (var s = a.vertices, c = a.faces, l = 0, u = 0, h = c.length; u < h; u++)
                    for (var d = c[u], p = 0, f = d.vertexNormals.length; p < f; p++) {
                        var m = s[d[r[p]]]
                          , v = d.vertexNormals[p];
                        t.copy(m).applyMatrix4(i),
                        e.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                        o.setXYZ(l, t.x, t.y, t.z),
                        l += 1,
                        o.setXYZ(l, e.x, e.y, e.z),
                        l += 1
                    }
            else if (a && a.isBufferGeometry)
                for (var g = a.attributes.position, y = a.attributes.normal, l = 0, p = 0, f = g.count; p < f; p++)
                    t.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(i),
                    e.set(y.getX(p), y.getY(p), y.getZ(p)),
                    e.applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                    o.setXYZ(l, t.x, t.y, t.z),
                    l += 1,
                    o.setXYZ(l, e.x, e.y, e.z),
                    l += 1;
            o.needsUpdate = !0
        }
    }(),
    no.prototype = Object.create(w.prototype),
    no.prototype.constructor = no,
    no.prototype.dispose = function() {
        this.cone.geometry.dispose(),
        this.cone.material.dispose()
    }
    ,
    no.prototype.update = function() {
        var t = new s
          , e = new s;
        return function() {
            this.light.updateMatrixWorld();
            var n = this.light.distance ? this.light.distance : 1e3
              , r = n * Math.tan(this.light.angle);
            this.cone.scale.set(r, r, n),
            t.setFromMatrixPosition(this.light.matrixWorld),
            e.setFromMatrixPosition(this.light.target.matrixWorld),
            this.cone.lookAt(e.sub(t)),
            void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
        }
    }(),
    io.prototype = Object.create(je.prototype),
    io.prototype.constructor = io,
    io.prototype.updateMatrixWorld = function() {
        var t = new s
          , e = new o
          , n = new o;
        return function(r) {
            var i = this.bones
              , o = this.geometry
              , a = o.getAttribute("position");
            n.getInverse(this.root.matrixWorld);
            for (var s = 0, c = 0; s < i.length; s++) {
                var l = i[s];
                l.parent && l.parent.isBone && (e.multiplyMatrices(n, l.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c, t.x, t.y, t.z),
                e.multiplyMatrices(n, l.parent.matrixWorld),
                t.setFromMatrixPosition(e),
                a.setXYZ(c + 1, t.x, t.y, t.z),
                c += 2)
            }
            o.getAttribute("position").needsUpdate = !0,
            w.prototype.updateMatrixWorld.call(this, r)
        }
    }(),
    oo.prototype = Object.create(Z.prototype),
    oo.prototype.constructor = oo,
    oo.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    oo.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
    }
    ,
    ao.prototype = Object.create(w.prototype),
    ao.prototype.constructor = ao,
    ao.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    ao.prototype.update = function() {
        var t = .5 * this.light.width
          , e = .5 * this.light.height
          , n = this.line.geometry.attributes.position
          , r = n.array;
        r[0] = t,
        r[1] = -e,
        r[2] = 0,
        r[3] = t,
        r[4] = e,
        r[5] = 0,
        r[6] = -t,
        r[7] = e,
        r[8] = 0,
        r[9] = -t,
        r[10] = -e,
        r[11] = 0,
        r[12] = t,
        r[13] = -e,
        r[14] = 0,
        n.needsUpdate = !0,
        void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color)
    }
    ,
    so.prototype = Object.create(w.prototype),
    so.prototype.constructor = so,
    so.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    so.prototype.update = function() {
        var t = new s
          , e = new y
          , n = new y;
        return function() {
            var r = this.children[0];
            if (void 0 !== this.color)
                this.material.color.set(this.color);
            else {
                var i = r.geometry.getAttribute("color");
                e.copy(this.light.color),
                n.copy(this.light.groundColor);
                for (var o = 0, a = i.count; o < a; o++) {
                    var s = o < a / 2 ? e : n;
                    i.setXYZ(o, s.r, s.g, s.b)
                }
                i.needsUpdate = !0
            }
            r.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())
        }
    }(),
    co.prototype = Object.create(je.prototype),
    co.prototype.constructor = co,
    lo.prototype = Object.create(je.prototype),
    lo.prototype.constructor = lo,
    uo.prototype = Object.create(je.prototype),
    uo.prototype.constructor = uo,
    uo.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new c;
        return function() {
            this.object.updateMatrixWorld(!0),
            n.getNormalMatrix(this.object.matrixWorld);
            for (var r = this.object.matrixWorld, i = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, s = o.faces, c = 0, l = 0, u = s.length; l < u; l++) {
                var h = s[l]
                  , d = h.normal;
                t.copy(a[h.a]).add(a[h.b]).add(a[h.c]).divideScalar(3).applyMatrix4(r),
                e.copy(d).applyMatrix3(n).normalize().multiplyScalar(this.size).add(t),
                i.setXYZ(c, t.x, t.y, t.z),
                c += 1,
                i.setXYZ(c, e.x, e.y, e.z),
                c += 1
            }
            i.needsUpdate = !0
        }
    }(),
    ho.prototype = Object.create(w.prototype),
    ho.prototype.constructor = ho,
    ho.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(),
        this.lightPlane.material.dispose(),
        this.targetLine.geometry.dispose(),
        this.targetLine.material.dispose()
    }
    ,
    ho.prototype.update = function() {
        var t = new s
          , e = new s
          , n = new s;
        return function() {
            t.setFromMatrixPosition(this.light.matrixWorld),
            e.setFromMatrixPosition(this.light.target.matrixWorld),
            n.subVectors(e, t),
            this.lightPlane.lookAt(n),
            void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
            this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
            this.targetLine.material.color.copy(this.light.color)),
            this.targetLine.lookAt(n),
            this.targetLine.scale.z = n.length()
        }
    }(),
    po.prototype = Object.create(je.prototype),
    po.prototype.constructor = po,
    po.prototype.update = function() {
        function t(t, o, a, s) {
            r.set(o, a, s).unproject(i);
            var c = n[t];
            if (void 0 !== c)
                for (var l = e.getAttribute("position"), u = 0, h = c.length; u < h; u++)
                    l.setXYZ(c[u], r.x, r.y, r.z)
        }
        var e, n, r = new s, i = new M;
        return function() {
            e = this.geometry,
            n = this.pointMap;
            i.projectionMatrix.copy(this.camera.projectionMatrix),
            t("c", 0, 0, -1),
            t("t", 0, 0, 1),
            t("n1", -1, -1, -1),
            t("n2", 1, -1, -1),
            t("n3", -1, 1, -1),
            t("n4", 1, 1, -1),
            t("f1", -1, -1, 1),
            t("f2", 1, -1, 1),
            t("f3", -1, 1, 1),
            t("f4", 1, 1, 1),
            t("u1", .7, 1.1, -1),
            t("u2", -.7, 1.1, -1),
            t("u3", 0, 2, -1),
            t("cf1", -1, 0, 1),
            t("cf2", 1, 0, 1),
            t("cf3", 0, -1, 1),
            t("cf4", 0, 1, 1),
            t("cn1", -1, 0, -1),
            t("cn2", 1, 0, -1),
            t("cn3", 0, -1, -1),
            t("cn4", 0, 1, -1),
            e.getAttribute("position").needsUpdate = !0
        }
    }(),
    fo.prototype = Object.create(je.prototype),
    fo.prototype.constructor = fo,
    fo.prototype.update = function() {
        var t = new f;
        return function(e) {
            if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
            void 0 !== this.object && t.setFromObject(this.object),
            !t.isEmpty()) {
                var n = t.min
                  , r = t.max
                  , i = this.geometry.attributes.position
                  , o = i.array;
                o[0] = r.x,
                o[1] = r.y,
                o[2] = r.z,
                o[3] = n.x,
                o[4] = r.y,
                o[5] = r.z,
                o[6] = n.x,
                o[7] = n.y,
                o[8] = r.z,
                o[9] = r.x,
                o[10] = n.y,
                o[11] = r.z,
                o[12] = r.x,
                o[13] = r.y,
                o[14] = n.z,
                o[15] = n.x,
                o[16] = r.y,
                o[17] = n.z,
                o[18] = n.x,
                o[19] = n.y,
                o[20] = n.z,
                o[21] = r.x,
                o[22] = n.y,
                o[23] = n.z,
                i.needsUpdate = !0,
                this.geometry.computeBoundingSphere()
            }
        }
    }(),
    fo.prototype.setFromObject = function(t) {
        return this.object = t,
        this.update(),
        this
    }
    ,
    mo.prototype = Object.create(je.prototype),
    mo.prototype.constructor = mo,
    mo.prototype.updateMatrixWorld = function(t) {
        var e = this.box;
        e.isEmpty() || (e.getCenter(this.position),
        e.getSize(this.scale),
        this.scale.multiplyScalar(.5),
        w.prototype.updateMatrixWorld.call(this, t))
    }
    ,
    vo.prototype = Object.create(ke.prototype),
    vo.prototype.constructor = vo,
    vo.prototype.updateMatrixWorld = function(t) {
        var e = -this.plane.constant;
        Math.abs(e) < 1e-8 && (e = 1e-8),
        this.scale.set(.5 * this.size, .5 * this.size, e),
        this.lookAt(this.plane.normal),
        w.prototype.updateMatrixWorld.call(this, t)
    }
    ;
    var Ec, Tc;
    go.prototype = Object.create(w.prototype),
    go.prototype.constructor = go,
    go.prototype.setDirection = function() {
        var t, e = new s;
        return function(n) {
            n.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : n.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (e.set(n.z, 0, -n.x).normalize(),
            t = Math.acos(n.y),
            this.quaternion.setFromAxisAngle(e, t))
        }
    }(),
    go.prototype.setLength = function(t, e, n) {
        void 0 === e && (e = .2 * t),
        void 0 === n && (n = .2 * e),
        this.line.scale.set(1, Math.max(0, t - e), 1),
        this.line.updateMatrix(),
        this.cone.scale.set(n, e, n),
        this.cone.position.y = t,
        this.cone.updateMatrix()
    }
    ,
    go.prototype.setColor = function(t) {
        this.line.material.color.copy(t),
        this.cone.material.color.copy(t)
    }
    ,
    yo.prototype = Object.create(je.prototype),
    yo.prototype.constructor = yo;
    Mr.create = function(t, e) {
        return console.log("THREE.Curve.create() has been deprecated"),
        t.prototype = Object.create(Mr.prototype),
        t.prototype.constructor = t,
        t.prototype.getPoint = e,
        t
    }
    ,
    Object.assign(Wr.prototype, {
        createPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getPoints(t);
            return this.createGeometry(e)
        },
        createSpacedPointsGeometry: function(t) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var e = this.getSpacedPoints(t);
            return this.createGeometry(e)
        },
        createGeometry: function(t) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var e = new S, n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                e.vertices.push(new s(i.x,i.y,i.z || 0))
            }
            return e
        }
    }),
    Object.assign(qr.prototype, {
        fromPoints: function(t) {
            console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
            this.setFromPoints(t)
        }
    }),
    _o.prototype = Object.create(Ar.prototype),
    xo.prototype = Object.create(Ar.prototype),
    bo.prototype = Object.create(Ar.prototype),
    Object.assign(bo.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }),
    co.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }
    ,
    io.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }
    ,
    Object.assign(_i.prototype, {
        extractUrlBase: function(t) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
            gc.extractUrlBase(t)
        }
    }),
    Object.assign(Ki.prototype, {
        center: function(t) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        size: function(t) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Object.assign(f.prototype, {
        center: function(t) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
            this.getCenter(t)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(t) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        },
        size: function(t) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(t)
        }
    }),
    Y.prototype.center = function(t) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
        this.getCenter(t)
    }
    ,
    Object.assign(ks, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
            Math.random()
        },
        nearestPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
            ks.floorPowerOfTwo(t)
        },
        nextPowerOfTwo: function(t) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
            ks.ceilPowerOfTwo(t)
        }
    }),
    Object.assign(c.prototype, {
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
            t.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }),
    Object.assign(o.prototype, {
        extractPosition: function(t) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
            this.copyPosition(t)
        },
        flattenToArrayOffset: function(t, e) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(t, e)
        },
        getPosition: function() {
            var t;
            return function() {
                return void 0 === t && (t = new s),
                console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                t.setFromMatrixColumn(this, 3)
            }
        }(),
        setRotationFromQuaternion: function(t) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
            this.makeRotationFromQuaternion(t)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector4: function(t) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(t) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
            t.transformDirection(this)
        },
        crossVector: function(t) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            t.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBuffer: function(t) {
            return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
            this.applyToBufferAttribute(t)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(t, e, n, r, i, o) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
            this.makePerspective(t, e, r, n, i, o)
        }
    }),
    v.prototype.isIntersectionLine = function(t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(t)
    }
    ,
    a.prototype.multiplyVector3 = function(t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        t.applyQuaternion(this)
    }
    ,
    Object.assign(X.prototype, {
        isIntersectionBox: function(t) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(t)
        },
        isIntersectionPlane: function(t) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
            this.intersectsPlane(t)
        },
        isIntersectionSphere: function(t) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(t)
        }
    }),
    Object.assign($.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
            this.getArea()
        },
        barycoordFromPoint: function(t, e) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            this.getBarycoord(t, e)
        },
        midpoint: function(t) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
            this.getMidpoint(t)
        },
        normal: function(t) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            this.getNormal(t)
        },
        plane: function(t) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
            this.getPlane(t)
        }
    }),
    Object.assign($, {
        barycoordFromPoint: function(t, e, n, r, i) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            $.getBarycoord(t, e, n, r, i)
        },
        normal: function(t, e, n, r) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            $.getNormal(t, e, n, r)
        }
    }),
    Object.assign(Xr.prototype, {
        extractAllPoints: function(t) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
            this.extractPoints(t)
        },
        extrude: function(t) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
            new Fn(this,t)
        },
        makeGeometry: function(t) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
            new Jn(this,t)
        }
    }),
    Object.assign(i.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(s.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
            this.setFromMatrixPosition(t)
        },
        getScaleFromMatrix: function(t) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
            this.setFromMatrixScale(t)
        },
        getColumnFromMatrix: function(t, e) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
            this.setFromMatrixColumn(e, t)
        },
        applyProjection: function(t) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
            this.applyMatrix4(t)
        },
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        distanceToManhattan: function(t) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(t)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(u.prototype, {
        fromAttribute: function(t, e, n) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(t, e, n)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(S.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        }
    }),
    Object.assign(w.prototype, {
        getChildByName: function(t) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
            this.getObjectByName(t)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(t, e) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
            this.translateOnAxis(e, t)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        }
    }),
    Object.defineProperties(w.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order
            },
            set: function(t) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order = t
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }),
    Object.defineProperties(Re.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                this.levels
            }
        }
    }),
    Object.defineProperty(Oe.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }),
    Object.defineProperty(Mr.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions
        },
        set: function(t) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions = t
        }
    }),
    we.prototype.setLens = function(t, e) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
        void 0 !== e && (this.filmGauge = e),
        this.setFocalLength(t)
    }
    ,
    Object.defineProperties(Yr.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                this.shadow.camera.fov = t
            }
        },
        shadowCameraLeft: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                this.shadow.camera.left = t
            }
        },
        shadowCameraRight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                this.shadow.camera.right = t
            }
        },
        shadowCameraTop: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                this.shadow.camera.top = t
            }
        },
        shadowCameraBottom: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                this.shadow.camera.bottom = t
            }
        },
        shadowCameraNear: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                this.shadow.camera.near = t
            }
        },
        shadowCameraFar: {
            set: function(t) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                this.shadow.camera.far = t
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(t) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                this.shadow.bias = t
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                this.shadow.mapSize.width = t
            }
        },
        shadowMapHeight: {
            set: function(t) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                this.shadow.mapSize.height = t
            }
        }
    }),
    Object.defineProperties(A.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                this.array.length
            }
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        }
    }),
    Object.assign(B.prototype, {
        addIndex: function(t) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
            this.setIndex(t)
        },
        addDrawCall: function(t, e, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
            console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
            this.addGroup(t, e)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
            this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        }
    }),
    Object.defineProperties(B.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                this.groups
            }
        }
    }),
    Object.assign(Hn.prototype, {
        getArrays: function() {
            console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
        },
        addShapeList: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
        },
        addShape: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
        }
    }),
    Object.defineProperties(Fi.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                this
            }
        }
    }),
    Object.defineProperties(V.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."),
                new y
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(t) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                this.flatShading = 1 === t
            }
        }
    }),
    Object.defineProperties(hr.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }),
    Object.defineProperties(q.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives
            },
            set: function(t) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives = t
            }
        }
    }),
    Object.assign(Te.prototype, {
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
            this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
            this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
            this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
            this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
            this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
            this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
            this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
            this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
            this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
            this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(t) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
            this.setScissorTest(t)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        }
    }),
    Object.defineProperties(Te.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                this.shadowMap.enabled = t
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                this.shadowMap.type = t
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(ve.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(h.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS = t
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT = t
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter = t
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter = t
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy = t
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset = t
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat = t
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format = t
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type = t
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps
            },
            set: function(t) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps = t
            }
        }
    }),
    Object.defineProperties(Ee.prototype, {
        standing: {
            set: function() {
                console.warn("THREE.WebVRManager: .standing has been removed.")
            }
        }
    }),
    Oi.prototype.load = function(t) {
        console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
        var e = this;
        return (new Ci).load(t, function(t) {
            e.setBuffer(t)
        }),
        this
    }
    ,
    Di.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
    ,
    Li.prototype.updateCubeMap = function(t, e) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
        this.update(t, e)
    }
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n) {
        function r() {
            n.addEventListener("mousemove", s, !1),
            n.addEventListener("mousedown", c, !1),
            n.addEventListener("mouseup", l, !1),
            n.addEventListener("mouseleave", l, !1),
            n.addEventListener("touchmove", u, !1),
            n.addEventListener("touchstart", h, !1),
            n.addEventListener("touchend", d, !1)
        }
        function o() {
            n.removeEventListener("mousemove", s, !1),
            n.removeEventListener("mousedown", c, !1),
            n.removeEventListener("mouseup", l, !1),
            n.removeEventListener("mouseleave", l, !1),
            n.removeEventListener("touchmove", u, !1),
            n.removeEventListener("touchstart", h, !1),
            n.removeEventListener("touchend", d, !1)
        }
        function a() {
            o()
        }
        function s(r) {
            r.preventDefault();
            var i = n.getBoundingClientRect();
            if (v.x = (r.clientX - i.left) / i.width * 2 - 1,
            v.y = -(r.clientY - i.top) / i.height * 2 + 1,
            m.setFromCamera(v, e),
            _ && b.enabled)
                return m.ray.intersectPlane(f, y) && _.position.copy(y.sub(g)),
                void b.dispatchEvent({
                    type: "drag",
                    object: _
                });
            m.setFromCamera(v, e);
            var o = m.intersectObjects(t);
            if (o.length > 0) {
                var a = o[0].object;
                f.setFromNormalAndCoplanarPoint(e.getWorldDirection(f.normal), a.position),
                x !== a && (b.dispatchEvent({
                    type: "hoveron",
                    object: a
                }),
                n.style.cursor = "pointer",
                x = a)
            } else
                null !== x && (b.dispatchEvent({
                    type: "hoveroff",
                    object: x
                }),
                n.style.cursor = "auto",
                x = null)
        }
        function c(r) {
            r.preventDefault(),
            m.setFromCamera(v, e);
            var i = m.intersectObjects(t);
            i.length > 0 && (_ = i[0].object,
            m.ray.intersectPlane(f, y) && g.copy(y).sub(_.position),
            n.style.cursor = "move",
            b.dispatchEvent({
                type: "dragstart",
                object: _
            }))
        }
        function l(t) {
            t.preventDefault(),
            _ && (b.dispatchEvent({
                type: "dragend",
                object: _
            }),
            _ = null),
            n.style.cursor = "auto"
        }
        function u(t) {
            t.preventDefault(),
            t = t.changedTouches[0];
            var r = n.getBoundingClientRect();
            if (v.x = (t.clientX - r.left) / r.width * 2 - 1,
            v.y = -(t.clientY - r.top) / r.height * 2 + 1,
            m.setFromCamera(v, e),
            _ && b.enabled)
                return m.ray.intersectPlane(f, y) && _.position.copy(y.sub(g)),
                void b.dispatchEvent({
                    type: "drag",
                    object: _
                })
        }
        function h(r) {
            r.preventDefault(),
            r = r.changedTouches[0];
            var i = n.getBoundingClientRect();
            v.x = (r.clientX - i.left) / i.width * 2 - 1,
            v.y = -(r.clientY - i.top) / i.height * 2 + 1,
            m.setFromCamera(v, e);
            var o = m.intersectObjects(t);
            o.length > 0 && (_ = o[0].object,
            f.setFromNormalAndCoplanarPoint(e.getWorldDirection(f.normal), _.position),
            m.ray.intersectPlane(f, y) && g.copy(y).sub(_.position),
            n.style.cursor = "move",
            b.dispatchEvent({
                type: "dragstart",
                object: _
            }))
        }
        function d(t) {
            t.preventDefault(),
            _ && (b.dispatchEvent({
                type: "dragend",
                object: _
            }),
            _ = null),
            n.style.cursor = "auto"
        }
        if (t.isCamera) {
            console.warn("THREE.DragControls: Constructor now expects ( objects, camera, domElement )");
            var p = t;
            t = e,
            e = p
        }
        var f = new i.Plane
          , m = new i.Raycaster
          , v = new i.Vector2
          , g = new i.Vector3
          , y = new i.Vector3
          , _ = null
          , x = null
          , b = this;
        r(),
        this.enabled = !0,
        this.activate = r,
        this.deactivate = o,
        this.dispose = a,
        this.setObjects = function() {
            console.error("THREE.DragControls: setObjects() has been removed.")
        }
        ,
        this.on = function(t, e) {
            console.warn("THREE.DragControls: on() has been deprecated. Use addEventListener() instead."),
            b.addEventListener(t, e)
        }
        ,
        this.off = function(t, e) {
            console.warn("THREE.DragControls: off() has been deprecated. Use removeEventListener() instead."),
            b.removeEventListener(t, e)
        }
        ,
        this.notify = function(t) {
            console.error("THREE.DragControls: notify() has been deprecated. Use dispatchEvent() instead."),
            b.dispatchEvent({
                type: t
            })
        }
    }
    var i = n(52);
    r.prototype = Object.create(i.EventDispatcher.prototype),
    r.prototype.constructor = r,
    e.a = r
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n) {
        if (e && "string" == typeof n) {
            var r = i.a
              , o = t.filter(function(t) {
                return !t[n]
            })
              , a = {};
            o.forEach(function(t) {
                a[e(t)] = null
            }),
            Object.keys(a).forEach(function(t, e) {
                a[t] = e
            }),
            o.forEach(function(t) {
                t[n] = r[a[e(t)] % r.length]
            })
        }
    }
    var i = n(1016)
      , o = n(494)
      , a = n.n(o)
      , s = n(52)
      , c = n(1056)
      , l = n(1104)
      , u = n.n(l)
      , h = n(1106)
      , d = n.n(h)
      , p = n(1119)
      , f = n.n(p)
      , m = n(158)
      , v = n.n(m)
      , g = n(159)
      , y = n.n(g)
      , _ = function(t) {
        return isNaN(t) ? parseInt(a()(t).toHex(), 16) : t
    }
      , x = function(t) {
        return isNaN(t) ? a()(t).getAlpha() : 1
    }
      , b = function(t, e) {
        if (!(t instanceof e))
            throw new TypeError("Cannot call a class as a function")
    }
      , w = function(t, e) {
        if ("function" != typeof e && null !== e)
            throw new TypeError("Super expression must either be null or a function, not " + typeof e);
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }),
        e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
    }
      , M = function(t, e) {
        if (!t)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !e || "object" != typeof e && "function" != typeof e ? t : e
    }
      , E = function(t) {
        if (Array.isArray(t)) {
            for (var e = 0, n = Array(t.length); e < t.length; e++)
                n[e] = t[e];
            return n
        }
        return Array.from(t)
    }
      , T = window.THREE ? window.THREE : {
        Mesh: s.Mesh,
        MeshLambertMaterial: s.MeshLambertMaterial,
        BufferGeometry: s.BufferGeometry,
        BufferAttribute: s.BufferAttribute,
        Matrix4: s.Matrix4,
        Vector3: s.Vector3,
        SphereGeometry: s.SphereGeometry,
        CylinderGeometry: s.CylinderGeometry,
        Line: s.Line,
        LineBasicMaterial: s.LineBasicMaterial
    }
      , S = {
        graph: u.a,
        forcelayout: d.a,
        forcelayout3d: f.a
    }
      , A = v()({
        props: {
            jsonUrl: {},
            graphData: {
                default: {
                    nodes: [],
                    links: []
                },
                onChange: function(t, e) {
                    e.engineRunning = !1
                }
            },
            numDimensions: {
                default: 3,
                onChange: function(t, e) {
                    function n(t, e) {
                        t.forEach(function(t) {
                            delete t[e],
                            delete t["v" + e]
                        })
                    }
                    var r = e.d3ForceLayout.force("charge");
                    r && r.strength(t > 2 ? -60 : -30),
                    t < 3 && n(e.graphData.nodes, "z"),
                    t < 2 && n(e.graphData.nodes, "y")
                }
            },
            nodeRelSize: {
                default: 4
            },
            nodeId: {
                default: "id"
            },
            nodeVal: {
                default: "val"
            },
            nodeResolution: {
                default: 8
            },
            nodeColor: {
                default: "color"
            },
            nodeAutoColorBy: {},
            nodeOpacity: {
                default: .75
            },
            nodeThreeObject: {},
            linkSource: {
                default: "source"
            },
            linkTarget: {
                default: "target"
            },
            linkColor: {
                default: "color"
            },
            linkAutoColorBy: {},
            linkOpacity: {
                default: .2
            },
            linkWidth: {},
            linkResolution: {
                default: 6
            },
            linkDirectionalParticles: {
                default: 0
            },
            linkDirectionalParticleSpeed: {
                default: .01,
                triggerUpdate: !1
            },
            linkDirectionalParticleWidth: {
                default: .5
            },
            linkDirectionalParticleColor: {},
            linkDirectionalParticleResolution: {
                default: 4
            },
            forceEngine: {
                default: "d3"
            },
            d3AlphaDecay: {
                default: .0228,
                triggerUpdate: !1,
                onChange: function(t, e) {
                    e.d3ForceLayout.alphaDecay(t)
                }
            },
            d3AlphaTarget: {
                default: 0,
                triggerUpdate: !1,
                onChange: function(t, e) {
                    e.d3ForceLayout.alphaTarget(t)
                }
            },
            d3VelocityDecay: {
                default: .4,
                triggerUpdate: !1,
                onChange: function(t, e) {
                    e.d3ForceLayout.velocityDecay(t)
                }
            },
            warmupTicks: {
                default: 0,
                triggerUpdate: !1
            },
            cooldownTicks: {
                default: 1 / 0,
                triggerUpdate: !1
            },
            cooldownTime: {
                default: 15e3,
                triggerUpdate: !1
            },
            onLoading: {
                default: function() {},
                triggerUpdate: !1
            },
            onFinishLoading: {
                default: function() {},
                triggerUpdate: !1
            }
        },
        aliases: {
            autoColorBy: "nodeAutoColorBy"
        },
        methods: {
            d3Force: function(t, e, n) {
                return void 0 === n ? t.d3ForceLayout.force(e) : (t.d3ForceLayout.force(e, n),
                this)
            },
            resetCountdown: function(t) {
                return t.cntTicks = 0,
                t.startTickTime = new Date,
                t.engineRunning = !0,
                this
            },
            tickFrame: function(t) {
                var e = "ngraph" !== t.forceEngine;
                return t.engineRunning && function() {
                    ++t.cntTicks > t.cooldownTicks || new Date - t.startTickTime > t.cooldownTime ? t.engineRunning = !1 : t.layout[e ? "tick" : "step"](),
                    t.graphData.nodes.forEach(function(n) {
                        var r = n.__threeObj;
                        if (r) {
                            var i = e ? n : t.layout.getNodePosition(n[t.nodeId]);
                            r.position.x = i.x,
                            r.position.y = i.y || 0,
                            r.position.z = i.z || 0
                        }
                    }),
                    t.graphData.links.forEach(function(n) {
                        var r = n.__lineObj;
                        if (r) {
                            var i = e ? n : t.layout.getLinkPosition(t.layout.graph.getLink(n.source, n.target).id)
                              , o = i[e ? "source" : "from"]
                              , a = i[e ? "target" : "to"];
                            if (o.hasOwnProperty("x") && a.hasOwnProperty("x"))
                                if ("Line" === r.type) {
                                    var s = r.geometry.attributes.position;
                                    s.array[0] = o.x,
                                    s.array[1] = o.y || 0,
                                    s.array[2] = o.z || 0,
                                    s.array[3] = a.x,
                                    s.array[4] = a.y || 0,
                                    s.array[5] = a.z || 0,
                                    s.needsUpdate = !0,
                                    r.geometry.computeBoundingSphere()
                                } else {
                                    var c = new T.Vector3(o.x,o.y || 0,o.z || 0)
                                      , l = new T.Vector3(a.x,a.y || 0,a.z || 0)
                                      , u = c.distanceTo(l);
                                    r.position.x = c.x,
                                    r.position.y = c.y,
                                    r.position.z = c.z,
                                    r.lookAt(l),
                                    r.scale.z = u
                                }
                        }
                    })
                }(),
                function() {
                    var n = y()(t.linkDirectionalParticleSpeed);
                    t.graphData.links.forEach(function(r) {
                        var i = r.__photonObjs;
                        if (i && i.length) {
                            var o = e ? r : t.layout.getLinkPosition(t.layout.graph.getLink(r.source, r.target).id)
                              , a = o[e ? "source" : "from"]
                              , s = o[e ? "target" : "to"];
                            if (a.hasOwnProperty("x") && s.hasOwnProperty("x")) {
                                var c = n(r);
                                i.forEach(function(t, e) {
                                    var n = t.__progressRatio = ((t.__progressRatio || e / i.length) + c) % 1;
                                    ["x", "y", "z"].forEach(function(e) {
                                        return t.position[e] = a[e] + (s[e] - a[e]) * n || 0
                                    })
                                })
                            }
                        }
                    })
                }(),
                this
            }
        },
        stateInit: function() {
            return {
                d3ForceLayout: Object(c.d)().force("link", Object(c.b)()).force("charge", Object(c.c)()).force("center", Object(c.a)()).stop(),
                engineRunning: !1
            }
        },
        init: function(t, e) {
            e.graphScene = t
        },
        update: function(t) {
            for (t.engineRunning = !1,
            t.onLoading(),
            (t.graphData.nodes.length || t.graphData.links.length) && console.info("force-graph loading", t.graphData.nodes.length + " nodes", t.graphData.links.length + " links"),
            t.fetchingJson || !t.jsonUrl || t.graphData.nodes.length || t.graphData.links.length || (t.fetchingJson = !0,
            fetch(t.jsonUrl).then(function(t) {
                return t.json()
            }).then(function(e) {
                t.fetchingJson = !1,
                t.graphData = e,
                t._rerender()
            })),
            null !== t.nodeAutoColorBy && r(t.graphData.nodes, y()(t.nodeAutoColorBy), t.nodeColor),
            null !== t.linkAutoColorBy && r(t.graphData.links, y()(t.linkAutoColorBy), t.linkColor),
            t.graphData.links.forEach(function(e) {
                e.source = e[t.linkSource],
                e.target = e[t.linkTarget]
            }); t.graphScene.children.length; )
                t.graphScene.remove(t.graphScene.children[0]);
            var e = y()(t.nodeThreeObject)
              , n = y()(t.nodeVal)
              , i = y()(t.nodeColor)
              , o = {}
              , a = {};
            t.graphData.nodes.forEach(function(r) {
                var s = e(r)
                  , c = void 0;
                if (s)
                    c = s,
                    t.nodeThreeObject === c && (c = c.clone());
                else {
                    var l = n(r) || 1;
                    o.hasOwnProperty(l) || (o[l] = new T.SphereGeometry(Math.cbrt(l) * t.nodeRelSize,t.nodeResolution,t.nodeResolution));
                    var u = i(r);
                    a.hasOwnProperty(u) || (a[u] = new T.MeshLambertMaterial({
                        color: _(u || "#ffffaa"),
                        transparent: !0,
                        opacity: t.nodeOpacity * x(u)
                    })),
                    c = new T.Mesh(o[l],a[u])
                }
                c.__graphObjType = "node",
                c.__data = r,
                t.graphScene.add(r.__threeObj = c)
            });
            var s = y()(t.linkColor)
              , c = y()(t.linkWidth)
              , l = y()(t.linkDirectionalParticles)
              , u = y()(t.linkDirectionalParticleWidth)
              , h = y()(t.linkDirectionalParticleColor)
              , d = {}
              , p = {}
              , f = {}
              , m = {};
            t.graphData.links.forEach(function(e) {
                var n = s(e)
                  , r = Math.ceil(10 * c(e)) / 10
                  , i = !!r
                  , o = void 0;
                if (i) {
                    if (!p.hasOwnProperty(r)) {
                        var a = r / 2;
                        o = new T.CylinderGeometry(a,a,1,t.linkResolution,1,!1),
                        o.applyMatrix((new T.Matrix4).makeTranslation(0, .5, 0)),
                        o.applyMatrix((new T.Matrix4).makeRotationX(Math.PI / 2)),
                        p[r] = o
                    }
                    o = p[r]
                } else
                    o = new T.BufferGeometry,
                    o.addAttribute("position", new T.BufferAttribute(new Float32Array(6),3));
                d.hasOwnProperty(n) || (d[n] = new T.MeshLambertMaterial({
                    color: _(n || "#f0f0f0"),
                    transparent: !0,
                    opacity: t.linkOpacity * x(n)
                }));
                var v = d[n]
                  , g = new T[i ? "Mesh" : "Line"](o,v);
                g.renderOrder = 10,
                g.__graphObjType = "link",
                g.__data = e,
                t.graphScene.add(e.__lineObj = g);
                var y = Math.round(Math.abs(l(e)))
                  , b = Math.ceil(10 * u(e)) / 10 / 2
                  , w = h(e) || n || "#f0f0f0";
                m.hasOwnProperty(b) || (m[b] = new T.SphereGeometry(b,t.linkDirectionalParticleResolution,t.linkDirectionalParticleResolution));
                var M = m[b];
                f.hasOwnProperty(n) || (f[n] = new T.MeshLambertMaterial({
                    color: _(w),
                    transparent: !0,
                    opacity: 3 * t.linkOpacity
                }));
                var S = f[n]
                  , A = [].concat(E(Array(y))).map(function() {
                    return new T.Mesh(M,S)
                });
                A.forEach(function(e) {
                    return t.graphScene.add(e)
                }),
                e.__photonObjs = A
            });
            var v = "ngraph" !== t.forceEngine
              , g = void 0;
            if (v) {
                (g = t.d3ForceLayout).stop().alpha(1).numDimensions(t.numDimensions).nodes(t.graphData.nodes);
                var b = t.d3ForceLayout.force("link");
                b && b.id(function(e) {
                    return e[t.nodeId]
                }).links(t.graphData.links)
            } else {
                var w = S.graph();
                t.graphData.nodes.forEach(function(e) {
                    w.addNode(e[t.nodeId])
                }),
                t.graphData.links.forEach(function(t) {
                    w.addLink(t.source, t.target)
                }),
                g = S["forcelayout" + (2 === t.numDimensions ? "" : "3d")](w),
                g.graph = w
            }
            for (var M = 0; M < t.warmupTicks; M++)
                g[v ? "tick" : "step"]();
            t.layout = g,
            this.resetCountdown(),
            t.onFinishLoading()
        }
    })
      , C = function(t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Object
          , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
          , r = function(e) {
            function r() {
                var e;
                b(this, r);
                for (var i = arguments.length, o = Array(i), a = 0; a < i; a++)
                    o[a] = arguments[a];
                var s = M(this, (e = r.__proto__ || Object.getPrototypeOf(r)).call.apply(e, [this].concat(o)));
                return s.__kapsuleInstance = t().apply(void 0, [].concat(E(n ? [s] : []), o)),
                s
            }
            return w(r, e),
            r
        }(e);
        return Object.keys(t()).forEach(function(t) {
            return r.prototype[t] = function() {
                var e, n = (e = this.__kapsuleInstance)[t].apply(e, arguments);
                return n === this.__kapsuleInstance ? this : n
            }
        }),
        r
    }(A, s.Group, !0);
    e.a = C
}
, function(t, e, n) {
    "use strict";
    var r = (n(1017),
    n(1018),
    n(1019),
    n(1020));
    n.d(e, "a", function() {
        return r.a
    });
    n(1021),
    n(1022),
    n(1023),
    n(1024),
    n(1025),
    n(1026),
    n(1027),
    n(1028),
    n(1029),
    n(1030),
    n(1031),
    n(1032),
    n(1033),
    n(1034),
    n(1035),
    n(1036),
    n(1037),
    n(1038),
    n(1039),
    n(1040),
    n(1041),
    n(1042),
    n(1043),
    n(1044),
    n(1045),
    n(1046),
    n(1047),
    n(1048),
    n(1049),
    n(1050),
    n(1051),
    n(1052),
    n(1053),
    n(1054),
    n(1055)
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    e.a = Object(r.a)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3")
}
, function(t, e, n) {
    "use strict";
    var r = n(1);
    Object(r.a)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f")
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(1)
      , i = n(6)
      , o = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(r.a);
    Object(i.a)(o)
}
, function(t, e, n) {
    "use strict";
    var r = n(41)
      , i = n(75);
    Object(i.a)(Object(r.b)(300, .5, 0), Object(r.b)(-240, .5, 1))
}
, function(t, e, n) {
    "use strict";
    var r = n(41)
      , i = n(75);
    Object(i.a)(Object(r.b)(-100, .75, .35), Object(r.b)(80, 1.5, .8)),
    Object(i.a)(Object(r.b)(260, .75, .35), Object(r.b)(80, 1.5, .8)),
    Object(r.b)()
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        var e = t.length;
        return function(n) {
            return t[Math.max(0, Math.min(e - 1, Math.floor(n * e)))]
        }
    }
    var i = n(1);
    r(Object(i.a)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),
    r(Object(i.a)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),
    r(Object(i.a)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),
    r(Object(i.a)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"))
}
, function(t, e, n) {
    "use strict";
    var r = n(1057);
    n.d(e, "a", function() {
        return r.a
    });
    var i = (n(1058),
    n(1098));
    n.d(e, "b", function() {
        return i.a
    });
    var o = n(1099);
    n.d(e, "c", function() {
        return o.a
    });
    var a = (n(1100),
    n(498));
    n.d(e, "d", function() {
        return a.a
    });
    n(1101),
    n(1102),
    n(1103)
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e, n) {
        function r() {
            var r, o, a = i.length, s = 0, c = 0, l = 0;
            for (r = 0; r < a; ++r)
                o = i[r],
                s += o.x || 0,
                c += o.y || 0,
                l += o.z || 0;
            for (s = s / a - t,
            c = c / a - e,
            l = l / a - n,
            r = 0; r < a; ++r)
                o = i[r],
                s && (o.x -= s),
                c && (o.y -= c),
                l && (o.z -= l)
        }
        var i;
        return null == t && (t = 0),
        null == e && (e = 0),
        null == n && (n = 0),
        r.initialize = function(t) {
            i = t
        }
        ,
        r.x = function(e) {
            return arguments.length ? (t = +e,
            r) : t
        }
        ,
        r.y = function(t) {
            return arguments.length ? (e = +t,
            r) : e
        }
        ,
        r.z = function(t) {
            return arguments.length ? (n = +t,
            r) : n
        }
        ,
        r
    }
}
, function(t, e, n) {
    "use strict";
    n(58),
    n(153),
    n(495),
    n(496),
    n(497)
}
, function(t, e, n) {
    "use strict";
    function r(t, e) {
        var n = new i(null == e ? v.b : e,NaN,NaN);
        return null == t ? n : n.addAll(t)
    }
    function i(t, e, n) {
        this._x = t,
        this._x0 = e,
        this._x1 = n,
        this._root = void 0
    }
    function o(t) {
        for (var e = {
            data: t.data
        }, n = e; t = t.next; )
            n = n.next = {
                data: t.data
            };
        return e
    }
    e.a = r;
    var a = n(1060)
      , s = n(1061)
      , c = n(1062)
      , l = n(1063)
      , u = n(1064)
      , h = n(1065)
      , d = n(1066)
      , p = n(1067)
      , f = n(1068)
      , m = n(1069)
      , v = n(1070)
      , g = r.prototype = i.prototype;
    g.copy = function() {
        var t, e, n = new i(this._x,this._x0,this._x1), r = this._root;
        if (!r)
            return n;
        if (!r.length)
            return n._root = o(r),
            n;
        for (t = [{
            source: r,
            target: n._root = new Array(2)
        }]; r = t.pop(); )
            for (var a = 0; a < 2; ++a)
                (e = r.source[a]) && (e.length ? t.push({
                    source: e,
                    target: r.target[a] = new Array(2)
                }) : r.target[a] = o(e));
        return n
    }
    ,
    g.add = a.b,
    g.addAll = a.a,
    g.cover = s.a,
    g.data = c.a,
    g.extent = l.a,
    g.find = u.a,
    g.remove = h.a,
    g.removeAll = h.b,
    g.root = d.a,
    g.size = p.a,
    g.visit = f.a,
    g.visitAfter = m.a,
    g.x = v.a
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n) {
        if (isNaN(e))
            return t;
        var r, i, o, a, s, c, l = t._root, u = {
            data: n
        }, h = t._x0, d = t._x1;
        if (!l)
            return t._root = u,
            t;
        for (; l.length; )
            if ((a = e >= (i = (h + d) / 2)) ? h = i : d = i,
            r = l,
            !(l = l[s = +a]))
                return r[s] = u,
                t;
        if (o = +t._x.call(null, l.data),
        e === o)
            return u.next = l,
            r ? r[s] = u : t._root = u,
            t;
        do {
            r = r ? r[s] = new Array(2) : t._root = new Array(2),
            (a = e >= (i = (h + d) / 2)) ? h = i : d = i
        } while ((s = +a) == (c = +(o >= i)));return r[c] = l,
        r[s] = u,
        t
    }
    function i(t) {
        var e, n, i = t.length, o = new Array(i), a = 1 / 0, s = -1 / 0;
        for (e = 0; e < i; ++e)
            isNaN(n = +this._x.call(null, t[e])) || (o[e] = n,
            n < a && (a = n),
            n > s && (s = n));
        for (s < a && (a = this._x0,
        s = this._x1),
        this.cover(a).cover(s),
        e = 0; e < i; ++e)
            r(this, o[e], t[e]);
        return this
    }
    e.a = i,
    e.b = function(t) {
        var e = +this._x.call(null, t);
        return r(this.cover(e), e, t)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        if (isNaN(t = +t))
            return this;
        var e = this._x0
          , n = this._x1;
        if (isNaN(e))
            n = (e = Math.floor(t)) + 1;
        else {
            if (!(e > t || t > n))
                return this;
            var r, i, o = n - e, a = this._root;
            switch (i = +(t < (e + n) / 2)) {
            case 0:
                do {
                    r = new Array(2),
                    r[i] = a,
                    a = r
                } while (o *= 2,
                n = e + o,
                t > n);break;
            case 1:
                do {
                    r = new Array(2),
                    r[i] = a,
                    a = r
                } while (o *= 2,
                (e = n - o) > t)
            }
            this._root && this._root.length && (this._root = a)
        }
        return this._x0 = e,
        this._x1 = n,
        this
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = [];
        return this.visit(function(e) {
            if (!e.length)
                do {
                    t.push(e.data)
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        return arguments.length ? this.cover(+t[0][0]).cover(+t[1][0]) : isNaN(this._x0) ? void 0 : [[this._x0], [this._x1]]
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(154);
    e.a = function(t, e) {
        var n, i, o, a, s, c = this._x0, l = this._x1, u = [], h = this._root;
        for (h && u.push(new r.a(h,c,l)),
        null == e ? e = 1 / 0 : (c = t - e,
        l = t + e); a = u.pop(); )
            if (!(!(h = a.node) || (i = a.x0) > l || (o = a.x1) < c))
                if (h.length) {
                    var d = (i + o) / 2;
                    u.push(new r.a(h[1],d,o), new r.a(h[0],i,d)),
                    (s = +(t >= d)) && (a = u[u.length - 1],
                    u[u.length - 1] = u[u.length - 1 - s],
                    u[u.length - 1 - s] = a)
                } else {
                    var p = Math.abs(t - +this._x.call(null, h.data));
                    p < e && (e = p,
                    c = t - p,
                    l = t + p,
                    n = h.data)
                }
        return n
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        for (var e = 0, n = t.length; e < n; ++e)
            this.remove(t[e]);
        return this
    }
    e.b = r,
    e.a = function(t) {
        if (isNaN(o = +this._x.call(null, t)))
            return this;
        var e, n, r, i, o, a, s, c, l, u = this._root, h = this._x0, d = this._x1;
        if (!u)
            return this;
        if (u.length)
            for (; ; ) {
                if ((s = o >= (a = (h + d) / 2)) ? h = a : d = a,
                e = u,
                !(u = u[c = +s]))
                    return this;
                if (!u.length)
                    break;
                e[c + 1 & 1] && (n = e,
                l = c)
            }
        for (; u.data !== t; )
            if (r = u,
            !(u = u.next))
                return this;
        return (i = u.next) && delete u.next,
        r ? (i ? r.next = i : delete r.next,
        this) : e ? (i ? e[c] = i : delete e[c],
        (u = e[0] || e[1]) && u === (e[1] || e[0]) && !u.length && (n ? n[l] = u : this._root = u),
        this) : (this._root = i,
        this)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        return this._root
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = 0;
        return this.visit(function(e) {
            if (!e.length)
                do {
                    ++t
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(154);
    e.a = function(t) {
        var e, n, i, o, a = [], s = this._root;
        for (s && a.push(new r.a(s,this._x0,this._x1)); e = a.pop(); )
            if (!t(s = e.node, i = e.x0, o = e.x1) && s.length) {
                var c = (i + o) / 2;
                (n = s[1]) && a.push(new r.a(n,c,o)),
                (n = s[0]) && a.push(new r.a(n,i,c))
            }
        return this
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(154);
    e.a = function(t) {
        var e, n = [], i = [];
        for (this._root && n.push(new r.a(this._root,this._x0,this._x1)); e = n.pop(); ) {
            var o = e.node;
            if (o.length) {
                var a, s = e.x0, c = e.x1, l = (s + c) / 2;
                (a = o[0]) && n.push(new r.a(a,s,l)),
                (a = o[1]) && n.push(new r.a(a,l,c))
            }
            i.push(e)
        }
        for (; e = i.pop(); )
            t(e.node, e.x0, e.x1);
        return this
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[0]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._x = t,
        this) : this._x
    }
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n) {
        var r = new i(null == e ? v.b : e,null == n ? g.b : n,NaN,NaN,NaN,NaN);
        return null == t ? r : r.addAll(t)
    }
    function i(t, e, n, r, i, o) {
        this._x = t,
        this._y = e,
        this._x0 = n,
        this._y0 = r,
        this._x1 = i,
        this._y1 = o,
        this._root = void 0
    }
    function o(t) {
        for (var e = {
            data: t.data
        }, n = e; t = t.next; )
            n = n.next = {
                data: t.data
            };
        return e
    }
    e.a = r;
    var a = n(1072)
      , s = n(1073)
      , c = n(1074)
      , l = n(1075)
      , u = n(1076)
      , h = n(1077)
      , d = n(1078)
      , p = n(1079)
      , f = n(1080)
      , m = n(1081)
      , v = n(1082)
      , g = n(1083)
      , y = r.prototype = i.prototype;
    y.copy = function() {
        var t, e, n = new i(this._x,this._y,this._x0,this._y0,this._x1,this._y1), r = this._root;
        if (!r)
            return n;
        if (!r.length)
            return n._root = o(r),
            n;
        for (t = [{
            source: r,
            target: n._root = new Array(4)
        }]; r = t.pop(); )
            for (var a = 0; a < 4; ++a)
                (e = r.source[a]) && (e.length ? t.push({
                    source: e,
                    target: r.target[a] = new Array(4)
                }) : r.target[a] = o(e));
        return n
    }
    ,
    y.add = a.b,
    y.addAll = a.a,
    y.cover = s.a,
    y.data = c.a,
    y.extent = l.a,
    y.find = u.a,
    y.remove = h.a,
    y.removeAll = h.b,
    y.root = d.a,
    y.size = p.a,
    y.visit = f.a,
    y.visitAfter = m.a,
    y.x = v.a,
    y.y = g.a
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n, r) {
        if (isNaN(e) || isNaN(n))
            return t;
        var i, o, a, s, c, l, u, h, d, p = t._root, f = {
            data: r
        }, m = t._x0, v = t._y0, g = t._x1, y = t._y1;
        if (!p)
            return t._root = f,
            t;
        for (; p.length; )
            if ((l = e >= (o = (m + g) / 2)) ? m = o : g = o,
            (u = n >= (a = (v + y) / 2)) ? v = a : y = a,
            i = p,
            !(p = p[h = u << 1 | l]))
                return i[h] = f,
                t;
        if (s = +t._x.call(null, p.data),
        c = +t._y.call(null, p.data),
        e === s && n === c)
            return f.next = p,
            i ? i[h] = f : t._root = f,
            t;
        do {
            i = i ? i[h] = new Array(4) : t._root = new Array(4),
            (l = e >= (o = (m + g) / 2)) ? m = o : g = o,
            (u = n >= (a = (v + y) / 2)) ? v = a : y = a
        } while ((h = u << 1 | l) == (d = (c >= a) << 1 | s >= o));return i[d] = p,
        i[h] = f,
        t
    }
    function i(t) {
        var e, n, i, o, a = t.length, s = new Array(a), c = new Array(a), l = 1 / 0, u = 1 / 0, h = -1 / 0, d = -1 / 0;
        for (n = 0; n < a; ++n)
            isNaN(i = +this._x.call(null, e = t[n])) || isNaN(o = +this._y.call(null, e)) || (s[n] = i,
            c[n] = o,
            i < l && (l = i),
            i > h && (h = i),
            o < u && (u = o),
            o > d && (d = o));
        for (h < l && (l = this._x0,
        h = this._x1),
        d < u && (u = this._y0,
        d = this._y1),
        this.cover(l, u).cover(h, d),
        n = 0; n < a; ++n)
            r(this, s[n], c[n], t[n]);
        return this
    }
    e.a = i,
    e.b = function(t) {
        var e = +this._x.call(null, t)
          , n = +this._y.call(null, t);
        return r(this.cover(e, n), e, n, t)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e) {
        if (isNaN(t = +t) || isNaN(e = +e))
            return this;
        var n = this._x0
          , r = this._y0
          , i = this._x1
          , o = this._y1;
        if (isNaN(n))
            i = (n = Math.floor(t)) + 1,
            o = (r = Math.floor(e)) + 1;
        else {
            if (!(n > t || t > i || r > e || e > o))
                return this;
            var a, s, c = i - n, l = this._root;
            switch (s = (e < (r + o) / 2) << 1 | t < (n + i) / 2) {
            case 0:
                do {
                    a = new Array(4),
                    a[s] = l,
                    l = a
                } while (c *= 2,
                i = n + c,
                o = r + c,
                t > i || e > o);break;
            case 1:
                do {
                    a = new Array(4),
                    a[s] = l,
                    l = a
                } while (c *= 2,
                n = i - c,
                o = r + c,
                n > t || e > o);break;
            case 2:
                do {
                    a = new Array(4),
                    a[s] = l,
                    l = a
                } while (c *= 2,
                i = n + c,
                r = o - c,
                t > i || r > e);break;
            case 3:
                do {
                    a = new Array(4),
                    a[s] = l,
                    l = a
                } while (c *= 2,
                n = i - c,
                r = o - c,
                n > t || r > e)
            }
            this._root && this._root.length && (this._root = l)
        }
        return this._x0 = n,
        this._y0 = r,
        this._x1 = i,
        this._y1 = o,
        this
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = [];
        return this.visit(function(e) {
            if (!e.length)
                do {
                    t.push(e.data)
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        return arguments.length ? this.cover(+t[0][0], +t[0][1]).cover(+t[1][0], +t[1][1]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0], [this._x1, this._y1]]
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(155);
    e.a = function(t, e, n) {
        var i, o, a, s, c, l, u, h = this._x0, d = this._y0, p = this._x1, f = this._y1, m = [], v = this._root;
        for (v && m.push(new r.a(v,h,d,p,f)),
        null == n ? n = 1 / 0 : (h = t - n,
        d = e - n,
        p = t + n,
        f = e + n,
        n *= n); l = m.pop(); )
            if (!(!(v = l.node) || (o = l.x0) > p || (a = l.y0) > f || (s = l.x1) < h || (c = l.y1) < d))
                if (v.length) {
                    var g = (o + s) / 2
                      , y = (a + c) / 2;
                    m.push(new r.a(v[3],g,y,s,c), new r.a(v[2],o,y,g,c), new r.a(v[1],g,a,s,y), new r.a(v[0],o,a,g,y)),
                    (u = (e >= y) << 1 | t >= g) && (l = m[m.length - 1],
                    m[m.length - 1] = m[m.length - 1 - u],
                    m[m.length - 1 - u] = l)
                } else {
                    var _ = t - +this._x.call(null, v.data)
                      , x = e - +this._y.call(null, v.data)
                      , b = _ * _ + x * x;
                    if (b < n) {
                        var w = Math.sqrt(n = b);
                        h = t - w,
                        d = e - w,
                        p = t + w,
                        f = e + w,
                        i = v.data
                    }
                }
        return i
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        for (var e = 0, n = t.length; e < n; ++e)
            this.remove(t[e]);
        return this
    }
    e.b = r,
    e.a = function(t) {
        if (isNaN(o = +this._x.call(null, t)) || isNaN(a = +this._y.call(null, t)))
            return this;
        var e, n, r, i, o, a, s, c, l, u, h, d, p = this._root, f = this._x0, m = this._y0, v = this._x1, g = this._y1;
        if (!p)
            return this;
        if (p.length)
            for (; ; ) {
                if ((l = o >= (s = (f + v) / 2)) ? f = s : v = s,
                (u = a >= (c = (m + g) / 2)) ? m = c : g = c,
                e = p,
                !(p = p[h = u << 1 | l]))
                    return this;
                if (!p.length)
                    break;
                (e[h + 1 & 3] || e[h + 2 & 3] || e[h + 3 & 3]) && (n = e,
                d = h)
            }
        for (; p.data !== t; )
            if (r = p,
            !(p = p.next))
                return this;
        return (i = p.next) && delete p.next,
        r ? (i ? r.next = i : delete r.next,
        this) : e ? (i ? e[h] = i : delete e[h],
        (p = e[0] || e[1] || e[2] || e[3]) && p === (e[3] || e[2] || e[1] || e[0]) && !p.length && (n ? n[d] = p : this._root = p),
        this) : (this._root = i,
        this)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        return this._root
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = 0;
        return this.visit(function(e) {
            if (!e.length)
                do {
                    ++t
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(155);
    e.a = function(t) {
        var e, n, i, o, a, s, c = [], l = this._root;
        for (l && c.push(new r.a(l,this._x0,this._y0,this._x1,this._y1)); e = c.pop(); )
            if (!t(l = e.node, i = e.x0, o = e.y0, a = e.x1, s = e.y1) && l.length) {
                var u = (i + a) / 2
                  , h = (o + s) / 2;
                (n = l[3]) && c.push(new r.a(n,u,h,a,s)),
                (n = l[2]) && c.push(new r.a(n,i,h,u,s)),
                (n = l[1]) && c.push(new r.a(n,u,o,a,h)),
                (n = l[0]) && c.push(new r.a(n,i,o,u,h))
            }
        return this
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(155);
    e.a = function(t) {
        var e, n = [], i = [];
        for (this._root && n.push(new r.a(this._root,this._x0,this._y0,this._x1,this._y1)); e = n.pop(); ) {
            var o = e.node;
            if (o.length) {
                var a, s = e.x0, c = e.y0, l = e.x1, u = e.y1, h = (s + l) / 2, d = (c + u) / 2;
                (a = o[0]) && n.push(new r.a(a,s,c,h,d)),
                (a = o[1]) && n.push(new r.a(a,h,c,l,d)),
                (a = o[2]) && n.push(new r.a(a,s,d,h,u)),
                (a = o[3]) && n.push(new r.a(a,h,d,l,u))
            }
            i.push(e)
        }
        for (; e = i.pop(); )
            t(e.node, e.x0, e.y0, e.x1, e.y1);
        return this
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[0]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._x = t,
        this) : this._x
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[1]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._y = t,
        this) : this._y
    }
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n, r) {
        var o = new i(null == e ? v.b : e,null == n ? g.b : n,null == r ? y.b : r,NaN,NaN,NaN,NaN,NaN,NaN);
        return null == t ? o : o.addAll(t)
    }
    function i(t, e, n, r, i, o, a, s, c) {
        this._x = t,
        this._y = e,
        this._z = n,
        this._x0 = r,
        this._y0 = i,
        this._z0 = o,
        this._x1 = a,
        this._y1 = s,
        this._z1 = c,
        this._root = void 0
    }
    function o(t) {
        for (var e = {
            data: t.data
        }, n = e; t = t.next; )
            n = n.next = {
                data: t.data
            };
        return e
    }
    e.a = r;
    var a = n(1085)
      , s = n(1086)
      , c = n(1087)
      , l = n(1088)
      , u = n(1089)
      , h = n(1090)
      , d = n(1091)
      , p = n(1092)
      , f = n(1093)
      , m = n(1094)
      , v = n(1095)
      , g = n(1096)
      , y = n(1097)
      , _ = r.prototype = i.prototype;
    _.copy = function() {
        var t, e, n = new i(this._x,this._y,this._z,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1), r = this._root;
        if (!r)
            return n;
        if (!r.length)
            return n._root = o(r),
            n;
        for (t = [{
            source: r,
            target: n._root = new Array(8)
        }]; r = t.pop(); )
            for (var a = 0; a < 8; ++a)
                (e = r.source[a]) && (e.length ? t.push({
                    source: e,
                    target: r.target[a] = new Array(8)
                }) : r.target[a] = o(e));
        return n
    }
    ,
    _.add = a.b,
    _.addAll = a.a,
    _.cover = s.a,
    _.data = c.a,
    _.extent = l.a,
    _.find = u.a,
    _.remove = h.a,
    _.removeAll = h.b,
    _.root = d.a,
    _.size = p.a,
    _.visit = f.a,
    _.visitAfter = m.a,
    _.x = v.a,
    _.y = g.a,
    _.z = y.a
}
, function(t, e, n) {
    "use strict";
    function r(t, e, n, r, i) {
        if (isNaN(e) || isNaN(n) || isNaN(r))
            return t;
        var o, a, s, c, l, u, h, d, p, f, m, v, g = t._root, y = {
            data: i
        }, _ = t._x0, x = t._y0, b = t._z0, w = t._x1, M = t._y1, E = t._z1;
        if (!g)
            return t._root = y,
            t;
        for (; g.length; )
            if ((d = e >= (a = (_ + w) / 2)) ? _ = a : w = a,
            (p = n >= (s = (x + M) / 2)) ? x = s : M = s,
            (f = r >= (c = (b + E) / 2)) ? b = c : E = c,
            o = g,
            !(g = g[m = f << 2 | p << 1 | d]))
                return o[m] = y,
                t;
        if (l = +t._x.call(null, g.data),
        u = +t._y.call(null, g.data),
        h = +t._z.call(null, g.data),
        e === l && n === u && r === h)
            return y.next = g,
            o ? o[m] = y : t._root = y,
            t;
        do {
            o = o ? o[m] = new Array(8) : t._root = new Array(8),
            (d = e >= (a = (_ + w) / 2)) ? _ = a : w = a,
            (p = n >= (s = (x + M) / 2)) ? x = s : M = s,
            (f = r >= (c = (b + E) / 2)) ? b = c : E = c
        } while ((m = f << 2 | p << 1 | d) == (v = (h >= c) << 2 | (u >= s) << 1 | l >= a));return o[v] = g,
        o[m] = y,
        t
    }
    function i(t) {
        var e, n, i, o, a, s = t.length, c = new Array(s), l = new Array(s), u = new Array(s), h = 1 / 0, d = 1 / 0, p = 1 / 0, f = -1 / 0, m = -1 / 0, v = -1 / 0;
        for (n = 0; n < s; ++n)
            isNaN(i = +this._x.call(null, e = t[n])) || isNaN(o = +this._y.call(null, e)) || isNaN(a = +this._z.call(null, e)) || (c[n] = i,
            l[n] = o,
            u[n] = a,
            i < h && (h = i),
            i > f && (f = i),
            o < d && (d = o),
            o > m && (m = o),
            a < p && (p = a),
            a > v && (v = a));
        for (f < h && (h = this._x0,
        f = this._x1),
        m < d && (d = this._y0,
        m = this._y1),
        v < p && (p = this._z0,
        v = this._z1),
        this.cover(h, d, p).cover(f, m, v),
        n = 0; n < s; ++n)
            r(this, c[n], l[n], u[n], t[n]);
        return this
    }
    e.a = i,
    e.b = function(t) {
        var e = +this._x.call(null, t)
          , n = +this._y.call(null, t)
          , i = +this._z.call(null, t);
        return r(this.cover(e, n, i), e, n, i, t)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t, e, n) {
        if (isNaN(t = +t) || isNaN(e = +e) || isNaN(n = +n))
            return this;
        var r = this._x0
          , i = this._y0
          , o = this._z0
          , a = this._x1
          , s = this._y1
          , c = this._z1;
        if (isNaN(r))
            a = (r = Math.floor(t)) + 1,
            s = (i = Math.floor(e)) + 1,
            c = (o = Math.floor(n)) + 1;
        else {
            if (!(r > t || t > a || i > e || e > s || o > n || n > c))
                return this;
            var l, u, h = a - r, d = this._root;
            switch (u = (n < (o + c) / 2) << 2 | (e < (i + s) / 2) << 1 | t < (r + a) / 2) {
            case 0:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                a = r + h,
                s = i + h,
                c = o + h,
                t > a || e > s || n > c);break;
            case 1:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                r = a - h,
                s = i + h,
                c = o + h,
                r > t || e > s || n > c);break;
            case 2:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                a = r + h,
                i = s - h,
                c = o + h,
                t > a || i > e || n > c);break;
            case 3:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                r = a - h,
                i = s - h,
                c = o + h,
                r > t || i > e || n > c);break;
            case 4:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                a = r + h,
                s = i + h,
                o = c - h,
                t > a || e > s || o > n);break;
            case 5:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                r = a - h,
                s = i + h,
                o = c - h,
                r > t || e > s || o > n);break;
            case 6:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                a = r + h,
                i = s - h,
                o = c - h,
                t > a || i > e || o > n);break;
            case 7:
                do {
                    l = new Array(8),
                    l[u] = d,
                    d = l
                } while (h *= 2,
                r = a - h,
                i = s - h,
                o = c - h,
                r > t || i > e || o > n)
            }
            this._root && this._root.length && (this._root = d)
        }
        return this._x0 = r,
        this._y0 = i,
        this._z0 = o,
        this._x1 = a,
        this._y1 = s,
        this._z1 = c,
        this
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = [];
        return this.visit(function(e) {
            if (!e.length)
                do {
                    t.push(e.data)
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function(t) {
        return arguments.length ? this.cover(+t[0][0], +t[0][1], +t[0][2]).cover(+t[1][0], +t[1][1], +t[1][2]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0, this._z0], [this._x1, this._y1, this._z1]]
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(156);
    e.a = function(t, e, n, i) {
        var o, a, s, c, l, u, h, d, p, f = this._x0, m = this._y0, v = this._z0, g = this._x1, y = this._y1, _ = this._z1, x = [], b = this._root;
        for (b && x.push(new r.a(b,f,m,v,g,y,_)),
        null == i ? i = 1 / 0 : (f = t - i,
        m = e - i,
        v = n - i,
        g = t + i,
        y = e + i,
        _ = n + i,
        i *= i); d = x.pop(); )
            if (!(!(b = d.node) || (a = d.x0) > g || (s = d.y0) > y || (c = d.z0) > _ || (l = d.x1) < f || (u = d.y1) < m || (h = d.z1) < v))
                if (b.length) {
                    var w = (a + l) / 2
                      , M = (s + u) / 2
                      , E = (c + h) / 2;
                    x.push(new r.a(b[7],w,M,E,l,u,h), new r.a(b[6],a,M,E,w,u,h), new r.a(b[5],w,s,E,l,M,h), new r.a(b[4],a,s,E,w,M,h), new r.a(b[3],w,M,c,l,u,E), new r.a(b[2],a,M,c,w,u,E), new r.a(b[1],w,s,c,l,M,E), new r.a(b[0],a,s,c,w,M,E)),
                    (p = (n >= E) << 2 | (e >= M) << 1 | t >= w) && (d = x[x.length - 1],
                    x[x.length - 1] = x[x.length - 1 - p],
                    x[x.length - 1 - p] = d)
                } else {
                    var T = t - +this._x.call(null, b.data)
                      , S = e - +this._y.call(null, b.data)
                      , A = n - +this._z.call(null, b.data)
                      , C = T * T + S * S + A * A;
                    if (C < i) {
                        var P = Math.sqrt(i = C);
                        f = t - P,
                        m = e - P,
                        v = n - P,
                        g = t + P,
                        y = e + P,
                        _ = n + P,
                        o = b.data
                    }
                }
        return o
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        for (var e = 0, n = t.length; e < n; ++e)
            this.remove(t[e]);
        return this
    }
    e.b = r,
    e.a = function(t) {
        if (isNaN(o = +this._x.call(null, t)) || isNaN(a = +this._y.call(null, t)) || isNaN(s = +this._z.call(null, t)))
            return this;
        var e, n, r, i, o, a, s, c, l, u, h, d, p, f, m, v = this._root, g = this._x0, y = this._y0, _ = this._z0, x = this._x1, b = this._y1, w = this._z1;
        if (!v)
            return this;
        if (v.length)
            for (; ; ) {
                if ((h = o >= (c = (g + x) / 2)) ? g = c : x = c,
                (d = a >= (l = (y + b) / 2)) ? y = l : b = l,
                (p = s >= (u = (_ + w) / 2)) ? _ = u : w = u,
                e = v,
                !(v = v[f = p << 2 | d << 1 | h]))
                    return this;
                if (!v.length)
                    break;
                (e[f + 1 & 7] || e[f + 2 & 7] || e[f + 3 & 7] || e[f + 4 & 7] || e[f + 5 & 7] || e[f + 6 & 7] || e[f + 7 & 7]) && (n = e,
                m = f)
            }
        for (; v.data !== t; )
            if (r = v,
            !(v = v.next))
                return this;
        return (i = v.next) && delete v.next,
        r ? (i ? r.next = i : delete r.next,
        this) : e ? (i ? e[f] = i : delete e[f],
        (v = e[0] || e[1] || e[2] || e[3] || e[4] || e[5] || e[6] || e[7]) && v === (e[7] || e[6] || e[5] || e[4] || e[3] || e[2] || e[1] || e[0]) && !v.length && (n ? n[m] = v : this._root = v),
        this) : (this._root = i,
        this)
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        return this._root
    }
}
, function(t, e, n) {
    "use strict";
    e.a = function() {
        var t = 0;
        return this.visit(function(e) {
            if (!e.length)
                do {
                    ++t
                } while (e = e.next)
        }),
        t
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(156);
    e.a = function(t) {
        var e, n, i, o, a, s, c, l, u = [], h = this._root;
        for (h && u.push(new r.a(h,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1)); e = u.pop(); )
            if (!t(h = e.node, i = e.x0, o = e.y0, a = e.z0, s = e.x1, c = e.y1, l = e.z1) && h.length) {
                var d = (i + s) / 2
                  , p = (o + c) / 2
                  , f = (a + l) / 2;
                (n = h[7]) && u.push(new r.a(n,d,p,f,s,c,l)),
                (n = h[6]) && u.push(new r.a(n,i,p,f,d,c,l)),
                (n = h[5]) && u.push(new r.a(n,d,o,f,s,p,l)),
                (n = h[4]) && u.push(new r.a(n,i,o,f,d,p,l)),
                (n = h[3]) && u.push(new r.a(n,d,p,a,s,c,f)),
                (n = h[2]) && u.push(new r.a(n,i,p,a,d,c,f)),
                (n = h[1]) && u.push(new r.a(n,d,o,a,s,p,f)),
                (n = h[0]) && u.push(new r.a(n,i,o,a,d,p,f))
            }
        return this
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(156);
    e.a = function(t) {
        var e, n = [], i = [];
        for (this._root && n.push(new r.a(this._root,this._x0,this._y0,this._z0,this._x1,this._y1,this._z1)); e = n.pop(); ) {
            var o = e.node;
            if (o.length) {
                var a, s = e.x0, c = e.y0, l = e.z0, u = e.x1, h = e.y1, d = e.z1, p = (s + u) / 2, f = (c + h) / 2, m = (l + d) / 2;
                (a = o[0]) && n.push(new r.a(a,s,c,l,p,f,m)),
                (a = o[1]) && n.push(new r.a(a,p,c,l,u,f,m)),
                (a = o[2]) && n.push(new r.a(a,s,f,l,p,h,m)),
                (a = o[3]) && n.push(new r.a(a,p,f,l,u,h,m)),
                (a = o[4]) && n.push(new r.a(a,s,c,m,p,f,d)),
                (a = o[5]) && n.push(new r.a(a,p,c,m,u,f,d)),
                (a = o[6]) && n.push(new r.a(a,s,f,m,p,h,d)),
                (a = o[7]) && n.push(new r.a(a,p,f,m,u,h,d))
            }
            i.push(e)
        }
        for (; e = i.pop(); )
            t(e.node, e.x0, e.y0, e.z0, e.x1, e.y1, e.z1);
        return this
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[0]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._x = t,
        this) : this._x
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[1]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._y = t,
        this) : this._y
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t[2]
    }
    e.b = r,
    e.a = function(t) {
        return arguments.length ? (this._z = t,
        this) : this._z
    }
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t.index
    }
    function i(t, e) {
        var n = t.get(e);
        if (!n)
            throw new Error("missing: " + e);
        return n
    }
    var o = n(58)
      , a = n(153)
      , s = n(107);
    e.a = function(t) {
        function e(t) {
            return 1 / Math.min(m[t.source.index], m[t.target.index])
        }
        function n(e) {
            for (var n = 0, r = t.length; n < x; ++n)
                for (var i, o, s, c, l, u = 0, p = 0, m = 0, g = 0; u < r; ++u)
                    i = t[u],
                    o = i.source,
                    s = i.target,
                    p = s.x + s.vx - o.x - o.vx || Object(a.a)(),
                    f > 1 && (m = s.y + s.vy - o.y - o.vy || Object(a.a)()),
                    f > 2 && (g = s.z + s.vz - o.z - o.vz || Object(a.a)()),
                    c = Math.sqrt(p * p + m * m + g * g),
                    c = (c - d[u]) / c * e * h[u],
                    p *= c,
                    m *= c,
                    g *= c,
                    s.vx -= p * (l = v[u]),
                    f > 1 && (s.vy -= m * l),
                    f > 2 && (s.vz -= g * l),
                    o.vx += p * (l = 1 - l),
                    f > 1 && (o.vy += m * l),
                    f > 2 && (o.vz += g * l)
        }
        function c() {
            if (p) {
                var e, n, r = p.length, o = t.length, a = Object(s.map)(p, g);
                for (e = 0,
                m = new Array(r); e < o; ++e)
                    n = t[e],
                    n.index = e,
                    "object" != typeof n.source && (n.source = i(a, n.source)),
                    "object" != typeof n.target && (n.target = i(a, n.target)),
                    m[n.source.index] = (m[n.source.index] || 0) + 1,
                    m[n.target.index] = (m[n.target.index] || 0) + 1;
                for (e = 0,
                v = new Array(o); e < o; ++e)
                    n = t[e],
                    v[e] = m[n.source.index] / (m[n.source.index] + m[n.target.index]);
                h = new Array(o),
                l(),
                d = new Array(o),
                u()
            }
        }
        function l() {
            if (p)
                for (var e = 0, n = t.length; e < n; ++e)
                    h[e] = +y(t[e], e, t)
        }
        function u() {
            if (p)
                for (var e = 0, n = t.length; e < n; ++e)
                    d[e] = +_(t[e], e, t)
        }
        var h, d, p, f, m, v, g = r, y = e, _ = Object(o.a)(30), x = 1;
        return null == t && (t = []),
        n.initialize = function(t, e) {
            p = t,
            f = e,
            c()
        }
        ,
        n.links = function(e) {
            return arguments.length ? (t = e,
            c(),
            n) : t
        }
        ,
        n.id = function(t) {
            return arguments.length ? (g = t,
            n) : g
        }
        ,
        n.iterations = function(t) {
            return arguments.length ? (x = +t,
            n) : x
        }
        ,
        n.strength = function(t) {
            return arguments.length ? (y = "function" == typeof t ? t : Object(o.a)(+t),
            l(),
            n) : y
        }
        ,
        n.distance = function(t) {
            return arguments.length ? (_ = "function" == typeof t ? t : Object(o.a)(+t),
            u(),
            n) : _
        }
        ,
        n
    }
}
, function(t, e, n) {
    "use strict";
    var r = n(58)
      , i = n(153)
      , o = n(495)
      , a = n(496)
      , s = n(497)
      , c = n(498);
    e.a = function() {
        function t(t) {
            var e, r = u.length, i = (1 === h ? Object(o.a)(u, c.b) : 2 === h ? Object(a.a)(u, c.b, c.c) : 3 === h ? Object(s.a)(u, c.b, c.c, c.d) : null).visitAfter(n);
            for (p = t,
            e = 0; e < r; ++e)
                d = u[e],
                i.visit(l)
        }
        function e() {
            if (u) {
                var t, e, n = u.length;
                for (f = new Array(n),
                t = 0; t < n; ++t)
                    e = u[t],
                    f[e.index] = +m(e, t, u)
            }
        }
        function n(t) {
            var e, n, r, i, o, a, s = 0, c = 0;
            if (t.length) {
                for (r = i = o = a = 0; a < 4; ++a)
                    (e = t[a]) && (n = Math.abs(e.value)) && (s += e.value,
                    c += n,
                    r += n * (e.x || 0),
                    i += n * (e.y || 0),
                    o += n * (e.z || 0));
                t.x = r / c,
                h > 1 && (t.y = i / c),
                h > 2 && (t.z = o / c)
            } else {
                e = t,
                e.x = e.data.x,
                h > 1 && (e.y = e.data.y),
                h > 2 && (e.z = e.data.z);
                do {
                    s += f[e.data.index]
                } while (e = e.next)
            }
            t.value = s
        }
        function l(t, e, n, r, o) {
            if (!t.value)
                return !0;
            var a = [n, r, o][h - 1]
              , s = t.x - d.x
              , c = h > 1 ? t.y - d.y : 0
              , l = h > 2 ? t.z - d.z : 0
              , u = a - e
              , m = s * s + c * c + l * l;
            if (u * u / y < m)
                return m < g && (0 === s && (s = Object(i.a)(),
                m += s * s),
                h > 1 && 0 === c && (c = Object(i.a)(),
                m += c * c),
                h > 2 && 0 === l && (l = Object(i.a)(),
                m += l * l),
                m < v && (m = Math.sqrt(v * m)),
                d.vx += s * t.value * p / m,
                h > 1 && (d.vy += c * t.value * p / m),
                h > 2 && (d.vz += l * t.value * p / m)),
                !0;
            if (!(t.length || m >= g)) {
                (t.data !== d || t.next) && (0 === s && (s = Object(i.a)(),
                m += s * s),
                h > 1 && 0 === c && (c = Object(i.a)(),
                m += c * c),
                h > 2 && 0 === l && (l = Object(i.a)(),
                m += l * l),
                m < v && (m = Math.sqrt(v * m)));
                do {
                    t.data !== d && (u = f[t.data.index] * p / m,
                    d.vx += s * u,
                    h > 1 && (d.vy += c * u),
                    h > 2 && (d.vz += l * u))
                } while (t = t.next)
            }
        }
        var u, h, d, p, f, m = Object(r.a)(-30), v = 1, g = 1 / 0, y = .81;
        return t.initialize = function(t, n) {
            u = t,
            h = n,
            e()
        }
        ,
        t.strength = function(n) {
            return arguments.length ? (m = "function" == typeof n ? n : Object(r.a)(+n),
            e(),
            t) : m
        }
        ,
        t.distanceMin = function(e) {
            return arguments.length ? (v = e * e,
            t) : Math.sqrt(v)
        }
        ,
        t.distanceMax = function(e) {
            return arguments.length ? (g = e * e,
            t) : Math.sqrt(g)
        }
        ,
        t.theta = function(e) {
            return arguments.length ? (y = e * e,
            t) : Math.sqrt(y)
        }
        ,
        t
    }
}
, function(t, e, n) {
    "use strict";
    n(58)
}
, function(t, e, n) {
    "use strict";
    n(58)
}
, function(t, e, n) {
    "use strict";
    n(58)
}
, function(t, e, n) {
    "use strict";
    n(58)
}
, function(t, e, n) {
    function r(t) {
        function e(t, e) {
            N.push({
                link: t,
                changeType: e
            })
        }
        function n(t, e) {
            N.push({
                node: t,
                changeType: e
            })
        }
        function r(t, e) {
            if (void 0 === t)
                throw new Error("Invalid node identifier");
            z();
            var n = u(t);
            return n ? (n.data = e,
            j(n, "update")) : (n = new o(t,e),
            R++,
            j(n, "add")),
            C[t] = n,
            B(),
            n
        }
        function u(t) {
            return C[t]
        }
        function h(t) {
            var e = u(t);
            if (!e)
                return !1;
            z();
            var n = e.links;
            if (n) {
                e.links = null;
                for (var r = 0; r < n.length; ++r)
                    v(n[r])
            }
            return delete C[t],
            R--,
            j(e, "remove"),
            B(),
            !0
        }
        function d(t, e, n) {
            z();
            var i = u(t) || r(t)
              , o = u(e) || r(e)
              , s = D(t, e, n);
            return P.push(s),
            a(i, s),
            t !== e && a(o, s),
            k(s, "add"),
            B(),
            s
        }
        function p(t, e, n) {
            return new s(t,e,n,c(t, e))
        }
        function f(t, e, n) {
            var r = c(t, e)
              , i = L.hasOwnProperty(r);
            if (i || g(t, e)) {
                i || (L[r] = 0);
                var o = "@" + ++L[r];
                r = c(t + o, e + o)
            }
            return new s(t,e,n,r)
        }
        function m(t) {
            var e = u(t);
            return e ? e.links : null
        }
        function v(t) {
            if (!t)
                return !1;
            var e = i(t, P);
            if (e < 0)
                return !1;
            z(),
            P.splice(e, 1);
            var n = u(t.fromId)
              , r = u(t.toId);
            return n && (e = i(t, n.links)) >= 0 && n.links.splice(e, 1),
            r && (e = i(t, r.links)) >= 0 && r.links.splice(e, 1),
            k(t, "remove"),
            B(),
            !0
        }
        function g(t, e) {
            var n, r = u(t);
            if (!r || !r.links)
                return null;
            for (n = 0; n < r.links.length; ++n) {
                var i = r.links[n];
                if (i.fromId === t && i.toId === e)
                    return i
            }
            return null
        }
        function y() {
            z(),
            I(function(t) {
                h(t.id)
            }),
            B()
        }
        function _(t) {
            var e, n;
            if ("function" == typeof t)
                for (e = 0,
                n = P.length; e < n; ++e)
                    t(P[e])
        }
        function x(t, e, n) {
            var r = u(t);
            if (r && r.links && "function" == typeof e)
                return n ? w(r.links, t, e) : b(r.links, t, e)
        }
        function b(t, e, n) {
            for (var r = 0; r < t.length; ++r) {
                var i = t[r]
                  , o = i.fromId === e ? i.toId : i.fromId;
                if (n(C[o], i))
                    return !0
            }
        }
        function w(t, e, n) {
            for (var r = 0; r < t.length; ++r) {
                var i = t[r];
                if (i.fromId === e && n(C[i.toId], i))
                    return !0
            }
        }
        function M() {}
        function E() {
            O += 1
        }
        function T() {
            0 === (O -= 1) && N.length > 0 && (U.fire("changed", N),
            N.length = 0)
        }
        function S(t) {
            if ("function" == typeof t)
                for (var e = Object.keys(C), n = 0; n < e.length; ++n)
                    if (t(C[e[n]]))
                        return !0
        }
        function A(t) {
            if ("function" == typeof t) {
                var e;
                for (e in C)
                    if (t(C[e]))
                        return !0
            }
        }
        t = t || {},
        "uniqueLinkId"in t && (console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n", "\n", "Note: there is also change in default behavior: From now own each graph\nis considered to be not a multigraph by default (each edge is unique)."),
        t.multigraph = t.uniqueLinkId),
        void 0 === t.multigraph && (t.multigraph = !1);
        var C = "function" == typeof Object.create ? Object.create(null) : {}
          , P = []
          , L = {}
          , R = 0
          , O = 0
          , I = function() {
            return Object.keys ? S : A
        }()
          , D = t.multigraph ? f : p
          , N = []
          , k = M
          , j = M
          , z = M
          , B = M
          , U = {
            addNode: r,
            addLink: d,
            removeLink: v,
            removeNode: h,
            getNode: u,
            getNodesCount: function() {
                return R
            },
            getLinksCount: function() {
                return P.length
            },
            getLinks: m,
            forEachNode: I,
            forEachLinkedNode: x,
            forEachLink: _,
            beginUpdate: z,
            endUpdate: B,
            clear: y,
            hasLink: g,
            hasNode: u,
            getLink: g
        };
        return l(U),
        function() {
            function t() {
                return U.beginUpdate = z = E,
                U.endUpdate = B = T,
                k = e,
                j = n,
                U.on = r,
                r.apply(U, arguments)
            }
            var r = U.on;
            U.on = t
        }(),
        U
    }
    function i(t, e) {
        if (!e)
            return -1;
        if (e.indexOf)
            return e.indexOf(t);
        var n, r = e.length;
        for (n = 0; n < r; n += 1)
            if (e[n] === t)
                return n;
        return -1
    }
    function o(t, e) {
        this.id = t,
        this.links = null,
        this.data = e
    }
    function a(t, e) {
        t.links ? t.links.push(e) : t.links = [e]
    }
    function s(t, e, n, r) {
        this.fromId = t,
        this.toId = e,
        this.data = n,
        this.id = r
    }
    function c(t, e) {
        return t.toString() + "👉 " + e.toString()
    }
    t.exports = r;
    var l = n(1105)
}
, function(t, e) {
    function n(t) {
        var e = Object.create(null);
        return {
            on: function(n, r, i) {
                if ("function" != typeof r)
                    throw new Error("callback is expected to be a function");
                var o = e[n];
                return o || (o = e[n] = []),
                o.push({
                    callback: r,
                    ctx: i
                }),
                t
            },
            off: function(n, r) {
                if (void 0 === n)
                    return e = Object.create(null),
                    t;
                if (e[n]) {
                    if ("function" != typeof r)
                        delete e[n];
                    else
                        for (var i = e[n], o = 0; o < i.length; ++o)
                            i[o].callback === r && i.splice(o, 1)
                }
                return t
            },
            fire: function(n) {
                var r = e[n];
                if (!r)
                    return t;
                var i;
                arguments.length > 1 && (i = Array.prototype.splice.call(arguments, 1));
                for (var o = 0; o < r.length; ++o) {
                    var a = r[o];
                    a.callback.apply(a.ctx, i)
                }
                return t
            }
        }
    }
    function r(t) {
        if (!t)
            throw new Error("Eventify cannot use falsy object as events subject");
        for (var e = ["on", "fire", "off"], n = 0; n < e.length; ++n)
            if (t.hasOwnProperty(e[n]))
                throw new Error("Subject cannot be eventified, since it already has property '" + e[n] + "'")
    }
    t.exports = function(t) {
        r(t);
        var e = n(t);
        return t.on = e.on,
        t.off = e.off,
        t.fire = e.fire,
        t
    }
}
, function(t, e, n) {
    function r(t, e) {
        function r(t) {
            Object.keys(w).forEach(function(e) {
                t(w[e], e)
            })
        }
        function a(e, n) {
            var r;
            if (void 0 === n)
                r = "object" != typeof e ? e : e.id;
            else {
                var i = t.hasLink(e, n);
                if (!i)
                    return;
                r = i.id
            }
            return M[r]
        }
        function s(t) {
            return w[t]
        }
        function c(t) {
            A.fire("stable", t)
        }
        function l(e) {
            for (var n = 0; n < e.length; ++n) {
                var r = e[n];
                "add" === r.changeType ? (r.node && u(r.node.id),
                r.link && d(r.link)) : "remove" === r.changeType && (r.node && h(r.node),
                r.link && p(r.link))
            }
            E = t.getNodesCount()
        }
        function u(e) {
            var n = w[e];
            if (!n) {
                var r = t.getNode(e);
                if (!r)
                    throw new Error("initBody() was called with unknown node id");
                var i = r.position;
                if (!i) {
                    var o = f(r);
                    i = x.getBestNewBodyPosition(o)
                }
                n = x.addBodyAt(i),
                n.id = e,
                w[e] = n,
                m(e),
                v(r) && (n.isPinned = !0)
            }
        }
        function h(t) {
            var e = t.id
              , n = w[e];
            n && (w[e] = null,
            delete w[e],
            x.removeBody(n))
        }
        function d(t) {
            m(t.fromId),
            m(t.toId);
            var e = w[t.fromId]
              , n = w[t.toId]
              , r = x.addSpring(e, n, t.length);
            T(t, r),
            M[t.id] = r
        }
        function p(e) {
            var n = M[e.id];
            if (n) {
                var r = t.getNode(e.fromId)
                  , i = t.getNode(e.toId);
                r && m(r.id),
                i && m(i.id),
                delete M[e.id],
                x.removeSpring(n)
            }
        }
        function f(t) {
            var e = [];
            if (!t.links)
                return e;
            for (var n = Math.min(t.links.length, 2), r = 0; r < n; ++r) {
                var i = t.links[r]
                  , o = i.fromId !== t.id ? w[i.fromId] : w[i.toId];
                o && o.pos && e.push(o)
            }
            return e
        }
        function m(t) {
            var e = w[t];
            if (e.mass = b(t),
            Number.isNaN(e.mass))
                throw new Error("Node mass should be a number")
        }
        function v(t) {
            return t && (t.isPinned || t.data && t.data.isPinned)
        }
        function g(t) {
            var e = w[t];
            return e || (u(t),
            e = w[t]),
            e
        }
        function y(e) {
            var n = t.getLinks(e);
            return n ? 1 + n.length / 3 : 1
        }
        if (!t)
            throw new Error("Graph structure cannot be undefined");
        var _ = n(499)
          , x = _(e)
          , b = y;
        e && "function" == typeof e.nodeMass && (b = e.nodeMass);
        var w = Object.create(null)
          , M = {}
          , E = 0
          , T = x.settings.springTransform || i;
        !function() {
            E = 0,
            t.forEachNode(function(t) {
                u(t.id),
                E += 1
            }),
            t.forEachLink(d)
        }(),
        function() {
            t.on("changed", l)
        }();
        var S = !1
          , A = {
            step: function() {
                if (0 === E)
                    return !0;
                var t = x.step();
                A.lastMove = t,
                A.fire("step");
                var e = t / E
                  , n = e <= .01;
                return S !== n && (S = n,
                c(n)),
                n
            },
            getNodePosition: function(t) {
                return g(t).pos
            },
            setNodePosition: function(t) {
                var e = g(t);
                e.setPosition.apply(e, Array.prototype.slice.call(arguments, 1)),
                x.invalidateBBox()
            },
            getLinkPosition: function(t) {
                var e = M[t];
                if (e)
                    return {
                        from: e.from.pos,
                        to: e.to.pos
                    }
            },
            getGraphRect: function() {
                return x.getBBox()
            },
            forEachBody: r,
            pinNode: function(t, e) {
                g(t.id).isPinned = !!e
            },
            isNodePinned: function(t) {
                return g(t.id).isPinned
            },
            dispose: function() {
                t.off("changed", l),
                A.fire("disposed")
            },
            getBody: s,
            getSpring: a,
            simulator: x,
            graph: t,
            lastMove: 0
        };
        return o(A),
        A
    }
    function i() {}
    t.exports = r,
    t.exports.simulator = n(499);
    var o = n(1118)
}
, function(t, e) {
    function n(t, e, n, r, i) {
        this.from = t,
        this.to = e,
        this.length = n,
        this.coeff = r,
        this.weight = "number" == typeof i ? i : 1
    }
    t.exports = n
}
, function(t, e) {
    function n(t) {
        var e = Object.create(null);
        return {
            on: function(n, r, i) {
                if ("function" != typeof r)
                    throw new Error("callback is expected to be a function");
                var o = e[n];
                return o || (o = e[n] = []),
                o.push({
                    callback: r,
                    ctx: i
                }),
                t
            },
            off: function(n, r) {
                if (void 0 === n)
                    return e = Object.create(null),
                    t;
                if (e[n]) {
                    if ("function" != typeof r)
                        delete e[n];
                    else
                        for (var i = e[n], o = 0; o < i.length; ++o)
                            i[o].callback === r && i.splice(o, 1)
                }
                return t
            },
            fire: function(n) {
                var r = e[n];
                if (!r)
                    return t;
                var i;
                arguments.length > 1 && (i = Array.prototype.splice.call(arguments, 1));
                for (var o = 0; o < r.length; ++o) {
                    var a = r[o];
                    a.callback.apply(a.ctx, i)
                }
                return t
            }
        }
    }
    function r(t) {
        if (!t)
            throw new Error("Eventify cannot use falsy object as events subject");
        for (var e = ["on", "fire", "off"], n = 0; n < e.length; ++n)
            if (t.hasOwnProperty(e[n]))
                throw new Error("Subject cannot be eventified, since it already has property '" + e[n] + "'")
    }
    t.exports = function(t) {
        r(t);
        var e = n(t);
        return t.on = e.on,
        t.off = e.off,
        t.fire = e.fire,
        t
    }
}
, function(t, e, n) {
    function r(t, e) {
        return 0 === e ? t.quad0 : 1 === e ? t.quad1 : 2 === e ? t.quad2 : 3 === e ? t.quad3 : null
    }
    function i(t, e, n) {
        0 === e ? t.quad0 = n : 1 === e ? t.quad1 = n : 2 === e ? t.quad2 = n : 3 === e && (t.quad3 = n)
    }
    t.exports = function(t) {
        function e() {
            var t = v[g];
            return t ? (t.quad0 = null,
            t.quad1 = null,
            t.quad2 = null,
            t.quad3 = null,
            t.body = null,
            t.mass = t.massX = t.massY = 0,
            t.left = t.right = t.top = t.bottom = 0) : (t = new l,
            v[g] = t),
            ++g,
            t
        }
        function o(t) {
            var e, n, r, i, o = p, a = 0, s = 0, l = 1, u = 0, h = 1;
            for (o[0] = y; l; ) {
                var f = o[u]
                  , v = f.body;
                l -= 1,
                u += 1;
                var g = v !== t;
                v && g ? (n = v.pos.x - t.pos.x,
                r = v.pos.y - t.pos.y,
                i = Math.sqrt(n * n + r * r),
                0 === i && (n = (c.nextDouble() - .5) / 50,
                r = (c.nextDouble() - .5) / 50,
                i = Math.sqrt(n * n + r * r)),
                e = d * v.mass * t.mass / (i * i * i),
                a += e * n,
                s += e * r) : g && (n = f.massX / f.mass - t.pos.x,
                r = f.massY / f.mass - t.pos.y,
                i = Math.sqrt(n * n + r * r),
                0 === i && (n = (c.nextDouble() - .5) / 50,
                r = (c.nextDouble() - .5) / 50,
                i = Math.sqrt(n * n + r * r)),
                (f.right - f.left) / i < m ? (e = d * f.mass * t.mass / (i * i * i),
                a += e * n,
                s += e * r) : (f.quad0 && (o[h] = f.quad0,
                l += 1,
                h += 1),
                f.quad1 && (o[h] = f.quad1,
                l += 1,
                h += 1),
                f.quad2 && (o[h] = f.quad2,
                l += 1,
                h += 1),
                f.quad3 && (o[h] = f.quad3,
                l += 1,
                h += 1)))
            }
            t.force.x += a,
            t.force.y += s
        }
        function a(t) {
            var n, r = Number.MAX_VALUE, i = Number.MAX_VALUE, o = Number.MIN_VALUE, a = Number.MIN_VALUE, c = t.length;
            for (n = c; n--; ) {
                var l = t[n].pos.x
                  , u = t[n].pos.y;
                l < r && (r = l),
                l > o && (o = l),
                u < i && (i = u),
                u > a && (a = u)
            }
            var h = o - r
              , d = a - i;
            for (h > d ? a = i + h : o = r + d,
            g = 0,
            y = e(),
            y.left = r,
            y.right = o,
            y.top = i,
            y.bottom = a,
            n = c - 1,
            n >= 0 && (y.body = t[n]); n--; )
                s(t[n])
        }
        function s(t) {
            for (f.reset(),
            f.push(y, t); !f.isEmpty(); ) {
                var n = f.pop()
                  , o = n.node
                  , a = n.body;
                if (o.body) {
                    var s = o.body;
                    if (o.body = null,
                    h(s.pos, a.pos)) {
                        var l = 3;
                        do {
                            var u = c.nextDouble()
                              , d = (o.right - o.left) * u
                              , p = (o.bottom - o.top) * u;
                            s.pos.x = o.left + d,
                            s.pos.y = o.top + p,
                            l -= 1
                        } while (l > 0 && h(s.pos, a.pos));if (0 === l && h(s.pos, a.pos))
                            return
                    }
                    f.push(o, s),
                    f.push(o, a)
                } else {
                    var m = a.pos.x
                      , v = a.pos.y;
                    o.mass = o.mass + a.mass,
                    o.massX = o.massX + a.mass * m,
                    o.massY = o.massY + a.mass * v;
                    var g = 0
                      , _ = o.left
                      , x = (o.right + _) / 2
                      , b = o.top
                      , w = (o.bottom + b) / 2;
                    m > x && (g += 1,
                    _ = x,
                    x = o.right),
                    v > w && (g += 2,
                    b = w,
                    w = o.bottom);
                    var M = r(o, g);
                    M ? f.push(M, a) : (M = e(),
                    M.left = _,
                    M.top = b,
                    M.right = x,
                    M.bottom = w,
                    M.body = a,
                    i(o, g, M))
                }
            }
        }
        t = t || {},
        t.gravity = "number" == typeof t.gravity ? t.gravity : -1,
        t.theta = "number" == typeof t.theta ? t.theta : .8;
        var c = n(44).random(1984)
          , l = n(1110)
          , u = n(1111)
          , h = n(1112)
          , d = t.gravity
          , p = []
          , f = new u
          , m = t.theta
          , v = []
          , g = 0
          , y = e();
        return {
            insertBodies: a,
            getRoot: function() {
                return y
            },
            updateBodyForce: o,
            options: function(t) {
                return t ? ("number" == typeof t.gravity && (d = t.gravity),
                "number" == typeof t.theta && (m = t.theta),
                this) : {
                    gravity: d,
                    theta: m
                }
            }
        }
    }
}
, function(t, e) {
    t.exports = function() {
        this.body = null,
        this.quad0 = null,
        this.quad1 = null,
        this.quad2 = null,
        this.quad3 = null,
        this.mass = 0,
        this.massX = 0,
        this.massY = 0,
        this.left = 0,
        this.top = 0,
        this.bottom = 0,
        this.right = 0
    }
}
, function(t, e) {
    function n() {
        this.stack = [],
        this.popIdx = 0
    }
    function r(t, e) {
        this.node = t,
        this.body = e
    }
    t.exports = n,
    n.prototype = {
        isEmpty: function() {
            return 0 === this.popIdx
        },
        push: function(t, e) {
            var n = this.stack[this.popIdx];
            n ? (n.node = t,
            n.body = e) : this.stack[this.popIdx] = new r(t,e),
            ++this.popIdx
        },
        pop: function() {
            if (this.popIdx > 0)
                return this.stack[--this.popIdx]
        },
        reset: function() {
            this.popIdx = 0
        }
    }
}
, function(t, e) {
    t.exports = function(t, e) {
        var n = Math.abs(t.x - e.x)
          , r = Math.abs(t.y - e.y);
        return n < 1e-8 && r < 1e-8
    }
}
, function(t, e, n) {
    t.exports = function(t, e) {
        function r() {
            var e = t.length;
            if (0 !== e) {
                for (var n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MIN_VALUE, a = Number.MIN_VALUE; e--; ) {
                    var s = t[e];
                    s.isPinned ? (s.pos.x = s.prevPos.x,
                    s.pos.y = s.prevPos.y) : (s.prevPos.x = s.pos.x,
                    s.prevPos.y = s.pos.y),
                    s.pos.x < n && (n = s.pos.x),
                    s.pos.x > i && (i = s.pos.x),
                    s.pos.y < r && (r = s.pos.y),
                    s.pos.y > a && (a = s.pos.y)
                }
                o.x1 = n,
                o.x2 = i,
                o.y1 = r,
                o.y2 = a
            }
        }
        var i = n(44).random(42)
          , o = {
            x1: 0,
            y1: 0,
            x2: 0,
            y2: 0
        };
        return {
            box: o,
            update: r,
            reset: function() {
                o.x1 = o.y1 = 0,
                o.x2 = o.y2 = 0
            },
            getBestNewPosition: function(t) {
                var n = o
                  , r = 0
                  , a = 0;
                if (t.length) {
                    for (var s = 0; s < t.length; ++s)
                        r += t[s].pos.x,
                        a += t[s].pos.y;
                    r /= t.length,
                    a /= t.length
                } else
                    r = (n.x1 + n.x2) / 2,
                    a = (n.y1 + n.y2) / 2;
                var c = e.springLength;
                return {
                    x: r + i.next(c) - c / 2,
                    y: a + i.next(c) - c / 2
                }
            }
        }
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(53);
        t = e(t, {
            dragCoeff: .02
        });
        var i = {
            update: function(e) {
                e.force.x -= t.dragCoeff * e.velocity.x,
                e.force.y -= t.dragCoeff * e.velocity.y
            }
        };
        return r(t, i, ["dragCoeff"]),
        i
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(44).random(42)
          , i = n(53);
        t = e(t, {
            springCoeff: 2e-4,
            springLength: 80
        });
        var o = {
            update: function(e) {
                var n = e.from
                  , i = e.to
                  , o = e.length < 0 ? t.springLength : e.length
                  , a = i.pos.x - n.pos.x
                  , s = i.pos.y - n.pos.y
                  , c = Math.sqrt(a * a + s * s);
                0 === c && (a = (r.nextDouble() - .5) / 50,
                s = (r.nextDouble() - .5) / 50,
                c = Math.sqrt(a * a + s * s));
                var l = c - o
                  , u = (!e.coeff || e.coeff < 0 ? t.springCoeff : e.coeff) * l / c * e.weight;
                n.force.x += u * a,
                n.force.y += u * s,
                i.force.x -= u * a,
                i.force.y -= u * s
            }
        };
        return i(t, o, ["springCoeff", "springLength"]),
        o
    }
}
, function(t, e) {
    function n(t, e) {
        var n, r = 0, i = 0, o = 0, a = 0, s = t.length;
        if (0 === s)
            return 0;
        for (n = 0; n < s; ++n) {
            var c = t[n]
              , l = e / c.mass;
            c.velocity.x += l * c.force.x,
            c.velocity.y += l * c.force.y;
            var u = c.velocity.x
              , h = c.velocity.y
              , d = Math.sqrt(u * u + h * h);
            d > 1 && (c.velocity.x = u / d,
            c.velocity.y = h / d),
            r = e * c.velocity.x,
            o = e * c.velocity.y,
            c.pos.x += r,
            c.pos.y += o,
            i += Math.abs(r),
            a += Math.abs(o)
        }
        return (i * i + a * a) / s
    }
    t.exports = n
}
, function(t, e, n) {
    var r = n(157);
    t.exports = function(t) {
        return new r.Body(t)
    }
}
, function(t, e) {
    function n(t) {
        var e = Object.create(null);
        return {
            on: function(n, r, i) {
                if ("function" != typeof r)
                    throw new Error("callback is expected to be a function");
                var o = e[n];
                return o || (o = e[n] = []),
                o.push({
                    callback: r,
                    ctx: i
                }),
                t
            },
            off: function(n, r) {
                if (void 0 === n)
                    return e = Object.create(null),
                    t;
                if (e[n]) {
                    if ("function" != typeof r)
                        delete e[n];
                    else
                        for (var i = e[n], o = 0; o < i.length; ++o)
                            i[o].callback === r && i.splice(o, 1)
                }
                return t
            },
            fire: function(n) {
                var r = e[n];
                if (!r)
                    return t;
                var i;
                arguments.length > 1 && (i = Array.prototype.splice.call(arguments, 1));
                for (var o = 0; o < r.length; ++o) {
                    var a = r[o];
                    a.callback.apply(a.ctx, i)
                }
                return t
            }
        }
    }
    function r(t) {
        if (!t)
            throw new Error("Eventify cannot use falsy object as events subject");
        for (var e = ["on", "fire", "off"], n = 0; n < e.length; ++n)
            if (t.hasOwnProperty(e[n]))
                throw new Error("Subject cannot be eventified, since it already has property '" + e[n] + "'")
    }
    t.exports = function(t) {
        r(t);
        var e = n(t);
        return t.on = e.on,
        t.off = e.off,
        t.fire = e.fire,
        t
    }
}
, function(t, e, n) {
    function r(t, e) {
        return e = n(43)(e, {
            createQuadTree: n(1131),
            createBounds: n(1135),
            createDragForce: n(1136),
            createSpringForce: n(1137),
            integrator: i(e),
            createBody: n(1138)
        }),
        r.get2dLayout(t, e)
    }
    function i(t) {
        return n(t && "verlet" === t.integrator ? 1139 : 1140)
    }
    t.exports = r,
    r.get2dLayout = n(1120)
}
, function(t, e, n) {
    function r(t, e) {
        function r(e, n) {
            var r;
            if (void 0 === n)
                r = "object" != typeof e ? e : e.id;
            else {
                var i = t.hasLink(e, n);
                if (!i)
                    return;
                r = i.id
            }
            return b[r]
        }
        function a(t) {
            return x[t]
        }
        function s(t) {
            M.fire("stable", t)
        }
        function c(t) {
            for (var e = 0; e < t.length; ++e) {
                var n = t[e];
                "add" === n.changeType ? (n.node && l(n.node.id),
                n.link && h(n.link)) : "remove" === n.changeType && (n.node && u(n.node),
                n.link && d(n.link))
            }
        }
        function l(e) {
            var n = x[e];
            if (!n) {
                var r = t.getNode(e);
                if (!r)
                    throw new Error("initBody() was called with unknown node id");
                var i = r.position;
                if (!i) {
                    var o = p(r);
                    i = _.getBestNewBodyPosition(o)
                }
                n = _.addBodyAt(i),
                x[e] = n,
                f(e),
                m(r) && (n.isPinned = !0)
            }
        }
        function u(t) {
            var e = t.id
              , n = x[e];
            n && (x[e] = null,
            delete x[e],
            _.removeBody(n))
        }
        function h(t) {
            f(t.fromId),
            f(t.toId);
            var e = x[t.fromId]
              , n = x[t.toId]
              , r = _.addSpring(e, n, t.length);
            w(t, r),
            b[t.id] = r
        }
        function d(e) {
            var n = b[e.id];
            if (n) {
                var r = t.getNode(e.fromId)
                  , i = t.getNode(e.toId);
                r && f(r.id),
                i && f(i.id),
                delete b[e.id],
                _.removeSpring(n)
            }
        }
        function p(t) {
            var e = [];
            if (!t.links)
                return e;
            for (var n = Math.min(t.links.length, 2), r = 0; r < n; ++r) {
                var i = t.links[r]
                  , o = i.fromId !== t.id ? x[i.fromId] : x[i.toId];
                o && o.pos && e.push(o)
            }
            return e
        }
        function f(t) {
            x[t].mass = g(t)
        }
        function m(t) {
            return t && (t.isPinned || t.data && t.data.isPinned)
        }
        function v(t) {
            var e = x[t];
            return e || (l(t),
            e = x[t]),
            e
        }
        function g(e) {
            var n = t.getLinks(e);
            return n ? 1 + n.length / 3 : 1
        }
        if (!t)
            throw new Error("Graph structure cannot be undefined");
        var y = n(500)
          , _ = y(e)
          , x = "function" == typeof Object.create ? Object.create(null) : {}
          , b = {}
          , w = _.settings.springTransform || i;
        !function() {
            t.forEachNode(function(t) {
                l(t.id)
            }),
            t.forEachLink(h)
        }(),
        function() {
            t.on("changed", c),
            _.on("stable", s)
        }();
        var M = {
            step: function() {
                return _.step()
            },
            getNodePosition: function(t) {
                return v(t).pos
            },
            setNodePosition: function(t) {
                var e = v(t);
                e.setPosition.apply(e, Array.prototype.slice.call(arguments, 1))
            },
            getLinkPosition: function(t) {
                var e = b[t];
                if (e)
                    return {
                        from: e.from.pos,
                        to: e.to.pos
                    }
            },
            getGraphRect: function() {
                return _.getBBox()
            },
            pinNode: function(t, e) {
                v(t.id).isPinned = !!e
            },
            isNodePinned: function(t) {
                return v(t.id).isPinned
            },
            dispose: function() {
                t.off("changed", c),
                _.off("stable", s)
            },
            getBody: a,
            getSpring: r,
            simulator: _
        };
        return o(M),
        M
    }
    function i() {}
    t.exports = r,
    t.exports.simulator = n(500);
    var o = n(501)
}
, function(t, e) {
    function n(t, e, n, r, i) {
        this.from = t,
        this.to = e,
        this.length = n,
        this.coeff = r,
        this.weight = "number" == typeof i ? i : 1
    }
    t.exports = n
}
, function(t, e, n) {
    function r(t, e) {
        return 0 === e ? t.quad0 : 1 === e ? t.quad1 : 2 === e ? t.quad2 : 3 === e ? t.quad3 : null
    }
    function i(t, e, n) {
        0 === e ? t.quad0 = n : 1 === e ? t.quad1 = n : 2 === e ? t.quad2 = n : 3 === e && (t.quad3 = n)
    }
    t.exports = function(t) {
        t = t || {},
        t.gravity = "number" == typeof t.gravity ? t.gravity : -1,
        t.theta = "number" == typeof t.theta ? t.theta : .8;
        var e = n(44).random(1984)
          , o = n(1123)
          , a = n(1124)
          , s = n(1125)
          , c = t.gravity
          , l = []
          , u = new a
          , h = t.theta
          , d = []
          , p = 0
          , f = function() {
            var t = d[p];
            return t ? (t.quad0 = null,
            t.quad1 = null,
            t.quad2 = null,
            t.quad3 = null,
            t.body = null,
            t.mass = t.massX = t.massY = 0,
            t.left = t.right = t.top = t.bottom = 0) : (t = new o,
            d[p] = t),
            ++p,
            t
        }
          , m = f()
          , v = function(t) {
            for (u.reset(),
            u.push(m, t); !u.isEmpty(); ) {
                var n = u.pop()
                  , o = n.node
                  , a = n.body;
                if (o.body) {
                    var c = o.body;
                    if (o.body = null,
                    s(c.pos, a.pos)) {
                        var l = 3;
                        do {
                            var h = e.nextDouble()
                              , d = (o.right - o.left) * h
                              , p = (o.bottom - o.top) * h;
                            c.pos.x = o.left + d,
                            c.pos.y = o.top + p,
                            l -= 1
                        } while (l > 0 && s(c.pos, a.pos));if (0 === l && s(c.pos, a.pos))
                            return
                    }
                    u.push(o, c),
                    u.push(o, a)
                } else {
                    var v = a.pos.x
                      , g = a.pos.y;
                    o.mass = o.mass + a.mass,
                    o.massX = o.massX + a.mass * v,
                    o.massY = o.massY + a.mass * g;
                    var y = 0
                      , _ = o.left
                      , x = (o.right + _) / 2
                      , b = o.top
                      , w = (o.bottom + b) / 2;
                    if (v > x) {
                        y += 1;
                        var M = _;
                        _ = x,
                        x += x - M
                    }
                    if (g > w) {
                        y += 2;
                        var E = b;
                        b = w,
                        w += w - E
                    }
                    var T = r(o, y);
                    T ? u.push(T, a) : (T = f(),
                    T.left = _,
                    T.top = b,
                    T.right = x,
                    T.bottom = w,
                    T.body = a,
                    i(o, y, T))
                }
            }
        }
          , g = function(t) {
            var n, r, i, o, a = l, s = 0, u = 0, d = 1, p = 0, f = 1;
            for (a[0] = m; d; ) {
                var v = a[p]
                  , g = v.body;
                d -= 1,
                p += 1;
                var y = g !== t;
                g && y ? (r = g.pos.x - t.pos.x,
                i = g.pos.y - t.pos.y,
                o = Math.sqrt(r * r + i * i),
                0 === o && (r = (e.nextDouble() - .5) / 50,
                i = (e.nextDouble() - .5) / 50,
                o = Math.sqrt(r * r + i * i)),
                n = c * g.mass * t.mass / (o * o * o),
                s += n * r,
                u += n * i) : y && (r = v.massX / v.mass - t.pos.x,
                i = v.massY / v.mass - t.pos.y,
                o = Math.sqrt(r * r + i * i),
                0 === o && (r = (e.nextDouble() - .5) / 50,
                i = (e.nextDouble() - .5) / 50,
                o = Math.sqrt(r * r + i * i)),
                (v.right - v.left) / o < h ? (n = c * v.mass * t.mass / (o * o * o),
                s += n * r,
                u += n * i) : (v.quad0 && (a[f] = v.quad0,
                d += 1,
                f += 1),
                v.quad1 && (a[f] = v.quad1,
                d += 1,
                f += 1),
                v.quad2 && (a[f] = v.quad2,
                d += 1,
                f += 1),
                v.quad3 && (a[f] = v.quad3,
                d += 1,
                f += 1)))
            }
            t.force.x += s,
            t.force.y += u
        };
        return {
            insertBodies: function(t) {
                var e, n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MIN_VALUE, o = Number.MIN_VALUE, a = t.length;
                for (e = a; e--; ) {
                    var s = t[e].pos.x
                      , c = t[e].pos.y;
                    s < n && (n = s),
                    s > i && (i = s),
                    c < r && (r = c),
                    c > o && (o = c)
                }
                var l = i - n
                  , u = o - r;
                for (l > u ? o = r + l : i = n + u,
                p = 0,
                m = f(),
                m.left = n,
                m.right = i,
                m.top = r,
                m.bottom = o,
                e = a - 1,
                e > 0 && (m.body = t[e]); e--; )
                    v(t[e])
            },
            updateBodyForce: g,
            options: function(t) {
                return t ? ("number" == typeof t.gravity && (c = t.gravity),
                "number" == typeof t.theta && (h = t.theta),
                this) : {
                    gravity: c,
                    theta: h
                }
            }
        }
    }
}
, function(t, e) {
    t.exports = function() {
        this.body = null,
        this.quad0 = null,
        this.quad1 = null,
        this.quad2 = null,
        this.quad3 = null,
        this.mass = 0,
        this.massX = 0,
        this.massY = 0,
        this.left = 0,
        this.top = 0,
        this.bottom = 0,
        this.right = 0
    }
}
, function(t, e) {
    function n() {
        this.stack = [],
        this.popIdx = 0
    }
    function r(t, e) {
        this.node = t,
        this.body = e
    }
    t.exports = n,
    n.prototype = {
        isEmpty: function() {
            return 0 === this.popIdx
        },
        push: function(t, e) {
            var n = this.stack[this.popIdx];
            n ? (n.node = t,
            n.body = e) : this.stack[this.popIdx] = new r(t,e),
            ++this.popIdx
        },
        pop: function() {
            if (this.popIdx > 0)
                return this.stack[--this.popIdx]
        },
        reset: function() {
            this.popIdx = 0
        }
    }
}
, function(t, e) {
    t.exports = function(t, e) {
        var n = Math.abs(t.x - e.x)
          , r = Math.abs(t.y - e.y);
        return n < 1e-8 && r < 1e-8
    }
}
, function(t, e, n) {
    t.exports = function(t, e) {
        function r() {
            var e = t.length;
            if (0 !== e) {
                for (var n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MIN_VALUE, a = Number.MIN_VALUE; e--; ) {
                    var s = t[e];
                    s.isPinned ? (s.pos.x = s.prevPos.x,
                    s.pos.y = s.prevPos.y) : (s.prevPos.x = s.pos.x,
                    s.prevPos.y = s.pos.y),
                    s.pos.x < n && (n = s.pos.x),
                    s.pos.x > i && (i = s.pos.x),
                    s.pos.y < r && (r = s.pos.y),
                    s.pos.y > a && (a = s.pos.y)
                }
                o.x1 = n,
                o.x2 = i,
                o.y1 = r,
                o.y2 = a
            }
        }
        var i = n(44).random(42)
          , o = {
            x1: 0,
            y1: 0,
            x2: 0,
            y2: 0
        };
        return {
            box: o,
            update: r,
            reset: function() {
                o.x1 = o.y1 = 0,
                o.x2 = o.y2 = 0
            },
            getBestNewPosition: function(t) {
                var n = o
                  , r = 0
                  , a = 0;
                if (t.length) {
                    for (var s = 0; s < t.length; ++s)
                        r += t[s].pos.x,
                        a += t[s].pos.y;
                    r /= t.length,
                    a /= t.length
                } else
                    r = (n.x1 + n.x2) / 2,
                    a = (n.y1 + n.y2) / 2;
                var c = e.springLength;
                return {
                    x: r + i.next(c) - c / 2,
                    y: a + i.next(c) - c / 2
                }
            }
        }
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(53);
        t = e(t, {
            dragCoeff: .02
        });
        var i = {
            update: function(e) {
                e.force.x -= t.dragCoeff * e.velocity.x,
                e.force.y -= t.dragCoeff * e.velocity.y
            }
        };
        return r(t, i, ["dragCoeff"]),
        i
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(44).random(42)
          , i = n(53);
        t = e(t, {
            springCoeff: 2e-4,
            springLength: 80
        });
        var o = {
            update: function(e) {
                var n = e.from
                  , i = e.to
                  , o = e.length < 0 ? t.springLength : e.length
                  , a = i.pos.x - n.pos.x
                  , s = i.pos.y - n.pos.y
                  , c = Math.sqrt(a * a + s * s);
                0 === c && (a = (r.nextDouble() - .5) / 50,
                s = (r.nextDouble() - .5) / 50,
                c = Math.sqrt(a * a + s * s));
                var l = c - o
                  , u = (!e.coeff || e.coeff < 0 ? t.springCoeff : e.coeff) * l / c * e.weight;
                n.force.x += u * a,
                n.force.y += u * s,
                i.force.x -= u * a,
                i.force.y -= u * s
            }
        };
        return i(t, o, ["springCoeff", "springLength"]),
        o
    }
}
, function(t, e) {
    function n(t, e) {
        var n, r = 0, i = 0, o = 0, a = 0, s = t.length;
        if (0 === s)
            return 0;
        for (n = 0; n < s; ++n) {
            var c = t[n]
              , l = e / c.mass;
            c.velocity.x += l * c.force.x,
            c.velocity.y += l * c.force.y;
            var u = c.velocity.x
              , h = c.velocity.y
              , d = Math.sqrt(u * u + h * h);
            d > 1 && (c.velocity.x = u / d,
            c.velocity.y = h / d),
            r = e * c.velocity.x,
            o = e * c.velocity.y,
            c.pos.x += r,
            c.pos.y += o,
            i += Math.abs(r),
            a += Math.abs(o)
        }
        return (i * i + a * a) / s
    }
    t.exports = n
}
, function(t, e, n) {
    var r = n(157);
    t.exports = function(t) {
        return new r.Body(t)
    }
}
, function(t, e, n) {
    function r(t, e) {
        return 0 === e ? t.quad0 : 1 === e ? t.quad1 : 2 === e ? t.quad2 : 3 === e ? t.quad3 : 4 === e ? t.quad4 : 5 === e ? t.quad5 : 6 === e ? t.quad6 : 7 === e ? t.quad7 : null
    }
    function i(t, e, n) {
        0 === e ? t.quad0 = n : 1 === e ? t.quad1 = n : 2 === e ? t.quad2 = n : 3 === e ? t.quad3 = n : 4 === e ? t.quad4 = n : 5 === e ? t.quad5 = n : 6 === e ? t.quad6 = n : 7 === e && (t.quad7 = n)
    }
    t.exports = function(t) {
        t = t || {},
        t.gravity = "number" == typeof t.gravity ? t.gravity : -1,
        t.theta = "number" == typeof t.theta ? t.theta : .8;
        var e = n(44).random(1984)
          , o = n(1132)
          , a = n(1133)
          , s = n(1134)
          , c = t.gravity
          , l = []
          , u = new a
          , h = t.theta
          , d = []
          , p = 0
          , f = function() {
            var t = d[p];
            return t ? (t.quad0 = null,
            t.quad4 = null,
            t.quad1 = null,
            t.quad5 = null,
            t.quad2 = null,
            t.quad6 = null,
            t.quad3 = null,
            t.quad7 = null,
            t.body = null,
            t.mass = t.massX = t.massY = t.massZ = 0,
            t.left = t.right = t.top = t.bottom = t.front = t.back = 0) : (t = new o,
            d[p] = t),
            ++p,
            t
        }
          , m = f()
          , v = function(t) {
            for (u.reset(),
            u.push(m, t); !u.isEmpty(); ) {
                var n = u.pop()
                  , o = n.node
                  , a = n.body;
                if (o.body) {
                    var c = o.body;
                    if (o.body = null,
                    s(c.pos, a.pos)) {
                        var l = 3;
                        do {
                            var h = e.nextDouble()
                              , d = (o.right - o.left) * h
                              , p = (o.bottom - o.top) * h
                              , v = (o.front - o.back) * h;
                            c.pos.x = o.left + d,
                            c.pos.y = o.top + p,
                            c.pos.z = o.back + v,
                            l -= 1
                        } while (l > 0 && s(c.pos, a.pos));if (0 === l && s(c.pos, a.pos))
                            return
                    }
                    u.push(o, c),
                    u.push(o, a)
                } else {
                    var g = a.pos.x
                      , y = a.pos.y
                      , _ = a.pos.z;
                    o.mass += a.mass,
                    o.massX += a.mass * g,
                    o.massY += a.mass * y,
                    o.massZ += a.mass * _;
                    var x = 0
                      , b = o.left
                      , w = (o.right + b) / 2
                      , M = o.top
                      , E = (o.bottom + M) / 2
                      , T = o.back
                      , S = (o.front + T) / 2;
                    if (g > w) {
                        x += 1;
                        var A = b;
                        b = w,
                        w += w - A
                    }
                    if (y > E) {
                        x += 2;
                        var C = M;
                        M = E,
                        E += E - C
                    }
                    if (_ > S) {
                        x += 4;
                        var P = T;
                        T = S,
                        S = T + (T - P)
                    }
                    var L = r(o, x);
                    L ? u.push(L, a) : (L = f(),
                    L.left = b,
                    L.top = M,
                    L.right = w,
                    L.bottom = E,
                    L.back = T,
                    L.front = S,
                    L.body = a,
                    i(o, x, L))
                }
            }
        }
          , g = function(t) {
            var n, r, i, o, a, s = l, u = 0, d = 0, p = 0, f = 1, v = 0, g = 1;
            for (s[0] = m; f; ) {
                var y = s[v]
                  , _ = y.body;
                f -= 1,
                v += 1;
                var x = _ !== t;
                _ && x ? (r = _.pos.x - t.pos.x,
                i = _.pos.y - t.pos.y,
                o = _.pos.z - t.pos.z,
                a = Math.sqrt(r * r + i * i + o * o),
                0 === a && (r = (e.nextDouble() - .5) / 50,
                i = (e.nextDouble() - .5) / 50,
                o = (e.nextDouble() - .5) / 50,
                a = Math.sqrt(r * r + i * i + o * o)),
                n = c * _.mass * t.mass / (a * a * a),
                u += n * r,
                d += n * i,
                p += n * o) : x && (r = y.massX / y.mass - t.pos.x,
                i = y.massY / y.mass - t.pos.y,
                o = y.massZ / y.mass - t.pos.z,
                a = Math.sqrt(r * r + i * i + o * o),
                0 === a && (r = (e.nextDouble() - .5) / 50,
                i = (e.nextDouble() - .5) / 50,
                o = (e.nextDouble() - .5) / 50,
                a = Math.sqrt(r * r + i * i + o * o)),
                (y.right - y.left) / a < h ? (n = c * y.mass * t.mass / (a * a * a),
                u += n * r,
                d += n * i,
                p += n * o) : (y.quad0 && (s[g] = y.quad0,
                f += 1,
                g += 1),
                y.quad1 && (s[g] = y.quad1,
                f += 1,
                g += 1),
                y.quad2 && (s[g] = y.quad2,
                f += 1,
                g += 1),
                y.quad3 && (s[g] = y.quad3,
                f += 1,
                g += 1),
                y.quad4 && (s[g] = y.quad4,
                f += 1,
                g += 1),
                y.quad5 && (s[g] = y.quad5,
                f += 1,
                g += 1),
                y.quad6 && (s[g] = y.quad6,
                f += 1,
                g += 1),
                y.quad7 && (s[g] = y.quad7,
                f += 1,
                g += 1)))
            }
            t.force.x += u,
            t.force.y += d,
            t.force.z += p
        };
        return {
            insertBodies: function(t) {
                var e, n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MAX_VALUE, o = Number.MIN_VALUE, a = Number.MIN_VALUE, s = Number.MIN_VALUE, c = t.length;
                for (e = c; e--; ) {
                    var l = t[e].pos
                      , u = l.x
                      , h = l.y
                      , d = l.z;
                    u < n && (n = u),
                    u > o && (o = u),
                    h < r && (r = h),
                    h > a && (a = h),
                    d < i && (i = d),
                    d > s && (s = d)
                }
                var g = Math.max(o - n, Math.max(a - r, s - i));
                for (o = n + g,
                a = r + g,
                s = i + g,
                p = 0,
                m = f(),
                m.left = n,
                m.right = o,
                m.top = r,
                m.bottom = a,
                m.back = i,
                m.front = s,
                e = c - 1,
                e > 0 && (m.body = t[e]); e--; )
                    v(t[e])
            },
            updateBodyForce: g,
            options: function(t) {
                return t ? ("number" == typeof t.gravity && (c = t.gravity),
                "number" == typeof t.theta && (h = t.theta),
                this) : {
                    gravity: c,
                    theta: h
                }
            }
        }
    }
}
, function(t, e) {
    t.exports = function() {
        this.body = null,
        this.quad0 = null,
        this.quad1 = null,
        this.quad2 = null,
        this.quad3 = null,
        this.quad4 = null,
        this.quad5 = null,
        this.quad6 = null,
        this.quad7 = null,
        this.mass = 0,
        this.massX = 0,
        this.massY = 0,
        this.massZ = 0,
        this.left = 0,
        this.top = 0,
        this.bottom = 0,
        this.right = 0,
        this.front = 0,
        this.back = 0
    }
}
, function(t, e) {
    function n() {
        this.stack = [],
        this.popIdx = 0
    }
    function r(t, e) {
        this.node = t,
        this.body = e
    }
    t.exports = n,
    n.prototype = {
        isEmpty: function() {
            return 0 === this.popIdx
        },
        push: function(t, e) {
            var n = this.stack[this.popIdx];
            n ? (n.node = t,
            n.body = e) : this.stack[this.popIdx] = new r(t,e),
            ++this.popIdx
        },
        pop: function() {
            if (this.popIdx > 0)
                return this.stack[--this.popIdx]
        },
        reset: function() {
            this.popIdx = 0
        }
    }
}
, function(t, e) {
    t.exports = function(t, e) {
        var n = Math.abs(t.x - e.x)
          , r = Math.abs(t.y - e.y)
          , i = Math.abs(t.z - e.z);
        return n < 1e-8 && r < 1e-8 && i < 1e-8
    }
}
, function(t, e, n) {
    t.exports = function(t, e) {
        function r() {
            var e = t.length;
            if (0 !== e) {
                for (var n = Number.MAX_VALUE, r = Number.MAX_VALUE, i = Number.MAX_VALUE, a = Number.MIN_VALUE, s = Number.MIN_VALUE, c = Number.MIN_VALUE; e--; ) {
                    var l = t[e];
                    l.isPinned ? (l.pos.x = l.prevPos.x,
                    l.pos.y = l.prevPos.y,
                    l.pos.z = l.prevPos.z) : (l.prevPos.x = l.pos.x,
                    l.prevPos.y = l.pos.y,
                    l.prevPos.z = l.pos.z),
                    l.pos.x < n && (n = l.pos.x),
                    l.pos.x > a && (a = l.pos.x),
                    l.pos.y < r && (r = l.pos.y),
                    l.pos.y > s && (s = l.pos.y),
                    l.pos.z < i && (i = l.pos.z),
                    l.pos.z > c && (c = l.pos.z)
                }
                o.x1 = n,
                o.x2 = a,
                o.y1 = r,
                o.y2 = s,
                o.z1 = i,
                o.z2 = c
            }
        }
        var i = n(44).random(42)
          , o = {
            x1: 0,
            y1: 0,
            z1: 0,
            x2: 0,
            y2: 0,
            z2: 0
        };
        return {
            box: o,
            update: r,
            reset: function() {
                o.x1 = o.y1 = 0,
                o.x2 = o.y2 = 0,
                o.z1 = o.z2 = 0
            },
            getBestNewPosition: function(t) {
                var n = o
                  , r = 0
                  , a = 0
                  , s = 0;
                if (t.length) {
                    for (var c = 0; c < t.length; ++c)
                        r += t[c].pos.x,
                        a += t[c].pos.y,
                        s += t[c].pos.z;
                    r /= t.length,
                    a /= t.length,
                    s /= t.length
                } else
                    r = (n.x1 + n.x2) / 2,
                    a = (n.y1 + n.y2) / 2,
                    s = (n.z1 + n.z2) / 2;
                var l = e.springLength;
                return {
                    x: r + i.next(l) - l / 2,
                    y: a + i.next(l) - l / 2,
                    z: s + i.next(l) - l / 2
                }
            }
        }
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(53);
        t = e(t, {
            dragCoeff: .02
        });
        var i = {
            update: function(e) {
                e.force.x -= t.dragCoeff * e.velocity.x,
                e.force.y -= t.dragCoeff * e.velocity.y,
                e.force.z -= t.dragCoeff * e.velocity.z
            }
        };
        return r(t, i, ["dragCoeff"]),
        i
    }
}
, function(t, e, n) {
    t.exports = function(t) {
        var e = n(43)
          , r = n(44).random(42)
          , i = n(53);
        t = e(t, {
            springCoeff: 2e-4,
            springLength: 80
        });
        var o = {
            update: function(e) {
                var n = e.from
                  , i = e.to
                  , o = e.length < 0 ? t.springLength : e.length
                  , a = i.pos.x - n.pos.x
                  , s = i.pos.y - n.pos.y
                  , c = i.pos.z - n.pos.z
                  , l = Math.sqrt(a * a + s * s + c * c);
                0 === l && (a = (r.nextDouble() - .5) / 50,
                s = (r.nextDouble() - .5) / 50,
                c = (r.nextDouble() - .5) / 50,
                l = Math.sqrt(a * a + s * s + c * c));
                var u = l - o
                  , h = (!e.coeff || e.coeff < 0 ? t.springCoeff : e.coeff) * u / l * e.weight;
                n.force.x += h * a,
                n.force.y += h * s,
                n.force.z += h * c,
                i.force.x -= h * a,
                i.force.y -= h * s,
                i.force.z -= h * c
            }
        };
        return i(t, o, ["springCoeff", "springLength"]),
        o
    }
}
, function(t, e, n) {
    var r = n(157);
    t.exports = function(t) {
        return new r.Body3d(t)
    }
}
, function(t, e) {
    function n(t, e) {
        var n, r = 0, i = 0, o = 0, a = t.length;
        for (n = 0; n < a; ++n) {
            var s = t[n]
              , c = e * e / s.mass;
            s.pos.x = 2 * s.pos.x - s.prevPos.x + s.force.x * c,
            s.pos.y = 2 * s.pos.y - s.prevPos.y + s.force.y * c,
            s.pos.z = 2 * s.pos.z - s.prevPos.z + s.force.z * c,
            r += Math.abs(s.pos.x - s.prevPos.x),
            i += Math.abs(s.pos.y - s.prevPos.y),
            o += Math.abs(s.pos.z - s.prevPos.z)
        }
        return (r * r + i * i + o * o) / t.length
    }
    t.exports = n
}
, function(t, e) {
    function n(t, e) {
        var n, r = 0, i = 0, o = 0, a = 0, s = 0, c = 0, l = t.length;
        for (n = 0; n < l; ++n) {
            var u = t[n]
              , h = e / u.mass;
            u.velocity.x += h * u.force.x,
            u.velocity.y += h * u.force.y,
            u.velocity.z += h * u.force.z;
            var d = u.velocity.x
              , p = u.velocity.y
              , f = u.velocity.z
              , m = Math.sqrt(d * d + p * p + f * f);
            m > 1 && (u.velocity.x = d / m,
            u.velocity.y = p / m,
            u.velocity.z = f / m),
            r = e * u.velocity.x,
            o = e * u.velocity.y,
            s = e * u.velocity.z,
            u.pos.x += r,
            u.pos.y += o,
            u.pos.z += s,
            i += Math.abs(r),
            a += Math.abs(o),
            c += Math.abs(s)
        }
        return (i * i + a * a + c * c) / t.length
    }
    t.exports = n
}
, function(t, e, n) {
    "use strict";
    var r = n(52)
      , i = n(1142)
      , o = n.n(i)
      , a = n(494)
      , s = n.n(a)
      , c = n(1143)
      , l = n.n(c)
      , u = n(159)
      , h = n.n(u)
      , d = n(158)
      , p = n.n(d);
    !function(t, e) {
        void 0 === e && (e = {});
        var n = e.insertAt;
        if (t && "undefined" != typeof document) {
            var r = document.head || document.getElementsByTagName("head")[0]
              , i = document.createElement("style");
            i.type = "text/css",
            "top" === n && r.firstChild ? r.insertBefore(i, r.firstChild) : r.appendChild(i),
            i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t))
        }
    }(".scene-nav-info {\n  bottom: 5px;\n  width: 100%;\n  text-align: center;\n  color: slategrey;\n  opacity: 0.7;\n  font-size: 10px;\n}\n\n.scene-tooltip {\n  color: lavender;\n  font-size: 18px;\n  transform: translate(-50%, 25px);\n}\n\n.scene-nav-info, .scene-tooltip {\n  position: absolute;\n  font-family: Sans-serif;\n}");
    var f = window.THREE ? window.THREE : {
        WebGLRenderer: r.WebGLRenderer,
        Scene: r.Scene,
        PerspectiveCamera: r.PerspectiveCamera,
        Raycaster: r.Raycaster,
        Vector2: r.Vector2,
        Vector3: r.Vector3,
        Color: r.Color
    }
      , m = p()({
        props: {
            width: {
                default: window.innerWidth
            },
            height: {
                default: window.innerHeight
            },
            backgroundColor: {
                default: "#000011",
                onChange: function(t, e) {
                    var n = s()(t).getAlpha();
                    e.renderer.setClearColor(new f.Color(t), n)
                },
                triggerUpdate: !1
            },
            showNavInfo: {
                default: !0
            },
            objects: {
                default: [],
                onChange: function(t, e) {
                    (e.prevObjs || []).forEach(function(t) {
                        return e.scene.remove(t)
                    }),
                    e.prevObjs = t,
                    t.forEach(function(t) {
                        return e.scene.add(t)
                    })
                },
                triggerUpdate: !1
            },
            enablePointerInteraction: {
                default: !0,
                onChange: function(t, e) {
                    e.hoverObj = null
                },
                triggerUpdate: !1
            },
            lineHoverPrecision: {
                default: 1,
                triggerUpdate: !1
            },
            hoverOrderComparator: {
                default: function() {
                    return -1
                },
                triggerUpdate: !1
            },
            tooltipContent: {
                triggerUpdate: !1
            },
            onHover: {
                default: function() {},
                triggerUpdate: !1
            },
            onClick: {
                default: function() {},
                triggerUpdate: !1
            }
        },
        methods: {
            tick: function(t) {
                if (t.initialised && (t.tbControls.update(),
                t.renderer.render(t.scene, t.camera),
                t.enablePointerInteraction)) {
                    var e = new f.Raycaster;
                    e.linePrecision = t.lineHoverPrecision,
                    e.setFromCamera(t.mousePos, t.camera);
                    var n = e.intersectObjects(t.objects, !0).map(function(t) {
                        return t.object
                    }).sort(t.hoverOrderComparator)
                      , r = n.length ? n[0] : null;
                    r !== t.hoverObj && (t.onHover(r, t.hoverObj),
                    t.toolTipElem.innerHTML = r ? h()(t.tooltipContent)(r) || "" : "",
                    t.hoverObj = r)
                }
                return this
            },
            cameraPosition: function(t, e, n, r) {
                function i(t) {
                    var e = t.x
                      , n = t.y
                      , r = t.z;
                    void 0 !== e && (s.position.x = e),
                    void 0 !== n && (s.position.y = n),
                    void 0 !== r && (s.position.z = r)
                }
                function o(e) {
                    t.tbControls.target = new f.Vector3(e.x,e.y,e.z)
                }
                function a() {
                    return Object.assign(new f.Vector3(0,0,-1e3).applyQuaternion(s.quaternion).add(s.position))
                }
                var s = t.camera;
                if (e && t.initialised) {
                    var c = e
                      , u = n || {
                        x: 0,
                        y: 0,
                        z: 0
                    };
                    if (r) {
                        var h = Object.assign({}, s.position)
                          , d = a()
                          , p = r / 1e3;
                        l.a.to(h, p, Object.assign({
                            onUpdate: function() {
                                return i(h)
                            }
                        }, c)),
                        l.a.to(d, p / 3, Object.assign({
                            onUpdate: function() {
                                return o(d)
                            }
                        }, u))
                    } else
                        i(c),
                        o(u);
                    return this
                }
                return Object.assign({}, s.position, {
                    lookAt: a()
                })
            },
            renderer: function(t) {
                return t.renderer
            },
            scene: function(t) {
                return t.scene
            },
            camera: function(t) {
                return t.camera
            },
            tbControls: function(t) {
                return t.tbControls
            }
        },
        stateInit: function() {
            return {
                renderer: new f.WebGLRenderer({
                    alpha: !0
                }),
                scene: new f.Scene,
                camera: new f.PerspectiveCamera
            }
        },
        init: function(t, e) {
            t.innerHTML = "",
            t.appendChild(e.container = document.createElement("div")),
            e.container.style.position = "relative",
            e.container.appendChild(e.navInfo = document.createElement("div")),
            e.navInfo.className = "scene-nav-info",
            e.navInfo.textContent = "MOVE mouse & press LEFT/A: rotate, MIDDLE/S: zoom, RIGHT/D: pan",
            e.toolTipElem = document.createElement("div"),
            e.toolTipElem.classList.add("scene-tooltip"),
            e.container.appendChild(e.toolTipElem),
            e.mousePos = new f.Vector2,
            e.mousePos.x = -2,
            e.mousePos.y = -2,
            e.container.addEventListener("mousemove", function(t) {
                if (e.enablePointerInteraction) {
                    var n = function(t) {
                        var e = t.getBoundingClientRect()
                          , n = window.pageXOffset || document.documentElement.scrollLeft
                          , r = window.pageYOffset || document.documentElement.scrollTop;
                        return {
                            top: e.top + r,
                            left: e.left + n
                        }
                    }(e.container)
                      , r = {
                        x: t.pageX - n.left,
                        y: t.pageY - n.top
                    };
                    e.mousePos.x = r.x / e.width * 2 - 1,
                    e.mousePos.y = -r.y / e.height * 2 + 1,
                    e.toolTipElem.style.top = r.y + "px",
                    e.toolTipElem.style.left = r.x + "px"
                }
            }, !1),
            e.container.addEventListener("click", function(t) {
                e.hoverObj && e.onClick(e.hoverObj)
            }, !1),
            e.container.appendChild(e.renderer.domElement),
            e.tbControls = new o.a(e.camera,e.renderer.domElement),
            e.tbControls.minDistance = .1,
            e.tbControls.maxDistance = 5e4,
            e.renderer.setSize(e.width, e.height),
            e.camera.position.z = 1e3,
            e.camera.far = 5e4,
            window.scene = e.scene
        },
        update: function(t) {
            t.width && t.height && (t.container.style.width = t.width,
            t.container.style.height = t.height,
            t.renderer.setSize(t.width, t.height),
            t.camera.aspect = t.width / t.height,
            t.camera.updateProjectionMatrix()),
            t.navInfo.style.display = t.showNavInfo ? null : "none"
        }
    });
    e.a = m
}
, function(t, e, n) {
    var r, i = window.THREE || n(52);
    t.exports = r = function(t, e) {
        function n(t, e) {
            return Array.isArray(t) ? -1 !== t.indexOf(e) : t === e
        }
        function r(t) {
            !1 !== f.enabled && (window.removeEventListener("keydown", r),
            y = g,
            g === m.NONE && (n(f.keys[m.ROTATE], t.keyCode) && !f.noRotate ? g = m.ROTATE : n(f.keys[m.ZOOM], t.keyCode) && !f.noZoom ? g = m.ZOOM : n(f.keys[m.PAN], t.keyCode) && !f.noPan && (g = m.PAN)))
        }
        function o(t) {
            !1 !== f.enabled && (g = y,
            window.addEventListener("keydown", r, !1))
        }
        function a(t) {
            !1 !== f.enabled && (t.preventDefault(),
            t.stopPropagation(),
            g === m.NONE && (g = t.button),
            g !== m.ROTATE || f.noRotate ? g !== m.ZOOM || f.noZoom ? g !== m.PAN || f.noPan || (C.copy(I(t.pageX, t.pageY)),
            P.copy(C)) : (E.copy(I(t.pageX, t.pageY)),
            T.copy(E)) : (b.copy(D(t.pageX, t.pageY)),
            x.copy(b)),
            document.addEventListener("mousemove", s, !1),
            document.addEventListener("mouseup", c, !1),
            f.dispatchEvent(R))
        }
        function s(t) {
            !1 !== f.enabled && (t.preventDefault(),
            t.stopPropagation(),
            g !== m.ROTATE || f.noRotate ? g !== m.ZOOM || f.noZoom ? g !== m.PAN || f.noPan || P.copy(I(t.pageX, t.pageY)) : T.copy(I(t.pageX, t.pageY)) : (x.copy(b),
            b.copy(D(t.pageX, t.pageY))))
        }
        function c(t) {
            !1 !== f.enabled && (t.preventDefault(),
            t.stopPropagation(),
            g = m.NONE,
            document.removeEventListener("mousemove", s),
            document.removeEventListener("mouseup", c),
            f.dispatchEvent(O))
        }
        function l(t) {
            if (!1 !== f.enabled) {
                switch (t.preventDefault(),
                t.stopPropagation(),
                t.deltaMode) {
                case 2:
                    E.y -= .025 * t.deltaY;
                    break;
                case 1:
                    E.y -= .01 * t.deltaY;
                    break;
                default:
                    E.y -= 25e-5 * t.deltaY
                }
                f.dispatchEvent(R),
                f.dispatchEvent(O)
            }
        }
        function u(t) {
            if (!1 !== f.enabled) {
                switch (t.touches.length) {
                case 1:
                    g = m.TOUCH_ROTATE,
                    b.copy(D(t.touches[0].pageX, t.touches[0].pageY)),
                    x.copy(b);
                    break;
                default:
                    g = m.TOUCH_ZOOM_PAN;
                    var e = t.touches[0].pageX - t.touches[1].pageX
                      , n = t.touches[0].pageY - t.touches[1].pageY;
                    A = S = Math.sqrt(e * e + n * n);
                    var r = (t.touches[0].pageX + t.touches[1].pageX) / 2
                      , i = (t.touches[0].pageY + t.touches[1].pageY) / 2;
                    C.copy(I(r, i)),
                    P.copy(C)
                }
                f.dispatchEvent(R)
            }
        }
        function h(t) {
            if (!1 !== f.enabled)
                switch (t.preventDefault(),
                t.stopPropagation(),
                t.touches.length) {
                case 1:
                    x.copy(b),
                    b.copy(D(t.touches[0].pageX, t.touches[0].pageY));
                    break;
                default:
                    var e = t.touches[0].pageX - t.touches[1].pageX
                      , n = t.touches[0].pageY - t.touches[1].pageY;
                    A = Math.sqrt(e * e + n * n);
                    var r = (t.touches[0].pageX + t.touches[1].pageX) / 2
                      , i = (t.touches[0].pageY + t.touches[1].pageY) / 2;
                    P.copy(I(r, i))
                }
        }
        function d(t) {
            if (!1 !== f.enabled) {
                switch (t.touches.length) {
                case 0:
                    g = m.NONE;
                    break;
                case 1:
                    g = m.TOUCH_ROTATE,
                    b.copy(D(t.touches[0].pageX, t.touches[0].pageY)),
                    x.copy(b)
                }
                f.dispatchEvent(O)
            }
        }
        function p(t) {
            !1 !== f.enabled && t.preventDefault()
        }
        var f = this
          , m = {
            NONE: -1,
            ROTATE: 0,
            ZOOM: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_ZOOM_PAN: 4
        };
        this.object = t,
        this.domElement = void 0 !== e ? e : document,
        this.enabled = !0,
        this.screen = {
            left: 0,
            top: 0,
            width: 0,
            height: 0
        },
        this.rotateSpeed = 1,
        this.zoomSpeed = 1.2,
        this.panSpeed = .3,
        this.noRotate = !1,
        this.noZoom = !1,
        this.noPan = !1,
        this.staticMoving = !1,
        this.dynamicDampingFactor = .2,
        this.minDistance = 0,
        this.maxDistance = 1 / 0,
        this.keys = [65, 83, 68],
        this.target = new i.Vector3;
        var v = new i.Vector3
          , g = m.NONE
          , y = m.NONE
          , _ = new i.Vector3
          , x = new i.Vector2
          , b = new i.Vector2
          , w = new i.Vector3
          , M = 0
          , E = new i.Vector2
          , T = new i.Vector2
          , S = 0
          , A = 0
          , C = new i.Vector2
          , P = new i.Vector2;
        this.target0 = this.target.clone(),
        this.position0 = this.object.position.clone(),
        this.up0 = this.object.up.clone();
        var L = {
            type: "change"
        }
          , R = {
            type: "start"
        }
          , O = {
            type: "end"
        };
        this.handleResize = function() {
            if (this.domElement === document)
                this.screen.left = 0,
                this.screen.top = 0,
                this.screen.width = window.innerWidth,
                this.screen.height = window.innerHeight;
            else {
                var t = this.domElement.getBoundingClientRect()
                  , e = this.domElement.ownerDocument.documentElement;
                this.screen.left = t.left + window.pageXOffset - e.clientLeft,
                this.screen.top = t.top + window.pageYOffset - e.clientTop,
                this.screen.width = t.width,
                this.screen.height = t.height
            }
        }
        ,
        this.handleEvent = function(t) {
            "function" == typeof this[t.type] && this[t.type](t)
        }
        ;
        var I = function() {
            var t = new i.Vector2;
            return function(e, n) {
                return t.set((e - f.screen.left) / f.screen.width, (n - f.screen.top) / f.screen.height),
                t
            }
        }()
          , D = function() {
            var t = new i.Vector2;
            return function(e, n) {
                return t.set((e - .5 * f.screen.width - f.screen.left) / (.5 * f.screen.width), (f.screen.height + 2 * (f.screen.top - n)) / f.screen.width),
                t
            }
        }();
        this.rotateCamera = function() {
            var t, e = new i.Vector3, n = new i.Quaternion, r = new i.Vector3, o = new i.Vector3, a = new i.Vector3, s = new i.Vector3;
            return function() {
                s.set(b.x - x.x, b.y - x.y, 0),
                t = s.length(),
                t ? (_.copy(f.object.position).sub(f.target),
                r.copy(_).normalize(),
                o.copy(f.object.up).normalize(),
                a.crossVectors(o, r).normalize(),
                o.setLength(b.y - x.y),
                a.setLength(b.x - x.x),
                s.copy(o.add(a)),
                e.crossVectors(s, _).normalize(),
                t *= f.rotateSpeed,
                n.setFromAxisAngle(e, t),
                _.applyQuaternion(n),
                f.object.up.applyQuaternion(n),
                w.copy(e),
                M = t) : !f.staticMoving && M && (M *= Math.sqrt(1 - f.dynamicDampingFactor),
                _.copy(f.object.position).sub(f.target),
                n.setFromAxisAngle(w, M),
                _.applyQuaternion(n),
                f.object.up.applyQuaternion(n)),
                x.copy(b)
            }
        }(),
        this.zoomCamera = function() {
            var t;
            g === m.TOUCH_ZOOM_PAN ? (t = S / A,
            S = A,
            _.multiplyScalar(t)) : (t = 1 + (T.y - E.y) * f.zoomSpeed,
            1 !== t && t > 0 && _.multiplyScalar(t),
            f.staticMoving ? E.copy(T) : E.y += (T.y - E.y) * this.dynamicDampingFactor)
        }
        ,
        this.panCamera = function() {
            var t = new i.Vector2
              , e = new i.Vector3
              , n = new i.Vector3;
            return function() {
                t.copy(P).sub(C),
                t.lengthSq() && (t.multiplyScalar(_.length() * f.panSpeed),
                n.copy(_).cross(f.object.up).setLength(t.x),
                n.add(e.copy(f.object.up).setLength(t.y)),
                f.object.position.add(n),
                f.target.add(n),
                f.staticMoving ? C.copy(P) : C.add(t.subVectors(P, C).multiplyScalar(f.dynamicDampingFactor)))
            }
        }(),
        this.checkDistances = function() {
            f.noZoom && f.noPan || (_.lengthSq() > f.maxDistance * f.maxDistance && (f.object.position.addVectors(f.target, _.setLength(f.maxDistance)),
            E.copy(T)),
            _.lengthSq() < f.minDistance * f.minDistance && (f.object.position.addVectors(f.target, _.setLength(f.minDistance)),
            E.copy(T)))
        }
        ,
        this.update = function() {
            _.subVectors(f.object.position, f.target),
            f.noRotate || f.rotateCamera(),
            f.noZoom || f.zoomCamera(),
            f.noPan || f.panCamera(),
            f.object.position.addVectors(f.target, _),
            f.checkDistances(),
            f.object.lookAt(f.target),
            v.distanceToSquared(f.object.position) > 1e-6 && (f.dispatchEvent(L),
            v.copy(f.object.position))
        }
        ,
        this.reset = function() {
            g = m.NONE,
            y = m.NONE,
            f.target.copy(f.target0),
            f.object.position.copy(f.position0),
            f.object.up.copy(f.up0),
            _.subVectors(f.object.position, f.target),
            f.object.lookAt(f.target),
            f.dispatchEvent(L),
            v.copy(f.object.position)
        }
        ,
        this.dispose = function() {
            this.domElement.removeEventListener("contextmenu", p, !1),
            this.domElement.removeEventListener("mousedown", a, !1),
            this.domElement.removeEventListener("wheel", l, !1),
            this.domElement.removeEventListener("touchstart", u, !1),
            this.domElement.removeEventListener("touchend", d, !1),
            this.domElement.removeEventListener("touchmove", h, !1),
            document.removeEventListener("mousemove", s, !1),
            document.removeEventListener("mouseup", c, !1),
            window.removeEventListener("keydown", r, !1),
            window.removeEventListener("keyup", o, !1)
        }
        ,
        this.domElement.addEventListener("contextmenu", p, !1),
        this.domElement.addEventListener("mousedown", a, !1),
        this.domElement.addEventListener("wheel", l, !1),
        this.domElement.addEventListener("touchstart", u, !1),
        this.domElement.addEventListener("touchend", d, !1),
        this.domElement.addEventListener("touchmove", h, !1),
        window.addEventListener("keydown", r, !1),
        window.addEventListener("keyup", o, !1),
        this.handleResize(),
        this.update()
    }
    ,
    r.prototype = Object.create(i.EventDispatcher.prototype)
}
, function(t, e, n) {
    (function(n) {
        var r, i, o = void 0 !== t && t.exports && void 0 !== n ? n : this || window;
        (o._gsQueue || (o._gsQueue = [])).push(function() {
            "use strict";
            o._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, n) {
                var r = function(t) {
                    var e, n = [], r = t.length;
                    for (e = 0; e !== r; n.push(t[e++]))
                        ;
                    return n
                }
                  , i = function(t, e, n) {
                    var r, i, o = t.cycle;
                    for (r in o)
                        i = o[r],
                        t[r] = "function" == typeof i ? i(n, e[n]) : i[n % i.length];
                    delete t.cycle
                }
                  , o = function(t, e, r) {
                    n.call(this, t, e, r),
                    this._cycle = 0,
                    this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                    this._repeat = this.vars.repeat || 0,
                    this._repeatDelay = this.vars.repeatDelay || 0,
                    this._repeat && this._uncache(!0),
                    this.render = o.prototype.render
                }
                  , a = n._internals
                  , s = a.isSelector
                  , c = a.isArray
                  , l = o.prototype = n.to({}, .1, {})
                  , u = [];
                o.version = "1.20.4",
                l.constructor = o,
                l.kill()._gc = !1,
                o.killTweensOf = o.killDelayedCallsTo = n.killTweensOf,
                o.getTweensOf = n.getTweensOf,
                o.lagSmoothing = n.lagSmoothing,
                o.ticker = n.ticker,
                o.render = n.render,
                l.invalidate = function() {
                    return this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                    this._repeat = this.vars.repeat || 0,
                    this._repeatDelay = this.vars.repeatDelay || 0,
                    this._yoyoEase = null,
                    this._uncache(!0),
                    n.prototype.invalidate.call(this)
                }
                ,
                l.updateTo = function(t, e) {
                    var r, i = this.ratio, o = this.vars.immediateRender || t.immediateRender;
                    e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                    this._uncache(!1),
                    this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                    for (r in t)
                        this.vars[r] = t[r];
                    if (this._initted || o)
                        if (e)
                            this._initted = !1,
                            o && this.render(0, !0, !0);
                        else if (this._gc && this._enabled(!0, !1),
                        this._notifyPluginsOfEnabled && this._firstPT && n._onPluginEvent("_onDisable", this),
                        this._time / this._duration > .998) {
                            var a = this._totalTime;
                            this.render(0, !0, !1),
                            this._initted = !1,
                            this.render(a, !0, !1)
                        } else if (this._initted = !1,
                        this._init(),
                        this._time > 0 || o)
                            for (var s, c = 1 / (1 - i), l = this._firstPT; l; )
                                s = l.s + l.c,
                                l.c *= c,
                                l.s = s - l.c,
                                l = l._next;
                    return this
                }
                ,
                l.render = function(t, e, r) {
                    this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                    var i, o, s, c, l, u, h, d, p, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._time, v = this._totalTime, g = this._cycle, y = this._duration, _ = this._rawPrevTime;
                    if (t >= f - 1e-7 && t >= 0 ? (this._totalTime = f,
                    this._cycle = this._repeat,
                    this._yoyo && 0 != (1 & this._cycle) ? (this._time = 0,
                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = y,
                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                    this._reversed || (i = !0,
                    o = "onComplete",
                    r = r || this._timeline.autoRemoveChildren),
                    0 === y && (this._initted || !this.vars.lazy || r) && (this._startTime === this._timeline._duration && (t = 0),
                    (_ < 0 || t <= 0 && t >= -1e-7 || 1e-10 === _ && "isPause" !== this.data) && _ !== t && (r = !0,
                    _ > 1e-10 && (o = "onReverseComplete")),
                    this._rawPrevTime = d = !e || t || _ === t ? t : 1e-10)) : t < 1e-7 ? (this._totalTime = this._time = this._cycle = 0,
                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                    (0 !== v || 0 === y && _ > 0) && (o = "onReverseComplete",
                    i = this._reversed),
                    t < 0 && (this._active = !1,
                    0 === y && (this._initted || !this.vars.lazy || r) && (_ >= 0 && (r = !0),
                    this._rawPrevTime = d = !e || t || _ === t ? t : 1e-10)),
                    this._initted || (r = !0)) : (this._totalTime = this._time = t,
                    0 !== this._repeat && (c = y + this._repeatDelay,
                    this._cycle = this._totalTime / c >> 0,
                    0 !== this._cycle && this._cycle === this._totalTime / c && v <= t && this._cycle--,
                    this._time = this._totalTime - this._cycle * c,
                    this._yoyo && 0 != (1 & this._cycle) && (this._time = y - this._time,
                    (p = this._yoyoEase || this.vars.yoyoEase) && (this._yoyoEase || (!0 !== p || this._initted ? this._yoyoEase = p = !0 === p ? this._ease : p instanceof Ease ? p : Ease.map[p] : (p = this.vars.ease,
                    this._yoyoEase = p = p ? p instanceof Ease ? p : "function" == typeof p ? new Ease(p,this.vars.easeParams) : Ease.map[p] || n.defaultEase : n.defaultEase)),
                    this.ratio = p ? 1 - p.getRatio((y - this._time) / y) : 0)),
                    this._time > y ? this._time = y : this._time < 0 && (this._time = 0)),
                    this._easeType && !p ? (l = this._time / y,
                    u = this._easeType,
                    h = this._easePower,
                    (1 === u || 3 === u && l >= .5) && (l = 1 - l),
                    3 === u && (l *= 2),
                    1 === h ? l *= l : 2 === h ? l *= l * l : 3 === h ? l *= l * l * l : 4 === h && (l *= l * l * l * l),
                    1 === u ? this.ratio = 1 - l : 2 === u ? this.ratio = l : this._time / y < .5 ? this.ratio = l / 2 : this.ratio = 1 - l / 2) : p || (this.ratio = this._ease.getRatio(this._time / y))),
                    m === this._time && !r && g === this._cycle)
                        return void (v !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                    if (!this._initted) {
                        if (this._init(),
                        !this._initted || this._gc)
                            return;
                        if (!r && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                            return this._time = m,
                            this._totalTime = v,
                            this._rawPrevTime = _,
                            this._cycle = g,
                            a.lazyTweens.push(this),
                            void (this._lazy = [t, e]);
                        !this._time || i || p ? i && this._ease._calcEnd && !p && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : this.ratio = this._ease.getRatio(this._time / y)
                    }
                    for (!1 !== this._lazy && (this._lazy = !1),
                    this._active || !this._paused && this._time !== m && t >= 0 && (this._active = !0),
                    0 === v && (2 === this._initted && t > 0 && this._init(),
                    this._startAt && (t >= 0 ? this._startAt.render(t, !0, r) : o || (o = "_dummyGS")),
                    this.vars.onStart && (0 === this._totalTime && 0 !== y || e || this._callback("onStart"))),
                    s = this._firstPT; s; )
                        s.f ? s.t[s.p](s.c * this.ratio + s.s) : s.t[s.p] = s.c * this.ratio + s.s,
                        s = s._next;
                    this._onUpdate && (t < 0 && this._startAt && this._startTime && this._startAt.render(t, !0, r),
                    e || (this._totalTime !== v || o) && this._callback("onUpdate")),
                    this._cycle !== g && (e || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                    o && (this._gc && !r || (t < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, !0, r),
                    i && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                    this._active = !1),
                    !e && this.vars[o] && this._callback(o),
                    0 === y && 1e-10 === this._rawPrevTime && 1e-10 !== d && (this._rawPrevTime = 0)))
                }
                ,
                o.to = function(t, e, n) {
                    return new o(t,e,n)
                }
                ,
                o.from = function(t, e, n) {
                    return n.runBackwards = !0,
                    n.immediateRender = 0 != n.immediateRender,
                    new o(t,e,n)
                }
                ,
                o.fromTo = function(t, e, n, r) {
                    return r.startAt = n,
                    r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                    new o(t,e,r)
                }
                ,
                o.staggerTo = o.allTo = function(t, e, a, l, h, d, p) {
                    l = l || 0;
                    var f, m, v, g, y = 0, _ = [], x = function() {
                        a.onComplete && a.onComplete.apply(a.onCompleteScope || this, arguments),
                        h.apply(p || a.callbackScope || this, d || u)
                    }, b = a.cycle, w = a.startAt && a.startAt.cycle;
                    for (c(t) || ("string" == typeof t && (t = n.selector(t) || t),
                    s(t) && (t = r(t))),
                    t = t || [],
                    l < 0 && (t = r(t),
                    t.reverse(),
                    l *= -1),
                    f = t.length - 1,
                    v = 0; v <= f; v++) {
                        m = {};
                        for (g in a)
                            m[g] = a[g];
                        if (b && (i(m, t, v),
                        null != m.duration && (e = m.duration,
                        delete m.duration)),
                        w) {
                            w = m.startAt = {};
                            for (g in a.startAt)
                                w[g] = a.startAt[g];
                            i(m.startAt, t, v)
                        }
                        m.delay = y + (m.delay || 0),
                        v === f && h && (m.onComplete = x),
                        _[v] = new o(t[v],e,m),
                        y += l
                    }
                    return _
                }
                ,
                o.staggerFrom = o.allFrom = function(t, e, n, r, i, a, s) {
                    return n.runBackwards = !0,
                    n.immediateRender = 0 != n.immediateRender,
                    o.staggerTo(t, e, n, r, i, a, s)
                }
                ,
                o.staggerFromTo = o.allFromTo = function(t, e, n, r, i, a, s, c) {
                    return r.startAt = n,
                    r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                    o.staggerTo(t, e, r, i, a, s, c)
                }
                ,
                o.delayedCall = function(t, e, n, r, i) {
                    return new o(e,0,{
                        delay: t,
                        onComplete: e,
                        onCompleteParams: n,
                        callbackScope: r,
                        onReverseComplete: e,
                        onReverseCompleteParams: n,
                        immediateRender: !1,
                        useFrames: i,
                        overwrite: 0
                    })
                }
                ,
                o.set = function(t, e) {
                    return new o(t,0,e)
                }
                ,
                o.isTweening = function(t) {
                    return n.getTweensOf(t, !0).length > 0
                }
                ;
                var h = function(t, e) {
                    for (var r = [], i = 0, o = t._first; o; )
                        o instanceof n ? r[i++] = o : (e && (r[i++] = o),
                        r = r.concat(h(o, e)),
                        i = r.length),
                        o = o._next;
                    return r
                }
                  , d = o.getAllTweens = function(e) {
                    return h(t._rootTimeline, e).concat(h(t._rootFramesTimeline, e))
                }
                ;
                o.killAll = function(t, n, r, i) {
                    null == n && (n = !0),
                    null == r && (r = !0);
                    var o, a, s, c = d(0 != i), l = c.length, u = n && r && i;
                    for (s = 0; s < l; s++)
                        a = c[s],
                        (u || a instanceof e || (o = a.target === a.vars.onComplete) && r || n && !o) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1))
                }
                ,
                o.killChildTweensOf = function(t, e) {
                    if (null != t) {
                        var i, l, u, h, d, p = a.tweenLookup;
                        if ("string" == typeof t && (t = n.selector(t) || t),
                        s(t) && (t = r(t)),
                        c(t))
                            for (h = t.length; --h > -1; )
                                o.killChildTweensOf(t[h], e);
                        else {
                            i = [];
                            for (u in p)
                                for (l = p[u].target.parentNode; l; )
                                    l === t && (i = i.concat(p[u].tweens)),
                                    l = l.parentNode;
                            for (d = i.length,
                            h = 0; h < d; h++)
                                e && i[h].totalTime(i[h].totalDuration()),
                                i[h]._enabled(!1, !1)
                        }
                    }
                }
                ;
                var p = function(t, n, r, i) {
                    n = !1 !== n,
                    r = !1 !== r,
                    i = !1 !== i;
                    for (var o, a, s = d(i), c = n && r && i, l = s.length; --l > -1; )
                        a = s[l],
                        (c || a instanceof e || (o = a.target === a.vars.onComplete) && r || n && !o) && a.paused(t)
                };
                return o.pauseAll = function(t, e, n) {
                    p(!0, t, e, n)
                }
                ,
                o.resumeAll = function(t, e, n) {
                    p(!1, t, e, n)
                }
                ,
                o.globalTimeScale = function(e) {
                    var r = t._rootTimeline
                      , i = n.ticker.time;
                    return arguments.length ? (e = e || 1e-10,
                    r._startTime = i - (i - r._startTime) * r._timeScale / e,
                    r = t._rootFramesTimeline,
                    i = n.ticker.frame,
                    r._startTime = i - (i - r._startTime) * r._timeScale / e,
                    r._timeScale = t._rootTimeline._timeScale = e,
                    e) : r._timeScale
                }
                ,
                l.progress = function(t, e) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration()
                }
                ,
                l.totalProgress = function(t, e) {
                    return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration()
                }
                ,
                l.time = function(t, e) {
                    return arguments.length ? (this._dirty && this.totalDuration(),
                    t > this._duration && (t = this._duration),
                    this._yoyo && 0 != (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                    this.totalTime(t, e)) : this._time
                }
                ,
                l.duration = function(e) {
                    return arguments.length ? t.prototype.duration.call(this, e) : this._duration
                }
                ,
                l.totalDuration = function(t) {
                    return arguments.length ? -1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                    this._dirty = !1),
                    this._totalDuration)
                }
                ,
                l.repeat = function(t) {
                    return arguments.length ? (this._repeat = t,
                    this._uncache(!0)) : this._repeat
                }
                ,
                l.repeatDelay = function(t) {
                    return arguments.length ? (this._repeatDelay = t,
                    this._uncache(!0)) : this._repeatDelay
                }
                ,
                l.yoyo = function(t) {
                    return arguments.length ? (this._yoyo = t,
                    this) : this._yoyo
                }
                ,
                o
            }, !0),
            o._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, n) {
                var r = function(t) {
                    e.call(this, t),
                    this._labels = {},
                    this.autoRemoveChildren = !0 === this.vars.autoRemoveChildren,
                    this.smoothChildTiming = !0 === this.vars.smoothChildTiming,
                    this._sortChildren = !0,
                    this._onUpdate = this.vars.onUpdate;
                    var n, r, i = this.vars;
                    for (r in i)
                        n = i[r],
                        c(n) && -1 !== n.join("").indexOf("{self}") && (i[r] = this._swapSelfInParams(n));
                    c(i.tweens) && this.add(i.tweens, 0, i.align, i.stagger)
                }
                  , i = n._internals
                  , a = r._internals = {}
                  , s = i.isSelector
                  , c = i.isArray
                  , l = i.lazyTweens
                  , u = i.lazyRender
                  , h = o._gsDefine.globals
                  , d = function(t) {
                    var e, n = {};
                    for (e in t)
                        n[e] = t[e];
                    return n
                }
                  , p = function(t, e, n) {
                    var r, i, o = t.cycle;
                    for (r in o)
                        i = o[r],
                        t[r] = "function" == typeof i ? i(n, e[n]) : i[n % i.length];
                    delete t.cycle
                }
                  , f = a.pauseCallback = function() {}
                  , m = function(t) {
                    var e, n = [], r = t.length;
                    for (e = 0; e !== r; n.push(t[e++]))
                        ;
                    return n
                }
                  , v = r.prototype = new e;
                return r.version = "1.20.4",
                v.constructor = r,
                v.kill()._gc = v._forcingPlayhead = v._hasPause = !1,
                v.to = function(t, e, r, i) {
                    var o = r.repeat && h.TweenMax || n;
                    return e ? this.add(new o(t,e,r), i) : this.set(t, r, i)
                }
                ,
                v.from = function(t, e, r, i) {
                    return this.add((r.repeat && h.TweenMax || n).from(t, e, r), i)
                }
                ,
                v.fromTo = function(t, e, r, i, o) {
                    var a = i.repeat && h.TweenMax || n;
                    return e ? this.add(a.fromTo(t, e, r, i), o) : this.set(t, i, o)
                }
                ,
                v.staggerTo = function(t, e, i, o, a, c, l, u) {
                    var h, f, v = new r({
                        onComplete: c,
                        onCompleteParams: l,
                        callbackScope: u,
                        smoothChildTiming: this.smoothChildTiming
                    }), g = i.cycle;
                    for ("string" == typeof t && (t = n.selector(t) || t),
                    t = t || [],
                    s(t) && (t = m(t)),
                    o = o || 0,
                    o < 0 && (t = m(t),
                    t.reverse(),
                    o *= -1),
                    f = 0; f < t.length; f++)
                        h = d(i),
                        h.startAt && (h.startAt = d(h.startAt),
                        h.startAt.cycle && p(h.startAt, t, f)),
                        g && (p(h, t, f),
                        null != h.duration && (e = h.duration,
                        delete h.duration)),
                        v.to(t[f], e, h, f * o);
                    return this.add(v, a)
                }
                ,
                v.staggerFrom = function(t, e, n, r, i, o, a, s) {
                    return n.immediateRender = 0 != n.immediateRender,
                    n.runBackwards = !0,
                    this.staggerTo(t, e, n, r, i, o, a, s)
                }
                ,
                v.staggerFromTo = function(t, e, n, r, i, o, a, s, c) {
                    return r.startAt = n,
                    r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                    this.staggerTo(t, e, r, i, o, a, s, c)
                }
                ,
                v.call = function(t, e, r, i) {
                    return this.add(n.delayedCall(0, t, e, r), i)
                }
                ,
                v.set = function(t, e, r) {
                    return r = this._parseTimeOrLabel(r, 0, !0),
                    null == e.immediateRender && (e.immediateRender = r === this._time && !this._paused),
                    this.add(new n(t,0,e), r)
                }
                ,
                r.exportRoot = function(t, e) {
                    t = t || {},
                    null == t.smoothChildTiming && (t.smoothChildTiming = !0);
                    var i, o, a, s, c = new r(t), l = c._timeline;
                    for (null == e && (e = !0),
                    l._remove(c, !0),
                    c._startTime = 0,
                    c._rawPrevTime = c._time = c._totalTime = l._time,
                    a = l._first; a; )
                        s = a._next,
                        e && a instanceof n && a.target === a.vars.onComplete || (o = a._startTime - a._delay,
                        o < 0 && (i = 1),
                        c.add(a, o)),
                        a = s;
                    return l.add(c, 0),
                    i && c.totalDuration(),
                    c
                }
                ,
                v.add = function(i, o, a, s) {
                    var l, u, h, d, p, f;
                    if ("number" != typeof o && (o = this._parseTimeOrLabel(o, 0, !0, i)),
                    !(i instanceof t)) {
                        if (i instanceof Array || i && i.push && c(i)) {
                            for (a = a || "normal",
                            s = s || 0,
                            l = o,
                            u = i.length,
                            h = 0; h < u; h++)
                                c(d = i[h]) && (d = new r({
                                    tweens: d
                                })),
                                this.add(d, l),
                                "string" != typeof d && "function" != typeof d && ("sequence" === a ? l = d._startTime + d.totalDuration() / d._timeScale : "start" === a && (d._startTime -= d.delay())),
                                l += s;
                            return this._uncache(!0)
                        }
                        if ("string" == typeof i)
                            return this.addLabel(i, o);
                        if ("function" != typeof i)
                            throw "Cannot add " + i + " into the timeline; it is not a tween, timeline, function, or string.";
                        i = n.delayedCall(0, i)
                    }
                    if (e.prototype.add.call(this, i, o),
                    i._time && i.render((this.rawTime() - i._startTime) * i._timeScale, !1, !1),
                    (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                        for (p = this,
                        f = p.rawTime() > i._startTime; p._timeline; )
                            f && p._timeline.smoothChildTiming ? p.totalTime(p._totalTime, !0) : p._gc && p._enabled(!0, !1),
                            p = p._timeline;
                    return this
                }
                ,
                v.remove = function(e) {
                    if (e instanceof t) {
                        this._remove(e, !1);
                        var n = e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline;
                        return e._startTime = (e._paused ? e._pauseTime : n._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale,
                        this
                    }
                    if (e instanceof Array || e && e.push && c(e)) {
                        for (var r = e.length; --r > -1; )
                            this.remove(e[r]);
                        return this
                    }
                    return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e)
                }
                ,
                v._remove = function(t, n) {
                    return e.prototype._remove.call(this, t, n),
                    this._last ? this._time > this.duration() && (this._time = this._duration,
                    this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                    this
                }
                ,
                v.append = function(t, e) {
                    return this.add(t, this._parseTimeOrLabel(null, e, !0, t))
                }
                ,
                v.insert = v.insertMultiple = function(t, e, n, r) {
                    return this.add(t, e || 0, n, r)
                }
                ,
                v.appendMultiple = function(t, e, n, r) {
                    return this.add(t, this._parseTimeOrLabel(null, e, !0, t), n, r)
                }
                ,
                v.addLabel = function(t, e) {
                    return this._labels[t] = this._parseTimeOrLabel(e),
                    this
                }
                ,
                v.addPause = function(t, e, r, i) {
                    var o = n.delayedCall(0, f, r, i || this);
                    return o.vars.onComplete = o.vars.onReverseComplete = e,
                    o.data = "isPause",
                    this._hasPause = !0,
                    this.add(o, t)
                }
                ,
                v.removeLabel = function(t) {
                    return delete this._labels[t],
                    this
                }
                ,
                v.getLabelTime = function(t) {
                    return null != this._labels[t] ? this._labels[t] : -1
                }
                ,
                v._parseTimeOrLabel = function(e, n, r, i) {
                    var o, a;
                    if (i instanceof t && i.timeline === this)
                        this.remove(i);
                    else if (i && (i instanceof Array || i.push && c(i)))
                        for (a = i.length; --a > -1; )
                            i[a]instanceof t && i[a].timeline === this && this.remove(i[a]);
                    if (o = "number" != typeof e || n ? this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration : 0,
                    "string" == typeof n)
                        return this._parseTimeOrLabel(n, r && "number" == typeof e && null == this._labels[n] ? e - o : 0, r);
                    if (n = n || 0,
                    "string" != typeof e || !isNaN(e) && null == this._labels[e])
                        null == e && (e = o);
                    else {
                        if (-1 === (a = e.indexOf("=")))
                            return null == this._labels[e] ? r ? this._labels[e] = o + n : n : this._labels[e] + n;
                        n = parseInt(e.charAt(a - 1) + "1", 10) * Number(e.substr(a + 1)),
                        e = a > 1 ? this._parseTimeOrLabel(e.substr(0, a - 1), 0, r) : o
                    }
                    return Number(e) + n
                }
                ,
                v.seek = function(t, e) {
                    return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), !1 !== e)
                }
                ,
                v.stop = function() {
                    return this.paused(!0)
                }
                ,
                v.gotoAndPlay = function(t, e) {
                    return this.play(t, e)
                }
                ,
                v.gotoAndStop = function(t, e) {
                    return this.pause(t, e)
                }
                ,
                v.render = function(t, e, n) {
                    this._gc && this._enabled(!0, !1);
                    var r, i, o, a, s, c, h, d = this._time, p = this._dirty ? this.totalDuration() : this._totalDuration, f = this._startTime, m = this._timeScale, v = this._paused;
                    if (d !== this._time && (t += this._time - d),
                    t >= p - 1e-7 && t >= 0)
                        this._totalTime = this._time = p,
                        this._reversed || this._hasPausedChild() || (i = !0,
                        a = "onComplete",
                        s = !!this._timeline.autoRemoveChildren,
                        0 === this._duration && (t <= 0 && t >= -1e-7 || this._rawPrevTime < 0 || 1e-10 === this._rawPrevTime) && this._rawPrevTime !== t && this._first && (s = !0,
                        this._rawPrevTime > 1e-10 && (a = "onReverseComplete"))),
                        this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                        t = p + 1e-4;
                    else if (t < 1e-7)
                        if (this._totalTime = this._time = 0,
                        (0 !== d || 0 === this._duration && 1e-10 !== this._rawPrevTime && (this._rawPrevTime > 0 || t < 0 && this._rawPrevTime >= 0)) && (a = "onReverseComplete",
                        i = this._reversed),
                        t < 0)
                            this._active = !1,
                            this._timeline.autoRemoveChildren && this._reversed ? (s = i = !0,
                            a = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (s = !0),
                            this._rawPrevTime = t;
                        else {
                            if (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                            0 === t && i)
                                for (r = this._first; r && 0 === r._startTime; )
                                    r._duration || (i = !1),
                                    r = r._next;
                            t = 0,
                            this._initted || (s = !0)
                        }
                    else {
                        if (this._hasPause && !this._forcingPlayhead && !e) {
                            if (t >= d)
                                for (r = this._first; r && r._startTime <= t && !c; )
                                    r._duration || "isPause" !== r.data || r.ratio || 0 === r._startTime && 0 === this._rawPrevTime || (c = r),
                                    r = r._next;
                            else
                                for (r = this._last; r && r._startTime >= t && !c; )
                                    r._duration || "isPause" === r.data && r._rawPrevTime > 0 && (c = r),
                                    r = r._prev;
                            c && (this._time = t = c._startTime,
                            this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                        }
                        this._totalTime = this._time = this._rawPrevTime = t
                    }
                    if (this._time !== d && this._first || n || s || c) {
                        if (this._initted || (this._initted = !0),
                        this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0),
                        0 === d && this.vars.onStart && (0 === this._time && this._duration || e || this._callback("onStart")),
                        (h = this._time) >= d)
                            for (r = this._first; r && (o = r._next,
                            h === this._time && (!this._paused || v)); )
                                (r._active || r._startTime <= h && !r._paused && !r._gc) && (c === r && this.pause(),
                                r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)),
                                r = o;
                        else
                            for (r = this._last; r && (o = r._prev,
                            h === this._time && (!this._paused || v)); ) {
                                if (r._active || r._startTime <= d && !r._paused && !r._gc) {
                                    if (c === r) {
                                        for (c = r._prev; c && c.endTime() > this._time; )
                                            c.render(c._reversed ? c.totalDuration() - (t - c._startTime) * c._timeScale : (t - c._startTime) * c._timeScale, e, n),
                                            c = c._prev;
                                        c = null,
                                        this.pause()
                                    }
                                    r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)
                                }
                                r = o
                            }
                        this._onUpdate && (e || (l.length && u(),
                        this._callback("onUpdate"))),
                        a && (this._gc || f !== this._startTime && m === this._timeScale || (0 === this._time || p >= this.totalDuration()) && (i && (l.length && u(),
                        this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[a] && this._callback(a)))
                    }
                }
                ,
                v._hasPausedChild = function() {
                    for (var t = this._first; t; ) {
                        if (t._paused || t instanceof r && t._hasPausedChild())
                            return !0;
                        t = t._next
                    }
                    return !1
                }
                ,
                v.getChildren = function(t, e, r, i) {
                    i = i || -9999999999;
                    for (var o = [], a = this._first, s = 0; a; )
                        a._startTime < i || (a instanceof n ? !1 !== e && (o[s++] = a) : (!1 !== r && (o[s++] = a),
                        !1 !== t && (o = o.concat(a.getChildren(!0, e, r)),
                        s = o.length))),
                        a = a._next;
                    return o
                }
                ,
                v.getTweensOf = function(t, e) {
                    var r, i, o = this._gc, a = [], s = 0;
                    for (o && this._enabled(!0, !0),
                    r = n.getTweensOf(t),
                    i = r.length; --i > -1; )
                        (r[i].timeline === this || e && this._contains(r[i])) && (a[s++] = r[i]);
                    return o && this._enabled(!1, !0),
                    a
                }
                ,
                v.recent = function() {
                    return this._recent
                }
                ,
                v._contains = function(t) {
                    for (var e = t.timeline; e; ) {
                        if (e === this)
                            return !0;
                        e = e.timeline
                    }
                    return !1
                }
                ,
                v.shiftChildren = function(t, e, n) {
                    n = n || 0;
                    for (var r, i = this._first, o = this._labels; i; )
                        i._startTime >= n && (i._startTime += t),
                        i = i._next;
                    if (e)
                        for (r in o)
                            o[r] >= n && (o[r] += t);
                    return this._uncache(!0)
                }
                ,
                v._kill = function(t, e) {
                    if (!t && !e)
                        return this._enabled(!1, !1);
                    for (var n = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), r = n.length, i = !1; --r > -1; )
                        n[r]._kill(t, e) && (i = !0);
                    return i
                }
                ,
                v.clear = function(t) {
                    var e = this.getChildren(!1, !0, !0)
                      , n = e.length;
                    for (this._time = this._totalTime = 0; --n > -1; )
                        e[n]._enabled(!1, !1);
                    return !1 !== t && (this._labels = {}),
                    this._uncache(!0)
                }
                ,
                v.invalidate = function() {
                    for (var e = this._first; e; )
                        e.invalidate(),
                        e = e._next;
                    return t.prototype.invalidate.call(this)
                }
                ,
                v._enabled = function(t, n) {
                    if (t === this._gc)
                        for (var r = this._first; r; )
                            r._enabled(t, !0),
                            r = r._next;
                    return e.prototype._enabled.call(this, t, n)
                }
                ,
                v.totalTime = function(e, n, r) {
                    this._forcingPlayhead = !0;
                    var i = t.prototype.totalTime.apply(this, arguments);
                    return this._forcingPlayhead = !1,
                    i
                }
                ,
                v.duration = function(t) {
                    return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t),
                    this) : (this._dirty && this.totalDuration(),
                    this._duration)
                }
                ,
                v.totalDuration = function(t) {
                    if (!arguments.length) {
                        if (this._dirty) {
                            for (var e, n, r = 0, i = this._last, o = 999999999999; i; )
                                e = i._prev,
                                i._dirty && i.totalDuration(),
                                i._startTime > o && this._sortChildren && !i._paused && !this._calculatingDuration ? (this._calculatingDuration = 1,
                                this.add(i, i._startTime - i._delay),
                                this._calculatingDuration = 0) : o = i._startTime,
                                i._startTime < 0 && !i._paused && (r -= i._startTime,
                                this._timeline.smoothChildTiming && (this._startTime += i._startTime / this._timeScale,
                                this._time -= i._startTime,
                                this._totalTime -= i._startTime,
                                this._rawPrevTime -= i._startTime),
                                this.shiftChildren(-i._startTime, !1, -9999999999),
                                o = 0),
                                n = i._startTime + i._totalDuration / i._timeScale,
                                n > r && (r = n),
                                i = e;
                            this._duration = this._totalDuration = r,
                            this._dirty = !1
                        }
                        return this._totalDuration
                    }
                    return t && this.totalDuration() ? this.timeScale(this._totalDuration / t) : this
                }
                ,
                v.paused = function(e) {
                    if (!e)
                        for (var n = this._first, r = this._time; n; )
                            n._startTime === r && "isPause" === n.data && (n._rawPrevTime = 0),
                            n = n._next;
                    return t.prototype.paused.apply(this, arguments)
                }
                ,
                v.usesFrames = function() {
                    for (var e = this._timeline; e._timeline; )
                        e = e._timeline;
                    return e === t._rootFramesTimeline
                }
                ,
                v.rawTime = function(t) {
                    return t && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(t) - this._startTime) * this._timeScale
                }
                ,
                r
            }, !0),
            o._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(t, e, n) {
                var r = function(e) {
                    t.call(this, e),
                    this._repeat = this.vars.repeat || 0,
                    this._repeatDelay = this.vars.repeatDelay || 0,
                    this._cycle = 0,
                    this._yoyo = !0 === this.vars.yoyo,
                    this._dirty = !0
                }
                  , i = e._internals
                  , a = i.lazyTweens
                  , s = i.lazyRender
                  , c = o._gsDefine.globals
                  , l = new n(null,null,1,0)
                  , u = r.prototype = new t;
                return u.constructor = r,
                u.kill()._gc = !1,
                r.version = "1.20.4",
                u.invalidate = function() {
                    return this._yoyo = !0 === this.vars.yoyo,
                    this._repeat = this.vars.repeat || 0,
                    this._repeatDelay = this.vars.repeatDelay || 0,
                    this._uncache(!0),
                    t.prototype.invalidate.call(this)
                }
                ,
                u.addCallback = function(t, n, r, i) {
                    return this.add(e.delayedCall(0, t, r, i), n)
                }
                ,
                u.removeCallback = function(t, e) {
                    if (t)
                        if (null == e)
                            this._kill(null, t);
                        else
                            for (var n = this.getTweensOf(t, !1), r = n.length, i = this._parseTimeOrLabel(e); --r > -1; )
                                n[r]._startTime === i && n[r]._enabled(!1, !1);
                    return this
                }
                ,
                u.removePause = function(e) {
                    return this.removeCallback(t._internals.pauseCallback, e)
                }
                ,
                u.tweenTo = function(t, n) {
                    n = n || {};
                    var r, i, o, a = {
                        ease: l,
                        useFrames: this.usesFrames(),
                        immediateRender: !1,
                        lazy: !1
                    }, s = n.repeat && c.TweenMax || e;
                    for (i in n)
                        a[i] = n[i];
                    return a.time = this._parseTimeOrLabel(t),
                    r = Math.abs(Number(a.time) - this._time) / this._timeScale || .001,
                    o = new s(this,r,a),
                    a.onStart = function() {
                        o.target.paused(!0),
                        o.vars.time === o.target.time() || r !== o.duration() || o.isFromTo || o.duration(Math.abs(o.vars.time - o.target.time()) / o.target._timeScale).render(o.time(), !0, !0),
                        n.onStart && n.onStart.apply(n.onStartScope || n.callbackScope || o, n.onStartParams || [])
                    }
                    ,
                    o
                }
                ,
                u.tweenFromTo = function(t, e, n) {
                    n = n || {},
                    t = this._parseTimeOrLabel(t),
                    n.startAt = {
                        onComplete: this.seek,
                        onCompleteParams: [t],
                        callbackScope: this
                    },
                    n.immediateRender = !1 !== n.immediateRender;
                    var r = this.tweenTo(e, n);
                    return r.isFromTo = 1,
                    r.duration(Math.abs(r.vars.time - t) / this._timeScale || .001)
                }
                ,
                u.render = function(t, e, n) {
                    this._gc && this._enabled(!0, !1);
                    var r, i, o, c, l, u, h, d, p = this._time, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._duration, v = this._totalTime, g = this._startTime, y = this._timeScale, _ = this._rawPrevTime, x = this._paused, b = this._cycle;
                    if (p !== this._time && (t += this._time - p),
                    t >= f - 1e-7 && t >= 0)
                        this._locked || (this._totalTime = f,
                        this._cycle = this._repeat),
                        this._reversed || this._hasPausedChild() || (i = !0,
                        c = "onComplete",
                        l = !!this._timeline.autoRemoveChildren,
                        0 === this._duration && (t <= 0 && t >= -1e-7 || _ < 0 || 1e-10 === _) && _ !== t && this._first && (l = !0,
                        _ > 1e-10 && (c = "onReverseComplete"))),
                        this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : 1e-10,
                        this._yoyo && 0 != (1 & this._cycle) ? this._time = t = 0 : (this._time = m,
                        t = m + 1e-4);
                    else if (t < 1e-7)
                        if (this._locked || (this._totalTime = this._cycle = 0),
                        this._time = 0,
                        (0 !== p || 0 === m && 1e-10 !== _ && (_ > 0 || t < 0 && _ >= 0) && !this._locked) && (c = "onReverseComplete",
                        i = this._reversed),
                        t < 0)
                            this._active = !1,
                            this._timeline.autoRemoveChildren && this._reversed ? (l = i = !0,
                            c = "onReverseComplete") : _ >= 0 && this._first && (l = !0),
                            this._rawPrevTime = t;
                        else {
                            if (this._rawPrevTime = m || !e || t || this._rawPrevTime === t ? t : 1e-10,
                            0 === t && i)
                                for (r = this._first; r && 0 === r._startTime; )
                                    r._duration || (i = !1),
                                    r = r._next;
                            t = 0,
                            this._initted || (l = !0)
                        }
                    else if (0 === m && _ < 0 && (l = !0),
                    this._time = this._rawPrevTime = t,
                    this._locked || (this._totalTime = t,
                    0 !== this._repeat && (u = m + this._repeatDelay,
                    this._cycle = this._totalTime / u >> 0,
                    0 !== this._cycle && this._cycle === this._totalTime / u && v <= t && this._cycle--,
                    this._time = this._totalTime - this._cycle * u,
                    this._yoyo && 0 != (1 & this._cycle) && (this._time = m - this._time),
                    this._time > m ? (this._time = m,
                    t = m + 1e-4) : this._time < 0 ? this._time = t = 0 : t = this._time)),
                    this._hasPause && !this._forcingPlayhead && !e) {
                        if ((t = this._time) >= p || this._repeat && b !== this._cycle)
                            for (r = this._first; r && r._startTime <= t && !h; )
                                r._duration || "isPause" !== r.data || r.ratio || 0 === r._startTime && 0 === this._rawPrevTime || (h = r),
                                r = r._next;
                        else
                            for (r = this._last; r && r._startTime >= t && !h; )
                                r._duration || "isPause" === r.data && r._rawPrevTime > 0 && (h = r),
                                r = r._prev;
                        h && h._startTime < m && (this._time = t = h._startTime,
                        this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay))
                    }
                    if (this._cycle !== b && !this._locked) {
                        var w = this._yoyo && 0 != (1 & b)
                          , M = w === (this._yoyo && 0 != (1 & this._cycle))
                          , E = this._totalTime
                          , T = this._cycle
                          , S = this._rawPrevTime
                          , A = this._time;
                        if (this._totalTime = b * m,
                        this._cycle < b ? w = !w : this._totalTime += m,
                        this._time = p,
                        this._rawPrevTime = 0 === m ? _ - 1e-4 : _,
                        this._cycle = b,
                        this._locked = !0,
                        p = w ? 0 : m,
                        this.render(p, e, 0 === m),
                        e || this._gc || this.vars.onRepeat && (this._cycle = T,
                        this._locked = !1,
                        this._callback("onRepeat")),
                        p !== this._time)
                            return;
                        if (M && (this._cycle = b,
                        this._locked = !0,
                        p = w ? m + 1e-4 : -1e-4,
                        this.render(p, !0, !1)),
                        this._locked = !1,
                        this._paused && !x)
                            return;
                        this._time = A,
                        this._totalTime = E,
                        this._cycle = T,
                        this._rawPrevTime = S
                    }
                    if (!(this._time !== p && this._first || n || l || h))
                        return void (v !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")));
                    if (this._initted || (this._initted = !0),
                    this._active || !this._paused && this._totalTime !== v && t > 0 && (this._active = !0),
                    0 === v && this.vars.onStart && (0 === this._totalTime && this._totalDuration || e || this._callback("onStart")),
                    (d = this._time) >= p)
                        for (r = this._first; r && (o = r._next,
                        d === this._time && (!this._paused || x)); )
                            (r._active || r._startTime <= this._time && !r._paused && !r._gc) && (h === r && this.pause(),
                            r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)),
                            r = o;
                    else
                        for (r = this._last; r && (o = r._prev,
                        d === this._time && (!this._paused || x)); ) {
                            if (r._active || r._startTime <= p && !r._paused && !r._gc) {
                                if (h === r) {
                                    for (h = r._prev; h && h.endTime() > this._time; )
                                        h.render(h._reversed ? h.totalDuration() - (t - h._startTime) * h._timeScale : (t - h._startTime) * h._timeScale, e, n),
                                        h = h._prev;
                                    h = null,
                                    this.pause()
                                }
                                r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, n) : r.render((t - r._startTime) * r._timeScale, e, n)
                            }
                            r = o
                        }
                    this._onUpdate && (e || (a.length && s(),
                    this._callback("onUpdate"))),
                    c && (this._locked || this._gc || g !== this._startTime && y === this._timeScale || (0 === this._time || f >= this.totalDuration()) && (i && (a.length && s(),
                    this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                    this._active = !1),
                    !e && this.vars[c] && this._callback(c)))
                }
                ,
                u.getActive = function(t, e, n) {
                    null == t && (t = !0),
                    null == e && (e = !0),
                    null == n && (n = !1);
                    var r, i, o = [], a = this.getChildren(t, e, n), s = 0, c = a.length;
                    for (r = 0; r < c; r++)
                        i = a[r],
                        i.isActive() && (o[s++] = i);
                    return o
                }
                ,
                u.getLabelAfter = function(t) {
                    t || 0 !== t && (t = this._time);
                    var e, n = this.getLabelsArray(), r = n.length;
                    for (e = 0; e < r; e++)
                        if (n[e].time > t)
                            return n[e].name;
                    return null
                }
                ,
                u.getLabelBefore = function(t) {
                    null == t && (t = this._time);
                    for (var e = this.getLabelsArray(), n = e.length; --n > -1; )
                        if (e[n].time < t)
                            return e[n].name;
                    return null
                }
                ,
                u.getLabelsArray = function() {
                    var t, e = [], n = 0;
                    for (t in this._labels)
                        e[n++] = {
                            time: this._labels[t],
                            name: t
                        };
                    return e.sort(function(t, e) {
                        return t.time - e.time
                    }),
                    e
                }
                ,
                u.invalidate = function() {
                    return this._locked = !1,
                    t.prototype.invalidate.call(this)
                }
                ,
                u.progress = function(t, e) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration() || 0
                }
                ,
                u.totalProgress = function(t, e) {
                    return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration() || 0
                }
                ,
                u.totalDuration = function(e) {
                    return arguments.length ? -1 !== this._repeat && e ? this.timeScale(this.totalDuration() / e) : this : (this._dirty && (t.prototype.totalDuration.call(this),
                    this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                    this._totalDuration)
                }
                ,
                u.time = function(t, e) {
                    return arguments.length ? (this._dirty && this.totalDuration(),
                    t > this._duration && (t = this._duration),
                    this._yoyo && 0 != (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)),
                    this.totalTime(t, e)) : this._time
                }
                ,
                u.repeat = function(t) {
                    return arguments.length ? (this._repeat = t,
                    this._uncache(!0)) : this._repeat
                }
                ,
                u.repeatDelay = function(t) {
                    return arguments.length ? (this._repeatDelay = t,
                    this._uncache(!0)) : this._repeatDelay
                }
                ,
                u.yoyo = function(t) {
                    return arguments.length ? (this._yoyo = t,
                    this) : this._yoyo
                }
                ,
                u.currentLabel = function(t) {
                    return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
                }
                ,
                r
            }, !0),
            function() {
                var t = 180 / Math.PI
                  , e = []
                  , n = []
                  , r = []
                  , i = {}
                  , a = o._gsDefine.globals
                  , s = function(t, e, n, r) {
                    n === r && (n = r - (r - e) / 1e6),
                    t === e && (e = t + (n - t) / 1e6),
                    this.a = t,
                    this.b = e,
                    this.c = n,
                    this.d = r,
                    this.da = r - t,
                    this.ca = n - t,
                    this.ba = e - t
                }
                  , c = function(t, e, n, r) {
                    var i = {
                        a: t
                    }
                      , o = {}
                      , a = {}
                      , s = {
                        c: r
                    }
                      , c = (t + e) / 2
                      , l = (e + n) / 2
                      , u = (n + r) / 2
                      , h = (c + l) / 2
                      , d = (l + u) / 2
                      , p = (d - h) / 8;
                    return i.b = c + (t - c) / 4,
                    o.b = h + p,
                    i.c = o.a = (i.b + o.b) / 2,
                    o.c = a.a = (h + d) / 2,
                    a.b = d - p,
                    s.b = u + (r - u) / 4,
                    a.c = s.a = (a.b + s.b) / 2,
                    [i, o, a, s]
                }
                  , l = function(t, i, o, a, s) {
                    var l, u, h, d, p, f, m, v, g, y, _, x, b, w = t.length - 1, M = 0, E = t[0].a;
                    for (l = 0; l < w; l++)
                        p = t[M],
                        u = p.a,
                        h = p.d,
                        d = t[M + 1].d,
                        s ? (_ = e[l],
                        x = n[l],
                        b = (x + _) * i * .25 / (a ? .5 : r[l] || .5),
                        f = h - (h - u) * (a ? .5 * i : 0 !== _ ? b / _ : 0),
                        m = h + (d - h) * (a ? .5 * i : 0 !== x ? b / x : 0),
                        v = h - (f + ((m - f) * (3 * _ / (_ + x) + .5) / 4 || 0))) : (f = h - (h - u) * i * .5,
                        m = h + (d - h) * i * .5,
                        v = h - (f + m) / 2),
                        f += v,
                        m += v,
                        p.c = g = f,
                        p.b = 0 !== l ? E : E = p.a + .6 * (p.c - p.a),
                        p.da = h - u,
                        p.ca = g - u,
                        p.ba = E - u,
                        o ? (y = c(u, E, g, h),
                        t.splice(M, 1, y[0], y[1], y[2], y[3]),
                        M += 4) : M++,
                        E = m;
                    p = t[M],
                    p.b = E,
                    p.c = E + .4 * (p.d - E),
                    p.da = p.d - p.a,
                    p.ca = p.c - p.a,
                    p.ba = E - p.a,
                    o && (y = c(p.a, E, p.c, p.d),
                    t.splice(M, 1, y[0], y[1], y[2], y[3]))
                }
                  , u = function(t, r, i, o) {
                    var a, c, l, u, h, d, p = [];
                    if (o)
                        for (t = [o].concat(t),
                        c = t.length; --c > -1; )
                            "string" == typeof (d = t[c][r]) && "=" === d.charAt(1) && (t[c][r] = o[r] + Number(d.charAt(0) + d.substr(2)));
                    if ((a = t.length - 2) < 0)
                        return p[0] = new s(t[0][r],0,0,t[0][r]),
                        p;
                    for (c = 0; c < a; c++)
                        l = t[c][r],
                        u = t[c + 1][r],
                        p[c] = new s(l,0,0,u),
                        i && (h = t[c + 2][r],
                        e[c] = (e[c] || 0) + (u - l) * (u - l),
                        n[c] = (n[c] || 0) + (h - u) * (h - u));
                    return p[c] = new s(t[c][r],0,0,t[c + 1][r]),
                    p
                }
                  , h = function(t, o, a, s, c, h) {
                    var d, p, f, m, v, g, y, _, x = {}, b = [], w = h || t[0];
                    c = "string" == typeof c ? "," + c + "," : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                    null == o && (o = 1);
                    for (p in t[0])
                        b.push(p);
                    if (t.length > 1) {
                        for (_ = t[t.length - 1],
                        y = !0,
                        d = b.length; --d > -1; )
                            if (p = b[d],
                            Math.abs(w[p] - _[p]) > .05) {
                                y = !1;
                                break
                            }
                        y && (t = t.concat(),
                        h && t.unshift(h),
                        t.push(t[1]),
                        h = t[t.length - 3])
                    }
                    for (e.length = n.length = r.length = 0,
                    d = b.length; --d > -1; )
                        p = b[d],
                        i[p] = -1 !== c.indexOf("," + p + ","),
                        x[p] = u(t, p, i[p], h);
                    for (d = e.length; --d > -1; )
                        e[d] = Math.sqrt(e[d]),
                        n[d] = Math.sqrt(n[d]);
                    if (!s) {
                        for (d = b.length; --d > -1; )
                            if (i[p])
                                for (f = x[b[d]],
                                g = f.length - 1,
                                m = 0; m < g; m++)
                                    v = f[m + 1].da / n[m] + f[m].da / e[m] || 0,
                                    r[m] = (r[m] || 0) + v * v;
                        for (d = r.length; --d > -1; )
                            r[d] = Math.sqrt(r[d])
                    }
                    for (d = b.length,
                    m = a ? 4 : 1; --d > -1; )
                        p = b[d],
                        f = x[p],
                        l(f, o, a, s, i[p]),
                        y && (f.splice(0, m),
                        f.splice(f.length - m, m));
                    return x
                }
                  , d = function(t, e, n) {
                    e = e || "soft";
                    var r, i, o, a, c, l, u, h, d, p, f, m = {}, v = "cubic" === e ? 3 : 2, g = "soft" === e, y = [];
                    if (g && n && (t = [n].concat(t)),
                    null == t || t.length < v + 1)
                        throw "invalid Bezier data";
                    for (d in t[0])
                        y.push(d);
                    for (l = y.length; --l > -1; ) {
                        for (d = y[l],
                        m[d] = c = [],
                        p = 0,
                        h = t.length,
                        u = 0; u < h; u++)
                            r = null == n ? t[u][d] : "string" == typeof (f = t[u][d]) && "=" === f.charAt(1) ? n[d] + Number(f.charAt(0) + f.substr(2)) : Number(f),
                            g && u > 1 && u < h - 1 && (c[p++] = (r + c[p - 2]) / 2),
                            c[p++] = r;
                        for (h = p - v + 1,
                        p = 0,
                        u = 0; u < h; u += v)
                            r = c[u],
                            i = c[u + 1],
                            o = c[u + 2],
                            a = 2 === v ? 0 : c[u + 3],
                            c[p++] = f = 3 === v ? new s(r,i,o,a) : new s(r,(2 * i + r) / 3,(2 * i + o) / 3,o);
                        c.length = p
                    }
                    return m
                }
                  , p = function(t, e, n) {
                    for (var r, i, o, a, s, c, l, u, h, d, p, f = 1 / n, m = t.length; --m > -1; )
                        for (d = t[m],
                        o = d.a,
                        a = d.d - o,
                        s = d.c - o,
                        c = d.b - o,
                        r = i = 0,
                        u = 1; u <= n; u++)
                            l = f * u,
                            h = 1 - l,
                            r = i - (i = (l * l * a + 3 * h * (l * s + h * c)) * l),
                            p = m * n + u - 1,
                            e[p] = (e[p] || 0) + r * r
                }
                  , f = function(t, e) {
                    e = e >> 0 || 6;
                    var n, r, i, o, a = [], s = [], c = 0, l = 0, u = e - 1, h = [], d = [];
                    for (n in t)
                        p(t[n], a, e);
                    for (i = a.length,
                    r = 0; r < i; r++)
                        c += Math.sqrt(a[r]),
                        o = r % e,
                        d[o] = c,
                        o === u && (l += c,
                        o = r / e >> 0,
                        h[o] = d,
                        s[o] = l,
                        c = 0,
                        d = []);
                    return {
                        length: l,
                        lengths: s,
                        segments: h
                    }
                }
                  , m = o._gsDefine.plugin({
                    propName: "bezier",
                    priority: -1,
                    version: "1.3.8",
                    API: 2,
                    global: !0,
                    init: function(t, e, n) {
                        this._target = t,
                        e instanceof Array && (e = {
                            values: e
                        }),
                        this._func = {},
                        this._mod = {},
                        this._props = [],
                        this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                        var r, i, o, a, s, c = e.values || [], l = {}, u = c[0], p = e.autoRotate || n.vars.orientToBezier;
                        this._autoRotate = p ? p instanceof Array ? p : [["x", "y", "rotation", !0 === p ? 0 : Number(p) || 0]] : null;
                        for (r in u)
                            this._props.push(r);
                        for (o = this._props.length; --o > -1; )
                            r = this._props[o],
                            this._overwriteProps.push(r),
                            i = this._func[r] = "function" == typeof t[r],
                            l[r] = i ? t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)]() : parseFloat(t[r]),
                            s || l[r] !== c[0][r] && (s = l);
                        if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? h(c, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : d(c, e.type, l),
                        this._segCount = this._beziers[r].length,
                        this._timeRes) {
                            var m = f(this._beziers, this._timeRes);
                            this._length = m.length,
                            this._lengths = m.lengths,
                            this._segments = m.segments,
                            this._l1 = this._li = this._s1 = this._si = 0,
                            this._l2 = this._lengths[0],
                            this._curSeg = this._segments[0],
                            this._s2 = this._curSeg[0],
                            this._prec = 1 / this._curSeg.length
                        }
                        if (p = this._autoRotate)
                            for (this._initialRotations = [],
                            p[0]instanceof Array || (this._autoRotate = p = [p]),
                            o = p.length; --o > -1; ) {
                                for (a = 0; a < 3; a++)
                                    r = p[o][a],
                                    this._func[r] = "function" == typeof t[r] && t[r.indexOf("set") || "function" != typeof t["get" + r.substr(3)] ? r : "get" + r.substr(3)];
                                r = p[o][2],
                                this._initialRotations[o] = (this._func[r] ? this._func[r].call(this._target) : this._target[r]) || 0,
                                this._overwriteProps.push(r)
                            }
                        return this._startRatio = n.vars.runBackwards ? 1 : 0,
                        !0
                    },
                    set: function(e) {
                        var n, r, i, o, a, s, c, l, u, h, d = this._segCount, p = this._func, f = this._target, m = e !== this._startRatio;
                        if (this._timeRes) {
                            if (u = this._lengths,
                            h = this._curSeg,
                            e *= this._length,
                            i = this._li,
                            e > this._l2 && i < d - 1) {
                                for (l = d - 1; i < l && (this._l2 = u[++i]) <= e; )
                                    ;
                                this._l1 = u[i - 1],
                                this._li = i,
                                this._curSeg = h = this._segments[i],
                                this._s2 = h[this._s1 = this._si = 0]
                            } else if (e < this._l1 && i > 0) {
                                for (; i > 0 && (this._l1 = u[--i]) >= e; )
                                    ;
                                0 === i && e < this._l1 ? this._l1 = 0 : i++,
                                this._l2 = u[i],
                                this._li = i,
                                this._curSeg = h = this._segments[i],
                                this._s1 = h[(this._si = h.length - 1) - 1] || 0,
                                this._s2 = h[this._si]
                            }
                            if (n = i,
                            e -= this._l1,
                            i = this._si,
                            e > this._s2 && i < h.length - 1) {
                                for (l = h.length - 1; i < l && (this._s2 = h[++i]) <= e; )
                                    ;
                                this._s1 = h[i - 1],
                                this._si = i
                            } else if (e < this._s1 && i > 0) {
                                for (; i > 0 && (this._s1 = h[--i]) >= e; )
                                    ;
                                0 === i && e < this._s1 ? this._s1 = 0 : i++,
                                this._s2 = h[i],
                                this._si = i
                            }
                            s = (i + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                        } else
                            n = e < 0 ? 0 : e >= 1 ? d - 1 : d * e >> 0,
                            s = (e - n * (1 / d)) * d;
                        for (r = 1 - s,
                        i = this._props.length; --i > -1; )
                            o = this._props[i],
                            a = this._beziers[o][n],
                            c = (s * s * a.da + 3 * r * (s * a.ca + r * a.ba)) * s + a.a,
                            this._mod[o] && (c = this._mod[o](c, f)),
                            p[o] ? f[o](c) : f[o] = c;
                        if (this._autoRotate) {
                            var v, g, y, _, x, b, w, M = this._autoRotate;
                            for (i = M.length; --i > -1; )
                                o = M[i][2],
                                b = M[i][3] || 0,
                                w = !0 === M[i][4] ? 1 : t,
                                a = this._beziers[M[i][0]],
                                v = this._beziers[M[i][1]],
                                a && v && (a = a[n],
                                v = v[n],
                                g = a.a + (a.b - a.a) * s,
                                _ = a.b + (a.c - a.b) * s,
                                g += (_ - g) * s,
                                _ += (a.c + (a.d - a.c) * s - _) * s,
                                y = v.a + (v.b - v.a) * s,
                                x = v.b + (v.c - v.b) * s,
                                y += (x - y) * s,
                                x += (v.c + (v.d - v.c) * s - x) * s,
                                c = m ? Math.atan2(x - y, _ - g) * w + b : this._initialRotations[i],
                                this._mod[o] && (c = this._mod[o](c, f)),
                                p[o] ? f[o](c) : f[o] = c)
                        }
                    }
                })
                  , v = m.prototype;
                m.bezierThrough = h,
                m.cubicToQuadratic = c,
                m._autoCSS = !0,
                m.quadraticToCubic = function(t, e, n) {
                    return new s(t,(2 * e + t) / 3,(2 * e + n) / 3,n)
                }
                ,
                m._cssRegister = function() {
                    var t = a.CSSPlugin;
                    if (t) {
                        var e = t._internals
                          , n = e._parseToProxy
                          , r = e._setPluginRatio
                          , i = e.CSSPropTween;
                        e._registerComplexSpecialProp("bezier", {
                            parser: function(t, e, o, a, s, c) {
                                e instanceof Array && (e = {
                                    values: e
                                }),
                                c = new m;
                                var l, u, h, d = e.values, p = d.length - 1, f = [], v = {};
                                if (p < 0)
                                    return s;
                                for (l = 0; l <= p; l++)
                                    h = n(t, d[l], a, s, c, p !== l),
                                    f[l] = h.end;
                                for (u in e)
                                    v[u] = e[u];
                                return v.values = f,
                                s = new i(t,"bezier",0,0,h.pt,2),
                                s.data = h,
                                s.plugin = c,
                                s.setRatio = r,
                                0 === v.autoRotate && (v.autoRotate = !0),
                                !v.autoRotate || v.autoRotate instanceof Array || (l = !0 === v.autoRotate ? 0 : Number(v.autoRotate),
                                v.autoRotate = null != h.end.left ? [["left", "top", "rotation", l, !1]] : null != h.end.x && [["x", "y", "rotation", l, !1]]),
                                v.autoRotate && (a._transform || a._enableTransforms(!1),
                                h.autoRotate = a._target._gsTransform,
                                h.proxy.rotation = h.autoRotate.rotation || 0,
                                a._overwriteProps.push("rotation")),
                                c._onInitTween(h.proxy, v, a._tween),
                                s
                            }
                        })
                    }
                }
                ,
                v._mod = function(t) {
                    for (var e, n = this._overwriteProps, r = n.length; --r > -1; )
                        (e = t[n[r]]) && "function" == typeof e && (this._mod[n[r]] = e)
                }
                ,
                v._kill = function(t) {
                    var e, n, r = this._props;
                    for (e in this._beziers)
                        if (e in t)
                            for (delete this._beziers[e],
                            delete this._func[e],
                            n = r.length; --n > -1; )
                                r[n] === e && r.splice(n, 1);
                    if (r = this._autoRotate)
                        for (n = r.length; --n > -1; )
                            t[r[n][2]] && r.splice(n, 1);
                    return this._super._kill.call(this, t)
                }
            }(),
            o._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
                var n, r, i, a, s = function() {
                    t.call(this, "css"),
                    this._overwriteProps.length = 0,
                    this.setRatio = s.prototype.setRatio
                }, c = o._gsDefine.globals, l = {}, u = s.prototype = new t("css");
                u.constructor = s,
                s.version = "1.20.4",
                s.API = 2,
                s.defaultTransformPerspective = 0,
                s.defaultSkewType = "compensated",
                s.defaultSmoothOrigin = !0,
                u = "px",
                s.suffixMap = {
                    top: u,
                    right: u,
                    bottom: u,
                    left: u,
                    width: u,
                    height: u,
                    fontSize: u,
                    padding: u,
                    margin: u,
                    perspective: u,
                    lineHeight: ""
                };
                var h, d, p, f, m, v, g, y, _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g, x = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, b = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, M = /(?:\d|\-|\+|=|#|\.)*/g, E = /opacity *= *([^)]*)/i, T = /opacity:([^;]*)/i, S = /alpha\(opacity *=.+?\)/i, A = /^(rgb|hsl)/, C = /([A-Z])/g, P = /-([a-z])/gi, L = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, R = function(t, e) {
                    return e.toUpperCase()
                }, O = /(?:Left|Right|Width)/i, I = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, D = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, N = /,(?=[^\)]*(?:\(|$))/gi, k = /[\s,\(]/i, j = Math.PI / 180, z = 180 / Math.PI, B = {}, U = {
                    style: {}
                }, F = o.document || {
                    createElement: function() {
                        return U
                    }
                }, H = function(t, e) {
                    return F.createElementNS ? F.createElementNS(e || "http://www.w3.org/1999/xhtml", t) : F.createElement(t)
                }, G = H("div"), V = H("img"), W = s._internals = {
                    _specialProps: l
                }, q = (o.navigator || {}).userAgent || "", X = function() {
                    var t = q.indexOf("Android")
                      , e = H("a");
                    return p = -1 !== q.indexOf("Safari") && -1 === q.indexOf("Chrome") && (-1 === t || parseFloat(q.substr(t + 8, 2)) > 3),
                    m = p && parseFloat(q.substr(q.indexOf("Version/") + 8, 2)) < 6,
                    f = -1 !== q.indexOf("Firefox"),
                    (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(q) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(q)) && (v = parseFloat(RegExp.$1)),
                    !!e && (e.style.cssText = "top:1px;opacity:.55;",
                    /^0.55/.test(e.style.opacity))
                }(), Y = function(t) {
                    return E.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                }, $ = function(t) {
                    o.console && console.log(t)
                }, Z = "", J = "", Q = function(t, e) {
                    e = e || G;
                    var n, r, i = e.style;
                    if (void 0 !== i[t])
                        return t;
                    for (t = t.charAt(0).toUpperCase() + t.substr(1),
                    n = ["O", "Moz", "ms", "Ms", "Webkit"],
                    r = 5; --r > -1 && void 0 === i[n[r] + t]; )
                        ;
                    return r >= 0 ? (J = 3 === r ? "ms" : n[r],
                    Z = "-" + J.toLowerCase() + "-",
                    J + t) : null
                }, K = F.defaultView ? F.defaultView.getComputedStyle : function() {}
                , tt = s.getStyle = function(t, e, n, r, i) {
                    var o;
                    return X || "opacity" !== e ? (!r && t.style[e] ? o = t.style[e] : (n = n || K(t)) ? o = n[e] || n.getPropertyValue(e) || n.getPropertyValue(e.replace(C, "-$1").toLowerCase()) : t.currentStyle && (o = t.currentStyle[e]),
                    null == i || o && "none" !== o && "auto" !== o && "auto auto" !== o ? o : i) : Y(t)
                }
                , et = W.convertToPixels = function(t, n, r, i, o) {
                    if ("px" === i || !i && "lineHeight" !== n)
                        return r;
                    if ("auto" === i || !r)
                        return 0;
                    var a, c, l, u = O.test(n), h = t, d = G.style, p = r < 0, f = 1 === r;
                    if (p && (r = -r),
                    f && (r *= 100),
                    "lineHeight" !== n || i)
                        if ("%" === i && -1 !== n.indexOf("border"))
                            a = r / 100 * (u ? t.clientWidth : t.clientHeight);
                        else {
                            if (d.cssText = "border:0 solid red;position:" + tt(t, "position") + ";line-height:0;",
                            "%" !== i && h.appendChild && "v" !== i.charAt(0) && "rem" !== i)
                                d[u ? "borderLeftWidth" : "borderTopWidth"] = r + i;
                            else {
                                if (h = t.parentNode || F.body,
                                -1 !== tt(h, "display").indexOf("flex") && (d.position = "absolute"),
                                c = h._gsCache,
                                l = e.ticker.frame,
                                c && u && c.time === l)
                                    return c.width * r / 100;
                                d[u ? "width" : "height"] = r + i
                            }
                            h.appendChild(G),
                            a = parseFloat(G[u ? "offsetWidth" : "offsetHeight"]),
                            h.removeChild(G),
                            u && "%" === i && !1 !== s.cacheWidths && (c = h._gsCache = h._gsCache || {},
                            c.time = l,
                            c.width = a / r * 100),
                            0 !== a || o || (a = et(t, n, r, i, !0))
                        }
                    else
                        c = K(t).lineHeight,
                        t.style.lineHeight = r,
                        a = parseFloat(K(t).lineHeight),
                        t.style.lineHeight = c;
                    return f && (a /= 100),
                    p ? -a : a
                }
                , nt = W.calculateOffset = function(t, e, n) {
                    if ("absolute" !== tt(t, "position", n))
                        return 0;
                    var r = "left" === e ? "Left" : "Top"
                      , i = tt(t, "margin" + r, n);
                    return t["offset" + r] - (et(t, e, parseFloat(i), i.replace(M, "")) || 0)
                }
                , rt = function(t, e) {
                    var n, r, i, o = {};
                    if (e = e || K(t, null))
                        if (n = e.length)
                            for (; --n > -1; )
                                i = e[n],
                                -1 !== i.indexOf("-transform") && Lt !== i || (o[i.replace(P, R)] = e.getPropertyValue(i));
                        else
                            for (n in e)
                                -1 !== n.indexOf("Transform") && Pt !== n || (o[n] = e[n]);
                    else if (e = t.currentStyle || t.style)
                        for (n in e)
                            "string" == typeof n && void 0 === o[n] && (o[n.replace(P, R)] = e[n]);
                    return X || (o.opacity = Y(t)),
                    r = Vt(t, e, !1),
                    o.rotation = r.rotation,
                    o.skewX = r.skewX,
                    o.scaleX = r.scaleX,
                    o.scaleY = r.scaleY,
                    o.x = r.x,
                    o.y = r.y,
                    Ot && (o.z = r.z,
                    o.rotationX = r.rotationX,
                    o.rotationY = r.rotationY,
                    o.scaleZ = r.scaleZ),
                    o.filters && delete o.filters,
                    o
                }, it = function(t, e, n, r, i) {
                    var o, a, s, c = {}, l = t.style;
                    for (a in n)
                        "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (o = n[a]) || i && i[a]) && -1 === a.indexOf("Origin") && ("number" != typeof o && "string" != typeof o || (c[a] = "auto" !== o || "left" !== a && "top" !== a ? "" !== o && "auto" !== o && "none" !== o || "string" != typeof e[a] || "" === e[a].replace(w, "") ? o : 0 : nt(t, a),
                        void 0 !== l[a] && (s = new _t(l,a,l[a],s))));
                    if (r)
                        for (a in r)
                            "className" !== a && (c[a] = r[a]);
                    return {
                        difs: c,
                        firstMPT: s
                    }
                }, ot = {
                    width: ["Left", "Right"],
                    height: ["Top", "Bottom"]
                }, at = ["marginLeft", "marginRight", "marginTop", "marginBottom"], st = function(t, e, n) {
                    if ("svg" === (t.nodeName + "").toLowerCase())
                        return (n || K(t))[e] || 0;
                    if (t.getCTM && Ft(t))
                        return t.getBBox()[e] || 0;
                    var r = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight)
                      , i = ot[e]
                      , o = i.length;
                    for (n = n || K(t, null); --o > -1; )
                        r -= parseFloat(tt(t, "padding" + i[o], n, !0)) || 0,
                        r -= parseFloat(tt(t, "border" + i[o] + "Width", n, !0)) || 0;
                    return r
                }, ct = function(t, e) {
                    if ("contain" === t || "auto" === t || "auto auto" === t)
                        return t + " ";
                    null != t && "" !== t || (t = "0 0");
                    var n, r = t.split(" "), i = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : r[0], o = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : r[1];
                    if (r.length > 3 && !e) {
                        for (r = t.split(", ").join(",").split(","),
                        t = [],
                        n = 0; n < r.length; n++)
                            t.push(ct(r[n]));
                        return t.join(",")
                    }
                    return null == o ? o = "center" === i ? "50%" : "0" : "center" === o && (o = "50%"),
                    ("center" === i || isNaN(parseFloat(i)) && -1 === (i + "").indexOf("=")) && (i = "50%"),
                    t = i + " " + o + (r.length > 2 ? " " + r[2] : ""),
                    e && (e.oxp = -1 !== i.indexOf("%"),
                    e.oyp = -1 !== o.indexOf("%"),
                    e.oxr = "=" === i.charAt(1),
                    e.oyr = "=" === o.charAt(1),
                    e.ox = parseFloat(i.replace(w, "")),
                    e.oy = parseFloat(o.replace(w, "")),
                    e.v = t),
                    e || t
                }, lt = function(t, e) {
                    return "function" == typeof t && (t = t(y, g)),
                    "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e) || 0
                }, ut = function(t, e) {
                    return "function" == typeof t && (t = t(y, g)),
                    null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t) || 0
                }, ht = function(t, e, n, r) {
                    var i, o, a, s, c;
                    return "function" == typeof t && (t = t(y, g)),
                    null == t ? s = e : "number" == typeof t ? s = t : (i = 360,
                    o = t.split("_"),
                    c = "=" === t.charAt(1),
                    a = (c ? parseInt(t.charAt(0) + "1", 10) * parseFloat(o[0].substr(2)) : parseFloat(o[0])) * (-1 === t.indexOf("rad") ? 1 : z) - (c ? 0 : e),
                    o.length && (r && (r[n] = e + a),
                    -1 !== t.indexOf("short") && (a %= i) !== a % (i / 2) && (a = a < 0 ? a + i : a - i),
                    -1 !== t.indexOf("_cw") && a < 0 ? a = (a + 9999999999 * i) % i - (a / i | 0) * i : -1 !== t.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * i) % i - (a / i | 0) * i)),
                    s = e + a),
                    s < 1e-6 && s > -1e-6 && (s = 0),
                    s
                }, dt = {
                    aqua: [0, 255, 255],
                    lime: [0, 255, 0],
                    silver: [192, 192, 192],
                    black: [0, 0, 0],
                    maroon: [128, 0, 0],
                    teal: [0, 128, 128],
                    blue: [0, 0, 255],
                    navy: [0, 0, 128],
                    white: [255, 255, 255],
                    fuchsia: [255, 0, 255],
                    olive: [128, 128, 0],
                    yellow: [255, 255, 0],
                    orange: [255, 165, 0],
                    gray: [128, 128, 128],
                    purple: [128, 0, 128],
                    green: [0, 128, 0],
                    red: [255, 0, 0],
                    pink: [255, 192, 203],
                    cyan: [0, 255, 255],
                    transparent: [255, 255, 255, 0]
                }, pt = function(t, e, n) {
                    return t = t < 0 ? t + 1 : t > 1 ? t - 1 : t,
                    255 * (6 * t < 1 ? e + (n - e) * t * 6 : t < .5 ? n : 3 * t < 2 ? e + (n - e) * (2 / 3 - t) * 6 : e) + .5 | 0
                }, ft = s.parseColor = function(t, e) {
                    var n, r, i, o, a, s, c, l, u, h, d;
                    if (t)
                        if ("number" == typeof t)
                            n = [t >> 16, t >> 8 & 255, 255 & t];
                        else {
                            if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)),
                            dt[t])
                                n = dt[t];
                            else if ("#" === t.charAt(0))
                                4 === t.length && (r = t.charAt(1),
                                i = t.charAt(2),
                                o = t.charAt(3),
                                t = "#" + r + r + i + i + o + o),
                                t = parseInt(t.substr(1), 16),
                                n = [t >> 16, t >> 8 & 255, 255 & t];
                            else if ("hsl" === t.substr(0, 3))
                                if (n = d = t.match(_),
                                e) {
                                    if (-1 !== t.indexOf("="))
                                        return t.match(x)
                                } else
                                    a = Number(n[0]) % 360 / 360,
                                    s = Number(n[1]) / 100,
                                    c = Number(n[2]) / 100,
                                    i = c <= .5 ? c * (s + 1) : c + s - c * s,
                                    r = 2 * c - i,
                                    n.length > 3 && (n[3] = Number(n[3])),
                                    n[0] = pt(a + 1 / 3, r, i),
                                    n[1] = pt(a, r, i),
                                    n[2] = pt(a - 1 / 3, r, i);
                            else
                                n = t.match(_) || dt.transparent;
                            n[0] = Number(n[0]),
                            n[1] = Number(n[1]),
                            n[2] = Number(n[2]),
                            n.length > 3 && (n[3] = Number(n[3]))
                        }
                    else
                        n = dt.black;
                    return e && !d && (r = n[0] / 255,
                    i = n[1] / 255,
                    o = n[2] / 255,
                    l = Math.max(r, i, o),
                    u = Math.min(r, i, o),
                    c = (l + u) / 2,
                    l === u ? a = s = 0 : (h = l - u,
                    s = c > .5 ? h / (2 - l - u) : h / (l + u),
                    a = l === r ? (i - o) / h + (i < o ? 6 : 0) : l === i ? (o - r) / h + 2 : (r - i) / h + 4,
                    a *= 60),
                    n[0] = a + .5 | 0,
                    n[1] = 100 * s + .5 | 0,
                    n[2] = 100 * c + .5 | 0),
                    n
                }
                , mt = function(t, e) {
                    var n, r, i, o = t.match(vt) || [], a = 0, s = "";
                    if (!o.length)
                        return t;
                    for (n = 0; n < o.length; n++)
                        r = o[n],
                        i = t.substr(a, t.indexOf(r, a) - a),
                        a += i.length + r.length,
                        r = ft(r, e),
                        3 === r.length && r.push(1),
                        s += i + (e ? "hsla(" + r[0] + "," + r[1] + "%," + r[2] + "%," + r[3] : "rgba(" + r.join(",")) + ")";
                    return s + t.substr(a)
                }, vt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                for (u in dt)
                    vt += "|" + u + "\\b";
                vt = new RegExp(vt + ")","gi"),
                s.colorStringFilter = function(t) {
                    var e, n = t[0] + " " + t[1];
                    vt.test(n) && (e = -1 !== n.indexOf("hsl(") || -1 !== n.indexOf("hsla("),
                    t[0] = mt(t[0], e),
                    t[1] = mt(t[1], e)),
                    vt.lastIndex = 0
                }
                ,
                e.defaultStringFilter || (e.defaultStringFilter = s.colorStringFilter);
                var gt = function(t, e, n, r) {
                    if (null == t)
                        return function(t) {
                            return t
                        }
                        ;
                    var i, o = e ? (t.match(vt) || [""])[0] : "", a = t.split(o).join("").match(b) || [], s = t.substr(0, t.indexOf(a[0])), c = ")" === t.charAt(t.length - 1) ? ")" : "", l = -1 !== t.indexOf(" ") ? " " : ",", u = a.length, h = u > 0 ? a[0].replace(_, "") : "";
                    return u ? i = e ? function(t) {
                        var e, d, p, f;
                        if ("number" == typeof t)
                            t += h;
                        else if (r && N.test(t)) {
                            for (f = t.replace(N, "|").split("|"),
                            p = 0; p < f.length; p++)
                                f[p] = i(f[p]);
                            return f.join(",")
                        }
                        if (e = (t.match(vt) || [o])[0],
                        d = t.split(e).join("").match(b) || [],
                        p = d.length,
                        u > p--)
                            for (; ++p < u; )
                                d[p] = n ? d[(p - 1) / 2 | 0] : a[p];
                        return s + d.join(l) + l + e + c + (-1 !== t.indexOf("inset") ? " inset" : "")
                    }
                    : function(t) {
                        var e, o, d;
                        if ("number" == typeof t)
                            t += h;
                        else if (r && N.test(t)) {
                            for (o = t.replace(N, "|").split("|"),
                            d = 0; d < o.length; d++)
                                o[d] = i(o[d]);
                            return o.join(",")
                        }
                        if (e = t.match(b) || [],
                        d = e.length,
                        u > d--)
                            for (; ++d < u; )
                                e[d] = n ? e[(d - 1) / 2 | 0] : a[d];
                        return s + e.join(l) + c
                    }
                    : function(t) {
                        return t
                    }
                }
                  , yt = function(t) {
                    return t = t.split(","),
                    function(e, n, r, i, o, a, s) {
                        var c, l = (n + "").split(" ");
                        for (s = {},
                        c = 0; c < 4; c++)
                            s[t[c]] = l[c] = l[c] || l[(c - 1) / 2 >> 0];
                        return i.parse(e, s, o, a)
                    }
                }
                  , _t = (W._setPluginRatio = function(t) {
                    this.plugin.setRatio(t);
                    for (var e, n, r, i, o, a = this.data, s = a.proxy, c = a.firstMPT; c; )
                        e = s[c.v],
                        c.r ? e = Math.round(e) : e < 1e-6 && e > -1e-6 && (e = 0),
                        c.t[c.p] = e,
                        c = c._next;
                    if (a.autoRotate && (a.autoRotate.rotation = a.mod ? a.mod(s.rotation, this.t) : s.rotation),
                    1 === t || 0 === t)
                        for (c = a.firstMPT,
                        o = 1 === t ? "e" : "b"; c; ) {
                            if (n = c.t,
                            n.type) {
                                if (1 === n.type) {
                                    for (i = n.xs0 + n.s + n.xs1,
                                    r = 1; r < n.l; r++)
                                        i += n["xn" + r] + n["xs" + (r + 1)];
                                    n[o] = i
                                }
                            } else
                                n[o] = n.s + n.xs0;
                            c = c._next
                        }
                }
                ,
                function(t, e, n, r, i) {
                    this.t = t,
                    this.p = e,
                    this.v = n,
                    this.r = i,
                    r && (r._prev = this,
                    this._next = r)
                }
                )
                  , xt = (W._parseToProxy = function(t, e, n, r, i, o) {
                    var a, s, c, l, u, h = r, d = {}, p = {}, f = n._transform, m = B;
                    for (n._transform = null,
                    B = e,
                    r = u = n.parse(t, e, r, i),
                    B = m,
                    o && (n._transform = f,
                    h && (h._prev = null,
                    h._prev && (h._prev._next = null))); r && r !== h; ) {
                        if (r.type <= 1 && (s = r.p,
                        p[s] = r.s + r.c,
                        d[s] = r.s,
                        o || (l = new _t(r,"s",s,l,r.r),
                        r.c = 0),
                        1 === r.type))
                            for (a = r.l; --a > 0; )
                                c = "xn" + a,
                                s = r.p + "_" + c,
                                p[s] = r.data[c],
                                d[s] = r[c],
                                o || (l = new _t(r,c,s,l,r.rxp[c]));
                        r = r._next
                    }
                    return {
                        proxy: d,
                        end: p,
                        firstMPT: l,
                        pt: u
                    }
                }
                ,
                W.CSSPropTween = function(t, e, r, i, o, s, c, l, u, h, d) {
                    this.t = t,
                    this.p = e,
                    this.s = r,
                    this.c = i,
                    this.n = c || e,
                    t instanceof xt || a.push(this.n),
                    this.r = l,
                    this.type = s || 0,
                    u && (this.pr = u,
                    n = !0),
                    this.b = void 0 === h ? r : h,
                    this.e = void 0 === d ? r + i : d,
                    o && (this._next = o,
                    o._prev = this)
                }
                )
                  , bt = function(t, e, n, r, i, o) {
                    var a = new xt(t,e,n,r - n,i,-1,o);
                    return a.b = n,
                    a.e = a.xs0 = r,
                    a
                }
                  , wt = s.parseComplex = function(t, e, n, r, i, o, a, c, l, u) {
                    n = n || o || "",
                    "function" == typeof r && (r = r(y, g)),
                    a = new xt(t,e,0,0,a,u ? 2 : 1,null,!1,c,n,r),
                    r += "",
                    i && vt.test(r + n) && (r = [n, r],
                    s.colorStringFilter(r),
                    n = r[0],
                    r = r[1]);
                    var d, p, f, m, v, b, w, M, E, T, S, A, C, P = n.split(", ").join(",").split(" "), L = r.split(", ").join(",").split(" "), R = P.length, O = !1 !== h;
                    for (-1 === r.indexOf(",") && -1 === n.indexOf(",") || (-1 !== (r + n).indexOf("rgb") || -1 !== (r + n).indexOf("hsl") ? (P = P.join(" ").replace(N, ", ").split(" "),
                    L = L.join(" ").replace(N, ", ").split(" ")) : (P = P.join(" ").split(",").join(", ").split(" "),
                    L = L.join(" ").split(",").join(", ").split(" ")),
                    R = P.length),
                    R !== L.length && (P = (o || "").split(" "),
                    R = P.length),
                    a.plugin = l,
                    a.setRatio = u,
                    vt.lastIndex = 0,
                    d = 0; d < R; d++)
                        if (m = P[d],
                        v = L[d],
                        (M = parseFloat(m)) || 0 === M)
                            a.appendXtra("", M, lt(v, M), v.replace(x, ""), O && -1 !== v.indexOf("px"), !0);
                        else if (i && vt.test(m))
                            A = v.indexOf(")") + 1,
                            A = ")" + (A ? v.substr(A) : ""),
                            C = -1 !== v.indexOf("hsl") && X,
                            T = v,
                            m = ft(m, C),
                            v = ft(v, C),
                            E = m.length + v.length > 6,
                            E && !X && 0 === v[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent",
                            a.e = a.e.split(L[d]).join("transparent")) : (X || (E = !1),
                            C ? a.appendXtra(T.substr(0, T.indexOf("hsl")) + (E ? "hsla(" : "hsl("), m[0], lt(v[0], m[0]), ",", !1, !0).appendXtra("", m[1], lt(v[1], m[1]), "%,", !1).appendXtra("", m[2], lt(v[2], m[2]), E ? "%," : "%" + A, !1) : a.appendXtra(T.substr(0, T.indexOf("rgb")) + (E ? "rgba(" : "rgb("), m[0], v[0] - m[0], ",", !0, !0).appendXtra("", m[1], v[1] - m[1], ",", !0).appendXtra("", m[2], v[2] - m[2], E ? "," : A, !0),
                            E && (m = m.length < 4 ? 1 : m[3],
                            a.appendXtra("", m, (v.length < 4 ? 1 : v[3]) - m, A, !1))),
                            vt.lastIndex = 0;
                        else if (b = m.match(_)) {
                            if (!(w = v.match(x)) || w.length !== b.length)
                                return a;
                            for (f = 0,
                            p = 0; p < b.length; p++)
                                S = b[p],
                                T = m.indexOf(S, f),
                                a.appendXtra(m.substr(f, T - f), Number(S), lt(w[p], S), "", O && "px" === m.substr(T + S.length, 2), 0 === p),
                                f = T + S.length;
                            a["xs" + a.l] += m.substr(f)
                        } else
                            a["xs" + a.l] += a.l || a["xs" + a.l] ? " " + v : v;
                    if (-1 !== r.indexOf("=") && a.data) {
                        for (A = a.xs0 + a.data.s,
                        d = 1; d < a.l; d++)
                            A += a["xs" + d] + a.data["xn" + d];
                        a.e = A + a["xs" + d]
                    }
                    return a.l || (a.type = -1,
                    a.xs0 = a.e),
                    a.xfirst || a
                }
                  , Mt = 9;
                for (u = xt.prototype,
                u.l = u.pr = 0; --Mt > 0; )
                    u["xn" + Mt] = 0,
                    u["xs" + Mt] = "";
                u.xs0 = "",
                u._next = u._prev = u.xfirst = u.data = u.plugin = u.setRatio = u.rxp = null,
                u.appendXtra = function(t, e, n, r, i, o) {
                    var a = this
                      , s = a.l;
                    return a["xs" + s] += o && (s || a["xs" + s]) ? " " + t : t || "",
                    n || 0 === s || a.plugin ? (a.l++,
                    a.type = a.setRatio ? 2 : 1,
                    a["xs" + a.l] = r || "",
                    s > 0 ? (a.data["xn" + s] = e + n,
                    a.rxp["xn" + s] = i,
                    a["xn" + s] = e,
                    a.plugin || (a.xfirst = new xt(a,"xn" + s,e,n,a.xfirst || a,0,a.n,i,a.pr),
                    a.xfirst.xs0 = 0),
                    a) : (a.data = {
                        s: e + n
                    },
                    a.rxp = {},
                    a.s = e,
                    a.c = n,
                    a.r = i,
                    a)) : (a["xs" + s] += e + (r || ""),
                    a)
                }
                ;
                var Et = function(t, e) {
                    e = e || {},
                    this.p = e.prefix ? Q(t) || t : t,
                    l[t] = l[this.p] = this,
                    this.format = e.formatter || gt(e.defaultValue, e.color, e.collapsible, e.multi),
                    e.parser && (this.parse = e.parser),
                    this.clrs = e.color,
                    this.multi = e.multi,
                    this.keyword = e.keyword,
                    this.dflt = e.defaultValue,
                    this.pr = e.priority || 0
                }
                  , Tt = W._registerComplexSpecialProp = function(t, e, n) {
                    "object" != typeof e && (e = {
                        parser: n
                    });
                    var r, i = t.split(","), o = e.defaultValue;
                    for (n = n || [o],
                    r = 0; r < i.length; r++)
                        e.prefix = 0 === r && e.prefix,
                        e.defaultValue = n[r] || o,
                        new Et(i[r],e)
                }
                  , St = W._registerPluginProp = function(t) {
                    if (!l[t]) {
                        var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                        Tt(t, {
                            parser: function(t, n, r, i, o, a, s) {
                                var u = c.com.greensock.plugins[e];
                                return u ? (u._cssRegister(),
                                l[r].parse(t, n, r, i, o, a, s)) : ($("Error: " + e + " js file not loaded."),
                                o)
                            }
                        })
                    }
                }
                ;
                u = Et.prototype,
                u.parseComplex = function(t, e, n, r, i, o) {
                    var a, s, c, l, u, h, d = this.keyword;
                    if (this.multi && (N.test(n) || N.test(e) ? (s = e.replace(N, "|").split("|"),
                    c = n.replace(N, "|").split("|")) : d && (s = [e],
                    c = [n])),
                    c) {
                        for (l = c.length > s.length ? c.length : s.length,
                        a = 0; a < l; a++)
                            e = s[a] = s[a] || this.dflt,
                            n = c[a] = c[a] || this.dflt,
                            d && (u = e.indexOf(d),
                            h = n.indexOf(d),
                            u !== h && (-1 === h ? s[a] = s[a].split(d).join("") : -1 === u && (s[a] += " " + d)));
                        e = s.join(", "),
                        n = c.join(", ")
                    }
                    return wt(t, this.p, e, n, this.clrs, this.dflt, r, this.pr, i, o)
                }
                ,
                u.parse = function(t, e, n, r, o, a, s) {
                    return this.parseComplex(t.style, this.format(tt(t, this.p, i, !1, this.dflt)), this.format(e), o, a)
                }
                ,
                s.registerSpecialProp = function(t, e, n) {
                    Tt(t, {
                        parser: function(t, r, i, o, a, s, c) {
                            var l = new xt(t,i,0,0,a,2,i,!1,n);
                            return l.plugin = s,
                            l.setRatio = e(t, r, o._tween, i),
                            l
                        },
                        priority: n
                    })
                }
                ,
                s.useSVGTransformAttr = !0;
                var At, Ct = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Pt = Q("transform"), Lt = Z + "transform", Rt = Q("transformOrigin"), Ot = null !== Q("perspective"), It = W.Transform = function() {
                    this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                    this.force3D = !(!1 === s.defaultForce3D || !Ot) && (s.defaultForce3D || "auto")
                }
                , Dt = o.SVGElement, Nt = function(t, e, n) {
                    var r, i = F.createElementNS("http://www.w3.org/2000/svg", t), o = /([a-z])([A-Z])/g;
                    for (r in n)
                        i.setAttributeNS(null, r.replace(o, "$1-$2").toLowerCase(), n[r]);
                    return e.appendChild(i),
                    i
                }, kt = F.documentElement || {}, jt = function() {
                    var t, e, n, r = v || /Android/i.test(q) && !o.chrome;
                    return F.createElementNS && !r && (t = Nt("svg", kt),
                    e = Nt("rect", t, {
                        width: 100,
                        height: 50,
                        x: 100
                    }),
                    n = e.getBoundingClientRect().width,
                    e.style[Rt] = "50% 50%",
                    e.style[Pt] = "scaleX(0.5)",
                    r = n === e.getBoundingClientRect().width && !(f && Ot),
                    kt.removeChild(t)),
                    r
                }(), zt = function(t, e, n, r, i, o) {
                    var a, c, l, u, h, d, p, f, m, v, g, y, _, x, b = t._gsTransform, w = Gt(t, !0);
                    b && (_ = b.xOrigin,
                    x = b.yOrigin),
                    (!r || (a = r.split(" ")).length < 2) && (p = t.getBBox(),
                    0 === p.x && 0 === p.y && p.width + p.height === 0 && (p = {
                        x: parseFloat(t.hasAttribute("x") ? t.getAttribute("x") : t.hasAttribute("cx") ? t.getAttribute("cx") : 0) || 0,
                        y: parseFloat(t.hasAttribute("y") ? t.getAttribute("y") : t.hasAttribute("cy") ? t.getAttribute("cy") : 0) || 0,
                        width: 0,
                        height: 0
                    }),
                    e = ct(e).split(" "),
                    a = [(-1 !== e[0].indexOf("%") ? parseFloat(e[0]) / 100 * p.width : parseFloat(e[0])) + p.x, (-1 !== e[1].indexOf("%") ? parseFloat(e[1]) / 100 * p.height : parseFloat(e[1])) + p.y]),
                    n.xOrigin = u = parseFloat(a[0]),
                    n.yOrigin = h = parseFloat(a[1]),
                    r && w !== Ht && (d = w[0],
                    p = w[1],
                    f = w[2],
                    m = w[3],
                    v = w[4],
                    g = w[5],
                    (y = d * m - p * f) && (c = u * (m / y) + h * (-f / y) + (f * g - m * v) / y,
                    l = u * (-p / y) + h * (d / y) - (d * g - p * v) / y,
                    u = n.xOrigin = a[0] = c,
                    h = n.yOrigin = a[1] = l)),
                    b && (o && (n.xOffset = b.xOffset,
                    n.yOffset = b.yOffset,
                    b = n),
                    i || !1 !== i && !1 !== s.defaultSmoothOrigin ? (c = u - _,
                    l = h - x,
                    b.xOffset += c * w[0] + l * w[2] - c,
                    b.yOffset += c * w[1] + l * w[3] - l) : b.xOffset = b.yOffset = 0),
                    o || t.setAttribute("data-svg-origin", a.join(" "))
                }, Bt = function(t) {
                    var e, n = H("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), r = this.parentNode, i = this.nextSibling, o = this.style.cssText;
                    if (kt.appendChild(n),
                    n.appendChild(this),
                    this.style.display = "block",
                    t)
                        try {
                            e = this.getBBox(),
                            this._originalGetBBox = this.getBBox,
                            this.getBBox = Bt
                        } catch (t) {}
                    else
                        this._originalGetBBox && (e = this._originalGetBBox());
                    return i ? r.insertBefore(this, i) : r.appendChild(this),
                    kt.removeChild(n),
                    this.style.cssText = o,
                    e
                }, Ut = function(t) {
                    try {
                        return t.getBBox()
                    } catch (e) {
                        return Bt.call(t, !0)
                    }
                }, Ft = function(t) {
                    return !(!Dt || !t.getCTM || t.parentNode && !t.ownerSVGElement || !Ut(t))
                }, Ht = [1, 0, 0, 1, 0, 0], Gt = function(t, e) {
                    var n, r, i, o, a, s, c = t._gsTransform || new It, l = t.style;
                    if (Pt ? r = tt(t, Lt, null, !0) : t.currentStyle && (r = t.currentStyle.filter.match(I),
                    r = r && 4 === r.length ? [r[0].substr(4), Number(r[2].substr(4)), Number(r[1].substr(4)), r[3].substr(4), c.x || 0, c.y || 0].join(",") : ""),
                    n = !r || "none" === r || "matrix(1, 0, 0, 1, 0, 0)" === r,
                    !Pt || !(s = !K(t) || "none" === K(t).display) && t.parentNode || (s && (o = l.display,
                    l.display = "block"),
                    t.parentNode || (a = 1,
                    kt.appendChild(t)),
                    r = tt(t, Lt, null, !0),
                    n = !r || "none" === r || "matrix(1, 0, 0, 1, 0, 0)" === r,
                    o ? l.display = o : s && Yt(l, "display"),
                    a && kt.removeChild(t)),
                    (c.svg || t.getCTM && Ft(t)) && (n && -1 !== (l[Pt] + "").indexOf("matrix") && (r = l[Pt],
                    n = 0),
                    i = t.getAttribute("transform"),
                    n && i && (i = t.transform.baseVal.consolidate().matrix,
                    r = "matrix(" + i.a + "," + i.b + "," + i.c + "," + i.d + "," + i.e + "," + i.f + ")",
                    n = 0)),
                    n)
                        return Ht;
                    for (i = (r || "").match(_) || [],
                    Mt = i.length; --Mt > -1; )
                        o = Number(i[Mt]),
                        i[Mt] = (a = o - (o |= 0)) ? (1e5 * a + (a < 0 ? -.5 : .5) | 0) / 1e5 + o : o;
                    return e && i.length > 6 ? [i[0], i[1], i[4], i[5], i[12], i[13]] : i
                }, Vt = W.getTransform = function(t, n, r, i) {
                    if (t._gsTransform && r && !i)
                        return t._gsTransform;
                    var o, a, c, l, u, h, d = r ? t._gsTransform || new It : new It, p = d.scaleX < 0, f = Ot ? parseFloat(tt(t, Rt, n, !1, "0 0 0").split(" ")[2]) || d.zOrigin || 0 : 0, m = parseFloat(s.defaultTransformPerspective) || 0;
                    if (d.svg = !(!t.getCTM || !Ft(t)),
                    d.svg && (zt(t, tt(t, Rt, n, !1, "50% 50%") + "", d, t.getAttribute("data-svg-origin")),
                    At = s.useSVGTransformAttr || jt),
                    (o = Gt(t)) !== Ht) {
                        if (16 === o.length) {
                            var v, g, y, _, x, b = o[0], w = o[1], M = o[2], E = o[3], T = o[4], S = o[5], A = o[6], C = o[7], P = o[8], L = o[9], R = o[10], O = o[12], I = o[13], D = o[14], N = o[11], k = Math.atan2(A, R);
                            d.zOrigin && (D = -d.zOrigin,
                            O = P * D - o[12],
                            I = L * D - o[13],
                            D = R * D + d.zOrigin - o[14]),
                            d.rotationX = k * z,
                            k && (_ = Math.cos(-k),
                            x = Math.sin(-k),
                            v = T * _ + P * x,
                            g = S * _ + L * x,
                            y = A * _ + R * x,
                            P = T * -x + P * _,
                            L = S * -x + L * _,
                            R = A * -x + R * _,
                            N = C * -x + N * _,
                            T = v,
                            S = g,
                            A = y),
                            k = Math.atan2(-M, R),
                            d.rotationY = k * z,
                            k && (_ = Math.cos(-k),
                            x = Math.sin(-k),
                            v = b * _ - P * x,
                            g = w * _ - L * x,
                            y = M * _ - R * x,
                            L = w * x + L * _,
                            R = M * x + R * _,
                            N = E * x + N * _,
                            b = v,
                            w = g,
                            M = y),
                            k = Math.atan2(w, b),
                            d.rotation = k * z,
                            k && (_ = Math.cos(k),
                            x = Math.sin(k),
                            v = b * _ + w * x,
                            g = T * _ + S * x,
                            y = P * _ + L * x,
                            w = w * _ - b * x,
                            S = S * _ - T * x,
                            L = L * _ - P * x,
                            b = v,
                            T = g,
                            P = y),
                            d.rotationX && Math.abs(d.rotationX) + Math.abs(d.rotation) > 359.9 && (d.rotationX = d.rotation = 0,
                            d.rotationY = 180 - d.rotationY),
                            k = Math.atan2(T, S),
                            d.scaleX = (1e5 * Math.sqrt(b * b + w * w + M * M) + .5 | 0) / 1e5,
                            d.scaleY = (1e5 * Math.sqrt(S * S + A * A) + .5 | 0) / 1e5,
                            d.scaleZ = (1e5 * Math.sqrt(P * P + L * L + R * R) + .5 | 0) / 1e5,
                            b /= d.scaleX,
                            T /= d.scaleY,
                            w /= d.scaleX,
                            S /= d.scaleY,
                            Math.abs(k) > 2e-5 ? (d.skewX = k * z,
                            T = 0,
                            "simple" !== d.skewType && (d.scaleY *= 1 / Math.cos(k))) : d.skewX = 0,
                            d.perspective = N ? 1 / (N < 0 ? -N : N) : 0,
                            d.x = O,
                            d.y = I,
                            d.z = D,
                            d.svg && (d.x -= d.xOrigin - (d.xOrigin * b - d.yOrigin * T),
                            d.y -= d.yOrigin - (d.yOrigin * w - d.xOrigin * S))
                        } else if (!Ot || i || !o.length || d.x !== o[4] || d.y !== o[5] || !d.rotationX && !d.rotationY) {
                            var j = o.length >= 6
                              , B = j ? o[0] : 1
                              , U = o[1] || 0
                              , F = o[2] || 0
                              , H = j ? o[3] : 1;
                            d.x = o[4] || 0,
                            d.y = o[5] || 0,
                            c = Math.sqrt(B * B + U * U),
                            l = Math.sqrt(H * H + F * F),
                            u = B || U ? Math.atan2(U, B) * z : d.rotation || 0,
                            h = F || H ? Math.atan2(F, H) * z + u : d.skewX || 0,
                            d.scaleX = c,
                            d.scaleY = l,
                            d.rotation = u,
                            d.skewX = h,
                            Ot && (d.rotationX = d.rotationY = d.z = 0,
                            d.perspective = m,
                            d.scaleZ = 1),
                            d.svg && (d.x -= d.xOrigin - (d.xOrigin * B + d.yOrigin * F),
                            d.y -= d.yOrigin - (d.xOrigin * U + d.yOrigin * H))
                        }
                        Math.abs(d.skewX) > 90 && Math.abs(d.skewX) < 270 && (p ? (d.scaleX *= -1,
                        d.skewX += d.rotation <= 0 ? 180 : -180,
                        d.rotation += d.rotation <= 0 ? 180 : -180) : (d.scaleY *= -1,
                        d.skewX += d.skewX <= 0 ? 180 : -180)),
                        d.zOrigin = f;
                        for (a in d)
                            d[a] < 2e-5 && d[a] > -2e-5 && (d[a] = 0)
                    }
                    return r && (t._gsTransform = d,
                    d.svg && (At && t.style[Pt] ? e.delayedCall(.001, function() {
                        Yt(t.style, Pt)
                    }) : !At && t.getAttribute("transform") && e.delayedCall(.001, function() {
                        t.removeAttribute("transform")
                    }))),
                    d
                }
                , Wt = function(t) {
                    var e, n, r = this.data, i = -r.rotation * j, o = i + r.skewX * j, a = (Math.cos(i) * r.scaleX * 1e5 | 0) / 1e5, s = (Math.sin(i) * r.scaleX * 1e5 | 0) / 1e5, c = (Math.sin(o) * -r.scaleY * 1e5 | 0) / 1e5, l = (Math.cos(o) * r.scaleY * 1e5 | 0) / 1e5, u = this.t.style, h = this.t.currentStyle;
                    if (h) {
                        n = s,
                        s = -c,
                        c = -n,
                        e = h.filter,
                        u.filter = "";
                        var d, p, f = this.t.offsetWidth, m = this.t.offsetHeight, g = "absolute" !== h.position, y = "progid:DXImageTransform.Microsoft.Matrix(M11=" + a + ", M12=" + s + ", M21=" + c + ", M22=" + l, _ = r.x + f * r.xPercent / 100, x = r.y + m * r.yPercent / 100;
                        if (null != r.ox && (d = (r.oxp ? f * r.ox * .01 : r.ox) - f / 2,
                        p = (r.oyp ? m * r.oy * .01 : r.oy) - m / 2,
                        _ += d - (d * a + p * s),
                        x += p - (d * c + p * l)),
                        g ? (d = f / 2,
                        p = m / 2,
                        y += ", Dx=" + (d - (d * a + p * s) + _) + ", Dy=" + (p - (d * c + p * l) + x) + ")") : y += ", sizingMethod='auto expand')",
                        -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? u.filter = e.replace(D, y) : u.filter = y + " " + e,
                        0 !== t && 1 !== t || 1 === a && 0 === s && 0 === c && 1 === l && (g && -1 === y.indexOf("Dx=0, Dy=0") || E.test(e) && 100 !== parseFloat(RegExp.$1) || -1 === e.indexOf(e.indexOf("Alpha")) && u.removeAttribute("filter")),
                        !g) {
                            var b, w, T, S = v < 8 ? 1 : -1;
                            for (d = r.ieOffsetX || 0,
                            p = r.ieOffsetY || 0,
                            r.ieOffsetX = Math.round((f - ((a < 0 ? -a : a) * f + (s < 0 ? -s : s) * m)) / 2 + _),
                            r.ieOffsetY = Math.round((m - ((l < 0 ? -l : l) * m + (c < 0 ? -c : c) * f)) / 2 + x),
                            Mt = 0; Mt < 4; Mt++)
                                w = at[Mt],
                                b = h[w],
                                n = -1 !== b.indexOf("px") ? parseFloat(b) : et(this.t, w, parseFloat(b), b.replace(M, "")) || 0,
                                T = n !== r[w] ? Mt < 2 ? -r.ieOffsetX : -r.ieOffsetY : Mt < 2 ? d - r.ieOffsetX : p - r.ieOffsetY,
                                u[w] = (r[w] = Math.round(n - T * (0 === Mt || 2 === Mt ? 1 : S))) + "px"
                        }
                    }
                }, qt = W.set3DTransformRatio = W.setTransformRatio = function(t) {
                    var e, n, r, i, o, a, s, c, l, u, h, d, p, m, v, g, y, _, x, b, w, M, E, T = this.data, S = this.t.style, A = T.rotation, C = T.rotationX, P = T.rotationY, L = T.scaleX, R = T.scaleY, O = T.scaleZ, I = T.x, D = T.y, N = T.z, k = T.svg, z = T.perspective, B = T.force3D, U = T.skewY, F = T.skewX;
                    if (U && (F += U,
                    A += U),
                    ((1 === t || 0 === t) && "auto" === B && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !B) && !N && !z && !P && !C && 1 === O || At && k || !Ot)
                        return void (A || F || k ? (A *= j,
                        M = F * j,
                        E = 1e5,
                        n = Math.cos(A) * L,
                        o = Math.sin(A) * L,
                        r = Math.sin(A - M) * -R,
                        a = Math.cos(A - M) * R,
                        M && "simple" === T.skewType && (e = Math.tan(M - U * j),
                        e = Math.sqrt(1 + e * e),
                        r *= e,
                        a *= e,
                        U && (e = Math.tan(U * j),
                        e = Math.sqrt(1 + e * e),
                        n *= e,
                        o *= e)),
                        k && (I += T.xOrigin - (T.xOrigin * n + T.yOrigin * r) + T.xOffset,
                        D += T.yOrigin - (T.xOrigin * o + T.yOrigin * a) + T.yOffset,
                        At && (T.xPercent || T.yPercent) && (v = this.t.getBBox(),
                        I += .01 * T.xPercent * v.width,
                        D += .01 * T.yPercent * v.height),
                        v = 1e-6,
                        I < v && I > -v && (I = 0),
                        D < v && D > -v && (D = 0)),
                        x = (n * E | 0) / E + "," + (o * E | 0) / E + "," + (r * E | 0) / E + "," + (a * E | 0) / E + "," + I + "," + D + ")",
                        k && At ? this.t.setAttribute("transform", "matrix(" + x) : S[Pt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + x) : S[Pt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + L + ",0,0," + R + "," + I + "," + D + ")");
                    if (f && (v = 1e-4,
                    L < v && L > -v && (L = O = 2e-5),
                    R < v && R > -v && (R = O = 2e-5),
                    !z || T.z || T.rotationX || T.rotationY || (z = 0)),
                    A || F)
                        A *= j,
                        g = n = Math.cos(A),
                        y = o = Math.sin(A),
                        F && (A -= F * j,
                        g = Math.cos(A),
                        y = Math.sin(A),
                        "simple" === T.skewType && (e = Math.tan((F - U) * j),
                        e = Math.sqrt(1 + e * e),
                        g *= e,
                        y *= e,
                        T.skewY && (e = Math.tan(U * j),
                        e = Math.sqrt(1 + e * e),
                        n *= e,
                        o *= e))),
                        r = -y,
                        a = g;
                    else {
                        if (!(P || C || 1 !== O || z || k))
                            return void (S[Pt] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) translate3d(" : "translate3d(") + I + "px," + D + "px," + N + "px)" + (1 !== L || 1 !== R ? " scale(" + L + "," + R + ")" : ""));
                        n = a = 1,
                        r = o = 0
                    }
                    u = 1,
                    i = s = c = l = h = d = 0,
                    p = z ? -1 / z : 0,
                    m = T.zOrigin,
                    v = 1e-6,
                    b = ",",
                    w = "0",
                    A = P * j,
                    A && (g = Math.cos(A),
                    y = Math.sin(A),
                    c = -y,
                    h = p * -y,
                    i = n * y,
                    s = o * y,
                    u = g,
                    p *= g,
                    n *= g,
                    o *= g),
                    A = C * j,
                    A && (g = Math.cos(A),
                    y = Math.sin(A),
                    e = r * g + i * y,
                    _ = a * g + s * y,
                    l = u * y,
                    d = p * y,
                    i = r * -y + i * g,
                    s = a * -y + s * g,
                    u *= g,
                    p *= g,
                    r = e,
                    a = _),
                    1 !== O && (i *= O,
                    s *= O,
                    u *= O,
                    p *= O),
                    1 !== R && (r *= R,
                    a *= R,
                    l *= R,
                    d *= R),
                    1 !== L && (n *= L,
                    o *= L,
                    c *= L,
                    h *= L),
                    (m || k) && (m && (I += i * -m,
                    D += s * -m,
                    N += u * -m + m),
                    k && (I += T.xOrigin - (T.xOrigin * n + T.yOrigin * r) + T.xOffset,
                    D += T.yOrigin - (T.xOrigin * o + T.yOrigin * a) + T.yOffset),
                    I < v && I > -v && (I = w),
                    D < v && D > -v && (D = w),
                    N < v && N > -v && (N = 0)),
                    x = T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix3d(" : "matrix3d(",
                    x += (n < v && n > -v ? w : n) + b + (o < v && o > -v ? w : o) + b + (c < v && c > -v ? w : c),
                    x += b + (h < v && h > -v ? w : h) + b + (r < v && r > -v ? w : r) + b + (a < v && a > -v ? w : a),
                    C || P || 1 !== O ? (x += b + (l < v && l > -v ? w : l) + b + (d < v && d > -v ? w : d) + b + (i < v && i > -v ? w : i),
                    x += b + (s < v && s > -v ? w : s) + b + (u < v && u > -v ? w : u) + b + (p < v && p > -v ? w : p) + b) : x += ",0,0,0,0,1,0,",
                    x += I + b + D + b + N + b + (z ? 1 + -N / z : 1) + ")",
                    S[Pt] = x
                }
                ;
                u = It.prototype,
                u.x = u.y = u.z = u.skewX = u.skewY = u.rotation = u.rotationX = u.rotationY = u.zOrigin = u.xPercent = u.yPercent = u.xOffset = u.yOffset = 0,
                u.scaleX = u.scaleY = u.scaleZ = 1,
                Tt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                    parser: function(t, e, n, r, o, a, c) {
                        if (r._lastParsedTransform === c)
                            return o;
                        r._lastParsedTransform = c;
                        var l, u = c.scale && "function" == typeof c.scale ? c.scale : 0;
                        "function" == typeof c[n] && (l = c[n],
                        c[n] = e),
                        u && (c.scale = u(y, t));
                        var h, d, p, f, m, v, _, x, b, w = t._gsTransform, M = t.style, E = Ct.length, T = c, S = {}, A = Vt(t, i, !0, T.parseTransform), C = T.transform && ("function" == typeof T.transform ? T.transform(y, g) : T.transform);
                        if (A.skewType = T.skewType || A.skewType || s.defaultSkewType,
                        r._transform = A,
                        C && "string" == typeof C && Pt)
                            d = G.style,
                            d[Pt] = C,
                            d.display = "block",
                            d.position = "absolute",
                            F.body.appendChild(G),
                            h = Vt(G, null, !1),
                            "simple" === A.skewType && (h.scaleY *= Math.cos(h.skewX * j)),
                            A.svg && (v = A.xOrigin,
                            _ = A.yOrigin,
                            h.x -= A.xOffset,
                            h.y -= A.yOffset,
                            (T.transformOrigin || T.svgOrigin) && (C = {},
                            zt(t, ct(T.transformOrigin), C, T.svgOrigin, T.smoothOrigin, !0),
                            v = C.xOrigin,
                            _ = C.yOrigin,
                            h.x -= C.xOffset - A.xOffset,
                            h.y -= C.yOffset - A.yOffset),
                            (v || _) && (x = Gt(G, !0),
                            h.x -= v - (v * x[0] + _ * x[2]),
                            h.y -= _ - (v * x[1] + _ * x[3]))),
                            F.body.removeChild(G),
                            h.perspective || (h.perspective = A.perspective),
                            null != T.xPercent && (h.xPercent = ut(T.xPercent, A.xPercent)),
                            null != T.yPercent && (h.yPercent = ut(T.yPercent, A.yPercent));
                        else if ("object" == typeof T) {
                            if (h = {
                                scaleX: ut(null != T.scaleX ? T.scaleX : T.scale, A.scaleX),
                                scaleY: ut(null != T.scaleY ? T.scaleY : T.scale, A.scaleY),
                                scaleZ: ut(T.scaleZ, A.scaleZ),
                                x: ut(T.x, A.x),
                                y: ut(T.y, A.y),
                                z: ut(T.z, A.z),
                                xPercent: ut(T.xPercent, A.xPercent),
                                yPercent: ut(T.yPercent, A.yPercent),
                                perspective: ut(T.transformPerspective, A.perspective)
                            },
                            null != (m = T.directionalRotation))
                                if ("object" == typeof m)
                                    for (d in m)
                                        T[d] = m[d];
                                else
                                    T.rotation = m;
                            "string" == typeof T.x && -1 !== T.x.indexOf("%") && (h.x = 0,
                            h.xPercent = ut(T.x, A.xPercent)),
                            "string" == typeof T.y && -1 !== T.y.indexOf("%") && (h.y = 0,
                            h.yPercent = ut(T.y, A.yPercent)),
                            h.rotation = ht("rotation"in T ? T.rotation : "shortRotation"in T ? T.shortRotation + "_short" : "rotationZ"in T ? T.rotationZ : A.rotation, A.rotation, "rotation", S),
                            Ot && (h.rotationX = ht("rotationX"in T ? T.rotationX : "shortRotationX"in T ? T.shortRotationX + "_short" : A.rotationX || 0, A.rotationX, "rotationX", S),
                            h.rotationY = ht("rotationY"in T ? T.rotationY : "shortRotationY"in T ? T.shortRotationY + "_short" : A.rotationY || 0, A.rotationY, "rotationY", S)),
                            h.skewX = ht(T.skewX, A.skewX),
                            h.skewY = ht(T.skewY, A.skewY)
                        }
                        for (Ot && null != T.force3D && (A.force3D = T.force3D,
                        f = !0),
                        p = A.force3D || A.z || A.rotationX || A.rotationY || h.z || h.rotationX || h.rotationY || h.perspective,
                        p || null == T.scale || (h.scaleZ = 1); --E > -1; )
                            b = Ct[E],
                            ((C = h[b] - A[b]) > 1e-6 || C < -1e-6 || null != T[b] || null != B[b]) && (f = !0,
                            o = new xt(A,b,A[b],C,o),
                            b in S && (o.e = S[b]),
                            o.xs0 = 0,
                            o.plugin = a,
                            r._overwriteProps.push(o.n));
                        return C = T.transformOrigin,
                        A.svg && (C || T.svgOrigin) && (v = A.xOffset,
                        _ = A.yOffset,
                        zt(t, ct(C), h, T.svgOrigin, T.smoothOrigin),
                        o = bt(A, "xOrigin", (w ? A : h).xOrigin, h.xOrigin, o, "transformOrigin"),
                        o = bt(A, "yOrigin", (w ? A : h).yOrigin, h.yOrigin, o, "transformOrigin"),
                        v === A.xOffset && _ === A.yOffset || (o = bt(A, "xOffset", w ? v : A.xOffset, A.xOffset, o, "transformOrigin"),
                        o = bt(A, "yOffset", w ? _ : A.yOffset, A.yOffset, o, "transformOrigin")),
                        C = "0px 0px"),
                        (C || Ot && p && A.zOrigin) && (Pt ? (f = !0,
                        b = Rt,
                        C = (C || tt(t, b, i, !1, "50% 50%")) + "",
                        o = new xt(M,b,0,0,o,-1,"transformOrigin"),
                        o.b = M[b],
                        o.plugin = a,
                        Ot ? (d = A.zOrigin,
                        C = C.split(" "),
                        A.zOrigin = (C.length > 2 && (0 === d || "0px" !== C[2]) ? parseFloat(C[2]) : d) || 0,
                        o.xs0 = o.e = C[0] + " " + (C[1] || "50%") + " 0px",
                        o = new xt(A,"zOrigin",0,0,o,-1,o.n),
                        o.b = d,
                        o.xs0 = o.e = A.zOrigin) : o.xs0 = o.e = C) : ct(C + "", A)),
                        f && (r._transformType = A.svg && At || !p && 3 !== this._transformType ? 2 : 3),
                        l && (c[n] = l),
                        u && (c.scale = u),
                        o
                    },
                    prefix: !0
                }),
                Tt("boxShadow", {
                    defaultValue: "0px 0px 0px 0px #999",
                    prefix: !0,
                    color: !0,
                    multi: !0,
                    keyword: "inset"
                }),
                Tt("borderRadius", {
                    defaultValue: "0px",
                    parser: function(t, e, n, o, a, s) {
                        e = this.format(e);
                        var c, l, u, h, d, p, f, m, v, g, y, _, x, b, w, M, E = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], T = t.style;
                        for (v = parseFloat(t.offsetWidth),
                        g = parseFloat(t.offsetHeight),
                        c = e.split(" "),
                        l = 0; l < E.length; l++)
                            this.p.indexOf("border") && (E[l] = Q(E[l])),
                            d = h = tt(t, E[l], i, !1, "0px"),
                            -1 !== d.indexOf(" ") && (h = d.split(" "),
                            d = h[0],
                            h = h[1]),
                            p = u = c[l],
                            f = parseFloat(d),
                            _ = d.substr((f + "").length),
                            x = "=" === p.charAt(1),
                            x ? (m = parseInt(p.charAt(0) + "1", 10),
                            p = p.substr(2),
                            m *= parseFloat(p),
                            y = p.substr((m + "").length - (m < 0 ? 1 : 0)) || "") : (m = parseFloat(p),
                            y = p.substr((m + "").length)),
                            "" === y && (y = r[n] || _),
                            y !== _ && (b = et(t, "borderLeft", f, _),
                            w = et(t, "borderTop", f, _),
                            "%" === y ? (d = b / v * 100 + "%",
                            h = w / g * 100 + "%") : "em" === y ? (M = et(t, "borderLeft", 1, "em"),
                            d = b / M + "em",
                            h = w / M + "em") : (d = b + "px",
                            h = w + "px"),
                            x && (p = parseFloat(d) + m + y,
                            u = parseFloat(h) + m + y)),
                            a = wt(T, E[l], d + " " + h, p + " " + u, !1, "0px", a);
                        return a
                    },
                    prefix: !0,
                    formatter: gt("0px 0px 0px 0px", !1, !0)
                }),
                Tt("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                    defaultValue: "0px",
                    parser: function(t, e, n, r, o, a) {
                        return wt(t.style, n, this.format(tt(t, n, i, !1, "0px 0px")), this.format(e), !1, "0px", o)
                    },
                    prefix: !0,
                    formatter: gt("0px 0px", !1, !0)
                }),
                Tt("backgroundPosition", {
                    defaultValue: "0 0",
                    parser: function(t, e, n, r, o, a) {
                        var s, c, l, u, h, d, p = "background-position", f = i || K(t, null), m = this.format((f ? v ? f.getPropertyValue(p + "-x") + " " + f.getPropertyValue(p + "-y") : f.getPropertyValue(p) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), g = this.format(e);
                        if (-1 !== m.indexOf("%") != (-1 !== g.indexOf("%")) && g.split(",").length < 2 && (d = tt(t, "backgroundImage").replace(L, "")) && "none" !== d) {
                            for (s = m.split(" "),
                            c = g.split(" "),
                            V.setAttribute("src", d),
                            l = 2; --l > -1; )
                                m = s[l],
                                (u = -1 !== m.indexOf("%")) !== (-1 !== c[l].indexOf("%")) && (h = 0 === l ? t.offsetWidth - V.width : t.offsetHeight - V.height,
                                s[l] = u ? parseFloat(m) / 100 * h + "px" : parseFloat(m) / h * 100 + "%");
                            m = s.join(" ")
                        }
                        return this.parseComplex(t.style, m, g, o, a)
                    },
                    formatter: ct
                }),
                Tt("backgroundSize", {
                    defaultValue: "0 0",
                    formatter: function(t) {
                        return t += "",
                        ct(-1 === t.indexOf(" ") ? t + " " + t : t)
                    }
                }),
                Tt("perspective", {
                    defaultValue: "0px",
                    prefix: !0
                }),
                Tt("perspectiveOrigin", {
                    defaultValue: "50% 50%",
                    prefix: !0
                }),
                Tt("transformStyle", {
                    prefix: !0
                }),
                Tt("backfaceVisibility", {
                    prefix: !0
                }),
                Tt("userSelect", {
                    prefix: !0
                }),
                Tt("margin", {
                    parser: yt("marginTop,marginRight,marginBottom,marginLeft")
                }),
                Tt("padding", {
                    parser: yt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                }),
                Tt("clip", {
                    defaultValue: "rect(0px,0px,0px,0px)",
                    parser: function(t, e, n, r, o, a) {
                        var s, c, l;
                        return v < 9 ? (c = t.currentStyle,
                        l = v < 8 ? " " : ",",
                        s = "rect(" + c.clipTop + l + c.clipRight + l + c.clipBottom + l + c.clipLeft + ")",
                        e = this.format(e).split(",").join(l)) : (s = this.format(tt(t, this.p, i, !1, this.dflt)),
                        e = this.format(e)),
                        this.parseComplex(t.style, s, e, o, a)
                    }
                }),
                Tt("textShadow", {
                    defaultValue: "0px 0px 0px #999",
                    color: !0,
                    multi: !0
                }),
                Tt("autoRound,strictUnits", {
                    parser: function(t, e, n, r, i) {
                        return i
                    }
                }),
                Tt("border", {
                    defaultValue: "0px solid #000",
                    parser: function(t, e, n, r, o, a) {
                        var s = tt(t, "borderTopWidth", i, !1, "0px")
                          , c = this.format(e).split(" ")
                          , l = c[0].replace(M, "");
                        return "px" !== l && (s = parseFloat(s) / et(t, "borderTopWidth", 1, l) + l),
                        this.parseComplex(t.style, this.format(s + " " + tt(t, "borderTopStyle", i, !1, "solid") + " " + tt(t, "borderTopColor", i, !1, "#000")), c.join(" "), o, a)
                    },
                    color: !0,
                    formatter: function(t) {
                        var e = t.split(" ");
                        return e[0] + " " + (e[1] || "solid") + " " + (t.match(vt) || ["#000"])[0]
                    }
                }),
                Tt("borderWidth", {
                    parser: yt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                }),
                Tt("float,cssFloat,styleFloat", {
                    parser: function(t, e, n, r, i, o) {
                        var a = t.style
                          , s = "cssFloat"in a ? "cssFloat" : "styleFloat";
                        return new xt(a,s,0,0,i,-1,n,!1,0,a[s],e)
                    }
                });
                var Xt = function(t) {
                    var e, n = this.t, r = n.filter || tt(this.data, "filter") || "", i = this.s + this.c * t | 0;
                    100 === i && (-1 === r.indexOf("atrix(") && -1 === r.indexOf("radient(") && -1 === r.indexOf("oader(") ? (n.removeAttribute("filter"),
                    e = !tt(this.data, "filter")) : (n.filter = r.replace(S, ""),
                    e = !0)),
                    e || (this.xn1 && (n.filter = r = r || "alpha(opacity=" + i + ")"),
                    -1 === r.indexOf("pacity") ? 0 === i && this.xn1 || (n.filter = r + " alpha(opacity=" + i + ")") : n.filter = r.replace(E, "opacity=" + i))
                };
                Tt("opacity,alpha,autoAlpha", {
                    defaultValue: "1",
                    parser: function(t, e, n, r, o, a) {
                        var s = parseFloat(tt(t, "opacity", i, !1, "1"))
                          , c = t.style
                          , l = "autoAlpha" === n;
                        return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s),
                        l && 1 === s && "hidden" === tt(t, "visibility", i) && 0 !== e && (s = 0),
                        X ? o = new xt(c,"opacity",s,e - s,o) : (o = new xt(c,"opacity",100 * s,100 * (e - s),o),
                        o.xn1 = l ? 1 : 0,
                        c.zoom = 1,
                        o.type = 2,
                        o.b = "alpha(opacity=" + o.s + ")",
                        o.e = "alpha(opacity=" + (o.s + o.c) + ")",
                        o.data = t,
                        o.plugin = a,
                        o.setRatio = Xt),
                        l && (o = new xt(c,"visibility",0,0,o,-1,null,!1,0,0 !== s ? "inherit" : "hidden",0 === e ? "hidden" : "inherit"),
                        o.xs0 = "inherit",
                        r._overwriteProps.push(o.n),
                        r._overwriteProps.push(n)),
                        o
                    }
                });
                var Yt = function(t, e) {
                    e && (t.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e),
                    t.removeProperty(e.replace(C, "-$1").toLowerCase())) : t.removeAttribute(e))
                }
                  , $t = function(t) {
                    if (this.t._gsClassPT = this,
                    1 === t || 0 === t) {
                        this.t.setAttribute("class", 0 === t ? this.b : this.e);
                        for (var e = this.data, n = this.t.style; e; )
                            e.v ? n[e.p] = e.v : Yt(n, e.p),
                            e = e._next;
                        1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                    } else
                        this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                };
                Tt("className", {
                    parser: function(t, e, r, o, a, s, c) {
                        var l, u, h, d, p, f = t.getAttribute("class") || "", m = t.style.cssText;
                        if (a = o._classNamePT = new xt(t,r,0,0,a,2),
                        a.setRatio = $t,
                        a.pr = -11,
                        n = !0,
                        a.b = f,
                        u = rt(t, i),
                        h = t._gsClassPT) {
                            for (d = {},
                            p = h.data; p; )
                                d[p.p] = 1,
                                p = p._next;
                            h.setRatio(1)
                        }
                        return t._gsClassPT = a,
                        a.e = "=" !== e.charAt(1) ? e : f.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""),
                        t.setAttribute("class", a.e),
                        l = it(t, u, rt(t), c, d),
                        t.setAttribute("class", f),
                        a.data = l.firstMPT,
                        t.style.cssText = m,
                        a = a.xfirst = o.parse(t, l.difs, a, s)
                    }
                });
                var Zt = function(t) {
                    if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                        var e, n, r, i, o, a = this.t.style, s = l.transform.parse;
                        if ("all" === this.e)
                            a.cssText = "",
                            i = !0;
                        else
                            for (e = this.e.split(" ").join("").split(","),
                            r = e.length; --r > -1; )
                                n = e[r],
                                l[n] && (l[n].parse === s ? i = !0 : n = "transformOrigin" === n ? Rt : l[n].p),
                                Yt(a, n);
                        i && (Yt(a, Pt),
                        (o = this.t._gsTransform) && (o.svg && (this.t.removeAttribute("data-svg-origin"),
                        this.t.removeAttribute("transform")),
                        delete this.t._gsTransform))
                    }
                };
                for (Tt("clearProps", {
                    parser: function(t, e, r, i, o) {
                        return o = new xt(t,r,0,0,o,2),
                        o.setRatio = Zt,
                        o.e = e,
                        o.pr = -10,
                        o.data = i._tween,
                        n = !0,
                        o
                    }
                }),
                u = "bezier,throwProps,physicsProps,physics2D".split(","),
                Mt = u.length; Mt--; )
                    St(u[Mt]);
                u = s.prototype,
                u._firstPT = u._lastParsedTransform = u._transform = null,
                u._onInitTween = function(t, e, o, c) {
                    if (!t.nodeType)
                        return !1;
                    this._target = g = t,
                    this._tween = o,
                    this._vars = e,
                    y = c,
                    h = e.autoRound,
                    n = !1,
                    r = e.suffixMap || s.suffixMap,
                    i = K(t, ""),
                    a = this._overwriteProps;
                    var u, f, v, _, x, b, w, M, E, S = t.style;
                    if (d && "" === S.zIndex && ("auto" !== (u = tt(t, "zIndex", i)) && "" !== u || this._addLazySet(S, "zIndex", 0)),
                    "string" == typeof e && (_ = S.cssText,
                    u = rt(t, i),
                    S.cssText = _ + ";" + e,
                    u = it(t, u, rt(t)).difs,
                    !X && T.test(e) && (u.opacity = parseFloat(RegExp.$1)),
                    e = u,
                    S.cssText = _),
                    e.className ? this._firstPT = f = l.className.parse(t, e.className, "className", this, null, null, e) : this._firstPT = f = this.parse(t, e, null),
                    this._transformType) {
                        for (E = 3 === this._transformType,
                        Pt ? p && (d = !0,
                        "" === S.zIndex && ("auto" !== (w = tt(t, "zIndex", i)) && "" !== w || this._addLazySet(S, "zIndex", 0)),
                        m && this._addLazySet(S, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (E ? "visible" : "hidden"))) : S.zoom = 1,
                        v = f; v && v._next; )
                            v = v._next;
                        M = new xt(t,"transform",0,0,null,2),
                        this._linkCSSP(M, null, v),
                        M.setRatio = Pt ? qt : Wt,
                        M.data = this._transform || Vt(t, i, !0),
                        M.tween = o,
                        M.pr = -1,
                        a.pop()
                    }
                    if (n) {
                        for (; f; ) {
                            for (b = f._next,
                            v = _; v && v.pr > f.pr; )
                                v = v._next;
                            (f._prev = v ? v._prev : x) ? f._prev._next = f : _ = f,
                            (f._next = v) ? v._prev = f : x = f,
                            f = b
                        }
                        this._firstPT = _
                    }
                    return !0
                }
                ,
                u.parse = function(t, e, n, o) {
                    var a, s, c, u, d, p, f, m, v, _, x = t.style;
                    for (a in e) {
                        if (p = e[a],
                        "function" == typeof p && (p = p(y, g)),
                        s = l[a])
                            n = s.parse(t, p, a, this, n, o, e);
                        else {
                            if ("--" === a.substr(0, 2)) {
                                this._tween._propLookup[a] = this._addTween.call(this._tween, t.style, "setProperty", K(t).getPropertyValue(a) + "", p + "", a, !1, a);
                                continue
                            }
                            d = tt(t, a, i) + "",
                            v = "string" == typeof p,
                            "color" === a || "fill" === a || "stroke" === a || -1 !== a.indexOf("Color") || v && A.test(p) ? (v || (p = ft(p),
                            p = (p.length > 3 ? "rgba(" : "rgb(") + p.join(",") + ")"),
                            n = wt(x, a, d, p, !0, "transparent", n, 0, o)) : v && k.test(p) ? n = wt(x, a, d, p, !0, null, n, 0, o) : (c = parseFloat(d),
                            f = c || 0 === c ? d.substr((c + "").length) : "",
                            "" !== d && "auto" !== d || ("width" === a || "height" === a ? (c = st(t, a, i),
                            f = "px") : "left" === a || "top" === a ? (c = nt(t, a, i),
                            f = "px") : (c = "opacity" !== a ? 0 : 1,
                            f = "")),
                            _ = v && "=" === p.charAt(1),
                            _ ? (u = parseInt(p.charAt(0) + "1", 10),
                            p = p.substr(2),
                            u *= parseFloat(p),
                            m = p.replace(M, "")) : (u = parseFloat(p),
                            m = v ? p.replace(M, "") : ""),
                            "" === m && (m = a in r ? r[a] : f),
                            p = u || 0 === u ? (_ ? u + c : u) + m : e[a],
                            f !== m && ("" === m && "lineHeight" !== a || (u || 0 === u) && c && (c = et(t, a, c, f),
                            "%" === m ? (c /= et(t, a, 100, "%") / 100,
                            !0 !== e.strictUnits && (d = c + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? c /= et(t, a, 1, m) : "px" !== m && (u = et(t, a, u, m),
                            m = "px"),
                            _ && (u || 0 === u) && (p = u + c + m))),
                            _ && (u += c),
                            !c && 0 !== c || !u && 0 !== u ? void 0 !== x[a] && (p || p + "" != "NaN" && null != p) ? (n = new xt(x,a,u || c || 0,0,n,-1,a,!1,0,d,p),
                            n.xs0 = "none" !== p || "display" !== a && -1 === a.indexOf("Style") ? p : d) : $("invalid " + a + " tween value: " + e[a]) : (n = new xt(x,a,c,u - c,n,0,a,!1 !== h && ("px" === m || "zIndex" === a),0,d,p),
                            n.xs0 = m))
                        }
                        o && n && !n.plugin && (n.plugin = o)
                    }
                    return n
                }
                ,
                u.setRatio = function(t) {
                    var e, n, r, i = this._firstPT;
                    if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                        if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || -1e-6 === this._tween._rawPrevTime)
                            for (; i; ) {
                                if (e = i.c * t + i.s,
                                i.r ? e = Math.round(e) : e < 1e-6 && e > -1e-6 && (e = 0),
                                i.type)
                                    if (1 === i.type)
                                        if (2 === (r = i.l))
                                            i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2;
                                        else if (3 === r)
                                            i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3;
                                        else if (4 === r)
                                            i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4;
                                        else if (5 === r)
                                            i.t[i.p] = i.xs0 + e + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4 + i.xn4 + i.xs5;
                                        else {
                                            for (n = i.xs0 + e + i.xs1,
                                            r = 1; r < i.l; r++)
                                                n += i["xn" + r] + i["xs" + (r + 1)];
                                            i.t[i.p] = n
                                        }
                                    else
                                        -1 === i.type ? i.t[i.p] = i.xs0 : i.setRatio && i.setRatio(t);
                                else
                                    i.t[i.p] = e + i.xs0;
                                i = i._next
                            }
                        else
                            for (; i; )
                                2 !== i.type ? i.t[i.p] = i.b : i.setRatio(t),
                                i = i._next;
                    else
                        for (; i; ) {
                            if (2 !== i.type)
                                if (i.r && -1 !== i.type)
                                    if (e = Math.round(i.s + i.c),
                                    i.type) {
                                        if (1 === i.type) {
                                            for (r = i.l,
                                            n = i.xs0 + e + i.xs1,
                                            r = 1; r < i.l; r++)
                                                n += i["xn" + r] + i["xs" + (r + 1)];
                                            i.t[i.p] = n
                                        }
                                    } else
                                        i.t[i.p] = e + i.xs0;
                                else
                                    i.t[i.p] = i.e;
                            else
                                i.setRatio(t);
                            i = i._next
                        }
                }
                ,
                u._enableTransforms = function(t) {
                    this._transform = this._transform || Vt(this._target, i, !0),
                    this._transformType = this._transform.svg && At || !t && 3 !== this._transformType ? 2 : 3
                }
                ;
                var Jt = function(t) {
                    this.t[this.p] = this.e,
                    this.data._linkCSSP(this, this._next, null, !0)
                };
                u._addLazySet = function(t, e, n) {
                    var r = this._firstPT = new xt(t,e,0,0,this._firstPT,2);
                    r.e = n,
                    r.setRatio = Jt,
                    r.data = this
                }
                ,
                u._linkCSSP = function(t, e, n, r) {
                    return t && (e && (e._prev = t),
                    t._next && (t._next._prev = t._prev),
                    t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next,
                    r = !0),
                    n ? n._next = t : r || null !== this._firstPT || (this._firstPT = t),
                    t._next = e,
                    t._prev = n),
                    t
                }
                ,
                u._mod = function(t) {
                    for (var e = this._firstPT; e; )
                        "function" == typeof t[e.p] && t[e.p] === Math.round && (e.r = 1),
                        e = e._next
                }
                ,
                u._kill = function(e) {
                    var n, r, i, o = e;
                    if (e.autoAlpha || e.alpha) {
                        o = {};
                        for (r in e)
                            o[r] = e[r];
                        o.opacity = 1,
                        o.autoAlpha && (o.visibility = 1)
                    }
                    for (e.className && (n = this._classNamePT) && (i = n.xfirst,
                    i && i._prev ? this._linkCSSP(i._prev, n._next, i._prev._prev) : i === this._firstPT && (this._firstPT = n._next),
                    n._next && this._linkCSSP(n._next, n._next._next, i._prev),
                    this._classNamePT = null),
                    n = this._firstPT; n; )
                        n.plugin && n.plugin !== r && n.plugin._kill && (n.plugin._kill(e),
                        r = n.plugin),
                        n = n._next;
                    return t.prototype._kill.call(this, o)
                }
                ;
                var Qt = function(t, e, n) {
                    var r, i, o, a;
                    if (t.slice)
                        for (i = t.length; --i > -1; )
                            Qt(t[i], e, n);
                    else
                        for (r = t.childNodes,
                        i = r.length; --i > -1; )
                            o = r[i],
                            a = o.type,
                            o.style && (e.push(rt(o)),
                            n && n.push(o)),
                            1 !== a && 9 !== a && 11 !== a || !o.childNodes.length || Qt(o, e, n)
                };
                return s.cascadeTo = function(t, n, r) {
                    var i, o, a, s, c = e.to(t, n, r), l = [c], u = [], h = [], d = [], p = e._internals.reservedProps;
                    for (t = c._targets || c.target,
                    Qt(t, u, d),
                    c.render(n, !0, !0),
                    Qt(t, h),
                    c.render(0, !0, !0),
                    c._enabled(!0),
                    i = d.length; --i > -1; )
                        if (o = it(d[i], u[i], h[i]),
                        o.firstMPT) {
                            o = o.difs;
                            for (a in r)
                                p[a] && (o[a] = r[a]);
                            s = {};
                            for (a in o)
                                s[a] = u[i][a];
                            l.push(e.fromTo(d[i], n, s, o))
                        }
                    return l
                }
                ,
                t.activate([s]),
                s
            }, !0),
            function() {
                var t = o._gsDefine.plugin({
                    propName: "roundProps",
                    version: "1.6.0",
                    priority: -1,
                    API: 2,
                    init: function(t, e, n) {
                        return this._tween = n,
                        !0
                    }
                })
                  , e = function(t) {
                    for (; t; )
                        t.f || t.blob || (t.m = Math.round),
                        t = t._next
                }
                  , n = t.prototype;
                n._onInitAllProps = function() {
                    for (var t, n, r, i = this._tween, o = i.vars.roundProps.join ? i.vars.roundProps : i.vars.roundProps.split(","), a = o.length, s = {}, c = i._propLookup.roundProps; --a > -1; )
                        s[o[a]] = Math.round;
                    for (a = o.length; --a > -1; )
                        for (t = o[a],
                        n = i._firstPT; n; )
                            r = n._next,
                            n.pg ? n.t._mod(s) : n.n === t && (2 === n.f && n.t ? e(n.t._firstPT) : (this._add(n.t, t, n.s, n.c),
                            r && (r._prev = n._prev),
                            n._prev ? n._prev._next = r : i._firstPT === n && (i._firstPT = r),
                            n._next = n._prev = null,
                            i._propLookup[t] = c)),
                            n = r;
                    return !1
                }
                ,
                n._add = function(t, e, n, r) {
                    this._addTween(t, e, n, n + r, e, Math.round),
                    this._overwriteProps.push(e)
                }
            }(),
            function() {
                o._gsDefine.plugin({
                    propName: "attr",
                    API: 2,
                    version: "0.6.1",
                    init: function(t, e, n, r) {
                        var i, o;
                        if ("function" != typeof t.setAttribute)
                            return !1;
                        for (i in e)
                            o = e[i],
                            "function" == typeof o && (o = o(r, t)),
                            this._addTween(t, "setAttribute", t.getAttribute(i) + "", o + "", i, !1, i),
                            this._overwriteProps.push(i);
                        return !0
                    }
                })
            }(),
            o._gsDefine.plugin({
                propName: "directionalRotation",
                version: "0.3.1",
                API: 2,
                init: function(t, e, n, r) {
                    "object" != typeof e && (e = {
                        rotation: e
                    }),
                    this.finals = {};
                    var i, o, a, s, c, l, u = !0 === e.useRadians ? 2 * Math.PI : 360;
                    for (i in e)
                        "useRadians" !== i && (s = e[i],
                        "function" == typeof s && (s = s(r, t)),
                        l = (s + "").split("_"),
                        o = l[0],
                        a = parseFloat("function" != typeof t[i] ? t[i] : t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]()),
                        s = this.finals[i] = "string" == typeof o && "=" === o.charAt(1) ? a + parseInt(o.charAt(0) + "1", 10) * Number(o.substr(2)) : Number(o) || 0,
                        c = s - a,
                        l.length && (o = l.join("_"),
                        -1 !== o.indexOf("short") && (c %= u) !== c % (u / 2) && (c = c < 0 ? c + u : c - u),
                        -1 !== o.indexOf("_cw") && c < 0 ? c = (c + 9999999999 * u) % u - (c / u | 0) * u : -1 !== o.indexOf("ccw") && c > 0 && (c = (c - 9999999999 * u) % u - (c / u | 0) * u)),
                        (c > 1e-6 || c < -1e-6) && (this._addTween(t, i, a, a + c, i),
                        this._overwriteProps.push(i)));
                    return !0
                },
                set: function(t) {
                    var e;
                    if (1 !== t)
                        this._super.setRatio.call(this, t);
                    else
                        for (e = this._firstPT; e; )
                            e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p],
                            e = e._next
                }
            })._autoCSS = !0,
            o._gsDefine("easing.Back", ["easing.Ease"], function(t) {
                var e, n, r, i, a = o.GreenSockGlobals || o, s = a.com.greensock, c = 2 * Math.PI, l = Math.PI / 2, u = s._class, h = function(e, n) {
                    var r = u("easing." + e, function() {}, !0)
                      , i = r.prototype = new t;
                    return i.constructor = r,
                    i.getRatio = n,
                    r
                }, d = t.register || function() {}
                , p = function(t, e, n, r, i) {
                    var o = u("easing." + t, {
                        easeOut: new e,
                        easeIn: new n,
                        easeInOut: new r
                    }, !0);
                    return d(o, t),
                    o
                }, f = function(t, e, n) {
                    this.t = t,
                    this.v = e,
                    n && (this.next = n,
                    n.prev = this,
                    this.c = n.v - e,
                    this.gap = n.t - t)
                }, m = function(e, n) {
                    var r = u("easing." + e, function(t) {
                        this._p1 = t || 0 === t ? t : 1.70158,
                        this._p2 = 1.525 * this._p1
                    }, !0)
                      , i = r.prototype = new t;
                    return i.constructor = r,
                    i.getRatio = n,
                    i.config = function(t) {
                        return new r(t)
                    }
                    ,
                    r
                }, v = p("Back", m("BackOut", function(t) {
                    return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
                }), m("BackIn", function(t) {
                    return t * t * ((this._p1 + 1) * t - this._p1)
                }), m("BackInOut", function(t) {
                    return (t *= 2) < 1 ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
                })), g = u("easing.SlowMo", function(t, e, n) {
                    e = e || 0 === e ? e : .7,
                    null == t ? t = .7 : t > 1 && (t = 1),
                    this._p = 1 !== t ? e : 0,
                    this._p1 = (1 - t) / 2,
                    this._p2 = t,
                    this._p3 = this._p1 + this._p2,
                    this._calcEnd = !0 === n
                }, !0), y = g.prototype = new t;
                return y.constructor = g,
                y.getRatio = function(t) {
                    var e = t + (.5 - t) * this._p;
                    return t < this._p1 ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 === t ? 0 : 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
                }
                ,
                g.ease = new g(.7,.7),
                y.config = g.config = function(t, e, n) {
                    return new g(t,e,n)
                }
                ,
                e = u("easing.SteppedEase", function(t, e) {
                    t = t || 1,
                    this._p1 = 1 / t,
                    this._p2 = t + (e ? 0 : 1),
                    this._p3 = e ? 1 : 0
                }, !0),
                y = e.prototype = new t,
                y.constructor = e,
                y.getRatio = function(t) {
                    return t < 0 ? t = 0 : t >= 1 && (t = .999999999),
                    ((this._p2 * t | 0) + this._p3) * this._p1
                }
                ,
                y.config = e.config = function(t, n) {
                    return new e(t,n)
                }
                ,
                n = u("easing.ExpoScaleEase", function(t, e, n) {
                    this._p1 = Math.log(e / t),
                    this._p2 = e - t,
                    this._p3 = t,
                    this._ease = n
                }, !0),
                y = n.prototype = new t,
                y.constructor = n,
                y.getRatio = function(t) {
                    return this._ease && (t = this._ease.getRatio(t)),
                    (this._p3 * Math.exp(this._p1 * t) - this._p3) / this._p2
                }
                ,
                y.config = n.config = function(t, e, r) {
                    return new n(t,e,r)
                }
                ,
                r = u("easing.RoughEase", function(e) {
                    e = e || {};
                    for (var n, r, i, o, a, s, c = e.taper || "none", l = [], u = 0, h = 0 | (e.points || 20), d = h, p = !1 !== e.randomize, m = !0 === e.clamp, v = e.template instanceof t ? e.template : null, g = "number" == typeof e.strength ? .4 * e.strength : .4; --d > -1; )
                        n = p ? Math.random() : 1 / h * d,
                        r = v ? v.getRatio(n) : n,
                        "none" === c ? i = g : "out" === c ? (o = 1 - n,
                        i = o * o * g) : "in" === c ? i = n * n * g : n < .5 ? (o = 2 * n,
                        i = o * o * .5 * g) : (o = 2 * (1 - n),
                        i = o * o * .5 * g),
                        p ? r += Math.random() * i - .5 * i : d % 2 ? r += .5 * i : r -= .5 * i,
                        m && (r > 1 ? r = 1 : r < 0 && (r = 0)),
                        l[u++] = {
                            x: n,
                            y: r
                        };
                    for (l.sort(function(t, e) {
                        return t.x - e.x
                    }),
                    s = new f(1,1,null),
                    d = h; --d > -1; )
                        a = l[d],
                        s = new f(a.x,a.y,s);
                    this._prev = new f(0,0,0 !== s.t ? s : s.next)
                }, !0),
                y = r.prototype = new t,
                y.constructor = r,
                y.getRatio = function(t) {
                    var e = this._prev;
                    if (t > e.t) {
                        for (; e.next && t >= e.t; )
                            e = e.next;
                        e = e.prev
                    } else
                        for (; e.prev && t <= e.t; )
                            e = e.prev;
                    return this._prev = e,
                    e.v + (t - e.t) / e.gap * e.c
                }
                ,
                y.config = function(t) {
                    return new r(t)
                }
                ,
                r.ease = new r,
                p("Bounce", h("BounceOut", function(t) {
                    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                }), h("BounceIn", function(t) {
                    return (t = 1 - t) < 1 / 2.75 ? 1 - 7.5625 * t * t : t < 2 / 2.75 ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : t < 2.5 / 2.75 ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
                }), h("BounceInOut", function(t) {
                    var e = t < .5;
                    return t = e ? 1 - 2 * t : 2 * t - 1,
                    t < 1 / 2.75 ? t *= 7.5625 * t : t = t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375,
                    e ? .5 * (1 - t) : .5 * t + .5
                })),
                p("Circ", h("CircOut", function(t) {
                    return Math.sqrt(1 - (t -= 1) * t)
                }), h("CircIn", function(t) {
                    return -(Math.sqrt(1 - t * t) - 1)
                }), h("CircInOut", function(t) {
                    return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
                })),
                i = function(e, n, r) {
                    var i = u("easing." + e, function(t, e) {
                        this._p1 = t >= 1 ? t : 1,
                        this._p2 = (e || r) / (t < 1 ? t : 1),
                        this._p3 = this._p2 / c * (Math.asin(1 / this._p1) || 0),
                        this._p2 = c / this._p2
                    }, !0)
                      , o = i.prototype = new t;
                    return o.constructor = i,
                    o.getRatio = n,
                    o.config = function(t, e) {
                        return new i(t,e)
                    }
                    ,
                    i
                }
                ,
                p("Elastic", i("ElasticOut", function(t) {
                    return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1
                }, .3), i("ElasticIn", function(t) {
                    return -this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2)
                }, .3), i("ElasticInOut", function(t) {
                    return (t *= 2) < 1 ? this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * -.5 : this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) * .5 + 1
                }, .45)),
                p("Expo", h("ExpoOut", function(t) {
                    return 1 - Math.pow(2, -10 * t)
                }), h("ExpoIn", function(t) {
                    return Math.pow(2, 10 * (t - 1)) - .001
                }), h("ExpoInOut", function(t) {
                    return (t *= 2) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
                })),
                p("Sine", h("SineOut", function(t) {
                    return Math.sin(t * l)
                }), h("SineIn", function(t) {
                    return 1 - Math.cos(t * l)
                }), h("SineInOut", function(t) {
                    return -.5 * (Math.cos(Math.PI * t) - 1)
                })),
                u("easing.EaseLookup", {
                    find: function(e) {
                        return t.map[e]
                    }
                }, !0),
                d(a.SlowMo, "SlowMo", "ease,"),
                d(r, "RoughEase", "ease,"),
                d(e, "SteppedEase", "ease,"),
                v
            }, !0)
        }),
        o._gsDefine && o._gsQueue.pop()(),
        function(n, o) {
            "use strict";
            var a = {}
              , s = n.document
              , c = n.GreenSockGlobals = n.GreenSockGlobals || n;
            if (!c.TweenLite) {
                var l, u, h, d, p, f = function(t) {
                    var e, n = t.split("."), r = c;
                    for (e = 0; e < n.length; e++)
                        r[n[e]] = r = r[n[e]] || {};
                    return r
                }, m = f("com.greensock"), v = function(t) {
                    var e, n = [], r = t.length;
                    for (e = 0; e !== r; n.push(t[e++]))
                        ;
                    return n
                }, g = function() {}, y = function() {
                    var t = Object.prototype.toString
                      , e = t.call([]);
                    return function(n) {
                        return null != n && (n instanceof Array || "object" == typeof n && !!n.push && t.call(n) === e)
                    }
                }(), _ = {}, x = function(n, o, s, l) {
                    this.sc = _[n] ? _[n].sc : [],
                    _[n] = this,
                    this.gsClass = null,
                    this.func = s;
                    var u = [];
                    this.check = function(h) {
                        for (var d, p, m, v, g = o.length, y = g; --g > -1; )
                            (d = _[o[g]] || new x(o[g],[])).gsClass ? (u[g] = d.gsClass,
                            y--) : h && d.sc.push(this);
                        if (0 === y && s) {
                            if (p = ("com.greensock." + n).split("."),
                            m = p.pop(),
                            v = f(p.join("."))[m] = this.gsClass = s.apply(s, u),
                            l)
                                if (c[m] = a[m] = v,
                                void 0 !== t && t.exports)
                                    if ("TweenMax" === n) {
                                        t.exports = a.TweenMax = v;
                                        for (g in a)
                                            v[g] = a[g]
                                    } else
                                        a.TweenMax && (a.TweenMax[m] = v);
                                else
                                    r = [],
                                    void 0 !== (i = function() {
                                        return v
                                    }
                                    .apply(e, r)) && (t.exports = i);
                            for (g = 0; g < this.sc.length; g++)
                                this.sc[g].check()
                        }
                    }
                    ,
                    this.check(!0)
                }, b = n._gsDefine = function(t, e, n, r) {
                    return new x(t,e,n,r)
                }
                , w = m._class = function(t, e, n) {
                    return e = e || function() {}
                    ,
                    b(t, [], function() {
                        return e
                    }, n),
                    e
                }
                ;
                b.globals = c;
                var M = [0, 0, 1, 1]
                  , E = w("easing.Ease", function(t, e, n, r) {
                    this._func = t,
                    this._type = n || 0,
                    this._power = r || 0,
                    this._params = e ? M.concat(e) : M
                }, !0)
                  , T = E.map = {}
                  , S = E.register = function(t, e, n, r) {
                    for (var i, o, a, s, c = e.split(","), l = c.length, u = (n || "easeIn,easeOut,easeInOut").split(","); --l > -1; )
                        for (o = c[l],
                        i = r ? w("easing." + o, null, !0) : m.easing[o] || {},
                        a = u.length; --a > -1; )
                            s = u[a],
                            T[o + "." + s] = T[s + o] = i[s] = t.getRatio ? t : t[s] || new t
                }
                ;
                for (h = E.prototype,
                h._calcEnd = !1,
                h.getRatio = function(t) {
                    if (this._func)
                        return this._params[0] = t,
                        this._func.apply(null, this._params);
                    var e = this._type
                      , n = this._power
                      , r = 1 === e ? 1 - t : 2 === e ? t : t < .5 ? 2 * t : 2 * (1 - t);
                    return 1 === n ? r *= r : 2 === n ? r *= r * r : 3 === n ? r *= r * r * r : 4 === n && (r *= r * r * r * r),
                    1 === e ? 1 - r : 2 === e ? r : t < .5 ? r / 2 : 1 - r / 2
                }
                ,
                l = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                u = l.length; --u > -1; )
                    h = l[u] + ",Power" + u,
                    S(new E(null,null,1,u), h, "easeOut", !0),
                    S(new E(null,null,2,u), h, "easeIn" + (0 === u ? ",easeNone" : "")),
                    S(new E(null,null,3,u), h, "easeInOut");
                T.linear = m.easing.Linear.easeIn,
                T.swing = m.easing.Quad.easeInOut;
                var A = w("events.EventDispatcher", function(t) {
                    this._listeners = {},
                    this._eventTarget = t || this
                });
                h = A.prototype,
                h.addEventListener = function(t, e, n, r, i) {
                    i = i || 0;
                    var o, a, s = this._listeners[t], c = 0;
                    for (this !== d || p || d.wake(),
                    null == s && (this._listeners[t] = s = []),
                    a = s.length; --a > -1; )
                        o = s[a],
                        o.c === e && o.s === n ? s.splice(a, 1) : 0 === c && o.pr < i && (c = a + 1);
                    s.splice(c, 0, {
                        c: e,
                        s: n,
                        up: r,
                        pr: i
                    })
                }
                ,
                h.removeEventListener = function(t, e) {
                    var n, r = this._listeners[t];
                    if (r)
                        for (n = r.length; --n > -1; )
                            if (r[n].c === e)
                                return void r.splice(n, 1)
                }
                ,
                h.dispatchEvent = function(t) {
                    var e, n, r, i = this._listeners[t];
                    if (i)
                        for (e = i.length,
                        e > 1 && (i = i.slice(0)),
                        n = this._eventTarget; --e > -1; )
                            (r = i[e]) && (r.up ? r.c.call(r.s || n, {
                                type: t,
                                target: n
                            }) : r.c.call(r.s || n))
                }
                ;
                var C = n.requestAnimationFrame
                  , P = n.cancelAnimationFrame
                  , L = Date.now || function() {
                    return (new Date).getTime()
                }
                  , R = L();
                for (l = ["ms", "moz", "webkit", "o"],
                u = l.length; --u > -1 && !C; )
                    C = n[l[u] + "RequestAnimationFrame"],
                    P = n[l[u] + "CancelAnimationFrame"] || n[l[u] + "CancelRequestAnimationFrame"];
                w("Ticker", function(t, e) {
                    var n, r, i, o, a, c = this, l = L(), u = !(!1 === e || !C) && "auto", h = 500, f = 33, m = function(t) {
                        var e, s, u = L() - R;
                        u > h && (l += u - f),
                        R += u,
                        c.time = (R - l) / 1e3,
                        e = c.time - a,
                        (!n || e > 0 || !0 === t) && (c.frame++,
                        a += e + (e >= o ? .004 : o - e),
                        s = !0),
                        !0 !== t && (i = r(m)),
                        s && c.dispatchEvent("tick")
                    };
                    A.call(c),
                    c.time = c.frame = 0,
                    c.tick = function() {
                        m(!0)
                    }
                    ,
                    c.lagSmoothing = function(t, e) {
                        if (!arguments.length)
                            return h < 1e10;
                        h = t || 1e10,
                        f = Math.min(e, h, 0)
                    }
                    ,
                    c.sleep = function() {
                        null != i && (u && P ? P(i) : clearTimeout(i),
                        r = g,
                        i = null,
                        c === d && (p = !1))
                    }
                    ,
                    c.wake = function(t) {
                        null !== i ? c.sleep() : t ? l += -R + (R = L()) : c.frame > 10 && (R = L() - h + 5),
                        r = 0 === n ? g : u && C ? C : function(t) {
                            return setTimeout(t, 1e3 * (a - c.time) + 1 | 0)
                        }
                        ,
                        c === d && (p = !0),
                        m(2)
                    }
                    ,
                    c.fps = function(t) {
                        if (!arguments.length)
                            return n;
                        n = t,
                        o = 1 / (n || 60),
                        a = this.time + o,
                        c.wake()
                    }
                    ,
                    c.useRAF = function(t) {
                        if (!arguments.length)
                            return u;
                        c.sleep(),
                        u = t,
                        c.fps(n)
                    }
                    ,
                    c.fps(t),
                    setTimeout(function() {
                        "auto" === u && c.frame < 5 && "hidden" !== (s || {}).visibilityState && c.useRAF(!1)
                    }, 1500)
                }),
                h = m.Ticker.prototype = new m.events.EventDispatcher,
                h.constructor = m.Ticker;
                var O = w("core.Animation", function(t, e) {
                    if (this.vars = e = e || {},
                    this._duration = this._totalDuration = t || 0,
                    this._delay = Number(e.delay) || 0,
                    this._timeScale = 1,
                    this._active = !0 === e.immediateRender,
                    this.data = e.data,
                    this._reversed = !0 === e.reversed,
                    Q) {
                        p || d.wake();
                        var n = this.vars.useFrames ? J : Q;
                        n.add(this, n._time),
                        this.vars.paused && this.paused(!0)
                    }
                });
                d = O.ticker = new m.Ticker,
                h = O.prototype,
                h._dirty = h._gc = h._initted = h._paused = !1,
                h._totalTime = h._time = 0,
                h._rawPrevTime = -1,
                h._next = h._last = h._onUpdate = h._timeline = h.timeline = null,
                h._paused = !1;
                var I = function() {
                    p && L() - R > 2e3 && ("hidden" !== (s || {}).visibilityState || !d.lagSmoothing()) && d.wake();
                    var t = setTimeout(I, 2e3);
                    t.unref && t.unref()
                };
                I(),
                h.play = function(t, e) {
                    return null != t && this.seek(t, e),
                    this.reversed(!1).paused(!1)
                }
                ,
                h.pause = function(t, e) {
                    return null != t && this.seek(t, e),
                    this.paused(!0)
                }
                ,
                h.resume = function(t, e) {
                    return null != t && this.seek(t, e),
                    this.paused(!1)
                }
                ,
                h.seek = function(t, e) {
                    return this.totalTime(Number(t), !1 !== e)
                }
                ,
                h.restart = function(t, e) {
                    return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, !1 !== e, !0)
                }
                ,
                h.reverse = function(t, e) {
                    return null != t && this.seek(t || this.totalDuration(), e),
                    this.reversed(!0).paused(!1)
                }
                ,
                h.render = function(t, e, n) {}
                ,
                h.invalidate = function() {
                    return this._time = this._totalTime = 0,
                    this._initted = this._gc = !1,
                    this._rawPrevTime = -1,
                    !this._gc && this.timeline || this._enabled(!0),
                    this
                }
                ,
                h.isActive = function() {
                    var t, e = this._timeline, n = this._startTime;
                    return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime(!0)) >= n && t < n + this.totalDuration() / this._timeScale - 1e-7
                }
                ,
                h._enabled = function(t, e) {
                    return p || d.wake(),
                    this._gc = !t,
                    this._active = this.isActive(),
                    !0 !== e && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)),
                    !1
                }
                ,
                h._kill = function(t, e) {
                    return this._enabled(!1, !1)
                }
                ,
                h.kill = function(t, e) {
                    return this._kill(t, e),
                    this
                }
                ,
                h._uncache = function(t) {
                    for (var e = t ? this : this.timeline; e; )
                        e._dirty = !0,
                        e = e.timeline;
                    return this
                }
                ,
                h._swapSelfInParams = function(t) {
                    for (var e = t.length, n = t.concat(); --e > -1; )
                        "{self}" === t[e] && (n[e] = this);
                    return n
                }
                ,
                h._callback = function(t) {
                    var e = this.vars
                      , n = e[t]
                      , r = e[t + "Params"]
                      , i = e[t + "Scope"] || e.callbackScope || this;
                    switch (r ? r.length : 0) {
                    case 0:
                        n.call(i);
                        break;
                    case 1:
                        n.call(i, r[0]);
                        break;
                    case 2:
                        n.call(i, r[0], r[1]);
                        break;
                    default:
                        n.apply(i, r)
                    }
                }
                ,
                h.eventCallback = function(t, e, n, r) {
                    if ("on" === (t || "").substr(0, 2)) {
                        var i = this.vars;
                        if (1 === arguments.length)
                            return i[t];
                        null == e ? delete i[t] : (i[t] = e,
                        i[t + "Params"] = y(n) && -1 !== n.join("").indexOf("{self}") ? this._swapSelfInParams(n) : n,
                        i[t + "Scope"] = r),
                        "onUpdate" === t && (this._onUpdate = e)
                    }
                    return this
                }
                ,
                h.delay = function(t) {
                    return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay),
                    this._delay = t,
                    this) : this._delay
                }
                ,
                h.duration = function(t) {
                    return arguments.length ? (this._duration = this._totalDuration = t,
                    this._uncache(!0),
                    this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0),
                    this) : (this._dirty = !1,
                    this._duration)
                }
                ,
                h.totalDuration = function(t) {
                    return this._dirty = !1,
                    arguments.length ? this.duration(t) : this._totalDuration
                }
                ,
                h.time = function(t, e) {
                    return arguments.length ? (this._dirty && this.totalDuration(),
                    this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
                }
                ,
                h.totalTime = function(t, e, n) {
                    if (p || d.wake(),
                    !arguments.length)
                        return this._totalTime;
                    if (this._timeline) {
                        if (t < 0 && !n && (t += this.totalDuration()),
                        this._timeline.smoothChildTiming) {
                            this._dirty && this.totalDuration();
                            var r = this._totalDuration
                              , i = this._timeline;
                            if (t > r && !n && (t = r),
                            this._startTime = (this._paused ? this._pauseTime : i._time) - (this._reversed ? r - t : t) / this._timeScale,
                            i._dirty || this._uncache(!1),
                            i._timeline)
                                for (; i._timeline; )
                                    i._timeline._time !== (i._startTime + i._totalTime) / i._timeScale && i.totalTime(i._totalTime, !0),
                                    i = i._timeline
                        }
                        this._gc && this._enabled(!0, !1),
                        this._totalTime === t && 0 !== this._duration || (z.length && tt(),
                        this.render(t, e, !1),
                        z.length && tt())
                    }
                    return this
                }
                ,
                h.progress = h.totalProgress = function(t, e) {
                    var n = this.duration();
                    return arguments.length ? this.totalTime(n * t, e) : n ? this._time / n : this.ratio
                }
                ,
                h.startTime = function(t) {
                    return arguments.length ? (t !== this._startTime && (this._startTime = t,
                    this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)),
                    this) : this._startTime
                }
                ,
                h.endTime = function(t) {
                    return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale
                }
                ,
                h.timeScale = function(t) {
                    if (!arguments.length)
                        return this._timeScale;
                    var e, n;
                    for (t = t || 1e-10,
                    this._timeline && this._timeline.smoothChildTiming && (e = this._pauseTime,
                    n = e || 0 === e ? e : this._timeline.totalTime(),
                    this._startTime = n - (n - this._startTime) * this._timeScale / t),
                    this._timeScale = t,
                    n = this.timeline; n && n.timeline; )
                        n._dirty = !0,
                        n.totalDuration(),
                        n = n.timeline;
                    return this
                }
                ,
                h.reversed = function(t) {
                    return arguments.length ? (t != this._reversed && (this._reversed = t,
                    this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                    this) : this._reversed
                }
                ,
                h.paused = function(t) {
                    if (!arguments.length)
                        return this._paused;
                    var e, n, r = this._timeline;
                    return t != this._paused && r && (p || t || d.wake(),
                    e = r.rawTime(),
                    n = e - this._pauseTime,
                    !t && r.smoothChildTiming && (this._startTime += n,
                    this._uncache(!1)),
                    this._pauseTime = t ? e : null,
                    this._paused = t,
                    this._active = this.isActive(),
                    !t && 0 !== n && this._initted && this.duration() && (e = r.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale,
                    this.render(e, e === this._totalTime, !0))),
                    this._gc && !t && this._enabled(!0, !1),
                    this
                }
                ;
                var D = w("core.SimpleTimeline", function(t) {
                    O.call(this, 0, t),
                    this.autoRemoveChildren = this.smoothChildTiming = !0
                });
                h = D.prototype = new O,
                h.constructor = D,
                h.kill()._gc = !1,
                h._first = h._last = h._recent = null,
                h._sortChildren = !1,
                h.add = h.insert = function(t, e, n, r) {
                    var i, o;
                    if (t._startTime = Number(e || 0) + t._delay,
                    t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale),
                    t.timeline && t.timeline._remove(t, !0),
                    t.timeline = t._timeline = this,
                    t._gc && t._enabled(!0, !0),
                    i = this._last,
                    this._sortChildren)
                        for (o = t._startTime; i && i._startTime > o; )
                            i = i._prev;
                    return i ? (t._next = i._next,
                    i._next = t) : (t._next = this._first,
                    this._first = t),
                    t._next ? t._next._prev = t : this._last = t,
                    t._prev = i,
                    this._recent = t,
                    this._timeline && this._uncache(!0),
                    this
                }
                ,
                h._remove = function(t, e) {
                    return t.timeline === this && (e || t._enabled(!1, !0),
                    t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next),
                    t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev),
                    t._next = t._prev = t.timeline = null,
                    t === this._recent && (this._recent = this._last),
                    this._timeline && this._uncache(!0)),
                    this
                }
                ,
                h.render = function(t, e, n) {
                    var r, i = this._first;
                    for (this._totalTime = this._time = this._rawPrevTime = t; i; )
                        r = i._next,
                        (i._active || t >= i._startTime && !i._paused && !i._gc) && (i._reversed ? i.render((i._dirty ? i.totalDuration() : i._totalDuration) - (t - i._startTime) * i._timeScale, e, n) : i.render((t - i._startTime) * i._timeScale, e, n)),
                        i = r
                }
                ,
                h.rawTime = function() {
                    return p || d.wake(),
                    this._totalTime
                }
                ;
                var N = w("TweenLite", function(t, e, r) {
                    if (O.call(this, e, r),
                    this.render = N.prototype.render,
                    null == t)
                        throw "Cannot tween a null target.";
                    this.target = t = "string" != typeof t ? t : N.selector(t) || t;
                    var i, o, a, s = t.jquery || t.length && t !== n && t[0] && (t[0] === n || t[0].nodeType && t[0].style && !t.nodeType), c = this.vars.overwrite;
                    if (this._overwrite = c = null == c ? Z[N.defaultOverwrite] : "number" == typeof c ? c >> 0 : Z[c],
                    (s || t instanceof Array || t.push && y(t)) && "number" != typeof t[0])
                        for (this._targets = a = v(t),
                        this._propLookup = [],
                        this._siblings = [],
                        i = 0; i < a.length; i++)
                            o = a[i],
                            o ? "string" != typeof o ? o.length && o !== n && o[0] && (o[0] === n || o[0].nodeType && o[0].style && !o.nodeType) ? (a.splice(i--, 1),
                            this._targets = a = a.concat(v(o))) : (this._siblings[i] = et(o, this, !1),
                            1 === c && this._siblings[i].length > 1 && rt(o, this, null, 1, this._siblings[i])) : "string" == typeof (o = a[i--] = N.selector(o)) && a.splice(i + 1, 1) : a.splice(i--, 1);
                    else
                        this._propLookup = {},
                        this._siblings = et(t, this, !1),
                        1 === c && this._siblings.length > 1 && rt(t, this, null, 1, this._siblings);
                    (this.vars.immediateRender || 0 === e && 0 === this._delay && !1 !== this.vars.immediateRender) && (this._time = -1e-10,
                    this.render(Math.min(0, -this._delay)))
                }, !0)
                  , k = function(t) {
                    return t && t.length && t !== n && t[0] && (t[0] === n || t[0].nodeType && t[0].style && !t.nodeType)
                }
                  , j = function(t, e) {
                    var n, r = {};
                    for (n in t)
                        $[n] || n in e && "transform" !== n && "x" !== n && "y" !== n && "width" !== n && "height" !== n && "className" !== n && "border" !== n || !(!q[n] || q[n] && q[n]._autoCSS) || (r[n] = t[n],
                        delete t[n]);
                    t.css = r
                };
                h = N.prototype = new O,
                h.constructor = N,
                h.kill()._gc = !1,
                h.ratio = 0,
                h._firstPT = h._targets = h._overwrittenProps = h._startAt = null,
                h._notifyPluginsOfEnabled = h._lazy = !1,
                N.version = "1.20.4",
                N.defaultEase = h._ease = new E(null,null,1,1),
                N.defaultOverwrite = "auto",
                N.ticker = d,
                N.autoSleep = 120,
                N.lagSmoothing = function(t, e) {
                    d.lagSmoothing(t, e)
                }
                ,
                N.selector = n.$ || n.jQuery || function(t) {
                    var e = n.$ || n.jQuery;
                    return e ? (N.selector = e,
                    e(t)) : void 0 === s ? t : s.querySelectorAll ? s.querySelectorAll(t) : s.getElementById("#" === t.charAt(0) ? t.substr(1) : t)
                }
                ;
                var z = []
                  , B = {}
                  , U = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                  , F = /[\+-]=-?[\.\d]/
                  , H = function(t) {
                    for (var e, n = this._firstPT; n; )
                        e = n.blob ? 1 === t && null != this.end ? this.end : t ? this.join("") : this.start : n.c * t + n.s,
                        n.m ? e = n.m(e, this._target || n.t) : e < 1e-6 && e > -1e-6 && !n.blob && (e = 0),
                        n.f ? n.fp ? n.t[n.p](n.fp, e) : n.t[n.p](e) : n.t[n.p] = e,
                        n = n._next
                }
                  , G = function(t, e, n, r) {
                    var i, o, a, s, c, l, u, h = [], d = 0, p = "", f = 0;
                    for (h.start = t,
                    h.end = e,
                    t = h[0] = t + "",
                    e = h[1] = e + "",
                    n && (n(h),
                    t = h[0],
                    e = h[1]),
                    h.length = 0,
                    i = t.match(U) || [],
                    o = e.match(U) || [],
                    r && (r._next = null,
                    r.blob = 1,
                    h._firstPT = h._applyPT = r),
                    c = o.length,
                    s = 0; s < c; s++)
                        u = o[s],
                        l = e.substr(d, e.indexOf(u, d) - d),
                        p += l || !s ? l : ",",
                        d += l.length,
                        f ? f = (f + 1) % 5 : "rgba(" === l.substr(-5) && (f = 1),
                        u === i[s] || i.length <= s ? p += u : (p && (h.push(p),
                        p = ""),
                        a = parseFloat(i[s]),
                        h.push(a),
                        h._firstPT = {
                            _next: h._firstPT,
                            t: h,
                            p: h.length - 1,
                            s: a,
                            c: ("=" === u.charAt(1) ? parseInt(u.charAt(0) + "1", 10) * parseFloat(u.substr(2)) : parseFloat(u) - a) || 0,
                            f: 0,
                            m: f && f < 4 ? Math.round : 0
                        }),
                        d += u.length;
                    return p += e.substr(d),
                    p && h.push(p),
                    h.setRatio = H,
                    F.test(e) && (h.end = null),
                    h
                }
                  , V = function(t, e, n, r, i, o, a, s, c) {
                    "function" == typeof r && (r = r(c || 0, t));
                    var l, u = typeof t[e], h = "function" !== u ? "" : e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3), d = "get" !== n ? n : h ? a ? t[h](a) : t[h]() : t[e], p = "string" == typeof r && "=" === r.charAt(1), f = {
                        t: t,
                        p: e,
                        s: d,
                        f: "function" === u,
                        pg: 0,
                        n: i || e,
                        m: o ? "function" == typeof o ? o : Math.round : 0,
                        pr: 0,
                        c: p ? parseInt(r.charAt(0) + "1", 10) * parseFloat(r.substr(2)) : parseFloat(r) - d || 0
                    };
                    if (("number" != typeof d || "number" != typeof r && !p) && (a || isNaN(d) || !p && isNaN(r) || "boolean" == typeof d || "boolean" == typeof r ? (f.fp = a,
                    l = G(d, p ? parseFloat(f.s) + f.c + (f.s + "").replace(/[0-9\-\.]/g, "") : r, s || N.defaultStringFilter, f),
                    f = {
                        t: l,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: 2,
                        pg: 0,
                        n: i || e,
                        pr: 0,
                        m: 0
                    }) : (f.s = parseFloat(d),
                    p || (f.c = parseFloat(r) - f.s || 0))),
                    f.c)
                        return (f._next = this._firstPT) && (f._next._prev = f),
                        this._firstPT = f,
                        f
                }
                  , W = N._internals = {
                    isArray: y,
                    isSelector: k,
                    lazyTweens: z,
                    blobDif: G
                }
                  , q = N._plugins = {}
                  , X = W.tweenLookup = {}
                  , Y = 0
                  , $ = W.reservedProps = {
                    ease: 1,
                    delay: 1,
                    overwrite: 1,
                    onComplete: 1,
                    onCompleteParams: 1,
                    onCompleteScope: 1,
                    useFrames: 1,
                    runBackwards: 1,
                    startAt: 1,
                    onUpdate: 1,
                    onUpdateParams: 1,
                    onUpdateScope: 1,
                    onStart: 1,
                    onStartParams: 1,
                    onStartScope: 1,
                    onReverseComplete: 1,
                    onReverseCompleteParams: 1,
                    onReverseCompleteScope: 1,
                    onRepeat: 1,
                    onRepeatParams: 1,
                    onRepeatScope: 1,
                    easeParams: 1,
                    yoyo: 1,
                    immediateRender: 1,
                    repeat: 1,
                    repeatDelay: 1,
                    data: 1,
                    paused: 1,
                    reversed: 1,
                    autoCSS: 1,
                    lazy: 1,
                    onOverwrite: 1,
                    callbackScope: 1,
                    stringFilter: 1,
                    id: 1,
                    yoyoEase: 1
                }
                  , Z = {
                    none: 0,
                    all: 1,
                    auto: 2,
                    concurrent: 3,
                    allOnStart: 4,
                    preexisting: 5,
                    true: 1,
                    false: 0
                }
                  , J = O._rootFramesTimeline = new D
                  , Q = O._rootTimeline = new D
                  , K = 30
                  , tt = W.lazyRender = function() {
                    var t, e = z.length;
                    for (B = {}; --e > -1; )
                        (t = z[e]) && !1 !== t._lazy && (t.render(t._lazy[0], t._lazy[1], !0),
                        t._lazy = !1);
                    z.length = 0
                }
                ;
                Q._startTime = d.time,
                J._startTime = d.frame,
                Q._active = J._active = !0,
                setTimeout(tt, 1),
                O._updateRoot = N.render = function() {
                    var t, e, n;
                    if (z.length && tt(),
                    Q.render((d.time - Q._startTime) * Q._timeScale, !1, !1),
                    J.render((d.frame - J._startTime) * J._timeScale, !1, !1),
                    z.length && tt(),
                    d.frame >= K) {
                        K = d.frame + (parseInt(N.autoSleep, 10) || 120);
                        for (n in X) {
                            for (e = X[n].tweens,
                            t = e.length; --t > -1; )
                                e[t]._gc && e.splice(t, 1);
                            0 === e.length && delete X[n]
                        }
                        if ((!(n = Q._first) || n._paused) && N.autoSleep && !J._first && 1 === d._listeners.tick.length) {
                            for (; n && n._paused; )
                                n = n._next;
                            n || d.sleep()
                        }
                    }
                }
                ,
                d.addEventListener("tick", O._updateRoot);
                var et = function(t, e, n) {
                    var r, i, o = t._gsTweenID;
                    if (X[o || (t._gsTweenID = o = "t" + Y++)] || (X[o] = {
                        target: t,
                        tweens: []
                    }),
                    e && (r = X[o].tweens,
                    r[i = r.length] = e,
                    n))
                        for (; --i > -1; )
                            r[i] === e && r.splice(i, 1);
                    return X[o].tweens
                }
                  , nt = function(t, e, n, r) {
                    var i, o, a = t.vars.onOverwrite;
                    return a && (i = a(t, e, n, r)),
                    a = N.onOverwrite,
                    a && (o = a(t, e, n, r)),
                    !1 !== i && !1 !== o
                }
                  , rt = function(t, e, n, r, i) {
                    var o, a, s, c;
                    if (1 === r || r >= 4) {
                        for (c = i.length,
                        o = 0; o < c; o++)
                            if ((s = i[o]) !== e)
                                s._gc || s._kill(null, t, e) && (a = !0);
                            else if (5 === r)
                                break;
                        return a
                    }
                    var l, u = e._startTime + 1e-10, h = [], d = 0, p = 0 === e._duration;
                    for (o = i.length; --o > -1; )
                        (s = i[o]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (l = l || it(e, 0, p),
                        0 === it(s, l, p) && (h[d++] = s)) : s._startTime <= u && s._startTime + s.totalDuration() / s._timeScale > u && ((p || !s._initted) && u - s._startTime <= 2e-10 || (h[d++] = s)));
                    for (o = d; --o > -1; )
                        if (s = h[o],
                        2 === r && s._kill(n, t, e) && (a = !0),
                        2 !== r || !s._firstPT && s._initted) {
                            if (2 !== r && !nt(s, e))
                                continue;
                            s._enabled(!1, !1) && (a = !0)
                        }
                    return a
                }
                  , it = function(t, e, n) {
                    for (var r = t._timeline, i = r._timeScale, o = t._startTime; r._timeline; ) {
                        if (o += r._startTime,
                        i *= r._timeScale,
                        r._paused)
                            return -100;
                        r = r._timeline
                    }
                    return o /= i,
                    o > e ? o - e : n && o === e || !t._initted && o - e < 2e-10 ? 1e-10 : (o += t.totalDuration() / t._timeScale / i) > e + 1e-10 ? 0 : o - e - 1e-10
                };
                h._init = function() {
                    var t, e, n, r, i, o, a = this.vars, s = this._overwrittenProps, c = this._duration, l = !!a.immediateRender, u = a.ease;
                    if (a.startAt) {
                        this._startAt && (this._startAt.render(-1, !0),
                        this._startAt.kill()),
                        i = {};
                        for (r in a.startAt)
                            i[r] = a.startAt[r];
                        if (i.data = "isStart",
                        i.overwrite = !1,
                        i.immediateRender = !0,
                        i.lazy = l && !1 !== a.lazy,
                        i.startAt = i.delay = null,
                        i.onUpdate = a.onUpdate,
                        i.onUpdateParams = a.onUpdateParams,
                        i.onUpdateScope = a.onUpdateScope || a.callbackScope || this,
                        this._startAt = N.to(this.target, 0, i),
                        l)
                            if (this._time > 0)
                                this._startAt = null;
                            else if (0 !== c)
                                return
                    } else if (a.runBackwards && 0 !== c)
                        if (this._startAt)
                            this._startAt.render(-1, !0),
                            this._startAt.kill(),
                            this._startAt = null;
                        else {
                            0 !== this._time && (l = !1),
                            n = {};
                            for (r in a)
                                $[r] && "autoCSS" !== r || (n[r] = a[r]);
                            if (n.overwrite = 0,
                            n.data = "isFromStart",
                            n.lazy = l && !1 !== a.lazy,
                            n.immediateRender = l,
                            this._startAt = N.to(this.target, 0, n),
                            l) {
                                if (0 === this._time)
                                    return
                            } else
                                this._startAt._init(),
                                this._startAt._enabled(!1),
                                this.vars.immediateRender && (this._startAt = null)
                        }
                    if (this._ease = u = u ? u instanceof E ? u : "function" == typeof u ? new E(u,a.easeParams) : T[u] || N.defaultEase : N.defaultEase,
                    a.easeParams instanceof Array && u.config && (this._ease = u.config.apply(u, a.easeParams)),
                    this._easeType = this._ease._type,
                    this._easePower = this._ease._power,
                    this._firstPT = null,
                    this._targets)
                        for (o = this._targets.length,
                        t = 0; t < o; t++)
                            this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], s ? s[t] : null, t) && (e = !0);
                    else
                        e = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                    if (e && N._onPluginEvent("_onInitAllProps", this),
                    s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                    a.runBackwards)
                        for (n = this._firstPT; n; )
                            n.s += n.c,
                            n.c = -n.c,
                            n = n._next;
                    this._onUpdate = a.onUpdate,
                    this._initted = !0
                }
                ,
                h._initProps = function(t, e, r, i, o) {
                    var a, s, c, l, u, h;
                    if (null == t)
                        return !1;
                    B[t._gsTweenID] && tt(),
                    this.vars.css || t.style && t !== n && t.nodeType && q.css && !1 !== this.vars.autoCSS && j(this.vars, t);
                    for (a in this.vars)
                        if (h = this.vars[a],
                        $[a])
                            h && (h instanceof Array || h.push && y(h)) && -1 !== h.join("").indexOf("{self}") && (this.vars[a] = h = this._swapSelfInParams(h, this));
                        else if (q[a] && (l = new q[a])._onInitTween(t, this.vars[a], this, o)) {
                            for (this._firstPT = u = {
                                _next: this._firstPT,
                                t: l,
                                p: "setRatio",
                                s: 0,
                                c: 1,
                                f: 1,
                                n: a,
                                pg: 1,
                                pr: l._priority,
                                m: 0
                            },
                            s = l._overwriteProps.length; --s > -1; )
                                e[l._overwriteProps[s]] = this._firstPT;
                            (l._priority || l._onInitAllProps) && (c = !0),
                            (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0),
                            u._next && (u._next._prev = u)
                        } else
                            e[a] = V.call(this, t, a, "get", h, a, 0, null, this.vars.stringFilter, o);
                    return i && this._kill(i, t) ? this._initProps(t, e, r, i, o) : this._overwrite > 1 && this._firstPT && r.length > 1 && rt(t, this, e, this._overwrite, r) ? (this._kill(e, t),
                    this._initProps(t, e, r, i, o)) : (this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration) && (B[t._gsTweenID] = !0),
                    c)
                }
                ,
                h.render = function(t, e, n) {
                    var r, i, o, a, s = this._time, c = this._duration, l = this._rawPrevTime;
                    if (t >= c - 1e-7 && t >= 0)
                        this._totalTime = this._time = c,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                        this._reversed || (r = !0,
                        i = "onComplete",
                        n = n || this._timeline.autoRemoveChildren),
                        0 === c && (this._initted || !this.vars.lazy || n) && (this._startTime === this._timeline._duration && (t = 0),
                        (l < 0 || t <= 0 && t >= -1e-7 || 1e-10 === l && "isPause" !== this.data) && l !== t && (n = !0,
                        l > 1e-10 && (i = "onReverseComplete")),
                        this._rawPrevTime = a = !e || t || l === t ? t : 1e-10);
                    else if (t < 1e-7)
                        this._totalTime = this._time = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                        (0 !== s || 0 === c && l > 0) && (i = "onReverseComplete",
                        r = this._reversed),
                        t < 0 && (this._active = !1,
                        0 === c && (this._initted || !this.vars.lazy || n) && (l >= 0 && (1e-10 !== l || "isPause" !== this.data) && (n = !0),
                        this._rawPrevTime = a = !e || t || l === t ? t : 1e-10)),
                        (!this._initted || this._startAt && this._startAt.progress()) && (n = !0);
                    else if (this._totalTime = this._time = t,
                    this._easeType) {
                        var u = t / c
                          , h = this._easeType
                          , d = this._easePower;
                        (1 === h || 3 === h && u >= .5) && (u = 1 - u),
                        3 === h && (u *= 2),
                        1 === d ? u *= u : 2 === d ? u *= u * u : 3 === d ? u *= u * u * u : 4 === d && (u *= u * u * u * u),
                        this.ratio = 1 === h ? 1 - u : 2 === h ? u : t / c < .5 ? u / 2 : 1 - u / 2
                    } else
                        this.ratio = this._ease.getRatio(t / c);
                    if (this._time !== s || n) {
                        if (!this._initted) {
                            if (this._init(),
                            !this._initted || this._gc)
                                return;
                            if (!n && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                return this._time = this._totalTime = s,
                                this._rawPrevTime = l,
                                z.push(this),
                                void (this._lazy = [t, e]);
                            this._time && !r ? this.ratio = this._ease.getRatio(this._time / c) : r && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                        }
                        for (!1 !== this._lazy && (this._lazy = !1),
                        this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0),
                        0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, !0, n) : i || (i = "_dummyGS")),
                        this.vars.onStart && (0 === this._time && 0 !== c || e || this._callback("onStart"))),
                        o = this._firstPT; o; )
                            o.f ? o.t[o.p](o.c * this.ratio + o.s) : o.t[o.p] = o.c * this.ratio + o.s,
                            o = o._next;
                        this._onUpdate && (t < 0 && this._startAt && -1e-4 !== t && this._startAt.render(t, !0, n),
                        e || (this._time !== s || r || n) && this._callback("onUpdate")),
                        i && (this._gc && !n || (t < 0 && this._startAt && !this._onUpdate && -1e-4 !== t && this._startAt.render(t, !0, n),
                        r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !e && this.vars[i] && this._callback(i),
                        0 === c && 1e-10 === this._rawPrevTime && 1e-10 !== a && (this._rawPrevTime = 0)))
                    }
                }
                ,
                h._kill = function(t, e, n) {
                    if ("all" === t && (t = null),
                    null == t && (null == e || e === this.target))
                        return this._lazy = !1,
                        this._enabled(!1, !1);
                    e = "string" != typeof e ? e || this._targets || this.target : N.selector(e) || e;
                    var r, i, o, a, s, c, l, u, h, d = n && this._time && n._startTime === this._startTime && this._timeline === n._timeline;
                    if ((y(e) || k(e)) && "number" != typeof e[0])
                        for (r = e.length; --r > -1; )
                            this._kill(t, e[r], n) && (c = !0);
                    else {
                        if (this._targets) {
                            for (r = this._targets.length; --r > -1; )
                                if (e === this._targets[r]) {
                                    s = this._propLookup[r] || {},
                                    this._overwrittenProps = this._overwrittenProps || [],
                                    i = this._overwrittenProps[r] = t ? this._overwrittenProps[r] || {} : "all";
                                    break
                                }
                        } else {
                            if (e !== this.target)
                                return !1;
                            s = this._propLookup,
                            i = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                        }
                        if (s) {
                            if (l = t || s,
                            u = t !== i && "all" !== i && t !== s && ("object" != typeof t || !t._tempKill),
                            n && (N.onOverwrite || this.vars.onOverwrite)) {
                                for (o in l)
                                    s[o] && (h || (h = []),
                                    h.push(o));
                                if ((h || !t) && !nt(this, n, e, h))
                                    return !1
                            }
                            for (o in l)
                                (a = s[o]) && (d && (a.f ? a.t[a.p](a.s) : a.t[a.p] = a.s,
                                c = !0),
                                a.pg && a.t._kill(l) && (c = !0),
                                a.pg && 0 !== a.t._overwriteProps.length || (a._prev ? a._prev._next = a._next : a === this._firstPT && (this._firstPT = a._next),
                                a._next && (a._next._prev = a._prev),
                                a._next = a._prev = null),
                                delete s[o]),
                                u && (i[o] = 1);
                            !this._firstPT && this._initted && this._enabled(!1, !1)
                        }
                    }
                    return c
                }
                ,
                h.invalidate = function() {
                    return this._notifyPluginsOfEnabled && N._onPluginEvent("_onDisable", this),
                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                    this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                    this._propLookup = this._targets ? {} : [],
                    O.prototype.invalidate.call(this),
                    this.vars.immediateRender && (this._time = -1e-10,
                    this.render(Math.min(0, -this._delay))),
                    this
                }
                ,
                h._enabled = function(t, e) {
                    if (p || d.wake(),
                    t && this._gc) {
                        var n, r = this._targets;
                        if (r)
                            for (n = r.length; --n > -1; )
                                this._siblings[n] = et(r[n], this, !0);
                        else
                            this._siblings = et(this.target, this, !0)
                    }
                    return O.prototype._enabled.call(this, t, e),
                    !(!this._notifyPluginsOfEnabled || !this._firstPT) && N._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                }
                ,
                N.to = function(t, e, n) {
                    return new N(t,e,n)
                }
                ,
                N.from = function(t, e, n) {
                    return n.runBackwards = !0,
                    n.immediateRender = 0 != n.immediateRender,
                    new N(t,e,n)
                }
                ,
                N.fromTo = function(t, e, n, r) {
                    return r.startAt = n,
                    r.immediateRender = 0 != r.immediateRender && 0 != n.immediateRender,
                    new N(t,e,r)
                }
                ,
                N.delayedCall = function(t, e, n, r, i) {
                    return new N(e,0,{
                        delay: t,
                        onComplete: e,
                        onCompleteParams: n,
                        callbackScope: r,
                        onReverseComplete: e,
                        onReverseCompleteParams: n,
                        immediateRender: !1,
                        lazy: !1,
                        useFrames: i,
                        overwrite: 0
                    })
                }
                ,
                N.set = function(t, e) {
                    return new N(t,0,e)
                }
                ,
                N.getTweensOf = function(t, e) {
                    if (null == t)
                        return [];
                    t = "string" != typeof t ? t : N.selector(t) || t;
                    var n, r, i, o;
                    if ((y(t) || k(t)) && "number" != typeof t[0]) {
                        for (n = t.length,
                        r = []; --n > -1; )
                            r = r.concat(N.getTweensOf(t[n], e));
                        for (n = r.length; --n > -1; )
                            for (o = r[n],
                            i = n; --i > -1; )
                                o === r[i] && r.splice(n, 1)
                    } else if (t._gsTweenID)
                        for (r = et(t).concat(),
                        n = r.length; --n > -1; )
                            (r[n]._gc || e && !r[n].isActive()) && r.splice(n, 1);
                    return r || []
                }
                ,
                N.killTweensOf = N.killDelayedCallsTo = function(t, e, n) {
                    "object" == typeof e && (n = e,
                    e = !1);
                    for (var r = N.getTweensOf(t, e), i = r.length; --i > -1; )
                        r[i]._kill(n, t)
                }
                ;
                var ot = w("plugins.TweenPlugin", function(t, e) {
                    this._overwriteProps = (t || "").split(","),
                    this._propName = this._overwriteProps[0],
                    this._priority = e || 0,
                    this._super = ot.prototype
                }, !0);
                if (h = ot.prototype,
                ot.version = "1.19.0",
                ot.API = 2,
                h._firstPT = null,
                h._addTween = V,
                h.setRatio = H,
                h._kill = function(t) {
                    var e, n = this._overwriteProps, r = this._firstPT;
                    if (null != t[this._propName])
                        this._overwriteProps = [];
                    else
                        for (e = n.length; --e > -1; )
                            null != t[n[e]] && n.splice(e, 1);
                    for (; r; )
                        null != t[r.n] && (r._next && (r._next._prev = r._prev),
                        r._prev ? (r._prev._next = r._next,
                        r._prev = null) : this._firstPT === r && (this._firstPT = r._next)),
                        r = r._next;
                    return !1
                }
                ,
                h._mod = h._roundProps = function(t) {
                    for (var e, n = this._firstPT; n; )
                        e = t[this._propName] || null != n.n && t[n.n.split(this._propName + "_").join("")],
                        e && "function" == typeof e && (2 === n.f ? n.t._applyPT.m = e : n.m = e),
                        n = n._next
                }
                ,
                N._onPluginEvent = function(t, e) {
                    var n, r, i, o, a, s = e._firstPT;
                    if ("_onInitAllProps" === t) {
                        for (; s; ) {
                            for (a = s._next,
                            r = i; r && r.pr > s.pr; )
                                r = r._next;
                            (s._prev = r ? r._prev : o) ? s._prev._next = s : i = s,
                            (s._next = r) ? r._prev = s : o = s,
                            s = a
                        }
                        s = e._firstPT = i
                    }
                    for (; s; )
                        s.pg && "function" == typeof s.t[t] && s.t[t]() && (n = !0),
                        s = s._next;
                    return n
                }
                ,
                ot.activate = function(t) {
                    for (var e = t.length; --e > -1; )
                        t[e].API === ot.API && (q[(new t[e])._propName] = t[e]);
                    return !0
                }
                ,
                b.plugin = function(t) {
                    if (!(t && t.propName && t.init && t.API))
                        throw "illegal plugin definition.";
                    var e, n = t.propName, r = t.priority || 0, i = t.overwriteProps, o = {
                        init: "_onInitTween",
                        set: "setRatio",
                        kill: "_kill",
                        round: "_mod",
                        mod: "_mod",
                        initAll: "_onInitAllProps"
                    }, a = w("plugins." + n.charAt(0).toUpperCase() + n.substr(1) + "Plugin", function() {
                        ot.call(this, n, r),
                        this._overwriteProps = i || []
                    }, !0 === t.global), s = a.prototype = new ot(n);
                    s.constructor = a,
                    a.API = t.API;
                    for (e in o)
                        "function" == typeof t[e] && (s[o[e]] = t[e]);
                    return a.version = t.version,
                    ot.activate([a]),
                    a
                }
                ,
                l = n._gsQueue) {
                    for (u = 0; u < l.length; u++)
                        l[u]();
                    for (h in _)
                        _[h].func || n.console.log("GSAP encountered missing dependency: " + h)
                }
                p = !1
            }
        }(void 0 !== t && t.exports && void 0 !== n ? n : this || window)
    }
    ).call(e, n(51))
}
, function(t, e, n) {
    "use strict";
    function r(t, e) {
        e = "object" === (void 0 === e ? "undefined" : O(e)) && e || {};
        for (var n in t)
            e[n] = "object" === O(t[n]) ? r(t[n], e[n] = {}) : t[n];
        return e
    }
    function i(t, e) {
        e = e || {};
        for (var n in t)
            "object" === O(t[n]) ? void 0 === e[n] ? (e[n] = {},
            r(t[n], e[n])) : i(t[n], e[n]) : void 0 === e[n] && (e[n] = t[n]);
        return e
    }
    function o(t, e, n, r) {
        var i = null;
        (n[e] || "function" == typeof n) && (r = r || e,
        "function" == typeof n && (i = n),
        Object.defineProperty(t, e, {
            get: i || function() {
                return n[r]
            }
            ,
            configurable: !0
        }))
    }
    function a() {
        if (L.prototype.$isServer)
            return 0;
        if (void 0 !== I)
            return I;
        var t = document.createElement("div");
        t.style.visibility = "hidden",
        t.style.width = "100px",
        t.style.position = "absolute",
        t.style.top = "-9999px",
        document.body.appendChild(t);
        var e = t.offsetWidth;
        t.style.overflow = "scroll";
        var n = document.createElement("div");
        n.style.width = "100%",
        t.appendChild(n);
        var r = n.offsetWidth;
        return t.parentNode.removeChild(t),
        I = e - r,
        a.isUsed = !1,
        I
    }
    function s() {
        if (!D) {
            D = !0;
            var t = document.createElement("style");
            t.type = "text/css",
            t.innerHTML = ".vuescroll-panel::-webkit-scrollbar{width:0;height:0}",
            document.getElementsByTagName("HEAD").item(0).appendChild(t)
        }
    }
    function c() {
        if (!N) {
            N = !0;
            var t = document.createElement("style");
            t.type = "text/css",
            t.innerHTML = "\n    .vuescroll-refresh {\n        color: black;\n        height: 50px;\n        text-align: center;\n        font-size: 16px;\n        line-height: 50px;\n    }\n    .vuescroll-refresh svg {\n        margin-right: 10px;\n        width: 25px;\n        height: 25px;\n        vertical-align: sub;\n    }\n    .vuescroll-refresh svg path,\n    .vuescroll-refresh svg rect{\n    fill: #FF6700;\n    }\n    ",
            document.getElementsByTagName("HEAD").item(0).appendChild(t)
        }
    }
    function l() {
        if (!k) {
            k = !0;
            var t = document.createElement("style");
            t.type = "text/css",
            t.innerHTML = "\n        .vuescroll-load {\n            color: black;\n            height: 50px;\n            text-align: center;\n            font-size: 16px;\n            line-height: 50px;\n        }\n        .vuescroll-load svg {\n            margin-right: 10px;\n            width: 25px;\n            height: 25px;\n            vertical-align: sub;\n        }\n        .vuescroll-load svg path,\n        .vuescroll-load svg rect{\n        fill: #FF6700;\n        }\n        ",
            document.getElementsByTagName("HEAD").item(0).appendChild(t)
        }
    }
    function u(t, e) {
        return {
            transform: "translate" + R[t].axis + "(" + e + "%)",
            msTransform: "translate" + R[t].axis + "(" + e + "%)",
            webkitTransform: "translate" + R[t].axis + "(" + e + "%)"
        }
    }
    function h(t, e, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        t.addEventListener(e, n, r)
    }
    function d(t, e, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        t.removeEventListener(e, n, r)
    }
    function p(t, e) {
        var n = null;
        return "easeInQuad" === t && (n = e * e),
        "easeOutQuad" === t && (n = e * (2 - e)),
        "easeInOutQuad" === t && (n = e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1),
        "easeInCubic" === t && (n = e * e * e),
        "easeOutCubic" === t && (n = --e * e * e + 1),
        "easeInOutCubic" === t && (n = e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1),
        "easeInQuart" === t && (n = e * e * e * e),
        "easeOutQuart" === t && (n = 1 - --e * e * e * e),
        "easeInOutQuart" === t && (n = e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e),
        "easeInQuint" === t && (n = e * e * e * e * e),
        "easeOutQuint" === t && (n = 1 + --e * e * e * e * e),
        "easeInOutQuint" === t && (n = e < .5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e),
        n || e
    }
    function f(t, e, n, r, i) {
        var o = null
          , a = null
          , s = null
          , c = t.scrollTop
          , l = t.scrollLeft;
        c + n < 0 && (n = -c),
        c + n > t.scrollHeight && (n = t.scrollHeight - c),
        l + e < 0 && (e = -l),
        l + e > t.scrollWidth && (e = t.scrollWidth - l);
        var u = function u(h) {
            o || (o = h);
            var d = h - o
              , f = d / r > 1 ? 1 : d / r;
            a = l + e * p(i, f),
            s = c + n * p(i, f),
            (Math.abs(s - c) <= Math.abs(n) || Math.abs(a - l) <= Math.abs(e)) && (t.scrollTop = Math.floor(s),
            t.scrollLeft = Math.floor(a),
            f < 1 && requestAnimationFrame(u))
        };
        requestAnimationFrame(u)
    }
    function m(t, e) {
        var n = document.createElement("object");
        return n.style.cssText = "display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;",
        n.tabIndex = -1,
        n.type = "text/html",
        n.onload = function() {
            e.forEach(function(t) {
                h(n.contentDocument.defaultView, "resize", t)
            })
        }
        ,
        t.appendChild(n),
        function() {
            n.contentDocument && e.forEach(function(t) {
                d(n.contentDocument.defaultView, "resize", t)
            }),
            t.removeChild(n)
        }
    }
    function v(t) {
        var e = !1
          , n = t.vuescroll
          , r = t.scrollPanel;
        ~j.indexOf(n.mode) || (console.error('[vuescroll]: The vuescroll\'s option "mode" should be one of the ' + j),
        e = !0);
        var i = r.initialScrollY
          , o = r.initialScrollX;
        return i && !String(i).match(/^\d+(\.\d+)?(%)?$/) && console.error("[vuescroll]: The prop `initialScrollY` should be a percent number like 10% or an exact number that greater than or equal to 0 like 100."),
        o && !String(o).match(/^\d+(\.\d+)?(%)?$/) && console.error("[vuescroll]: The prop `initialScrollX` should be a percent number like 10% or an exact number that greater than or equal to 0 like 100."),
        e
    }
    function g() {
        var t = this;
        if ("vueScroll" === t.$options.name) {
            var e = i(t.$vuescrollConfig, {})
              , n = i(z, e);
            t.$options.propsData.ops = t.$options.propsData.ops || {},
            Object.keys(t.$options.propsData.ops).forEach(function(e) {
                o(t.mergedOptions, e, t.$options.propsData.ops)
            }),
            i(n, t.mergedOptions),
            o(t.mergedOptions.vBar, "pos", t.mergedOptions.vRail),
            o(t.mergedOptions.vBar, "width", t.mergedOptions.vRail),
            o(t.mergedOptions.hBar, "pos", t.mergedOptions.hRail),
            o(t.mergedOptions.hBar, "height", t.mergedOptions.hRail);
            o(t.mergedOptions.scrollContent, "paddPos", function() {
                return "padding-" + t.mergedOptions.vRail.pos
            }),
            o(t.mergedOptions.scrollContent, "paddValue", function() {
                return t.mergedOptions.vRail.width
            })
        }
    }
    function y(t, e, n) {
        var r = void 0;
        return (r = /(\d+)%$/.exec(t)) ? (r = r[1],
        r = n[e] * r / 100) : r = t,
        r
    }
    function _(t) {
        return function(e) {
            return p(t, e)
        }
    }
    function x(t, e) {
        this.__callback = t,
        this.options = {
            scrollingX: !0,
            scrollingY: !0,
            animating: !0,
            animationDuration: 250,
            bouncing: !0,
            locking: !0,
            paging: !1,
            snapping: !1,
            zooming: !1,
            minZoom: .5,
            maxZoom: 3,
            speedMultiplier: 1,
            scrollingComplete: X,
            animatingEasing: "easeOutCubic",
            noAnimatingEasing: "easeInOutCubic",
            penetrationDeceleration: .03,
            penetrationAcceleration: .08
        };
        for (var n in e)
            this.options[n] = e[n];
        Y = _(this.options.animatingEasing),
        $ = _(this.options.noAnimatingEasing)
    }
    function b(t, e) {
        var n, r = document.documentElement.style;
        e.opera && "[object Opera]" === Object.prototype.toString.call(opera) ? n = "presto" : "MozAppearance"in r ? n = "gecko" : "WebkitAppearance"in r ? n = "webkit" : "string" == typeof navigator.cpuClass && (n = "trident");
        var i = {
            trident: "ms",
            gecko: "Moz",
            webkit: "Webkit",
            presto: "O"
        }[n]
          , o = document.createElement("div")
          , a = i + "Perspective"
          , s = i + "Transform";
        return void 0 !== o.style[a] ? function(e, n, r) {
            t.style[s] = "translate3d(" + -e + "px," + -n + "px,0) scale(" + r + ")"
        }
        : void 0 !== o.style[s] ? function(e, n, r) {
            t.style[s] = "translate(" + -e + "px," + -n + "px) scale(" + r + ")"
        }
        : function(e, n, r) {
            t.style.marginLeft = e ? -e / r + "px" : "",
            t.style.marginTop = n ? -n / r + "px" : "",
            t.style.zoom = r || ""
        }
    }
    function w(t, e, n, r) {
        function i(t) {
            t.touches[0] && t.touches[0].target && t.touches[0].target.tagName.match(/input|textarea|select/i) || (n("mousedown"),
            e.doTouchStart(t.touches, t.timeStamp),
            t.preventDefault())
        }
        function o(t) {
            n("mousemove"),
            e.doTouchMove(t.touches, t.timeStamp, t.scale)
        }
        function a(t) {
            n("mouseup"),
            e.doTouchEnd(t.timeStamp)
        }
        function s(t) {
            e.doTouchEnd(t.timeStamp)
        }
        function c(t) {
            t.target.tagName.match(/input|textarea|select/i) || (n("mousedown"),
            e.doTouchStart([{
                pageX: t.pageX,
                pageY: t.pageY
            }], t.timeStamp),
            p = !0)
        }
        function l(t) {
            p && (n("mousemove"),
            e.doTouchMove([{
                pageX: t.pageX,
                pageY: t.pageY
            }], t.timeStamp),
            p = !0)
        }
        function u(t) {
            p && (n("mouseup"),
            e.doTouchEnd(t.timeStamp),
            p = !1)
        }
        function h(t) {
            e.doMouseZoom(t.detail ? -120 * t.detail : t.wheelDelta, t.timeStamp, t.pageX, t.pageY)
        }
        var d = null;
        if ("ontouchstart"in window)
            t.addEventListener("touchstart", i, !1),
            document.addEventListener("touchmove", o, !1),
            document.addEventListener("touchend", a, !1),
            document.addEventListener("touchcancel", s, !1),
            d = function() {
                t.removeEventListener("touchstart", i, !1),
                document.removeEventListener("touchmove", o, !1),
                document.removeEventListener("touchend", a, !1),
                document.removeEventListener("touchcancel", s, !1)
            }
            ;
        else {
            var p = !1;
            t.addEventListener("mousedown", c, !1),
            document.addEventListener("mousemove", l, !1),
            document.addEventListener("mouseup", u, !1),
            r && t.addEventListener(navigator.userAgent.indexOf("Firefox") > -1 ? "DOMMouseScroll" : "mousewheel", h, !1),
            d = function() {
                t.removeEventListener("mousedown", c, !1),
                document.removeEventListener("mousemove", l, !1),
                document.removeEventListener("mouseup", u, !1),
                t.removeEventListener(navigator.userAgent.indexOf("Firefox") > -1 ? "DOMMouseScroll" : "mousewheel", h, !1)
            }
        }
        return e.onScroll = function() {
            n("onscroll")
        }
        ,
        d
    }
    function M(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n,
        t
    }
    function E(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n,
        t
    }
    function T(t, e, n, r, i) {
        var o = e.page
          , a = n[r + "Bar"].$el[e.offset]
          , s = (t[o] - t.target.getBoundingClientRect()[e.posName] - a / 2) / t.target[e.offset]
          , c = n.scrollPanel.$el[e.scrollSize] * s;
        i.scrollTo(E({}, R[r].axis.toLowerCase(), c))
    }
    function S(t, e) {
        var n = {
            ref: "scrollPanel",
            style: {
                position: "relative"
            },
            nativeOn: {
                scroll: e.handleScroll
            },
            props: {
                ops: e.mergedOptions.scrollPanel,
                state: e.scrollPanel.state
            }
        };
        if ("native" == e.mode) {
            e.mergedOptions.scrollPanel.scrollingY ? n.style.overflowY = e.vBar.state.size ? "scroll" : "inherit" : n.style.overflowY = e.vBar.state.size ? "hidden" : "inherit",
            e.mergedOptions.scrollPanel.scrollingX ? n.style.overflowX = e.vBar.state.size ? "scroll" : "inherit" : n.style.overflowX = e.vBar.state.size ? "hidden" : "inherit";
            var r = a();
            a.isUsed || (a.isUsed = !0),
            r ? (e.mergedOptions.scrollPanel.scrollingY && (n.style.marginRight = "-" + r + "px"),
            e.mergedOptions.scrollPanel.scrollingX ? n.style.height = "calc(100% + " + r + "px)" : n.style.height = "100%") : (s(),
            n.style.height = "100%"),
            n.style.transformOrigin = "",
            n.style.transform = ""
        } else
            "slide" == e.mode && (n.style.transformOrigin = "left top 0px",
            n.style.userSelect = "none");
        return t("scrollPanel", n, [function() {
            if ("native" == e.mode)
                return [A(t, e)];
            if ("slide" == e.mode) {
                var n = [e.$slots.default];
                if (e.mergedOptions.vuescroll.pullRefresh.enable)
                    if (e.$slots.refresh)
                        e.$refs.refreshDom = e.$slots.refresh[0],
                        n.unshift(e.$slots.refresh[0]);
                    else {
                        c();
                        var r = null;
                        "deactive" == e.vuescroll.state.refreshStage ? r = t("svg", {
                            attrs: {
                                version: "1.1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 1000 1000",
                                "enable-background": "new 0 0 1000 1000",
                                xmlSpace: "preserve"
                            }
                        }, [t("metadata", [" Svg Vector Icons : http://www.sfont.cn "]), t("g", [t("g", {
                            attrs: {
                                transform: "matrix(1 0 0 -1 0 1008)"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M500,18L10,473l105,105l315-297.5V998h140V280.5L885,578l105-105L500,18z"
                            }
                        })])])]) : "start" == e.vuescroll.state.refreshStage ? r = t("svg", {
                            attrs: {
                                version: "1.1",
                                id: "loader-1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 50 50",
                                xmlSpace: "preserve"
                            },
                            style: "enable-background:new 0 0 50 50;"
                        }, [t("path", {
                            attrs: {
                                fill: "#000",
                                d: "M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z"
                            }
                        }, [t("animateTransform", {
                            attrs: {
                                attributeType: "xml",
                                attributeName: "transform",
                                type: "rotate",
                                from: "0 25 25",
                                to: "360 25 25",
                                dur: "0.6s",
                                repeatCount: "indefinite"
                            }
                        })])]) : "active" == e.vuescroll.state.refreshStage && (r = t("svg", {
                            attrs: {
                                version: "1.1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 1000 1000",
                                "enable-background": "new 0 0 1000 1000",
                                xmlSpace: "preserve"
                            }
                        }, [t("metadata", [" Svg Vector Icons : http://www.sfont.cn "]), t("g", [t("g", {
                            attrs: {
                                transform: "matrix(1 0 0 -1 0 1008)"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M10,543l490,455l490-455L885,438L570,735.5V18H430v717.5L115,438L10,543z"
                            }
                        })])])])),
                        n.unshift(t("div", {
                            class: "vuescroll-refresh",
                            ref: "refreshDom",
                            key: "refshDom"
                        }, [[r, e.pullRefreshTip]]))
                    }
                if (e.mergedOptions.vuescroll.pushLoad.enable)
                    if (e.$slots.load)
                        e.$refs.loadDom = e.$slots.load[0],
                        n.push(e.$slots.load[0]);
                    else {
                        l();
                        var i = null;
                        "deactive" == e.vuescroll.state.loadStage ? i = t("svg", {
                            attrs: {
                                version: "1.1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 1000 1000",
                                "enable-background": "new 0 0 1000 1000",
                                xmlSpace: "preserve"
                            }
                        }, [t("metadata", [" Svg Vector Icons : http://www.sfont.cn "]), t("g", [t("g", {
                            attrs: {
                                transform: "matrix(1 0 0 -1 0 1008)"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M10,543l490,455l490-455L885,438L570,735.5V18H430v717.5L115,438L10,543z"
                            }
                        })])])]) : "start" == e.vuescroll.state.loadStage ? i = t("svg", {
                            attrs: {
                                version: "1.1",
                                id: "loader-1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 50 50",
                                xmlSpace: "preserve"
                            },
                            style: "enable-background:new 0 0 50 50;"
                        }, [t("path", {
                            attrs: {
                                fill: "#000",
                                d: "M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z"
                            }
                        }, [t("animateTransform", {
                            attrs: {
                                attributeType: "xml",
                                attributeName: "transform",
                                type: "rotate",
                                from: "0 25 25",
                                to: "360 25 25",
                                dur: "0.6s",
                                repeatCount: "indefinite"
                            }
                        })])]) : "active" == e.vuescroll.state.loadStage && (i = t("svg", {
                            attrs: {
                                version: "1.1",
                                xmlns: "http://www.w3.org/2000/svg",
                                xmlnsXlink: "http://www.w3.org/1999/xlink",
                                x: "0px",
                                y: "0px",
                                viewBox: "0 0 1000 1000",
                                "enable-background": "new 0 0 1000 1000",
                                xmlSpace: "preserve"
                            }
                        }, [t("metadata", [" Svg Vector Icons : http://www.sfont.cn "]), t("g", [t("g", {
                            attrs: {
                                transform: "matrix(1 0 0 -1 0 1008)"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M500,18L10,473l105,105l315-297.5V998h140V280.5L885,578l105-105L500,18z"
                            }
                        })])])])),
                        n.push(t("div", {
                            class: "vuescroll-load",
                            ref: "loadDom",
                            key: "loadDom"
                        }, [[i, e.pushLoadTip]]))
                    }
                return n
            }
        }()])
    }
    function A(t, e) {
        return t("scrollContent", {
            props: {
                ops: e.mergedOptions.scrollContent
            }
        }, [[e.$slots.default]])
    }
    function C(t, e, n) {
        var r = "vertical" === n ? "vRail" : "hRail"
          , i = "vertical" === n ? "vBar" : "hBar"
          , o = "vertical" === n ? "Y" : "X"
          , a = {
            props: {
                type: n,
                ops: e.mergedOptions[r],
                state: e[r].state
            }
        };
        return !e[i].state.size || !e.mergedOptions.scrollPanel["scrolling" + o] || e.refreshLoad && "vertical" !== n && "slide" === e.mode ? null : t("rail", a)
    }
    function P(t, e, n) {
        var r = "vertical" === n ? "vBar" : "hBar"
          , i = "vertical" === n ? "Y" : "X"
          , o = {
            props: {
                type: n,
                ops: e.mergedOptions[r],
                state: e[r].state
            },
            on: {
                setMousedown: e.setMousedown
            },
            ref: n + "Bar"
        };
        return !e[r].state.size || !e.mergedOptions.scrollPanel["scrolling" + i] || e.refreshLoad && "vertical" !== n && "slide" === e.mode ? null : t("bar", o)
    }
    var L = /*
    * @name: vuescroll 4.2.3
    * @author: (c) 2018-2018 wangyi7099
    * @description: A reactive virtual scrollbar based on vue.js 2.X
    * @license: MIT
    * @GitHub: https://github.com/wangyi7099/vuescroll
    */
    function(t) {
        return t && "object" == typeof t && "default"in t ? t.default : t
    }(n(76))
      , R = {
        vertical: {
            bar: {
                size: "height",
                opsSize: "width",
                posName: "top",
                page: "pageY",
                scroll: "scrollTop",
                scrollSize: "scrollHeight",
                offset: "offsetHeight",
                client: "clientY"
            },
            axis: "Y"
        },
        horizontal: {
            bar: {
                size: "width",
                opsSize: "height",
                posName: "left",
                page: "pageX",
                scroll: "scrollLeft",
                scrollSize: "scrollWidth",
                offset: "offsetWidth",
                client: "clientX"
            },
            axis: "X"
        }
    }
      , O = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
        return typeof t
    }
    : function(t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
    }
      , I = void 0
      , D = !1
      , N = !1
      , k = !1
      , j = ["slide", "native"]
      , z = {
        vuescroll: {
            mode: "native",
            pullRefresh: {
                enable: !1,
                tips: {
                    deactive: "Pull to Refresh",
                    active: "Release to Refresh",
                    start: "Refreshing...",
                    beforeDeactive: "Refresh Successfully!"
                }
            },
            pushLoad: {
                enable: !1,
                tips: {
                    deactive: "Push to Load",
                    active: "Release to Load",
                    start: "Loading...",
                    beforeDeactive: "Load Successfully!"
                }
            }
        },
        scrollPanel: {
            initialScrollY: !1,
            initialScrollX: !1,
            scrollingX: !0,
            scrollingY: !0,
            speed: 300,
            easing: void 0
        },
        scrollContent: {
            tag: "div",
            padding: !0,
            props: {},
            attrs: {}
        },
        vRail: {
            width: "5px",
            pos: "right",
            background: "#a5d6a7",
            opacity: 0
        },
        hRail: {
            height: "5px",
            pos: "bottom",
            background: "#a5d6a7",
            opacity: 0
        },
        vBar: {
            width: "5px",
            pos: "right",
            background: "#4caf50",
            deltaY: 100,
            keepShow: !1,
            opacity: 1,
            hover: !1
        },
        hBar: {
            height: "5px",
            pos: "bottom",
            background: "#4caf50",
            keepShow: !1,
            opacity: 1,
            hover: !1
        }
    }
      , B = {
        data: function() {
            return {
                shouldStopRender: !1
            }
        },
        created: function() {
            g.call(this),
            this.shouldStopRender = v(this.mergedOptions)
        }
    }
      , U = {
        methods: {
            scrollTo: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                void 0 === t.x ? t.x = this.$refs.scrollPanel.$el.scrollLeft : t.x = y(t.x, "scrollWidth", this.scrollPanelElm),
                void 0 === t.y ? t.y = this.$refs.scrollPanel.$el.scrollTop : t.y = y(t.y, "scrollHeight", this.scrollPanelElm);
                var n = t.x
                  , r = t.y;
                "native" == this.mode ? e ? f(this.$refs.scrollPanel.$el, n - this.$refs.scrollPanel.$el.scrollLeft, r - this.$refs.scrollPanel.$el.scrollTop, this.mergedOptions.scrollPanel.speed, this.mergedOptions.scrollPanel.easing) : (this.$refs.scrollPanel.$el.scrollTop = r,
                this.$refs.scrollPanel.$el.scrollLeft = n) : "slide" == this.mode && this.scroller.scrollTo(t.x, t.y, e)
            },
            forceUpdate: function() {
                var t = this;
                this.$forceUpdate(),
                Object.keys(this.$refs).forEach(function(e) {
                    var n = t.$refs[e];
                    n._isVue && n.$forceUpdate()
                })
            }
        }
    }
      , F = {
        methods: {
            updateNativeModeBarState: function() {
                var t = this.scrollPanelElm
                  , e = 100 * t.clientHeight / t.scrollHeight
                  , n = 100 * t.clientWidth / t.scrollWidth;
                this.vBar.state.posValue = 100 * t.scrollTop / t.clientHeight,
                this.hBar.state.posValue = 100 * t.scrollLeft / t.clientWidth,
                this.vBar.state.size = e < 100 ? e + "%" : 0,
                this.hBar.state.size = n < 100 ? n + "%" : 0
            }
        }
    }
      , H = Date.now || function() {
        return +new Date
    }
      , G = {}
      , V = 1
      , W = {
        effect: {}
    }
      , q = window;
    W.effect.Animate = {
        requestAnimationFrame: function() {
            var t = q.requestAnimationFrame || q.webkitRequestAnimationFrame || q.mozRequestAnimationFrame || q.oRequestAnimationFrame
              , e = !!t;
            if (t && !/requestAnimationFrame\(\)\s*\{\s*\[native code\]\s*\}/i.test(t.toString()) && (e = !1),
            e)
                return function(e, n) {
                    t(e, n)
                }
                ;
            var n = {}
              , r = 1
              , i = null
              , o = +new Date;
            return function(t) {
                var e = r++;
                return n[e] = t,
                requestCount++,
                null === i && (i = setInterval(function() {
                    var t = +new Date
                      , e = n;
                    n = {},
                    requestCount = 0;
                    for (var r in e)
                        e.hasOwnProperty(r) && (e[r](t),
                        o = t);
                    t - o > 2500 && (clearInterval(i),
                    i = null)
                }, 1e3 / 60)),
                e
            }
        }(),
        stop: function(t) {
            var e = null != G[t];
            return e && (G[t] = null),
            e
        },
        isRunning: function(t) {
            return null != G[t]
        },
        start: function(t, e, n, r, i, o) {
            var a = H()
              , s = a
              , c = 0
              , l = 0
              , u = V++;
            if (o || (o = document.body),
            u % 20 == 0) {
                var h = {};
                for (var d in G)
                    h[d] = !0;
                G = h
            }
            var p = function h(d) {
                var p = !0 !== d
                  , f = H();
                if (!G[u] || e && !e(u))
                    return G[u] = null,
                    void (n && n(60 - l / ((f - a) / 1e3), u, !1));
                if (p)
                    for (var m = Math.round((f - s) / (1e3 / 60)) - 1, v = 0; v < Math.min(m, 4); v++)
                        h(!0),
                        l++;
                r && (c = (f - a) / r) > 1 && (c = 1);
                var g = i ? i(c) : c;
                !1 !== t(g, f, p) && 1 !== c || !p ? p && (s = f,
                W.effect.Animate.requestAnimationFrame(h, o)) : (G[u] = null,
                n && n(60 - l / ((f - a) / 1e3), u, 1 === c || null == r))
            };
            return G[u] = !0,
            W.effect.Animate.requestAnimationFrame(p, o),
            u
        }
    };
    var X = function() {}
      , Y = null
      , $ = null
      , Z = {
        __isSingleTouch: !1,
        __isTracking: !1,
        __didDecelerationComplete: !1,
        __isGesturing: !1,
        __isDragging: !1,
        __isDecelerating: !1,
        __isAnimating: !1,
        __clientLeft: 0,
        __clientTop: 0,
        __clientWidth: 0,
        __clientHeight: 0,
        __contentWidth: 0,
        __contentHeight: 0,
        __snapWidth: 100,
        __snapHeight: 100,
        __refreshHeight: null,
        __loadHeight: null,
        __refreshActive: !1,
        __refreshActivate: null,
        __refreshBeforeDeactivate: null,
        __refreshDeactivate: null,
        __refreshStart: null,
        __loadActive: null,
        __loadActivate: null,
        __loadBeforeDeactivate: null,
        __loadDeactivate: null,
        __loadStart: null,
        __zoomLevel: 1,
        __scrollLeft: 0,
        __scrollTop: 0,
        __maxScrollLeft: 0,
        __maxScrollTop: 0,
        __scheduledLeft: 0,
        __scheduledTop: 0,
        __scheduledZoom: 0,
        __disable: !1,
        __lastTouchLeft: null,
        __lastTouchTop: null,
        __lastTouchMove: null,
        __positions: null,
        __minDecelerationScrollLeft: null,
        __minDecelerationScrollTop: null,
        __maxDecelerationScrollLeft: null,
        __maxDecelerationScrollTop: null,
        __decelerationVelocityX: null,
        __decelerationVelocityY: null,
        setDimensions: function(t, e, n, r) {
            var i = this;
            t === +t && (i.__clientWidth = t),
            e === +e && (i.__clientHeight = e),
            n === +n && (i.__contentWidth = n),
            r === +r && (i.__contentHeight = r),
            i.__computeScrollMax(),
            i.scrollTo(i.__scrollLeft, i.__scrollTop, !0)
        },
        setPosition: function(t, e) {
            var n = this;
            n.__clientLeft = t || 0,
            n.__clientTop = e || 0
        },
        setSnapSize: function(t, e) {
            var n = this;
            n.__snapWidth = t,
            n.__snapHeight = e
        },
        activatePullToRefresh: function(t, e, n, r, i) {
            var o = this;
            o.__refreshHeight = t,
            o.__refreshActivate = e,
            o.__refreshBeforeDeactivate = i,
            o.__refreshDeactivate = n,
            o.__refreshStart = r
        },
        activatePushToLoad: function(t, e, n, r, i) {
            var o = this;
            o.__loadHeight = t,
            o.__loadActivate = e,
            o.__loadBeforeDeactivate = i,
            o.__loadDeactivate = n,
            o.__loadStart = r
        },
        triggerRefreshOrLoad: function() {
            "refresh" == (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "refresh") ? (this.__publish(this.__scrollLeft, -this.__refreshHeight, this.__zoomLevel, !0),
            this.__refreshStart && this.__refreshStart()) : (this.__publish(this.__scrollLeft, this.__maxScrollTop + this.__loadHeight, this.__zoomLevel, !0),
            this.__loadStart && this.__loadStart())
        },
        finishRefreshOrLoad: function() {
            var t = this;
            t.__refreshBeforeDeactivate && t.__refreshActive ? (t.__refreshActive = !1,
            t.__refreshBeforeDeactivate(function() {
                t.__refreshDeactivate && t.__refreshDeactivate(),
                t.scrollTo(t.__scrollLeft, t.__scrollTop, !0)
            })) : t.__refreshDeactivate && t.__refreshActive && (t.__refreshActive = !1,
            t.__refreshDeactivate(),
            t.scrollTo(t.__scrollLeft, t.__scrollTop, !0)),
            t.__loadBeforeDeactivate && t.__loadActive ? (t.__loadActive = !1,
            t.__loadBeforeDeactivate(function() {
                t.__loadDeactivate && t.__loadDeactivate(),
                t.scrollTo(t.__scrollLeft, t.__scrollTop, !0)
            })) : t.__loadDeactivate && t.__loadActive && (t.__loadActive = !1,
            t.__loadDeactivate(),
            t.scrollTo(t.__scrollLeft, t.__scrollTop, !0))
        },
        getValues: function() {
            var t = this;
            return {
                left: t.__scrollLeft,
                top: t.__scrollTop,
                zoom: t.__zoomLevel
            }
        },
        getScrollMax: function() {
            var t = this;
            return {
                left: t.__maxScrollLeft,
                top: t.__maxScrollTop
            }
        },
        zoomTo: function(t, e, n, r, i) {
            var o = this;
            if (!o.options.zooming)
                throw new Error("Zooming is not enabled!");
            i && (o.__zoomComplete = i),
            o.__isDecelerating && (W.effect.Animate.stop(o.__isDecelerating),
            o.__isDecelerating = !1);
            var a = o.__zoomLevel;
            null == n && (n = o.__clientWidth / 2),
            null == r && (r = o.__clientHeight / 2),
            t = Math.max(Math.min(t, o.options.maxZoom), o.options.minZoom),
            o.__computeScrollMax(t);
            var s = (n + o.__scrollLeft) * t / a - n
              , c = (r + o.__scrollTop) * t / a - r;
            s > o.__maxScrollLeft ? s = o.__maxScrollLeft : s < 0 && (s = 0),
            c > o.__maxScrollTop ? c = o.__maxScrollTop : c < 0 && (c = 0),
            o.__publish(s, c, t, e)
        },
        zoomBy: function(t, e, n, r, i) {
            var o = this;
            o.zoomTo(o.__zoomLevel * t, e, n, r, i)
        },
        scrollTo: function(t, e, n, r) {
            var i = this;
            if (i.__isDecelerating && (W.effect.Animate.stop(i.__isDecelerating),
            i.__isDecelerating = !1),
            null != r && r !== i.__zoomLevel) {
                if (!i.options.zooming)
                    throw new Error("Zooming is not enabled!");
                t *= r,
                e *= r,
                i.__computeScrollMax(r)
            } else
                r = i.__zoomLevel;
            i.options.scrollingX ? i.options.paging ? t = Math.round(t / i.__clientWidth) * i.__clientWidth : i.options.snapping && (t = Math.round(t / i.__snapWidth) * i.__snapWidth) : t = i.__scrollLeft,
            i.options.scrollingY ? i.options.paging ? e = Math.round(e / i.__clientHeight) * i.__clientHeight : i.options.snapping && (e = Math.round(e / i.__snapHeight) * i.__snapHeight) : e = i.__scrollTop,
            t = Math.max(Math.min(i.__maxScrollLeft, t), 0),
            e = Math.max(Math.min(i.__maxScrollTop, e), 0),
            t === i.__scrollLeft && e === i.__scrollTop && (n = !1),
            i.__isTracking || i.__publish(t, e, r, n)
        },
        scrollBy: function(t, e, n) {
            var r = this
              , i = r.__isAnimating ? r.__scheduledLeft : r.__scrollLeft
              , o = r.__isAnimating ? r.__scheduledTop : r.__scrollTop;
            r.scrollTo(i + (t || 0), o + (e || 0), n)
        },
        doMouseZoom: function(t, e, n, r) {
            var i = this
              , o = t > 0 ? .97 : 1.03;
            return i.zoomTo(i.__zoomLevel * o, !1, n - i.__clientLeft, r - i.__clientTop)
        },
        doTouchStart: function(t, e) {
            if (null == t.length)
                throw new Error("Invalid touch list: " + t);
            if (e instanceof Date && (e = e.valueOf()),
            "number" != typeof e)
                throw new Error("Invalid timestamp value: " + e);
            var n = this;
            n.__interruptedAnimation = !0,
            n.__isDecelerating && (W.effect.Animate.stop(n.__isDecelerating),
            n.__isDecelerating = !1,
            n.__interruptedAnimation = !0),
            n.__isAnimating && (W.effect.Animate.stop(n.__isAnimating),
            n.__isAnimating = !1,
            n.__interruptedAnimation = !0);
            var r, i, o = 1 === t.length;
            o ? (r = t[0].pageX,
            i = t[0].pageY) : (r = Math.abs(t[0].pageX + t[1].pageX) / 2,
            i = Math.abs(t[0].pageY + t[1].pageY) / 2),
            n.__initialTouchLeft = r,
            n.__initialTouchTop = i,
            n.__zoomLevelStart = n.__zoomLevel,
            n.__lastTouchLeft = r,
            n.__lastTouchTop = i,
            n.__lastTouchMove = e,
            n.__lastScale = 1,
            n.__enableScrollX = !o && n.options.scrollingX,
            n.__enableScrollY = !o && n.options.scrollingY,
            n.__isTracking = !0,
            n.__didDecelerationComplete = !1,
            n.__isDragging = !o,
            n.__isSingleTouch = o,
            n.__positions = []
        },
        doTouchMove: function(t, e, n) {
            if (null == t.length)
                throw new Error("Invalid touch list: " + t);
            if (e instanceof Date && (e = e.valueOf()),
            "number" != typeof e)
                throw new Error("Invalid timestamp value: " + e);
            var r = this;
            if (r.__isTracking) {
                var i, o;
                2 === t.length ? (i = Math.abs(t[0].pageX + t[1].pageX) / 2,
                o = Math.abs(t[0].pageY + t[1].pageY) / 2) : (i = t[0].pageX,
                o = t[0].pageY);
                var a = r.__positions;
                if (r.__isDragging) {
                    var s = i - r.__lastTouchLeft
                      , c = o - r.__lastTouchTop
                      , l = r.__scrollLeft
                      , u = r.__scrollTop
                      , h = r.__zoomLevel;
                    if (null != n && r.options.zooming) {
                        var d = h;
                        if (h = h / r.__lastScale * n,
                        h = Math.max(Math.min(h, r.options.maxZoom), r.options.minZoom),
                        d !== h) {
                            var p = i - r.__clientLeft
                              , f = o - r.__clientTop;
                            l = (p + l) * h / d - p,
                            u = (f + u) * h / d - f,
                            r.__computeScrollMax(h)
                        }
                    }
                    if (r.__enableScrollX) {
                        l -= s * this.options.speedMultiplier;
                        var m = r.__maxScrollLeft;
                        (l > m || l < 0) && (r.options.bouncing ? l += s / 2 * this.options.speedMultiplier : l = l > m ? m : 0)
                    }
                    if (r.__enableScrollY) {
                        u -= c * this.options.speedMultiplier;
                        var v = r.__maxScrollTop;
                        (u > v || u < 0) && (r.options.bouncing ? (u += c / 2 * this.options.speedMultiplier,
                        r.__enableScrollX || null == r.__refreshHeight && null == r.__loadHeight || (!r.__refreshActive && u <= -r.__refreshHeight ? (r.__refreshActive = !0,
                        r.__refreshActivate && r.__refreshActivate()) : r.__refreshActive && u > -r.__refreshHeight ? (r.__refreshActive = !1,
                        r.__refreshDeactivate && r.__refreshDeactivate()) : !r.__loadActive && u >= r.__maxScrollTop + r.__loadHeight ? (r.__loadActive = !0,
                        r.__loadActivate && r.__loadActivate()) : r.__refreshActive && u < r.__maxScrollTop + r.__loadHeight && (r.__loadActive = !1,
                        r.__loadDeactivate && r.__loadDeactivate()))) : u = u > v ? v : 0)
                    }
                    a.length > 60 && a.splice(0, 30),
                    a.push(l, u, e),
                    r.__publish(l, u, h)
                } else {
                    var g = r.options.locking ? 3 : 0
                      , y = Math.abs(i - r.__initialTouchLeft)
                      , _ = Math.abs(o - r.__initialTouchTop);
                    r.__enableScrollX = r.options.scrollingX && y >= g,
                    r.__enableScrollY = r.options.scrollingY && _ >= g,
                    a.push(r.__scrollLeft, r.__scrollTop, e),
                    r.__isDragging = (r.__enableScrollX || r.__enableScrollY) && (y >= 5 || _ >= 5),
                    r.__isDragging && (r.__interruptedAnimation = !1)
                }
                r.__lastTouchLeft = i,
                r.__lastTouchTop = o,
                r.__lastTouchMove = e,
                r.__lastScale = n
            }
        },
        doTouchEnd: function(t) {
            if (t instanceof Date && (t = t.valueOf()),
            "number" != typeof t)
                throw new Error("Invalid timestamp value: " + t);
            var e = this;
            if (e.__isTracking) {
                if (e.__isTracking = !1,
                e.__isDragging)
                    if (e.__isDragging = !1,
                    e.__isSingleTouch && e.options.animating && t - e.__lastTouchMove <= 100) {
                        for (var n = e.__positions, r = n.length - 1, i = r, o = r; o > 0 && n[o] > e.__lastTouchMove - 100; o -= 3)
                            i = o;
                        if (i !== r) {
                            var a = n[r] - n[i]
                              , s = e.__scrollLeft - n[i - 2]
                              , c = e.__scrollTop - n[i - 1];
                            e.__decelerationVelocityX = s / a * (1e3 / 60),
                            e.__decelerationVelocityY = c / a * (1e3 / 60);
                            var l = e.options.paging || e.options.snapping ? 4 : 1;
                            Math.abs(e.__decelerationVelocityX) > l || Math.abs(e.__decelerationVelocityY) > l ? e.__refreshActive || e.__loadActive || e.__startDeceleration(t) : e.options.scrollingComplete()
                        } else
                            e.options.scrollingComplete()
                    } else
                        t - e.__lastTouchMove > 100 && e.options.scrollingComplete();
                e.__isDecelerating || (e.__refreshActive && e.__refreshStart ? (e.__publish(e.__scrollLeft, -e.__refreshHeight, e.__zoomLevel, !0),
                e.__refreshStart && e.__refreshStart()) : e.__loadActive && e.__loadStart ? (e.__publish(e.__scrollLeft, e.__maxScrollTop + e.__loadHeight, e.__zoomLevel, !0),
                e.__loadStart && e.__loadStart()) : ((e.__interruptedAnimation || e.__isDragging) && e.options.scrollingComplete(),
                e.scrollTo(e.__scrollLeft, e.__scrollTop, !0, e.__zoomLevel),
                e.__refreshActive ? (e.__refreshActive = !1,
                e.__refreshDeactivate && e.__refreshDeactivate()) : e.__loadActive && (e.__loadActive = !1,
                e.__loadDeactivate && e.__loadDeactivate()))),
                e.__positions.length = 0
            }
        },
        onScroll: X,
        stop: function() {
            this.__disable = !0
        },
        start: function() {
            self.__disable = !0
        },
        __publish: function(t, e, n, r) {
            var i = this;
            if (!i.__disable) {
                var o = i.__isAnimating;
                if (o && (W.effect.Animate.stop(o),
                i.__isAnimating = !1),
                r && i.options.animating) {
                    i.__scheduledLeft = t,
                    i.__scheduledTop = e,
                    i.__scheduledZoom = n;
                    var a = i.__scrollLeft
                      , s = i.__scrollTop
                      , c = i.__zoomLevel
                      , l = t - a
                      , u = e - s
                      , h = n - c
                      , d = function(t, e, n) {
                        n && (i.__scrollLeft = a + l * t,
                        i.__scrollTop = s + u * t,
                        i.__zoomLevel = c + h * t,
                        i.__callback && (i.__callback(i.__scrollLeft, i.__scrollTop, i.__zoomLevel),
                        i.onScroll()))
                    }
                      , p = function(t) {
                        return i.__isAnimating === t
                    }
                      , f = function(t, e, n) {
                        e === i.__isAnimating && (i.__isAnimating = !1),
                        (i.__didDecelerationComplete || n) && i.options.scrollingComplete(),
                        i.options.zooming && (i.__computeScrollMax(),
                        i.__zoomComplete && (i.__zoomComplete(),
                        i.__zoomComplete = null))
                    };
                    i.__isAnimating = W.effect.Animate.start(d, p, f, i.options.animationDuration, o ? Y : $)
                } else
                    i.__scheduledLeft = i.__scrollLeft = t,
                    i.__scheduledTop = i.__scrollTop = e,
                    i.__scheduledZoom = i.__zoomLevel = n,
                    i.__callback && (i.__callback(t, e, n),
                    i.onScroll()),
                    i.options.zooming && (i.__computeScrollMax(),
                    i.__zoomComplete && (i.__zoomComplete(),
                    i.__zoomComplete = null))
            }
        },
        __computeScrollMax: function(t) {
            var e = this;
            null == t && (t = e.__zoomLevel),
            e.__maxScrollLeft = Math.max(e.__contentWidth * t - e.__clientWidth, 0),
            e.__maxScrollTop = Math.max(e.__contentHeight * t - e.__clientHeight, 0)
        },
        __startDeceleration: function() {
            var t = this;
            if (t.options.paging) {
                var e = Math.max(Math.min(t.__scrollLeft, t.__maxScrollLeft), 0)
                  , n = Math.max(Math.min(t.__scrollTop, t.__maxScrollTop), 0)
                  , r = t.__clientWidth
                  , i = t.__clientHeight;
                t.__minDecelerationScrollLeft = Math.floor(e / r) * r,
                t.__minDecelerationScrollTop = Math.floor(n / i) * i,
                t.__maxDecelerationScrollLeft = Math.ceil(e / r) * r,
                t.__maxDecelerationScrollTop = Math.ceil(n / i) * i
            } else
                t.__minDecelerationScrollLeft = 0,
                t.__minDecelerationScrollTop = 0,
                t.__maxDecelerationScrollLeft = t.__maxScrollLeft,
                t.__maxDecelerationScrollTop = t.__maxScrollTop;
            var o = function(e, n, r) {
                t.__stepThroughDeceleration(r)
            }
              , a = t.options.snapping ? 4 : .001
              , s = function() {
                var e = Math.abs(t.__decelerationVelocityX) >= a || Math.abs(t.__decelerationVelocityY) >= a;
                return e || (t.__didDecelerationComplete = !0),
                e
            }
              , c = function() {
                t.__isDecelerating = !1,
                t.__didDecelerationComplete && t.options.scrollingComplete(),
                t.scrollTo(t.__scrollLeft, t.__scrollTop, t.options.snapping)
            };
            t.__isDecelerating = W.effect.Animate.start(o, s, c)
        },
        __stepThroughDeceleration: function(t) {
            var e = this
              , n = e.__scrollLeft + e.__decelerationVelocityX
              , r = e.__scrollTop + e.__decelerationVelocityY;
            if (!e.options.bouncing) {
                var i = Math.max(Math.min(e.__maxDecelerationScrollLeft, n), e.__minDecelerationScrollLeft);
                i !== n && (n = i,
                e.__decelerationVelocityX = 0);
                var o = Math.max(Math.min(e.__maxDecelerationScrollTop, r), e.__minDecelerationScrollTop);
                o !== r && (r = o,
                e.__decelerationVelocityY = 0)
            }
            if (t ? e.__publish(n, r, e.__zoomLevel) : (e.__scrollLeft = n,
            e.__scrollTop = r),
            !e.options.paging) {
                e.__decelerationVelocityX *= .95,
                e.__decelerationVelocityY *= .95
            }
            if (e.options.bouncing) {
                var a = 0
                  , s = 0
                  , c = e.options.penetrationDeceleration
                  , l = e.options.penetrationAcceleration;
                n < e.__minDecelerationScrollLeft ? a = e.__minDecelerationScrollLeft - n : n > e.__maxDecelerationScrollLeft && (a = e.__maxDecelerationScrollLeft - n),
                r < e.__minDecelerationScrollTop ? s = e.__minDecelerationScrollTop - r : r > e.__maxDecelerationScrollTop && (s = e.__maxDecelerationScrollTop - r),
                0 !== a && (a * e.__decelerationVelocityX <= 0 ? e.__decelerationVelocityX += a * c : e.__decelerationVelocityX = a * l),
                0 !== s && (s * e.__decelerationVelocityY <= 0 ? e.__decelerationVelocityY += s * c : e.__decelerationVelocityY = s * l)
            }
        }
    };
    for (var J in Z)
        x.prototype[J] = Z[J];
    var Q = function() {
        this.vuescroll.state.refreshStage = "active"
    }
      , K = function() {
        var t = this;
        t.vuescroll.state.refreshStage = "start",
        setTimeout(function() {
            t.scroller.finishRefreshOrLoad()
        }, 2e3)
    }
      , tt = function(t) {
        this.vuescroll.state.refreshStage = "beforeDeactive",
        setTimeout(function() {
            t()
        }, 500)
    }
      , et = function() {
        this.vuescroll.state.refreshStage = "deactive"
    }
      , nt = function() {
        this.vuescroll.state.loadStage = "active"
    }
      , rt = function() {
        var t = this;
        t.vuescroll.state.loadStage = "start",
        setTimeout(function() {
            t.scroller.finishRefreshOrLoad()
        }, 2e3)
    }
      , it = function(t) {
        this.vuescroll.state.loadStage = "beforeDeactive",
        setTimeout(function() {
            t()
        }, 500)
    }
      , ot = function() {
        this.vuescroll.state.loadStage = "deactive"
    }
      , at = {
        methods: {
            updateScroller: function() {
                var t = this.$el.clientWidth
                  , e = this.$el.clientHeight
                  , n = this.scrollPanelElm.scrollWidth
                  , r = this.scrollPanelElm.scrollHeight
                  , i = 0
                  , o = 0;
                if (this.mergedOptions.vuescroll.pullRefresh.enable) {
                    var a = this.$refs.refreshDom.elm || this.$refs.refreshDom;
                    i = a.scrollHeight,
                    a.style.marginTop = -i + "px",
                    r -= i
                }
                if (this.mergedOptions.vuescroll.pushLoad.enable) {
                    o = (this.$refs.loadDom.elm || this.$refs.loadDom).scrollHeight,
                    r -= o
                }
                this.scroller.setDimensions(t, e, n, r)
            },
            registryScroller: function() {
                var t = this
                  , e = !this.refreshLoad
                  , n = this.mergedOptions.scrollPanel
                  , r = n.scrollingY
                  , i = n.scrollingX;
                this.scroller = new x(b(this.scrollPanelElm, window),{
                    zooming: e,
                    scrollingY: r,
                    scrollingX: i && !this.refreshLoad,
                    animationDuration: this.mergedOptions.scrollPanel.speed
                });
                var o = this.$el.getBoundingClientRect();
                this.scroller.setPosition(o.left + this.$el.clientLeft, o.top + this.$el.clientTop);
                var a = w(this.$el, this.scroller, function(e) {
                    switch (e) {
                    case "mousedown":
                        t.vuescroll.state.isDragging = !0;
                        break;
                    case "onscroll":
                        t.handleScroll(!1);
                        break;
                    case "mouseup":
                        t.vuescroll.state.isDragging = !1
                    }
                }, e);
                if (this.mergedOptions.vuescroll.pullRefresh.enable) {
                    var s = this.$refs.refreshDom.elm || this.$refs.refreshDom;
                    this.$listeners["refresh-activate"] && (Q = function() {
                        t.vuescroll.state.refreshStage = "active",
                        t.$emit("refresh-activate", t, s)
                    }
                    ),
                    this.$listeners["refresh-before-deactivate"] && (tt = function(e) {
                        t.vuescroll.state.refreshStage = "beforeDeactive",
                        t.$emit("refresh-before-deactivate", t, s, e.bind(t.scroller))
                    }
                    ),
                    this.$listeners["refresh-deactivate"] && (et = function() {
                        t.vuescroll.state.refreshStage = "deactive",
                        t.$emit("refresh-deactivate", t, s)
                    }
                    ),
                    this.$listeners["refresh-start"] && (K = function() {
                        t.vuescroll.state.refreshStage = "start",
                        t.$emit("refresh-start", t, s, t.scroller.finishRefreshOrLoad.bind(t.scroller))
                    }
                    );
                    var c = s.scrollHeight;
                    this.scroller.activatePullToRefresh(c, Q.bind(this), et.bind(this), K.bind(this), tt.bind(this))
                }
                if (this.mergedOptions.vuescroll.pushLoad.enable) {
                    var l = this.$refs.loadDom.elm || this.$refs.loadDom;
                    this.$listeners["load-activate"] && (nt = function() {
                        t.vuescroll.state.loadStage = "active",
                        t.$emit("load-activate", t, l)
                    }
                    ),
                    this.$listeners["load-before-deactivate"] && (it = function(e) {
                        t.vuescroll.state.loadStage = "beforeDeactive",
                        t.$emit("load-before-deactivate", t, l, e.bind(t.scroller))
                    }
                    ),
                    this.$listeners["load-deactivate"] && (ot = function() {
                        t.vuescroll.state.loadStage = "deactive",
                        t.$emit("load-deactivate", t, l)
                    }
                    ),
                    this.$listeners["load-start"] && (rt = function() {
                        t.vuescroll.state.loadStage = "start",
                        t.$emit("load-start", t, l, t.scroller.finishRefreshOrLoad.bind(t.scroller))
                    }
                    );
                    var u = l.scrollHeight;
                    this.scroller.activatePushToLoad(u, nt.bind(this), ot.bind(this), rt.bind(this), it.bind(this))
                }
                return this.updateScroller(),
                a
            },
            updateSlideModeBarState: function() {
                var t = void 0
                  , e = void 0
                  , n = this.$el
                  , r = this.scroller
                  , i = 0
                  , o = 0
                  , a = n.clientWidth
                  , s = n.clientHeight
                  , c = a + this.scroller.__maxScrollLeft
                  , l = s + this.scroller.__maxScrollTop
                  , u = a < c && this.mergedOptions.scrollPanel.scrollingX
                  , h = s < l && this.mergedOptions.scrollPanel.scrollingY;
                u && (r.__scrollLeft < 0 ? i = -r.__scrollLeft : r.__scrollLeft > r.__maxScrollLeft && (i = r.__scrollLeft - r.__maxScrollLeft)),
                h && (r.__scrollTop < 0 ? o = -r.__scrollTop : r.__scrollTop > r.__maxScrollTop && (o = r.__scrollTop - r.__maxScrollTop)),
                t = 100 * s / (l + o),
                e = 100 * a / (c + i);
                var d = Math.min(Math.max(0, r.__scrollTop), r.__maxScrollTop)
                  , p = Math.min(Math.max(0, r.__scrollLeft), r.__maxScrollLeft);
                this.vBar.state.posValue = 100 * (d + o) / n.clientHeight,
                this.hBar.state.posValue = 100 * (p + i) / n.clientWidth,
                r.__scrollLeft < 0 && (this.hBar.state.posValue = 0),
                r.__scrollTop < 0 && (this.vBar.state.posValue = 0),
                this.vBar.state.size = t < 100 ? t + "%" : 0,
                this.hBar.state.size = e < 100 ? e + "%" : 0
            }
        }
    }
      , st = Object.assign || function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
        }
        return t
    }
      , ct = {
        name: "bar",
        computed: {
            bar: function() {
                return R[this.type].bar
            },
            axis: function() {
                return R[this.type].axis
            },
            parent: function() {
                return this.$parent.$refs
            }
        },
        render: function(t) {
            var e, n = this, r = st((e = {},
            M(e, this.bar.posName, 0),
            M(e, this.ops.pos, 0),
            M(e, this.bar.size, this.state.size),
            M(e, this.bar.opsSize, this.ops[this.bar.opsSize]),
            M(e, "background", this.ops.background),
            M(e, "opacity", this.state.opacity),
            M(e, "cursor", "pointer"),
            M(e, "position", "absolute"),
            M(e, "borderRadius", "4px"),
            M(e, "transition", "opacity .5s"),
            M(e, "userSelect", "none"),
            e), u(this.type, this.state.posValue)), i = {
                style: r,
                class: "vuescroll-" + this.type + "-scrollbar",
                on: {
                    mousedown: this.handleMousedown
                }
            };
            return this.ops.hover && (i.on.mouseenter = function() {
                n.$el.style.background = n.ops.hover
            }
            ,
            i.on.mouseleave = function() {
                n.$el.style.background = n.ops.background
            }
            ),
            t("div", i)
        },
        methods: {
            handleMousedown: function(t) {
                t.stopPropagation(),
                this.axisStartPos = t[this.bar.client] - this.$el.getBoundingClientRect()[this.bar.posName],
                this.$emit("setMousedown", !0),
                h(document, "mousemove", this.handleMouseMove),
                h(document, "mouseup", this.handleMouseUp)
            },
            handleMouseMove: function(t) {
                if (this.axisStartPos) {
                    var e = t[this.bar.client] - this.parent[this.type + "Rail"].getBoundingClientRect()[this.bar.posName]
                      , n = (e - this.axisStartPos) / this.parent[this.type + "Rail"][this.bar.offset];
                    this.$parent.scrollTo(M({}, this.axis.toLowerCase(), this.parent.scrollPanel.$el[this.bar.scrollSize] * n), !1)
                }
            },
            handleMouseUp: function() {
                this.$emit("setMousedown", !1),
                this.$parent.hideBar(),
                this.axisStartPos = 0,
                d(document, "mousemove", this.handleMouseMove),
                d(document, "mouseup", this.handleMouseUp)
            }
        },
        props: {
            ops: {
                type: Object,
                required: !0
            },
            state: {
                type: Object,
                required: !0
            },
            type: {
                type: String,
                required: !0
            }
        }
    }
      , lt = {
        name: "rail",
        functional: !0,
        render: function(t, e) {
            var n, r = e.parent, i = e.props, o = R[i.type].bar, a = r.$refs;
            return t("div", {
                style: (n = {},
                E(n, o.posName, 0),
                E(n, i.ops.pos, 0),
                E(n, o.size, "100%"),
                E(n, o.opsSize, i.ops[o.opsSize]),
                E(n, "background", i.ops.background),
                E(n, "opacity", i.ops.opacity),
                E(n, "position", "absolute"),
                E(n, "cursor", "pointer"),
                E(n, "borderRadius", "4px"),
                n),
                class: "vuescroll-" + i.type + "-rail",
                ref: i.type + "Rail",
                on: {
                    click: function(t) {
                        T(t, o, a, i.type, r)
                    }
                }
            })
        }
    }
      , ut = {
        name: "scrollContent",
        functional: !0,
        render: function(t, e) {
            var n = e.props
              , r = e.slots
              , o = i(n.state.style, {});
            return o.position = "relative",
            o.minHeight = "100%",
            n.ops.padding && (o[n.ops.paddPos] = n.ops.paddValue),
            t(n.ops.tag, {
                style: o,
                ref: "scrollContent",
                class: "vuescroll-content",
                props: n.ops.props,
                attrs: n.ops.attrs
            }, r().default)
        },
        props: {
            ops: {
                default: function() {
                    return {}
                }
            },
            state: {
                default: function() {
                    return {}
                }
            }
        }
    }
      , ht = {
        name: "scrollPanel",
        methods: {
            updateInitialScroll: function() {
                var t = 0
                  , e = 0;
                this.ops.initialScrollX && (t = this.ops.initialScrollX),
                this.ops.initialScrollY && (e = this.ops.initialScrollY),
                this.$parent.scrollTo({
                    x: t,
                    y: e
                })
            }
        },
        mounted: function() {
            var t = this;
            this.$nextTick(function() {
                t._isDestroyed || t.updateInitialScroll()
            })
        },
        render: function(t) {
            return t("div", {
                class: ["vuescroll-panel"]
            }, [[this.$slots.default]])
        },
        props: {
            ops: {},
            state: {}
        }
    }
      , dt = {
        name: "vueScroll",
        mixins: [B, U, F, at],
        data: function() {
            return {
                vuescroll: {
                    state: {
                        isDragging: !1,
                        listeners: [],
                        mousedown: !1,
                        pointerLeave: !0,
                        timeoutId: 0,
                        updateType: "",
                        internalScrollTop: 0,
                        internalScrollLeft: 0,
                        refreshStage: "deactive",
                        loadStage: "deactive"
                    }
                },
                scrollPanel: {
                    el: "",
                    state: {
                        left: 0,
                        top: 0,
                        zoom: 1
                    }
                },
                scrollContent: {},
                vRail: {
                    state: {}
                },
                hRail: {
                    state: {}
                },
                vBar: {
                    state: {
                        posValue: 0,
                        size: 0,
                        opacity: 0
                    }
                },
                hBar: {
                    state: {
                        posValue: 0,
                        size: 0,
                        opacity: 0
                    }
                },
                mergedOptions: {
                    vuescroll: {},
                    scrollPanel: {},
                    scrollContent: {},
                    vRail: {},
                    vBar: {},
                    hRail: {},
                    hBar: {}
                }
            }
        },
        render: function(t) {
            var e = this;
            return e.shouldStopRender ? t("div", [[e.$slots.default]]) : t("div", {
                style: {
                    position: "relative",
                    height: "100%",
                    width: "100%",
                    padding: 0,
                    overflow: "hidden"
                },
                class: "vue-scroll",
                on: {
                    mouseenter: function() {
                        e.vuescroll.state.pointerLeave = !1,
                        e.showBar(),
                        e.update()
                    },
                    mouseleave: function() {
                        e.vuescroll.state.pointerLeave = !0,
                        e.hideBar()
                    },
                    mousemove: function() {
                        e.vuescroll.state.pointerLeave = !1,
                        e.showBar(),
                        e.update()
                    }
                }
            }, [S(t, e), C(t, e, "vertical"), P(t, e, "vertical"), C(t, e, "horizontal"), P(t, e, "horizontal")])
        },
        computed: {
            scrollPanelElm: function() {
                return this.$refs.scrollPanel.$el
            },
            mode: function() {
                return this.mergedOptions.vuescroll.mode
            },
            pullRefreshTip: function() {
                return this.mergedOptions.vuescroll.pullRefresh.tips[this.vuescroll.state.refreshStage]
            },
            pushLoadTip: function() {
                return this.mergedOptions.vuescroll.pushLoad.tips[this.vuescroll.state.loadStage]
            },
            refreshLoad: function() {
                return this.mergedOptions.vuescroll.pullRefresh.enable || this.mergedOptions.vuescroll.pushLoad.enable
            }
        },
        methods: {
            update: function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                "native" == this.mode ? this.updateNativeModeBarState() : "slide" == this.mode && this.updateSlideModeBarState(),
                t && this.emitEvent(t, e)
            },
            updateMode: function() {
                var t = this;
                if (this.uncessaryChanges)
                    return void this.$nextTick(function() {
                        t.uncessaryChanges = !1
                    });
                var e = this.vuescroll.state.internalScrollLeft
                  , n = this.vuescroll.state.internalScrollTop;
                this.destroyScroller && (this.scroller.stop(),
                this.destroyScroller(),
                this.destroyScroller = null),
                "slide" == this.mode ? this.destroyScroller = this.registryScroller() : "native" == this.mode && (this.scrollPanelElm.style.transform = "",
                this.scrollPanelElm.style.transformOrigin = ""),
                this.scrollTo({
                    x: e,
                    y: n
                }, !1)
            },
            handleScroll: function(t) {
                this.recordCurrentPos(),
                this.update("handle-scroll", t),
                this.showAndDefferedHideBar()
            },
            showAndDefferedHideBar: function() {
                var t = this;
                this.showBar(),
                this.vuescroll.state.timeoutId && clearTimeout(this.vuescroll.state.timeoutId),
                this.vuescroll.state.timeoutId = setTimeout(function() {
                    t.vuescroll.state.timeoutId = 0,
                    t.hideBar()
                }, 500)
            },
            emitEvent: function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
                  , n = this.scrollPanelElm
                  , r = {
                    type: "vertical"
                }
                  , i = {
                    type: "horizontal"
                }
                  , o = n.scrollTop
                  , a = n.scrollLeft;
                "slide" == this.mode && (o = this.scroller.__scrollTop,
                a = this.scroller.__scrollLeft),
                r.process = o / (n.scrollHeight - n.clientHeight),
                i.process = a / (n.scrollWidth - n.clientWidth),
                r.barSize = this.vBar.state.size,
                i.barSize = this.hBar.state.size,
                this.$emit(t, r, i, e)
            },
            showBar: function() {
                this.vBar.state.opacity = this.mergedOptions.vBar.opacity,
                this.hBar.state.opacity = this.mergedOptions.hBar.opacity
            },
            hideBar: function() {
                this.vuescroll.state.isDragging || (this.mergedOptions.vBar.keepShow || this.vuescroll.state.mousedown || !this.vuescroll.state.pointerLeave || (this.vBar.state.opacity = 0),
                this.mergedOptions.hBar.keepShow || this.vuescroll.state.mousedown || !this.vuescroll.state.pointerLeave || (this.hBar.state.opacity = 0))
            },
            setMousedown: function(t) {
                this.vuescroll.state.mousedown = t
            },
            registryResize: function() {
                var t = this;
                if (this.uncessaryChanges)
                    return void this.$nextTick(function() {
                        t.uncessaryChanges = !1
                    });
                this.destroyResize && this.destroyResize();
                var e = null;
                "slide" == this.mode ? e = this.scrollPanelElm : "native" == this.mode && (e = this.$refs.scrollContent._isVue ? this.$refs.scrollContent.$el : this.$refs.scrollContent),
                window.addEventListener("resize", function() {
                    t.update(),
                    t.showAndDefferedHideBar(),
                    "slide" == t.mode && t.updateScroller()
                }, !1);
                var n = [function(e) {
                    t.vuescroll.state.updateType = "resize",
                    "slide" == t.mode && t.updateScroller(),
                    t.update("handle-resize", e),
                    t.showAndDefferedHideBar()
                }
                ];
                this.destroyResize = m(e, n)
            },
            recordCurrentPos: function() {
                var t = !1;
                this.mode !== this.lastMode && (t = !0,
                this.lastMode = this.mode),
                "native" == this.mode ? (this.vuescroll.state.internalScrollLeft = t ? this.scroller.__scrollLeft : this.scrollPanelElm.scrollLeft,
                this.vuescroll.state.internalScrollTop = t ? this.scroller.__scrollTop : this.scrollPanelElm.scrollTop) : "slide" == this.mode && (this.vuescroll.state.internalScrollLeft = t ? this.scrollPanelElm.scrollLeft : this.scroller.__scrollLeft,
                this.vuescroll.state.internalScrollTop = t ? this.scrollPanelElm.scrollTop : this.scroller.__scrollTop)
            },
            watchBreakingChanges: function() {
                var t = this;
                this.$watch("mergedOptions", function() {
                    t.recordCurrentPos(),
                    t.$nextTick(function() {
                        t.registryResize(),
                        t.updateMode()
                    })
                }, {
                    deep: !0,
                    sync: !0
                })
            },
            watchUncessaryChanges: function() {
                var t = this;
                ["mergedOptions.vuescroll.pullRefresh.tips", "mergedOptions.vuescroll.pushLoad.tips", "mergedOptions.vRail", "mergedOptions.hRail", "mergedOptions.vBar", "mergedOptions.hBar"].forEach(function(e) {
                    t.$watch(e, function() {
                        t.uncessaryChanges = !0
                    }, {
                        sync: !0,
                        deep: !0
                    })
                })
            }
        },
        mounted: function() {
            this._isDestroyed || this.shouldStopRender || ("slide" == this.mode && (this.destroyScroller = this.registryScroller()),
            this.lastMode = this.mode,
            this.registryResize(),
            this.watchBreakingChanges(),
            this.watchUncessaryChanges(),
            this.update(),
            this.showAndDefferedHideBar())
        },
        updated: function() {
            var t = this;
            this.$nextTick(function() {
                if (!t._isDestroyed) {
                    if ("resize" == t.vuescroll.state.updateType)
                        return void (t.vuescroll.state.updateType = "");
                    t.update(),
                    t.showAndDefferedHideBar()
                }
            })
        },
        components: {
            bar: ct,
            rail: lt,
            scrollContent: ut,
            scrollPanel: ht
        },
        props: {
            ops: {
                default: function() {
                    return {
                        vuescroll: {},
                        scrollPanel: {},
                        scrollContent: {},
                        vRail: {},
                        vBar: {},
                        hRail: {},
                        hBar: {}
                    }
                }
            }
        }
    }
      , pt = {
        install: function(t) {
            if (pt.isInstalled)
                return void console.warn("You should not install the vuescroll again!");
            t.component(dt.name, dt),
            t.prototype.$vuescrollConfig = i(z, {}),
            pt.isInstalled = !0
        }
    };
    t.exports = pt
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "connection-graph-container"
        }, [n("audio", {
            attrs: {
                loop: "",
                src: "audios/in_pursuit.mp3"
            }
        }), t._v(" "), n("div", {
            staticClass: "marvel-navbar"
        }, [n("div", {
            staticClass: "navbar-content"
        }, [t._m(0), t._v(" "), n("div", {
            staticClass: "option-graph"
        }, [n("div", {
            staticClass: "option character selected",
            on: {
                click: function(e) {
                    t.toggleGraph(e)
                }
            }
        }, [n("p", [t._v("CHARACTERS")])]), t._v(" "), n("div", {
            staticClass: "option movie",
            on: {
                click: function(e) {
                    t.toggleGraph(e)
                }
            }
        }, [n("p", [t._v("MOVIES")])])]), t._v(" "), t._m(1)])]), t._v(" "), t._m(2), t._v(" "), n("div", {
            staticClass: "graph-content"
        }), t._v(" "), t.currentGraphData.movie ? n("div", {
            staticClass: "helper-button movie",
            style: {
                top: this.currentGraphData.movie ? "50px" : "90px"
            },
            on: {
                click: function(e) {
                    t.onMovieIconClick(t.currentGraphData.movie)
                }
            }
        }, [n("img", {
            attrs: {
                src: t.is_mobile() ? t.movieIconSrc : t.getMovieIconAppearance(),
                alt: ""
            }
        }), t._v(" "), n("span", [t._v("More Info")])]) : t._e(), t._v(" "), t.is_mobile() && !t.currentGraphData.movie && "movie" !== t.graphState && t.startScene && t.currentSelection.obj ? n("div", {
            staticClass: "helper-button character",
            on: {
                click: function(e) {
                    t.onCharIconClick()
                }
            }
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/nodeIcons/" + t.currentSelection.id + ".svg",
                alt: ""
            }
        }), t._v(" "), n("span", [t._v("More Info")])]) : t._e(), t._v(" "), t.startScene && ("movie" !== t.graphState || t.currentGraphData.movie && "movie" === t.graphState) ? n("div", {
            staticClass: "legend-container"
        }, t._l(Object.keys(t.relationColor), function(e) {
            return n("div", {
                staticClass: "relation"
            }, [n("p", [t._v(t._s(t.formatText(e)))]), t._v(" "), n("div", {
                staticClass: "rel-color",
                style: {
                    backgroundColor: t.relationColor[e]
                }
            })])
        })) : t._e(), t._v(" "), n("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: t.startScene && !t.currentGraphData.movie,
                expression: "startScene && !currentGraphData.movie"
            }],
            staticClass: "filter-option-main"
        }, [n("div", {
            staticClass: "filter-option-limitWidth"
        }, [n("div", {
            staticClass: "filter-option-container"
        }, [n("div", {
            staticClass: "filter-option-content"
        }, ["movie" === t.graphState ? n("div", {
            staticClass: "movie"
        }, [n("div", {
            staticClass: "option",
            on: {
                click: function(e) {
                    t.changeMovieLayout(e, "phase")
                }
            }
        }, [t._v("Phases")]), t._v(" "), n("div", {
            staticClass: "option default selected",
            on: {
                click: function(e) {
                    t.changeMovieLayout(e, null)
                }
            }
        }, [t._v("Year Of Release")]), t._v(" "), n("div", {
            staticClass: "option",
            on: {
                click: function(e) {
                    t.changeMovieLayout(e, "group")
                }
            }
        }, [t._v("Movie Group")])]) : t._e(), t._v(" "), t.is_mobile() && this.dataManager ? n("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !t.currentGraphData.movie && "character" === t.graphState,
                expression: "!currentGraphData.movie && graphState ==='character'"
            }],
            staticClass: "character"
        }, [n("div", {
            staticClass: "option default selected",
            on: {
                click: function(e) {
                    t.changeAllCharacterLayout(e, "all")
                }
            }
        }, [t._v("All Characters")]), t._v(" "), t._l(Object.keys(this.dataManager.filterGroup), function(e) {
            return n("div", {
                staticClass: "option",
                on: {
                    click: function(n) {
                        t.changeAllCharacterLayout(n, e)
                    }
                }
            }, [t._v(t._s(t.formatSlug(e)))])
        })], 2) : t._e(), t._v(" "), !t.is_mobile() && this.dataManager ? n("vue-scroll", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !t.currentGraphData.movie && "character" === t.graphState,
                expression: "!currentGraphData.movie && graphState ==='character'"
            }],
            staticClass: "character",
            attrs: {
                ops: t.vuescrollOpt
            }
        }, [n("div", {
            staticClass: "option default selected",
            on: {
                click: function(e) {
                    t.changeAllCharacterLayout(e, "all")
                }
            }
        }, [n("span", [t._v("All Characters")])]), t._v(" "), t._l(Object.keys(this.dataManager.filterGroup), function(e) {
            return n("div", {
                staticClass: "option",
                on: {
                    click: function(n) {
                        t.changeAllCharacterLayout(n, e)
                    }
                }
            }, [n("span", [t._v(t._s(t.formatSlug(e)))])])
        })], 2) : t._e()], 1)])])]), t._v(" "), n("div", {
            staticClass: "marvel-info-panel"
        }, [n("img", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: t.splitState.split,
                expression: "splitState.split"
            }],
            staticClass: "close",
            attrs: {
                src: "images/close.svg",
                alt: ""
            }
        }), t._v(" "), t.currentSelection.obj && "character" === t.currentSelection.obj.nodeType ? n("div", {
            staticClass: "marvel-info-content character"
        }, [n("div", {
            staticClass: "avatar-container"
        }, [n("div", {
            staticClass: "avatar-main"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/nodeIcons/" + t.currentProfileContent.id + ".svg",
                alt: ""
            }
        })]), t._v(" "), t.currentSelection.obj.alterEgos || t.currentSelection.obj.origin && t.currentSelection.obj.origin.alterEgos ? n("div", {
            staticClass: "avatar-alter"
        }, t._l(this.currentAlterList, function(e) {
            return n("div", {
                staticClass: "alter-ego",
                on: {
                    click: function(n) {
                        t.onAlterListClick(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e.id + ".svg",
                    alt: e.id
                }
            })])
        })) : t._e(), t._v(" "), n("h2", [t._v(t._s(t.currentProfileContent.title))])]), t._v(" "), n("div", {
            staticClass: "marvel-info-basic"
        }, [n("p", {
            staticClass: "shortInfo"
        }, [t._v(t._s("Full name: " + t.currentSelection.obj.fullName))]), t._v(" "), t.currentSelection.obj.alias ? n("p", {
            staticClass: "shortInfo"
        }, [t._v(t._s("Alias: " + t.currentSelection.obj.alias))]) : t._e(), t._v(" "), n("p", {
            staticClass: "shortInfo"
        }, [t._v(t._s("Species: " + t.formatText(t.currentSelection.obj.species)))]), t._v(" "), t.currentSelection.obj.status ? n("p", {
            staticClass: "shortInfo",
            domProps: {
                innerHTML: t._s("Status: <span class=" + t.currentSelection.obj.status + ">" + t.formatText(t.currentSelection.obj.status) + "</span>")
            }
        }) : t._e(), t._v(" "), n("p", {
            staticClass: "shortInfo"
        }, [t._v(t._s("Played by: " + t.currentSelection.obj.playedBy))]), t._v(" "), n("p", {
            staticClass: "description"
        }, [t._v(t._s(t.currentSelection.obj.description))]), t._v(" "), t.currentSelection.obj.hasScreenshot ? n("img", {
            staticClass: "screenshot",
            attrs: {
                src: "images_doc/marvel/screenshots/" + t.currentProfileContent.id + ".jpg",
                alt: ""
            }
        }) : t._e()])]) : t._e(), t._v(" "), t.currentSelection.obj && "movie" === t.currentSelection.obj.nodeType ? n("div", {
            staticClass: "marvel-info-content movie"
        }, [n("div", {
            staticClass: "avatar-container"
        }, [n("div", {
            staticClass: "avatar-main"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/nodeIcons/" + (t.currentGraphData.movie ? t.currentGraphData.movie : t.currentSelection.id ? t.currentSelection.id : null) + ".png",
                alt: ""
            }
        })]), t._v(" "), n("h2", [t._v(t._s(t.currentSelection.obj.name))]), t._v(" "), n("p", {
            staticClass: "shortInfo"
        }, [t._v(t._s(t.currentSelection.obj.year))])]), t._v(" "), n("div", {
            staticClass: "marvel-info-basic"
        }, [n("p", [t._v(t._s(t.currentSelection.obj.description))])])]) : t._e(), t._v(" "), t.currentSelection.obj && "character" === t.currentSelection.obj.nodeType && t.currentSelection.obj.hasRelationship() ? n("div", {
            staticClass: "marvel-info-more character"
        }, [n("div", {
            staticClass: "info-more-navbar"
        }, [t._l(Object.keys(t.currentSelection.obj.getProfileRelationKeys()), function(e, r) {
            return t.currentSelection.obj.getProfileRelationKeys()[e] ? n("div", {
                class: "option " + e + " " + (0 === r ? "current" : ""),
                style: {
                    backgroundImage: "url(images_doc/marvel/icons/" + e + ".svg)"
                },
                on: {
                    click: function(n) {
                        t.updateProfileRelation(e)
                    }
                }
            }, [n("span", [t._v(t._s(e.toUpperCase()))])]) : t._e()
        }), t._v(" "), Object.keys(t.currentSelection.obj.movies).length > 0 && !t.currentSelection.obj.movies.none ? n("div", {
            staticClass: "option movie",
            style: {
                backgroundImage: "url(images_doc/marvel/icons/movies.svg)"
            },
            on: {
                click: function(e) {
                    t.onMovieTagClick()
                }
            }
        }, [n("span", [t._v("MOVIES")])]) : t._e()], 2), t._v(" "), t.is_mobile() ? n("div", {
            class: "info-more-list " + (t.profileRelation.type ? t.profileRelation.type : "movie")
        }, [n("div", {
            class: "item-scroll-container " + (t.profileRelation.type ? t.profileRelation.type : "movie")
        }, [t._l(t.currentSelection.obj.getProfileRelation(t.profileRelation.type), function(e) {
            return t.profileRelation.type ? n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".svg",
                    alt: e
                }
            })]) : t._e()
        }), t._v(" "), t._l(Object.keys(t.currentSelection.obj.movies), function(e) {
            return !t.profileRelation.type && Object.keys(t.currentSelection.obj.movies).length > 0 && !t.currentSelection.obj.movies.none ? n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".png",
                    alt: e
                }
            })]) : t._e()
        })], 2)]) : t._e(), t._v(" "), t.is_mobile() ? t._e() : n("div", {
            class: "info-more-list " + (t.profileRelation.type ? t.profileRelation.type : "movie")
        }, [n("vue-scroll", {
            class: "item-scroll-container " + (t.profileRelation.type ? t.profileRelation.type : "movie"),
            attrs: {
                ops: t.vuescrollOpt
            }
        }, [t._l(t.currentSelection.obj.getProfileRelation(t.profileRelation.type), function(e) {
            return t.profileRelation.type ? n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".svg",
                    alt: e
                }
            })]) : t._e()
        }), t._v(" "), t._l(Object.keys(t.currentSelection.obj.movies), function(e) {
            return !t.profileRelation.type && Object.keys(t.currentSelection.obj.movies).length > 0 && !t.currentSelection.obj.movies.none ? n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".png",
                    alt: e
                }
            })]) : t._e()
        })], 2)], 1)]) : t._e(), t._v(" "), t.currentSelection.obj && "movie" === t.currentSelection.obj.nodeType ? n("div", {
            staticClass: "marvel-info-more movie"
        }, [t.is_mobile() ? t._e() : n("div", {
            staticClass: "info-more-list movie"
        }, [n("vue-scroll", {
            staticClass: "item-scroll-container movie",
            attrs: {
                ops: t.vuescrollOpt
            }
        }, t._l(Object.keys(t.currentSelection.obj.characters), function(e) {
            return n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".svg",
                    alt: e
                }
            })])
        }))], 1), t._v(" "), t.is_mobile() ? n("div", {
            staticClass: "info-more-list movie"
        }, [n("div", {
            staticClass: "item-scroll-container movie"
        }, t._l(Object.keys(t.currentSelection.obj.characters), function(e) {
            return n("div", {
                staticClass: "info-more-item",
                on: {
                    click: function(n) {
                        t.changeCurrentNode(e)
                    }
                }
            }, [n("img", {
                attrs: {
                    src: "images_doc/marvel/nodeIcons/" + e + ".svg",
                    alt: e
                }
            })])
        }))]) : t._e()]) : t._e()])])
    }
      , i = [function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "sound-button"
        }, [n("div", {
            staticClass: "wrap",
            staticStyle: {
                display: "none"
            }
        }, [n("img", {
            attrs: {
                src: "images/st-audio.svg",
                alt: ""
            }
        })]), t._v(" "), n("div", {
            staticClass: "wrap"
        }, [n("img", {
            attrs: {
                src: "images/st-no-audio.svg",
                alt: ""
            }
        })])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "option-search"
        }, [n("div", {
            staticClass: "block-overlay"
        }), t._v(" "), n("div", {
            staticClass: "virtual-button"
        }, [n("img", {
            attrs: {
                src: "images/search-icon.svg"
            }
        })]), t._v(" "), n("select", {
            staticClass: "search-container"
        })])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "click-block"
        }, [n("div", {
            staticClass: "loading-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/marvelLogo.svg",
                alt: ""
            }
        }), t._v(" "), n("p", [t._v("Loading . . .")])])])
    }
    ];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(83)
      , s = r(a)
      , c = n(33)
      , l = r(c)
      , u = n(42)
      , h = r(u)
      , d = function() {
        function t(e) {
            (0,
            l.default)(this, t),
            this.characters = {},
            this.movies = {},
            this.nodes = {},
            this.relationships = {},
            this.filterGroup = {},
            this.relStr = ["friend", "enemy", "creation", "family", "work", "romance", "alterEgo"],
            e && (this.characters = e.characters,
            this.movies = e.movies,
            this.filterGroup = e.filterGroup,
            this.relationships = e.relationships,
            this.nodes = (0,
            s.default)({}, this.characters, this.movies))
        }
        return (0,
        h.default)(t, [{
            key: "getAllMoviesGraphData",
            value: function(t) {
                var e = this
                  , n = []
                  , r = [];
                if ((0,
                o.default)(this.movies).forEach(function(t, r) {
                    var i = e.movies[t];
                    "none" !== i.id && n.push({
                        id: i.id,
                        name: i.name,
                        phase: i.phase,
                        group: i.groupName,
                        default: !1
                    })
                }),
                t)
                    switch (t) {
                    case "phase":
                        n.forEach(function(t, e) {
                            e > 0 && t.phase === n[e - 1].phase ? r.push({
                                source: t.id,
                                target: n[e - 1].id,
                                relation: 0
                            }) : t.default = !0
                        });
                        break;
                    case "group":
                        var i = {};
                        n.forEach(function(t, e) {
                            i[t.group] || (i[t.group] = []),
                            i[t.group].push(t)
                        }),
                        (0,
                        o.default)(i).forEach(function(t) {
                            var e = i[t];
                            e.forEach(function(t, n) {
                                0 === n ? t.default = !0 : n > 0 && r.push({
                                    source: e[0].id,
                                    target: t.id,
                                    relation: 0
                                })
                            })
                        })
                    }
                else
                    n.forEach(function(t, e) {
                        e > 0 && r.push({
                            source: t.id,
                            target: n[e - 1].id,
                            relation: 0
                        })
                    });
                return {
                    nodes: n,
                    links: r,
                    type: "movie"
                }
            }
        }, {
            key: "getAllCharactersGraphData",
            value: function() {
                var t = this
                  , e = []
                  , n = [];
                return (0,
                o.default)(this.characters).forEach(function(r) {
                    var i = t.characters[r];
                    e.push({
                        id: i.id,
                        name: i.name,
                        group: 0
                    }),
                    i.alterEgos && (0,
                    o.default)(i.alterEgos).forEach(function(t) {
                        var e = i.alterEgos[t];
                        n.push({
                            source: e.id,
                            target: i.id,
                            relation: "alterEgo"
                        })
                    })
                }),
                n = n.concat(this.relationships.map(function(e) {
                    return {
                        source: e.id,
                        target: e.target_id,
                        relation: t.relStr[e.relationship]
                    }
                })),
                {
                    nodes: e,
                    links: n,
                    type: "character"
                }
            }
        }, {
            key: "getAllCharactersGraphNodes",
            value: function() {
                var t = this
                  , e = [];
                return (0,
                o.default)(this.characters).forEach(function(n) {
                    var r = t.characters[n];
                    e.push({
                        id: r.id,
                        name: r.name,
                        group: 0
                    }),
                    r.alterEgos && (0,
                    o.default)(r.alterEgos).forEach(function(t) {
                        r.alterEgos[t]
                    })
                }),
                {
                    nodes: e,
                    links: []
                }
            }
        }, {
            key: "getAllCharactersGraphDataByFilter",
            value: function(t) {
                var e = this
                  , n = []
                  , r = []
                  , i = {};
                return (0,
                o.default)(this.characters).forEach(function(a) {
                    var s = e.characters[a];
                    (s.type === t || s.affiliation[t]) && (i[s.id] = {
                        id: s.id,
                        name: s.name,
                        linkedWith: null
                    },
                    n.push({
                        id: s.id,
                        name: s.name,
                        linkedWith: null
                    }),
                    s.alterEgos && (0,
                    o.default)(s.alterEgos).forEach(function(t) {
                        var e = s.alterEgos[t];
                        i[e.id] = {
                            id: e.id,
                            name: e.name,
                            linkedWith: null,
                            alterEgo: !0
                        },
                        r.push({
                            source: e.id,
                            target: s.id,
                            relation: "alterEgo"
                        })
                    }))
                }),
                n.forEach(function(t) {
                    if (!t.alterEgo) {
                        e.characters[t.id].getFilterLinksByExistingNodes(n).forEach(function(t) {
                            var e = t.source
                              , n = t.target;
                            i[e].linkedWith || (i[e].linkedWith = {}),
                            i[n].linkedWith || (i[n].linkedWith = {}),
                            i[e].linkedWith[n] || i[n].linkedWith[e] || (i[e].linkedWith[n] = t.relation,
                            i[n].linkedWith[e] = t.relation,
                            r.push({
                                source: e,
                                target: n,
                                relation: t.relation
                            }))
                        })
                    }
                }),
                {
                    nodes: n,
                    links: r,
                    type: "character"
                }
            }
        }, {
            key: "getMovieRelationships",
            value: function(t) {
                return this.movies[t].relationships
            }
        }, {
            key: "getSearchList",
            value: function() {
                var t = [];
                return (0,
                o.default)(this.characters).forEach(function(e) {
                    t.push({
                        label: e.name,
                        value: e.id
                    })
                }),
                t
            }
        }]),
        t
    }();
    e.default = d
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(110)
      , s = r(a)
      , c = n(33)
      , l = r(c)
      , u = n(42)
      , h = r(u)
      , d = n(160)
      , p = r(d)
      , f = n(161)
      , m = r(f)
      , v = n(504)
      , g = r(v)
      , y = n(52)
      , _ = function(t) {
        if (t && t.__esModule)
            return t;
        var e = {};
        if (null != t)
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        return e.default = t,
        e
    }(y)
      , x = n(505)
      , b = r(x)
      , w = function(t) {
        function e(t) {
            (0,
            l.default)(this, e);
            var n = (0,
            p.default)(this, (e.__proto__ || (0,
            s.default)(e)).call(this, t));
            return n.index = null,
            n.nodeType = "movie",
            n.characters = {},
            n.relationships = {},
            n.group = "",
            n.groupName = "",
            n.phase = null,
            n.year = null,
            n.released = "no",
            t && (n.index = t.index,
            n.relationships = t.relationships,
            n.group = t.group,
            n.groupName = t.groupName,
            n.phase = t.phase,
            n.year = t.year,
            n.released = t.released),
            n.size = {
                x: 20,
                y: 20,
                z: 20
            },
            n
        }
        return (0,
        m.default)(e, t),
        (0,
        h.default)(e, [{
            key: "createSpriteObject",
            value: function(t, e, n, r, i) {
                var o = new _.SpriteMaterial({
                    map: (new _.TextureLoader).load("images_doc/marvel/nodeIcons/" + this.id + ".png"),
                    color: void 0 !== e && !1 === e ? "#444444" : "#ffffff"
                })
                  , a = new _.Sprite(o);
                a.scale.set(this.size.x, this.size.y, this.size.z),
                a.renderOrder = 1,
                a.onBeforeRender = function(t) {
                    return t.clearDepth()
                }
                ;
                if (!i) {
                    var s = new b.default(this.year);
                    s.color = "white",
                    s.scale.set(1, s.scale.y / s.scale.x, 1),
                    s.position.set(0, -.8, 0),
                    a.add(s)
                }
                if (!0 === t.default)
                    if ("phase" === i) {
                        var c = new b.default("Phase " + t.phase);
                        c.color = "white",
                        c.scale.set(2, c.scale.y / c.scale.x * 2, 2),
                        c.position.set(0, -1, 0),
                        c.renderOrder = 3,
                        c.onBeforeRender = function(t) {
                            return t.clearDepth()
                        }
                        ,
                        a.add(c)
                    } else if ("group" === i) {
                        var l = new b.default(t.group);
                        l.color = "white",
                        l.scale.set(2, l.scale.y / l.scale.x * 2, 2),
                        l.position.set(0, -1, 0),
                        l.renderOrder = 3,
                        l.onBeforeRender = function(t) {
                            return t.clearDepth()
                        }
                        ,
                        a.add(l)
                    }
                return this.nodeObject = t,
                a
            }
        }, {
            key: "getGraphDataByMovie",
            value: function() {
                var t = this
                  , e = []
                  , n = [];
                return (0,
                o.default)(this.characters).forEach(function(n) {
                    var r = t.characters[n];
                    e.push({
                        id: r.id,
                        name: r.name,
                        group: 0
                    })
                }),
                n = n.concat(this.relationships.map(function(e) {
                    return {
                        source: e.id,
                        target: e.target_id,
                        relation: t.relStr[e.relationship]
                    }
                })),
                {
                    nodes: e,
                    links: n,
                    type: "movie",
                    movie: this.id
                }
            }
        }]),
        e
    }(g.default);
    e.default = w
}
, function(t, e, n) {
    n(1149),
    t.exports = n(13).Object.getPrototypeOf
}
, function(t, e, n) {
    var r = n(99)
      , i = n(198);
    n(221)("getPrototypeOf", function() {
        return function(t) {
            return i(r(t))
        }
    })
}
, function(t, e, n) {
    n(1151),
    t.exports = n(13).Object.setPrototypeOf
}
, function(t, e, n) {
    var r = n(27);
    r(r.S, "Object", {
        setPrototypeOf: n(1152).set
    })
}
, function(t, e, n) {
    var r = n(48)
      , i = n(40)
      , o = function(t, e) {
        if (i(t),
        !r(e) && null !== e)
            throw TypeError(e + ": can't set as prototype!")
    };
    t.exports = {
        set: Object.setPrototypeOf || ("__proto__"in {} ? function(t, e, r) {
            try {
                r = n(84)(Function.call, n(201).f(Object.prototype, "__proto__").set, 2),
                r(t, []),
                e = !(t instanceof Array)
            } catch (t) {
                e = !0
            }
            return function(t, n) {
                return o(t, n),
                e ? t.__proto__ = n : r(t, n),
                t
            }
        }({}, !1) : void 0),
        check: o
    }
}
, function(t, e, n) {
    n(1154);
    var r = n(13).Object;
    t.exports = function(t, e) {
        return r.create(t, e)
    }
}
, function(t, e, n) {
    var r = n(27);
    r(r.S, "Object", {
        create: n(133)
    })
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(22)
      , o = r(i)
      , a = n(110)
      , s = r(a)
      , c = n(33)
      , l = r(c)
      , u = n(42)
      , h = r(u)
      , d = n(160)
      , p = r(d)
      , f = n(161)
      , m = r(f)
      , v = n(506)
      , g = r(v)
      , y = function(t) {
        function e(t) {
            (0,
            l.default)(this, e);
            var n = (0,
            p.default)(this, (e.__proto__ || (0,
            s.default)(e)).call(this, t));
            return n.origin = {},
            n.movies = {},
            t && (n.origin = t.origin,
            n.movies = t.movies,
            n.fullName = n.origin.fullName,
            n.alias = n.origin.alias,
            n.playedBy = n.origin.playedBy,
            n.description = n.origin.description,
            n.species = n.origin.species,
            n.status = n.origin.status,
            n.type = n.origin.type,
            n.affiliation = n.origin.affiliation,
            n.relationships = [{
                id: n.id,
                target_id: n.origin.id,
                relationship: 6,
                is_updated_relationship: "yes"
            }]),
            n
        }
        return (0,
        m.default)(e, t),
        (0,
        h.default)(e, [{
            key: "getFilterLinks",
            value: function() {
                var t = this;
                return this.relationships.map(function(e) {
                    return {
                        source: e.id,
                        target: e.target_id,
                        relation: t.relStr[e.relationship]
                    }
                })
            }
        }, {
            key: "getFilterLinksByExistingNodes",
            value: function(t) {
                return this.getFilterLinks()
            }
        }, {
            key: "getFilterLinksByMovieRelationships",
            value: function() {
                return this.getFilterLinks()
            }
        }, {
            key: "getProfileRelation",
            value: function(t) {
                return this.origin.getProfileRelation(t)
            }
        }, {
            key: "getFirstRelationGroup",
            value: function() {
                return this.origin.getFirstRelationGroup()
            }
        }, {
            key: "hasRelationship",
            value: function() {
                return this.origin.hasRelationship()
            }
        }, {
            key: "involvedInMovie",
            value: function(t) {
                return this.movies[t]
            }
        }, {
            key: "getProfileRelationKeys",
            value: function() {
                return this.origin.relGroup
            }
        }, {
            key: "updateProfileContent",
            value: function(t) {
                this.origin.updateProfileContent(t)
            }
        }, {
            key: "initAlterList",
            value: function() {
                return this.origin.initAlterList()
            }
        }, {
            key: "updateAlterList",
            value: function(t) {
                return this.origin.updateAlterList(t)
            }
        }, {
            key: "getAlterListObj",
            value: function() {
                var t = this.origin.getAlterListObj();
                return t[this.id] = {
                    id: this.origin.id,
                    name: this.origin.name,
                    type: "origin"
                },
                t
            }
        }, {
            key: "getAlterList",
            value: function() {
                var t = this.getAlterListObj();
                return (0,
                o.default)(t).map(function(e) {
                    return t[e]
                })
            }
        }]),
        e
    }(g.default);
    e.default = y
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "marvel-graph-container"
        }, [n("marvel-3d-graph", {
            attrs: {
                dataManager: t.newDataManager,
                dataReady: t.dataReady,
                start: t.start,
                startScene: t.startScene
            }
        }), t._v(" "), t._m(0), t._v(" "), t.is_mobile() ? n("div", {
            staticClass: "add-to-home-container"
        }, [n("div", {
            staticClass: "add-to-home and none",
            on: {
                click: function(e) {
                    t.hideAddToHome()
                }
            }
        }, [n("p", [t._v("Add to home screen")])]), t._v(" "), n("div", {
            staticClass: "add-to-home ios none",
            on: {
                click: function(e) {
                    t.hideAddToHome()
                }
            }
        }, [n("p", [t._v("Add to home screen")])])]) : t._e(), t._v(" "), n("div", {
            staticClass: "marvel-intro-container"
        }, [t.is_ie() ? n("div", {
            staticClass: "box-info-ie",
            on: {
                click: function(e) {
                    t.onIEOverlayClick()
                }
            }
        }, [t._m(1)]) : t._e(), t._v(" "), n("div", {
            staticClass: "source"
        }, [t._v(t._s("Source: " + t.attributes.source))]), t._v(" "), n("div", {
            staticClass: "intro-content"
        }, [n("div", {
            staticClass: "headline"
        }, [n("div", {
            staticClass: "fade fade0"
        }, [n("p", [t._v(t._s(t.attributes.headline[0]))])]), t._v(" "), n("div", {
            staticClass: "fade fade1"
        }, [n("h1", [t._v(t._s(t.attributes.headline[1]))])])]), t._v(" "), n("div", {
            staticClass: "fade description fade2"
        }, [t._l(t.attributes.deck, function(e) {
            return n("p", {
                domProps: {
                    innerHTML: t._s(e)
                }
            })
        }), t._v(" "), n("div", {
            staticClass: "st-byline"
        }, [n("time", {
            attrs: {
                itemprop: "datePublished",
                datetime: t.attributes.datetime,
                "data-timestamp": t.attributes.timestamp
            }
        }, [t._v("\n              " + t._s(t.attributes.byline) + "\n          ")])]), t._v(" "), n("div", {
            staticClass: "produced-by"
        }, [t._v("\n          Produced by:\n          "), t._l(t.attributes.produced_by, function(e) {
            return n("p", {
                domProps: {
                    innerHTML: t._s(t.getNameNoneBreak(e) + " ")
                }
            })
        })], 2)], 2), t._v(" "), n("button", {
            staticClass: "fade fade3",
            attrs: {
                type: "button",
                name: "button"
            },
            on: {
                click: function(e) {
                    t.startExperience()
                }
            }
        }, [t._v("Start")])]), t._v(" "), n("div", {
            directives: [{
                name: "show",
                rawName: "v-show",
                value: !0 === t.start,
                expression: "start === true"
            }],
            staticClass: "instruction-overlay"
        }, [n("div", {
            staticClass: "content"
        }, [t.is_mobile() ? t._e() : n("div", {}, [t._m(2), t._v(" "), t._m(3), t._v(" "), t._m(4)]), t._v(" "), t.is_mobile() ? n("div", {}, [t._m(5), t._v(" "), t._m(6), t._v(" "), t._m(7)]) : t._e(), t._v(" "), n("div", {
            staticClass: "button-instr"
        }, [n("button", {
            attrs: {
                type: "button",
                name: "button"
            },
            on: {
                click: function(e) {
                    t.onOverlayClick()
                }
            }
        }, [t._v("Ok")])])])])])], 1)
    }
      , i = [function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "overlay none"
        }, [n("div", {
            staticClass: "loading-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/marvelLogo.svg",
                alt: ""
            }
        }), t._v(" "), n("p", [t._v("Loading . . .")])])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "info-ie"
        }, [t._v("\n        This graphic is best viewed in "), n("a", {
            attrs: {
                href: "https://www.google.com/chrome/browser/desktop/"
            }
        }, [n("strong", [t._v("Chrome")])]), t._v(",\n        "), n("a", {
            attrs: {
                href: "https://www.mozilla.org/en-US/firefox/new/"
            }
        }, [n("strong", [t._v("Firefox")])]), t._v(" \n        "), n("a", {
            attrs: {
                href: "https://support.apple.com/downloads/safari"
            }
        }, [n("strong", [t._v("Safari")])]), t._v(" or\n        "), n("a", {
            attrs: {
                href: "https://www.microsoft.com/en-us/windows/microsoft-edge"
            }
        }, [n("strong", [t._v("Edge")])]), t._v(".\n        "), n("div", {}, [t._v("\n          Click to continue . . .\n        ")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/mouseL.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Left mouse button: Hold and drag to ROTATE scene")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/mouseR.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Right mouse button: Hold and drag to PAN scene")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/mouseM.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Mouse wheel: Scroll to ZOOM in and out of scene")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/oneFinger.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Drag one finger over screen to ROTATE scene")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/twoFinger.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Drag two fingers over screen to PAN scene")])])
    }
    , function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "inst"
        }, [n("div", {
            staticClass: "inst-icon"
        }, [n("img", {
            attrs: {
                src: "images_doc/marvel/instructions/doubleTap.svg",
                alt: ""
            }
        })]), t._v(" "), n("span", [t._v("Double tap to SELECT character nodes")])])
    }
    ];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    function r(t) {
        l || n(1158)
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var i = n(507)
      , o = n.n(i);
    for (var a in i)
        "default" !== a && function(t) {
            n.d(e, t, function() {
                return i[t]
            })
        }(a);
    var s = n(1159)
      , c = n(8)
      , l = !1
      , u = r
      , h = Object(c.a)(o.a, s.a, s.b, !1, u, "data-v-67039cf6", null);
    h.options.__file = "template/main/article/st-credits.vue",
    e.default = h.exports
}
, function(t, e) {}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return t.credits ? n("section", {
            staticClass: "credits-section"
        }, [t.credits.source ? n("div", {
            staticClass: "st-sources"
        }, ["zh-CN" !== t.lang ? n("span", {
            staticClass: "credits-label"
        }, [t._v(" Source: ")]) : t._e(), t._v(" "), "zh-CN" === t.lang ? n("span", {
            staticClass: "credits-label"
        }, [t._v("来源: ")]) : t._e(), t._v(" "), n("span", [t._v("\n          " + t._s(t.credits.source) + "\n        ")])]) : t._e(), t._v(" "), t.credits.produced_by ? n("div", ["zh-CN" !== t.lang ? n("span", {
            staticClass: "credits-label"
        }, [t._v("Produced by:")]) : t._e(), t._v(" "), "zh-CN" === t.lang ? n("span", {
            staticClass: "credits-label"
        }, [t._v("制作:")]) : t._e(), t._v(" "), t._l(t.credits.produced_by, function(e) {
            return n("span", {
                attrs: {
                    itemprop: "author"
                }
            }, [t._v(" " + t._s(e))])
        })], 2) : t._e()]) : t._e()
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(508)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1161)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/next-chapter.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , r = t._self._c || e;
        return t.nextChapter ? r("section", [r("div", {
            staticClass: "go-next-chapter"
        }, [r("div", {
            staticClass: "content-columns"
        }, [r("div", {
            staticClass: "label"
        }, [t._v("NEXT CHAPTER ")]), t._v(" "), r("div", [r("h3", [t._v("\n          " + t._s(t.nextChapter.name) + "\n        ")]), t._v(" "), r("a", {
            attrs: {
                href: t.nextChapter.url,
                title: t.nextChapter.name
            }
        }, [r("img", {
            staticClass: "st-image-responsive",
            attrs: {
                src: n(1162),
                alt: t.nextChapter.name
            }
        })])])])])]) : t._e()
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    t.exports = n.p + "images/go-next-arrow.svg"
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "column-paragraph-left"
        }, [n("div", {
            staticClass: "text-paragraph"
        }, t._l(t.attributes, function(e, r, i) {
            return t.existComponent(e.type) ? n(e.type, {
                key: e.type + i,
                tag: "component",
                attrs: {
                    attributes: e.value
                }
            }) : t._e()
        }))])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "column-paragraph-right"
        }, t._l(t.attributes, function(e, r, i) {
            return t.existComponent(e.type) ? n(e.type, {
                key: e.type + i,
                tag: "component",
                attrs: {
                    attributes: e.value
                }
            }) : t._e()
        }))
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "content-columns-unique"
        }, [n("div", {
            staticClass: "text-unique-paragraph"
        }, t._l(t.attributes, function(e, r, i) {
            return t.existComponent(e.type) ? n(e.type, {
                key: e.type + i,
                tag: "component",
                attrs: {
                    attributes: e.value
                }
            }) : t._e()
        }))])
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "content-columns-fullwidth",
            style: {
                backgroundColor: t.attributes.backgroundColor ? t.attributes.backgroundColor : "#EFF3F4"
            }
        }, t._l(t.attributes, function(e, r, i) {
            return t.existComponent(e.type) ? n(e.type, {
                key: e.type + i,
                tag: "component",
                attrs: {
                    attributes: e.value,
                    division: t.division
                }
            }) : t._e()
        }))
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var r = n(513)
      , i = n.n(r);
    for (var o in r)
        "default" !== o && function(t) {
            n.d(e, t, function() {
                return r[t]
            })
        }(o);
    var a = n(1168)
      , s = n(8)
      , c = Object(s.a)(i.a, a.a, a.b, !1, null, null, null);
    c.options.__file = "template/main/article/st-column-content.vue",
    e.default = c.exports
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("div", {
            staticClass: "content-columns"
        }, t._l(t.attributes, function(e, r, i) {
            return t.existComponent(e.type) ? n(e.type, {
                key: e.type + i,
                tag: "component",
                attrs: {
                    attributes: e.value,
                    division: t.division
                }
            }) : t._e()
        }))
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("article", {
            staticClass: "st-article"
        }, [t._l(t.article, function(e, r) {
            return n("section", {
                class: "chapter-" + (r + 1)
            }, t._l(e.chapter, function(t, e) {
                return n(t.type, {
                    key: t.type + "-" + r + "-" + e,
                    tag: "component",
                    class: "row-" + (r + 1) + "-" + (e + 1),
                    attrs: {
                        attributes: t.value,
                        division: r
                    }
                })
            }))
        }), t._v(" "), t._l(t.registerComponents(), function(t, e, r) {
            return n(e, {
                key: e + r,
                tag: "component"
            })
        })], 2)
    }
      , i = [];
    r._withStripped = !0
}
, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }),
    n.d(e, "b", function() {
        return i
    });
    var r = function() {
        var t = this
          , e = t.$createElement
          , n = t._self._c || e;
        return n("main", {
            class: t.identifier
        }, [n("st-article")], 1)
    }
      , i = [];
    r._withStripped = !0
}
], [560]);
